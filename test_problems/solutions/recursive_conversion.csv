upi,time,try,answer,rawfraction
aahk798,1697688019,1,"void ConvertToBinary(int a){
    if (0==a){
        return; 
    } 
    else{ 
        int num = a % 2;
        a = a/2;
        ConvertToBinary(a);
        printf(""%d"",num);
    } 
    
    
    return;
    
}",1
aakm278,1698116849,1,"void ConvertoBiary(int n)
{
	if (n < 2) // if it's 0 or 1, just print it.
	{
		printf(""%i"", n);
		return;
	}
	ConvertoBiary(n/2); // calls before prints, so it prints in reverse order.
	printf(""%i"", n % 2);
}",
aakm278,1698116878,2,"void ConvertoBinary(int n)
{
	if (n < 2) // if it's 0 or 1, just print it.
	{
		printf(""%i"", n);
		return;
	}
	ConvertoBinary(n/2); // calls before prints, so it prints in reverse order.
	printf(""%i"", n % 2);
}",
aakm278,1698116905,3,"void ConverToBinary(int n)
{
	if (n < 2) // if it's 0 or 1, just print it.
	{
		printf(""%i"", n);
		return;
	}
	ConverToBinary(n/2); // calls before prints, so it prints in reverse order.
	printf(""%i"", n % 2);
}",
aakm278,1698116929,4,"void ConvertToBinary(int n)
{
	if (n < 2) // if it's 0 or 1, just print it.
	{
		printf(""%i"", n);
		return;
	}
	ConvertToBinary(n/2); // calls before prints, so it prints in reverse order.
	printf(""%i"", n % 2);
}",
aakm278,1698116931,5,"void ConvertToBinary(int n)
{
	if (n < 2) // if it's 0 or 1, just print it.
	{
		printf(""%i"", n);
		return;
	}
	ConvertToBinary(n/2); // calls before prints, so it prints in reverse order.
	printf(""%i"", n % 2);
}",1
aana675,1697746539,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); // Recursive call with integer division
    }
    printf(""%d"", n % 2);
}
",
aana675,1697746545,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); // Recursive call with integer division
    }
    printf(""%d"", n % 2);
}
",1
aana675,1697746579,3,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); 
    }
    printf(""%d"", n % 2);
}
",1
aasr483,1698053968,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
aasr483,1698054012,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
aaza463,1697430816,1,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",
aaza463,1697430818,2,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",1
aazh582,1698133489,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    //  if the number is 0 or 1, it's already in binary.
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return; // this should stop the function if it's 0 or 1.
    }
    
   
    // call the function first and then print the remainder. I think that'll work!
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2); // Now, I'll print the remainder.
}
",
aazh582,1698133501,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    //  if the number is 0 or 1, it's already in binary.
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return; // this should stop the function if it's 0 or 1.
    }
    
   
    // call the function first and then print the remainder. I think that'll work!
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2); // Now, I'll print the remainder.
}
",1
abha257,1697534287,1,"void ConvertToBinary(int num) {
	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num/2);
		printf(""%d"", (num % 2));
	}
}",1
abro522,1697424561,1,"void ConvertToBinary(int n) {
    printf(""%d"", n & 1);
    n >>= 1;
    if (n != 0) {
        ConvertToBinary(n);
    }
}",
abro522,1697424584,2,"void ConvertToBinary(int n) {
    int a = n >> 1;
    if (a != 0) {
        ConvertToBinary(a);
    }
    printf(""%d"", n & 1);
}",
abro522,1697424591,3,"void ConvertToBinary(int n) {
    n = 0;
    int a = n >> 1;
    if (a != 0) {
        ConvertToBinary(a);
    }
    printf(""%d"", n & 1);
}",
abro522,1697424595,4,"void ConvertToBinary(int n) {
    int a = n >> 1;
    if (a != 0) {
        ConvertToBinary(a);
    }
    printf(""%d"", n & 1);
}",
abro522,1697424598,5,"void ConvertToBinary(int n) {
    int a = n >> 1;
    if (a != 0) {
        ConvertToBinary(a);
    }
    printf(""%d"", n & 1);
}",1
acam267,1697969048,1,"void ConvertToBinary(int number) {
    int newNumber = number / 2;
    
    if(number == 0) {
        return;
    }
    
    ConvertToBinary(newNumber);
    
    printf(""%d"", number % 2);
}",
acam267,1697969050,2,"void ConvertToBinary(int number) {
    int newNumber = number / 2;
    
    if(number == 0) {
        return;
    }
    
    ConvertToBinary(newNumber);
    
    printf(""%d"", number % 2);
}",1
ache725,1697984692,1,"void ConvertToBinary(int number) {
    if(number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", (number % 2));
}",
ache725,1697984784,2,"void PrintBinaryRepresentation(int decimalNumber) {
    if (decimalNumber > 1) {
        
        PrintBinaryRepresentation(decimalNumber / 2);
    }
    printf(""%d"", (decimalNumber % 2));
    }",
ache725,1697984861,3,"void ConvertToBinary(int number) {
    if (Number > 1) {
        
        ConvertToBinary(number / 2);
    }
    printf(""%d"", (number % 2));
    }",
ache725,1697984867,4,"void ConvertToBinary(int number) {
    if (number > 1) {
        
        ConvertToBinary(number / 2);
    }
    printf(""%d"", (number % 2));
    }",
ache725,1697985003,5,"void ConvertToBinary(int number) {
    // Base case: if the number is 0 or 1, just print it in binary
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        // Recursive step: divide the number by 2 and continue the conversion
        ConvertToBinary(number / 2);
        
        // Print the remainder (0 or 1) at each step
        printf(""%d"", (number % 2));",
ache725,1697985041,6,"void ConvertToBinary(int number) {
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        
        printf(""%d"", (number % 2));
    }",
ache725,1697985064,7,"void ConvertToBinary(int number) {
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        
        printf(""%d"", (number % 2));
    }
}",
ache725,1697985079,8,"void ConvertToBinary(int number) {
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        
        printf(""%d"", (number % 2));
    }
}",1
achi359,1697796540,1,"void ConvertToBinary(int n) {
    
    if (n <= 1) {
        printf(""%d"", n);
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
achi359,1697796545,2,"void ConvertToBinary(int n) {
    
    if (n <= 1) {
        printf(""%d"", n);
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
acoc261,1697496311,1,"void ConvertToBinary(int n)
{
    int Binary;
    if(n == 0){
        return;
    } else {
        Binary = n % 2;
        ConvertToBinary(n/2);
        printf(""%d"", Binary);
    }
}",
acoc261,1697496313,2,"void ConvertToBinary(int n)
{
    int Binary;
    if(n == 0){
        return;
    } else {
        Binary = n % 2;
        ConvertToBinary(n/2);
        printf(""%d"", Binary);
    }
}",1
adav221,1697975434,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
adav221,1697975436,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
adey750,1697889098,1,"void ConvertToBinary(int num) {
    if (num == 0) {
        return; 
    }
    ConvertToBinary(num / 2); 
    printf(""%d"", num % 2); 
}",
adey750,1697889103,2,"void ConvertToBinary(int num) {
    if (num == 0) {
        return; 
    }
    ConvertToBinary(num / 2); 
    printf(""%d"", num % 2); 
}",1
afal438,1697516244,1,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int index = 0;
    int number[100];

    while (input > 0)
    {
        number[index] = input % 2;
        input = input / 2;
        index++;
    }

    int start = index - 1;

    for (int i = start; i >= 0; i--)
    {
        printf(""%d"", number[i]);
    }

    return 0;
}",1
afit324,1698121398,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
afit324,1698121400,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
agan859,1697872955,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	};
}

int main(void) {
	ConvertToBinary(157);
}",
agan859,1697872961,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}

int main(void) {
	ConvertToBinary(157);
}",
agan859,1697872973,3,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
agan859,1697872983,4,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
agay279,1698023130,1,"void ConvertToBinary(int n)
{
    if (n==1){
        printf(""%d"",1);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"",(n%2));
    }
}
",
agay279,1698023145,2,"void ConvertToBinary(int n)
{
    if (n==1){
        printf(""%d"",1);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"",(n%2));
    }
}
",1
agou682,1697886340,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: If n is 1, print 1 (it's already in binary form)
    if (n == 1) {
        printf(""1"");
    } else {
        // Recursive case: Convert n / 2 to binary
        ConvertToBinary(n / 2);
        // Print the least significant bit (n % 2)
        printf(""%d"", n % 2);
    }
}",
agou682,1697886347,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: If n is 1, print 1 (it's already in binary form)
    if (n == 1) {
        printf(""1"");
    } else {
        // Recursive case: Convert n / 2 to binary
        ConvertToBinary(n / 2);
        // Print the least significant bit (n % 2)
        printf(""%d"", n % 2);
    }
}",1
ahac139,1697887397,1,"void ConvertToBinary(int n)
{
    if (n == 1)
    {   
        printf(""%d"",n);
    } else
    {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",1
ahac223,1698038872,1,"void ConvertToBinary(int n)
{
    if(n > 1){
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
ahac223,1698038874,2,"void ConvertToBinary(int n)
{
    if(n > 1){
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
ahai431,1697847877,1,"void ConvertToBinary(int num) {
	int print = 1;
	if (num == 1) {
		printf(""%d"", print);
	}
	else {
		ConvertToBinary(num / 2);
		print = num % 2;
		printf(""%d"", print);
	}
}",
ahai431,1697847878,2,"void ConvertToBinary(int num) {
	int print = 1;
	if (num == 1) {
		printf(""%d"", print);
	}
	else {
		ConvertToBinary(num / 2);
		print = num % 2;
		printf(""%d"", print);
	}
}",1
ahas673,1697422386,1,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""1"");
    }else{
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
ahas673,1697422396,2,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""1"");
    }else{
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
ahua579,1697674015,1,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
ahua579,1697674016,2,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
ahus071,1697929245,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if( n == 1)
    {
        printf(""%d"",n);
    }
    else
    {
        int right = n % 2;
        printf(""%d"",right);
        int left = n / 2;
        ConvertToBinary(left);
    }
}",
ahus071,1697929805,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if( n == 1)
    {
        printf(""%d"",n);
    }
    else
    {
        int right = n % 2;
        ConvertToBinary(n / 2);
        printf(""%d"",right);
    }
}",
ahus071,1697929807,3,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if( n == 1)
    {
        printf(""%d"",n);
    }
    else
    {
        int right = n % 2;
        ConvertToBinary(n / 2);
        printf(""%d"",right);
    }
}",1
ajam744,1697511274,1,"void ConvertToBinary(int n)
{
    
    if (n == 0)
    {
        return;
    }
        else 
        {
            ConvertToBinary(n / 2);
            printf(""%d"", n % 2);
        }
}",
ajam744,1697511278,2,"void ConvertToBinary(int n)
{
    
    if (n == 0)
    {
        return;
    }
        else 
        {
            ConvertToBinary(n / 2);
            printf(""%d"", n % 2);
        }
}",1
ajeo563,1697506417,1,"void ConvertToBinary(int x) {

	if (x == 1) {

		printf(""%d"", x);
	}
	else {

		ConvertToBinary(x / 2);

		printf(""%d"", x % 2);
	}
}",1
ajhz010,1697514666,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    }
    else {
        ConvertToBinary(n/2);
        printf(""%d"", (n%2));
    }
}",
ajhz010,1697514668,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    }
    else {
        ConvertToBinary(n/2);
        printf(""%d"", (n%2));
    }
}",1
ajhz011,1697417151,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

void ConvertToBinary(int value)
{
	int array[1000] = { 0 };
	int i = 0;
	double number = value;

	while (number > 0) {
		number = number / 2;
		if (number - (int)number == 0.5) {
			array[i] = 1;
		}
		else {
			array[i] = 0;
		}
		number = (int)number;
		i++;
	}

	for (i = i - 1; i != -1; i--) {
		printf(""%d"", array[i]);
	}
}",1
ajhz216,1698096617,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
}",
ajhz216,1698096620,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
}",1
ajhz318,1697972210,1,"int ConvertToBinary(int num) {
    int remainder;
    int power;

    if(num == 0) {
        return 0;
    }

    remainder = num % 2;

    if(remainder == 1) {
        printf(""1"");
        return ConvertToBinary((num/2));
    }
    else if(remainder == 0) {
        printf(""0"");
        return ConvertToBinary(num /2);
    }

    return 0;
    
}",
ajhz318,1697972216,2,"int ConvertToBinary(int num) {
    int remainder;

    if(num == 0) {
        return 0;
    }

    remainder = num % 2;

    if(remainder == 1) {
        printf(""1"");
        return ConvertToBinary((num/2));
    }
    else if(remainder == 0) {
        printf(""0"");
        return ConvertToBinary(num /2);
    }

    return 0;
    
}",
ajhz318,1697973167,3,"void ConvertToBinary(int number) {



    if(number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", (number % 2));
    
    return 0;
}",
ajhz318,1697973187,4,"void ConvertToBinary(int number) {

    if(number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", (number % 2));
}",
ajhz318,1697973233,5,"void ConvertToBinary(int number) {

    if(number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", (number % 2));
}",1
ajhz444,1697594559,1,"void ConvertToBinary(int integer) {
	if (integer == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(integer / 2);
		printf(""%d"", integer % 2);
	}
}",
ajhz444,1697594562,2,"void ConvertToBinary(int integer) {
	if (integer == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(integer / 2);
		printf(""%d"", integer % 2);
	}
}",1
ajhz488,1698139240,1,"void ConvertToBinary(int n)  {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        printf(""%d"", n % 2);
        ConvertToBinary(n/2);
    }
}",
ajhz488,1698139438,2,"void ConvertToBinary(int n)  {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",
ajhz488,1698139440,3,"void ConvertToBinary(int n)  {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",1
ajin489,1697606831,1,"void ConvertToBinary(int n){

    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
ajin489,1697606833,2,"void ConvertToBinary(int n){

    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
ajoh511,1697666943,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); 
    }
    printf(""%d"", n % 2); 
}",
ajoh511,1697666947,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); 
    }
    printf(""%d"", n % 2); 
}",1
akam677,1698135634,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }

    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}
",
akam677,1698135703,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }

    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}
",1
aker238,1697436973,1,"void ConvertToBinary(int x){
    int q, r;
    if (x!=0){
        q = x/2;
        r = x%2;
        ConvertToBinary(q);
        printf(""%d"",r);
    }
}",
aker238,1697437008,2,"void ConvertToBinary(int x){
    int q, r;
    if (x!=0){
        q = x/2;
        r = x%2;
        ConvertToBinary(q);
        printf(""%d"",r);
    }
}",1
akin699,1697852433,1,"void ConvertToBinary(int number) {
	if (number == 0) {
		return;
	}
	ConvertToBinary(number / 2.0);

	if (number == 0) {
		return;
	}

	if (number % 2 == 0) {
		printf(""0"");
	}
	else {
		printf(""1"");
	}
}",
akin699,1697852436,2,"void ConvertToBinary(int number) {
	if (number == 0) {
		return;
	}
	ConvertToBinary(number / 2.0);

	if (number == 0) {
		return;
	}

	if (number % 2 == 0) {
		printf(""0"");
	}
	else {
		printf(""1"");
	}
}",1
akmu146,1698057846,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
akmu146,1698057849,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
akod059,1697673274,1,"void ConvertToBinary(int n)
{
	if (n / 2 == 0)
	{
		printf(""%d"", n % 2);
	}
	else
	{
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
akod059,1697673276,2,"void ConvertToBinary(int n)
{
	if (n / 2 == 0)
	{
		printf(""%d"", n % 2);
	}
	else
	{
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
akri368,1697955216,1,"void ConvertToBinary(int x) {
    
    if (x == 0) {
        return;
    }
    ConvertToBinary(x / 2);
    printf(""%d"", x % 2);
}",
akri368,1697955218,2,"void ConvertToBinary(int x) {
    
    if (x == 0) {
        return;
    }
    ConvertToBinary(x / 2);
    printf(""%d"", x % 2);
}",1
akwo440,1697982772,1,"void ConvertToBinary(int n){
    if (n==1){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",
akwo440,1697982774,2,"void ConvertToBinary(int n){
    if (n==1){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",1
ali867,1698019493,1,"#include <stdio.h>

void ConvertToBinary(int i)
{
    if (i > 0) 
    {
        ConvertToBinary(i / 2);
        printf(""%d"", i % 2);
    }
}",
ali867,1698019496,2,"#include <stdio.h>

void ConvertToBinary(int i)
{
    if (i > 0) 
    {
        ConvertToBinary(i / 2);
        printf(""%d"", i % 2);
    }
}",1
alum086,1697441217,1,"#include <stdio.h>

// Function to convert an integer to its binary equivalent and print it
void ConvertToBinary(int n) {
    // Base case: If n is 0 or 1, simply print it
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        // Recursive case: Divide n by 2 and print the remainder
        ConvertToBinary(n / 2);  // Recursive call with the integer division
        printf(""%d"", n % 2);     // Print the remainder (0 or 1)
    }
}

int main() {
    int num;

    printf(""Enter an integer: "");
    scanf(""%d"", &num);

    printf(""Binary equivalent: "");
    
    if (num == 0) {
        printf(""0"");  // Special case for zero
    } else if (num < 0) {
        printf(""-"");       // Handle negative numbers
        ConvertToBinary(-num);  // Convert the positive counterpart
    } else {
        ConvertToBinary(num);   // Convert the positive number
    }
    
    printf(""\n"");

    return 0;
}
",
alum086,1697441224,2,"#include <stdio.h>

// Function to convert an integer to its binary equivalent and print it
void ConvertToBinary(int n) {
    // Base case: If n is 0 or 1, simply print it
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        // Recursive case: Divide n by 2 and print the remainder
        ConvertToBinary(n / 2);  // Recursive call with the integer division
        printf(""%d"", n % 2);     // Print the remainder (0 or 1)
    }
}
",
alum086,1697441228,3,"#include <stdio.h>

// Function to convert an integer to its binary equivalent and print it
void ConvertToBinary(int n) {
    // Base case: If n is 0 or 1, simply print it
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        // Recursive case: Divide n by 2 and print the remainder
        ConvertToBinary(n / 2);  // Recursive call with the integer division
        printf(""%d"", n % 2);     // Print the remainder (0 or 1)
    }
}
",1
alum086,1697441938,4,"#include <stdio.h>

// Function to convert an integer to its binary equivalent and print it
void ConvertToBinary(int n) {
    // Base case: If n is 0 or 1, simply print it
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        // Recursive case: Divide n by 2 and print the remainder
        ConvertToBinary(n / 2);  // Recursive call with the integer division
        printf(""%d"", n % 2);     // Print the remainder (0 or 1)
    }
}
",
amac853,1697502182,1,"void ConvertToBinary(int n)
{
    if(n == 1)
    {
        printf(""%d"", n);
    }
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",
amac853,1697502188,2,"void ConvertToBinary(int n)
{
    if(n == 1)
    {
        printf(""%d"", n);
    }
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",1
amag544,1698122987,1,"#include <stdio.h>

void ConvertToBinary(int input) {
    
    if (input > 1) {
        ConvertToBinary(input / 2);
    }
    
    printf(""%d"", input % 2);
}",
amag544,1698122990,2,"#include <stdio.h>

void ConvertToBinary(int input) {
    
    if (input > 1) {
        ConvertToBinary(input / 2);
    }
    
    printf(""%d"", input % 2);
}",1
amah664,1697935588,1,"#include <stdio.h> 

void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""%d"", 1);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}
",
amah664,1697935590,2,"#include <stdio.h> 

void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""%d"", 1);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}
",1
amal783,1697863518,1,"void ConvertToBinary(int n) {
	if (n != 0) {
		printf(""%d"", n % 2);
		ConvertToBinary(n / 2);
	}
}",
amal783,1697894417,2,"int ConvertToBinary(int n) {
	if (n == 0) {
		return 0;
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
amal783,1697894467,3,"void ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
amal783,1697894469,4,"void ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
amar704,1697698593,1,"void ConvertToBinary(int decimal){
    int binary[100];
    int i = 0;
    int ans = 1;
    
    while (decimal != 0){
        binary[i] = decimal % 2;
        decimal = decimal/2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary[j]);
    }
    
    
}",
amar704,1697698608,2,"void ConvertToBinary(int decimal){
    int binary[100];
    int i = 0;
    
    while (decimal != 0){
        binary[i] = decimal % 2;
        decimal = decimal/2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary[j]);
    }
    
    
}",
amar704,1697698611,3,"void ConvertToBinary(int decimal){
    int binary[100];
    int i = 0;
    
    while (decimal != 0){
        binary[i] = decimal % 2;
        decimal = decimal/2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary[j]);
    }
    
    
}",1
amat407,1697864529,1,"void ConvertToBinary(int n)
{

 if (n==1) {
    printf(""1"");
 } else {
    ConvertToBinary(n/2);
    printf(""%d"", n%2);
 }

}",
amat407,1697864533,2,"void ConvertToBinary(int n)
{

 if (n==1) {
    printf(""1"");
 } else {
    ConvertToBinary(n/2);
    printf(""%d"", n%2);
 }

}",1
amcm539,1697865474,1,"void ConvertToBinary(int input){
    /*ConvertToBinary receives a base10 integer as input and prints the binary equivalent number using a recursive function.
    
    Input: An integer of the decimal number system
    Output: The binary number is printed to the screen
    
    Author:Adam McMann */

    if (input ==1){
        printf(""1"");
    } else {
        ConvertToBinary((int)input/2);
        printf(""%d"", input %2);
    }
    return;
}",
amcm539,1697865476,2,"void ConvertToBinary(int input){
    /*ConvertToBinary receives a base10 integer as input and prints the binary equivalent number using a recursive function.
    
    Input: An integer of the decimal number system
    Output: The binary number is printed to the screen
    
    Author:Adam McMann */

    if (input ==1){
        printf(""1"");
    } else {
        ConvertToBinary((int)input/2);
        printf(""%d"", input %2);
    }
    return;
}",1
amhk647,1697525027,1,"void ConvertToBinary(int n) {
	// base case
	if (n == 1) {
		printf(""%d"", n);
	}
	// recursive case
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
amok249,1697496796,1,"void ConvertToBinary(int num) {
    int digit;
    if (num == 0) {
        return;
    } else {
        digit = num%2;
        num = num/2;
        ConvertToBinary(num); 
        printf(""%d"",digit);
    }
}",
amok249,1697496799,2,"void ConvertToBinary(int num) {
    int digit;
    if (num == 0) {
        return;
    } else {
        digit = num%2;
        num = num/2;
        ConvertToBinary(num); 
        printf(""%d"",digit);
    }
}",1
amur986,1697941105,1,"void ConvertToBinary(int n) {
    int x;
    int y;
    if (n ==1 ) {
        printf(""%d"", n);

    }

    else {
        x = n / 2;
        ConvertToBinary(x);
        y = x % 2;
        printf(""%d"", y);
       

    }
",
amur986,1697941115,2,"void ConvertToBinary(int n) {
    int x;
    int y;
    if (n ==1 ) {
        printf(""%d"", n);

    }

    else {
        x = n / 2;
        ConvertToBinary(x);
        y = x % 2;
        printf(""%d"", y);
       

    }
}",
amur986,1697941159,3,"void ConvertToBinary(int n) {
    int x;
    int y;
    if (n ==1 ) {
        printf(""%d"", n);

    }

    else {
        x = (n / 2);
        ConvertToBinary(x);
        y = (x % 2);
        printf(""%d"", y);
       

    }
}",
amur986,1697941245,4,"void ConvertToBinary(int n) {
    int x;
    int y;
    if (n ==1 ) {
        printf(""%d"", n);

    }

    else {
        x = (n / 2);
        ConvertToBinary(x);
        y = (n % 2);
        printf(""%d"", y);
       

    }
}",
amur986,1697941248,5,"void ConvertToBinary(int n) {
    int x;
    int y;
    if (n ==1 ) {
        printf(""%d"", n);

    }

    else {
        x = (n / 2);
        ConvertToBinary(x);
        y = (n % 2);
        printf(""%d"", y);
       

    }
}",1
anig922,1698102433,1,"void ConvertToBinary(int a){
    
    
    if (a==0){
        
        
        return;
    }
    
    
    ConvertToBinary(a*0.5);
    
    
    printf(""%d"", a %2)
}",
anig922,1698102444,2,"void ConvertToBinary(int a){
    
    
    if (a==0){
        
        
        return;
    }
    
    
    ConvertToBinary(a*0.5);
    
    
    printf(""%d"", a %2);
}",
anig922,1698102450,3,"void ConvertToBinary(int a){
    
    
    if (a==0){
        
        
        return;
    }
    
    
    ConvertToBinary(a*0.5);
    
    
    printf(""%d"", a %2);
}",1
aosm976,1698098279,1,"void ConvertToBinary(int n) {

    // base case
    if (n == 1) {
        printf(""1"");
    }

    // recursive case (makes progress towards base case)
    else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
aosm976,1698098281,2,"void ConvertToBinary(int n) {

    // base case
    if (n == 1) {
        printf(""1"");
    }

    // recursive case (makes progress towards base case)
    else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
apan786,1697900335,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        printf(""%d"", n % 2);   
    }
}",
apan786,1697900336,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        printf(""%d"", n % 2);   
    }
}",1
apat750,1697794788,1,"
void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        printf(""%d"", n % 2); 
    }
}",
apat750,1697794811,2,"
void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        printf(""%d"", n % 2); 
    }
}",1
apat824,1698043469,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        printf(""0"");
    } else if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",
apat824,1698043531,2,"#include <stdio.h>

void ConvertToBinary(int number) {
    
    if (number= 0) {
        
        printf(""0"");
        
        
    } else if (number==1) {
        printf(""1"");
        
        
    } else {
        
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
",
apat824,1698043590,3,"#include <stdio.h>

void ConvertToBinary(int number) {
    
    if (number== 0) {
        
        printf(""0"");
        
        
    } else if (number==1) {
        printf(""1"");
        
        
    } else {
        
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
",
apat824,1698043709,4,"#include <stdio.h>

void ConvertToBinary(int number) {
    
    if (number== 0) {
        
        printf(""0"");
        
        
    } else if (number==1) {
        printf(""1"");
        
        
    } else {
        
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
",1
apen181,1698037274,1,"void ConvertToBinary(int x) {
    if (x == 0) {
        return;
    }
    ConvertToBinary(x / 2);
    printf(""%d"", x % 2);
}",
apen181,1698037277,2,"void ConvertToBinary(int x) {
    if (x == 0) {
        return;
    }
    ConvertToBinary(x / 2);
    printf(""%d"", x % 2);
}",1
apre444,1698139547,1,"#include <stdio.h>
/* ConvertToBinary is a function that takes an integer input in base 10, then returns
the same value except converted into base 2
Author: Amy Prebble*/
void ConvertToBinary(int num)
{
    if (num>0) {
        ConvertToBinary(num/2);
        printf(""%d"", num % 2);
}",
apre444,1698143227,2,"#include <stdio.h>
/* ConvertToBinary is a function that takes an integer input in base 10, then returns
the same value except converted into base 2
Author: Amy Prebble*/
void ConvertToBinary(int n) 
{
    if (n==0) {
        printf(""0"");
        return;}
    ConvertToBinary(n/2);
    printf(""%d"", n % 2);
}",
apre444,1698143251,3,"#include <stdio.h>
/* ConvertToBinary is a function that takes an integer input in base 10, then returns
the same value except converted into base 2
Author: Amy Prebble*/
void ConvertToBinary(int input_ten) 
{
    if (input_ten==0) {
        printf(""0"");
        return;}
    ConvertToBinary(input_ten/2);
    printf(""%d"", input_ten % 2);
}",
apre444,1698143253,4,"#include <stdio.h>
/* ConvertToBinary is a function that takes an integer input in base 10, then returns
the same value except converted into base 2
Author: Amy Prebble*/
void ConvertToBinary(int input_ten) 
{
    if (input_ten==0) {
        printf(""0"");
        return;}
    ConvertToBinary(input_ten/2);
    printf(""%d"", input_ten % 2);
}",1
apur448,1698050194,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", 1);
    }
    else {
        ConvertToBinary(n/2); 
        printf(""%d"", n%2);   
    }
}",
apur448,1698050199,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", 1);
    }
    else {
        ConvertToBinary(n/2); 
        printf(""%d"", n%2);   
    }
}",1
aqu284,1698124135,1,"void ConvertToBinary(int n)
{
    // When we reach n = 0, we end the function
    if (n == 0) {
        return;
    }
    else {
        // Recursive calling funciton
        ConvertToBinary(n / 2);
        // Print the latest binary digit
        printf(""%d"", n % 2);
    }
}",
aqu284,1698124141,2,"void ConvertToBinary(int n)
{
    // When we reach n = 0, we end the function
    if (n == 0) {
        return;
    }
    else {
        // Recursive calling funciton
        ConvertToBinary(n / 2);
        // Print the latest binary digit
        printf(""%d"", n % 2);
    }
}",1
arah160,1697624377,1,"void ConvertToBinary(int value)
{
    int array[200], i;
    for (i=0; value>0; i++){
        array[i] = value % 2;
        value = value / 2;
    }
    for (i = i - 1; i >= 0; i--){
        printf(""%d"", array[i]);
    }
    return;
}",
arah160,1697624382,2,"void ConvertToBinary(int value)
{
    int array[200], i;
    for (i=0; value>0; i++){
        array[i] = value % 2;
        value = value / 2;
    }
    for (i = i - 1; i >= 0; i--){
        printf(""%d"", array[i]);
    }
    return;
}",1
arus530,1697434493,1,"void ConvertToBinary(int num){
    if (num > 0){
        printf(""%d"", num % 2);
        ConvertToBinary(num / 2);
    }

    else {
        printf(""%d"", num);
    }
}",
arus530,1697434573,2,"void ConvertToBinary(int num){
    if (num > 0){
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }

    else {
        printf(""%d"", num);
    }
}",
arus530,1697434580,3,"void ConvertToBinary(int num){
    if (num > 0){
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }

    else {
        printf(""%d"", num);
    }
}",1
aryu462,1697606965,1,"#include <stdio.h> 

void ConvertToBinary(int num) { 
    if (num == 0) { 
        return; 
    }
    
    ConvertToBinary(num / 2); 
    
    print(""%d"", num % 2); 
} ",
aryu462,1697606972,2,"#include <stdio.h> 

void ConvertToBinary(int num) { 
    if (num == 0) { 
        return; 
    }
    
    ConvertToBinary(num / 2); 
    
    printf(""%d"", num % 2); 
} ",
aryu462,1697606974,3,"#include <stdio.h> 

void ConvertToBinary(int num) { 
    if (num == 0) { 
        return; 
    }
    
    ConvertToBinary(num / 2); 
    
    printf(""%d"", num % 2); 
} ",1
asaa285,1698134654,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        // call the thing
        ConvertToBinary(n / 2);
        // print remainder, eihter 1 or 0
        printf(""%d"", n % 2);
    }
}",1
ashe298,1698050128,1,"void ConvertToBinary(int n){
    if (n>1){
        n = n / 2;
    }
    printf(""%d"", n % 2);
}",
ashe298,1698050253,2,"void ConvertToBinary(int n){
    if (n>1){
        ConvertToBinary(n/2);
    }
    printf(""%d"", n % 2);
}",
ashe298,1698050264,3,"void ConvertToBinary(int n){
    if (n>1){
        ConvertToBinary(n/2);
    }
    printf(""%d"", n % 2);
}",1
ashi565,1697614881,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",
ashi565,1697614884,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",1
asim819,1697778363,1,"void ConvertToBinary(int x) {
	if (x == 1) {
		printf(""%d"", x);

	}
	else {
		ConvertToBinary(x / 2);
		printf(""%d"", x % 2);


	}
}",
asim819,1697778364,2,"void ConvertToBinary(int x) {
	if (x == 1) {
		printf(""%d"", x);

	}
	else {
		ConvertToBinary(x / 2);
		printf(""%d"", x % 2);


	}
}",1
aski294,1698054966,1,"void ConvertToBinary(int n)
{
    int x = -1;
    int temp[200] = { 0 };

    while (n > 0) {
       x++;
       temp[x] = n % 2;
       n /= 2;
    }

    while (x >= 0) {
        printf(""%d"", temp[x]);
        x--;
    }
}",
aski294,1698054969,2,"void ConvertToBinary(int n)
{
    int x = -1;
    int temp[200] = { 0 };

    while (n > 0) {
       x++;
       temp[x] = n % 2;
       n /= 2;
    }

    while (x >= 0) {
        printf(""%d"", temp[x]);
        x--;
    }
}",1
asmi629,1698111147,1,"void ConvertToBinary(int num) 
{
    if (num > 1) {
        ConvertToBinary(num / 2); 
    }
    printf(""%d"", num % 2); 
}",
asmi629,1698111179,2,"void ConvertToBinary(int num) 
{
    if (num > 1) {
        ConvertToBinary(num / 2); 
    }
    printf(""%d"", num % 2); 
}",1
atay777,1697881879,1,"int ConvertToBinary(int decimal)
{
    int bin=3;
    int decimal2=decimal/2;
    while (decimal>0)
    {
        ConvertToBinary(decimal2);
        bin=decimal%2;
        printf(""%d"", bin);
        return 0;
    }
    return 0;
}",
atay777,1697881881,2,"int ConvertToBinary(int decimal)
{
    int bin=3;
    int decimal2=decimal/2;
    while (decimal>0)
    {
        ConvertToBinary(decimal2);
        bin=decimal%2;
        printf(""%d"", bin);
        return 0;
    }
    return 0;
}",1
atee059,1697937735,1,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}

}",
atee059,1697937736,2,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}

}",1
atho643,1697713780,1,"void ConvertToBinary(int num){
    if(num==0){
         printf(""0"");
        return;
    }
    
    int length = log2(num) + 1;
    int binary[length];
    int i=0;
    
    while(num >0){
        binary[i++] = num %2;
        num = num/2;
    }
    
    for(int x=(i-1); x>=0;x--){
        printf(""%d"",binary[x]);
    }
}",
atho643,1697713783,2,"void ConvertToBinary(int num){
    if(num==0){
         printf(""0"");
        return;
    }
    
    int length = log2(num) + 1;
    int binary[length];
    int i=0;
    
    while(num >0){
        binary[i++] = num %2;
        num = num/2;
    }
    
    for(int x=(i-1); x>=0;x--){
        printf(""%d"",binary[x]);
    }
}",1
athu157,1697510669,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
	// base case
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);
	}
}

int main(void)
{
	ConvertToBinary(157);
	return 0;
}
",
athu157,1697510676,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
	// base case
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);
	}
}",
athu157,1697510685,3,"#include <stdio.h>

void ConvertToBinary(int n)
{
	// base case
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);
	}
}",1
atup175,1698120580,1,"void ConvertToBinary(int input){
    if (input != 0){
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }else {
        printf(""0"");
        return; 
    }
}",
atup175,1698120597,2,"void ConvertToBinary(int input){
    if (input != 0){
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }else {
        printf(""0"");
        return; 
    }
}",1
avan381,1697889332,1,"void ConvertToBinary(int num)
{
    if (num == 0){
        printf(""%d"", 0);
        return;
    }
    int newNum = (int)(num/2);
    
    if(newNum == 0){
        printf(""%d"", 1);
        return;
    }
    ConvertToBinary(newNum);
    printf(""%d"", num%2);
}",
avan381,1697889336,2,"void ConvertToBinary(int num)
{
    if (num == 0){
        printf(""%d"", 0);
        return;
    }
    int newNum = (int)(num/2);
    
    if(newNum == 0){
        printf(""%d"", 1);
        return;
    }
    ConvertToBinary(newNum);
    printf(""%d"", num%2);
}",1
awal599,1698056336,1,"void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        

    }
}
",
awal599,1698056338,2,"void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        

    }
}
",1
awar747,1698141997,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);  
        printf(""%d"", n % 2);    // Print the remainder (binary digit)
    }
}
",
awar747,1698141999,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);  
        printf(""%d"", n % 2);    // Print the remainder (binary digit)
    }
}
",1
awil907,1697426709,1,"void ConvertToBinary(int input){

    if (input > 0){
        int remainder = input % 2;
        ConvertToBinary(input / 2);
        printf(""%d"", remainder);
    }

}",
awil907,1697426711,2,"void ConvertToBinary(int input){

    if (input > 0){
        int remainder = input % 2;
        ConvertToBinary(input / 2);
        printf(""%d"", remainder);
    }

}",1
awri757,1697442419,1,"int Choose(int n, int m)
{
    int result;
    if (m == 0 || n == m) {
        return 1;
    }
    else {
        result = Choose(n - 1, m) + Choose(n - 1, m - 1);
        return result;
    }
    return -1;
}",
awri757,1697442484,2,"void ConvertToBinary(int num)
{
    if (num != 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
awri757,1697442486,3,"void ConvertToBinary(int num)
{
    if (num != 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
ayan607,1697798518,1,"void ConvertToBinary (int number)
{
    if (number == 1){
        printf(""%d"", number);
        return;
    }else {
        ConvertToBinary(number / 2);
    }

    printf(""%d"", number % 2);
}",
ayan607,1697798519,2,"void ConvertToBinary (int number)
{
    if (number == 1){
        printf(""%d"", number);
        return;
    }else {
        ConvertToBinary(number / 2);
    }

    printf(""%d"", number % 2);
}",1
ayou303,1697523635,1,"#include <stdio.h>

void ConvertToBinary(int num) {

	if (num == 0) {
		return	
	}

	else {

		ConvertToBinary(num / 2);
		// Print the current bit (the remainder when divided by 2)
		printf(""%d"", num % 2);

	}


}

",
ayou303,1697523650,2,"#include <stdio.h>

void ConvertToBinary(int num) {

	if (num == 0) {
		return;	
	}

	else {

		ConvertToBinary(num / 2);
		// Print the current bit (the remainder when divided by 2)
		printf(""%d"", num % 2);

	}


}

",
ayou303,1697523653,3,"#include <stdio.h>

void ConvertToBinary(int num) {

	if (num == 0) {
		return;	
	}

	else {

		ConvertToBinary(num / 2);
		// Print the current bit (the remainder when divided by 2)
		printf(""%d"", num % 2);

	}


}

",1
ayou533,1697786454,1,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
ayua214,1698020406,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
ayua214,1698020408,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
bate521,1698122994,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
        return
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
bate521,1698123013,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
        return
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
bate521,1698123027,3,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
        return;
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
bate521,1698123274,4,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
        return;
    }
    else if (n == 0) {
        printf(""0"");
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
bate521,1698123275,5,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
        return;
    }
    else if (n == 0) {
        printf(""0"");
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
bcar662,1697889947,1,"void ConvertToBinary(int value) {
	if (value == 1) {
		printf(""%d"", value % 2);
	}
	else {
		ConvertToBinary(value / 2);
		printf(""%d"", value % 2);
	}
}",
bcar662,1697889951,2,"void ConvertToBinary(int value) {
	if (value == 1) {
		printf(""%d"", value % 2);
	}
	else {
		ConvertToBinary(value / 2);
		printf(""%d"", value % 2);
	}
}",1
bcha389,1697505817,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");

		return;
	}

	ConvertToBinary(n / 2);

	printf(""%d"", n % 2);
}",
bcha389,1697505820,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");

		return;
	}

	ConvertToBinary(n / 2);

	printf(""%d"", n % 2);
}",1
bcha726,1697945825,1,"void ConvertToBinary(int value) {

    if (value > 1) {
        ConvertToBinary(value / 2);
        printf(""%d"", value % 2);
    } else {
        printf(""%d"", value);
    }
}",
bcha726,1697945828,2,"void ConvertToBinary(int value) {

    if (value > 1) {
        ConvertToBinary(value / 2);
        printf(""%d"", value % 2);
    } else {
        printf(""%d"", value);
    }
}",1
bcos422,1697425646,1,"void ConvertToBinary(int num) {
	if (num < 2) {
		printf(""%d"",num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num%2);
		
	}
}",1
bcru157,1697510519,1,"void ConvertToBinary(int n)
{
	if (n != 1) {
		int y = n / 2;
		ConvertToBinary(y);
	}
	printf(""%d"", n % 2);
}",
bcru157,1697510522,2,"void ConvertToBinary(int n)
{
	if (n != 1) {
		int y = n / 2;
		ConvertToBinary(y);
	}
	printf(""%d"", n % 2);
}",1
besk864,1697540300,1,"void ConvertToBinary(int number){
       
       int BinNum = 0;
      
       while (number > 0){
       if ((number %= 2) == 1){
           BinNum *= 10 + 1;
           number /= 2;
       } else if ((number %= 2) == 0){
           BinNum *= 10;
           number /= 2;
           number -= 0.5;
        }
       }
   printf(""%d"", BinNum);
       
   }",
besk864,1697540739,2,"void ConvertToBinary(int number){
        int PrintReverse(int number){
        
        int temp;
       
        int Revnum;
        Revnum = 0;
        
        while (number != 0){
            
            temp = number % 10;
            
            Revnum = Revnum * 10 + temp;
            
            number = number / 10;
            
        }
     return Revnum;
    }
       int BinNum = 0;
      
       while (number > 0){
       if ((number % 2) == 1){
           BinNum *= (10);
           BinNum++;
           number /= 2;
           
       } else if ((number % 2) == 0){
           BinNum *= 10;
           number /= 2;
           
        }
       }
       
       BinNum = (PrintReverse(BinNum));
       
   printf(""%d"", BinNum);
       
   }",
besk864,1697540741,3,"void ConvertToBinary(int number){
        int PrintReverse(int number){
        
        int temp;
       
        int Revnum;
        Revnum = 0;
        
        while (number != 0){
            
            temp = number % 10;
            
            Revnum = Revnum * 10 + temp;
            
            number = number / 10;
            
        }
     return Revnum;
    }
       int BinNum = 0;
      
       while (number > 0){
       if ((number % 2) == 1){
           BinNum *= (10);
           BinNum++;
           number /= 2;
           
       } else if ((number % 2) == 0){
           BinNum *= 10;
           number /= 2;
           
        }
       }
       
       BinNum = (PrintReverse(BinNum));
       
   printf(""%d"", BinNum);
       
   }",0
besk864,1697540915,4,"void ConvertToBinary(int number){
        int PrintReverse(int number){
        
        int temp;
       
        int Revnum;
        Revnum = 0;
        
        while (number != 0){
            
            temp = number % 10;
            
            Revnum = Revnum * 10 + temp;
            
            number = number / 10;
            
        }
     return Revnum;
    }
       int BinNum = 0;
      
       while (number > 0){
       if ((number % 2) == 1){
           BinNum *= (10);
           BinNum++;
           number /= 2;
           
       } else if ((number % 2) == 0){
           BinNum *= 10;
           number /= 2;
           
        }
       }
       
       BinNum = (PrintReverse(BinNum));
       if ((number % 2) == 0){
        BinNum *= 10;
    }
   printf(""%d"", BinNum);
       
   }",
besk864,1697540963,5,"void ConvertToBinary(int number){
        int PrintReverse(int number){
        
        int temp;
       
        int Revnum;
        Revnum = 0;
        
        while (number != 0){
            
            temp = number % 10;
            
            Revnum = Revnum * 10 + temp;
            
            number = number / 10;
            
        }
     return Revnum;
    }
     int numHold;
      numHold = number;
     
       int BinNum = 0;
      
       while (number > 0){
       if ((number % 2) == 1){
           BinNum *= (10);
           BinNum++;
           number /= 2;
           
       } else if ((number % 2) == 0){
           BinNum *= 10;
           number /= 2;
           
        }
       }
       
       BinNum = (PrintReverse(BinNum));
       if ((number % 2) == 0){
        BinNum *= 10;
    }
   printf(""%d"", BinNum);
       
   }",
besk864,1697540972,6,"void ConvertToBinary(int number){
        int PrintReverse(int number){
        
        int temp;
       
        int Revnum;
        Revnum = 0;
        
        while (number != 0){
            
            temp = number % 10;
            
            Revnum = Revnum * 10 + temp;
            
            number = number / 10;
            
        }
     return Revnum;
    }
     int numHold;
      numHold = number;
     
       int BinNum = 0;
      
       while (number > 0){
       if ((number % 2) == 1){
           BinNum *= (10);
           BinNum++;
           number /= 2;
           
       } else if ((number % 2) == 0){
           BinNum *= 10;
           number /= 2;
           
        }
       }
       
       BinNum = (PrintReverse(BinNum));
       if ((numHold % 2) == 0){
        BinNum *= 10;
    }
   printf(""%d"", BinNum);
       
   }",
besk864,1697540974,7,"void ConvertToBinary(int number){
        int PrintReverse(int number){
        
        int temp;
       
        int Revnum;
        Revnum = 0;
        
        while (number != 0){
            
            temp = number % 10;
            
            Revnum = Revnum * 10 + temp;
            
            number = number / 10;
            
        }
     return Revnum;
    }
     int numHold;
      numHold = number;
     
       int BinNum = 0;
      
       while (number > 0){
       if ((number % 2) == 1){
           BinNum *= (10);
           BinNum++;
           number /= 2;
           
       } else if ((number % 2) == 0){
           BinNum *= 10;
           number /= 2;
           
        }
       }
       
       BinNum = (PrintReverse(BinNum));
       if ((numHold % 2) == 0){
        BinNum *= 10;
    }
   printf(""%d"", BinNum);
       
   }",0
besk864,1698028167,8,"void ConvertToBinary(long long number){

    if (number == 0){
        printf(""%lld"", number);
        return;
    }
    
     long long numHold;
      numHold = 1;
    long long numRem; 
       long long BinNum = 0;
      
       while (number > 0){
    numRem = number % 2;
        BinNum = BinNum + numRem * numHold;
        numHold = numHold * 10;
        number = number / 2;
    }

   printf(""%lld"", BinNum);
       
   }",
besk864,1698028170,9,"void ConvertToBinary(long long number){

    if (number == 0){
        printf(""%lld"", number);
        return;
    }
    
     long long numHold;
      numHold = 1;
    long long numRem; 
       long long BinNum = 0;
      
       while (number > 0){
    numRem = number % 2;
        BinNum = BinNum + numRem * numHold;
        numHold = numHold * 10;
        number = number / 2;
    }

   printf(""%lld"", BinNum);
       
   }",1
bfis965,1698137115,1,"void ConvertToBinary(int numIn)
{
	if (numIn == 1) {
		printf(""%d"", numIn);
	}
	else {
		ConvertToBinary(numIn / 2);
		printf(""%d"", numIn % 2);
	}

}",
bfis965,1698137118,2,"void ConvertToBinary(int numIn)
{
	if (numIn == 1) {
		printf(""%d"", numIn);
	}
	else {
		ConvertToBinary(numIn / 2);
		printf(""%d"", numIn % 2);
	}

}",1
bfla774,1697511649,1,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""1"");
    } else{
         
         ConvertToBinary(n/2);
         printf(""%d"", n % 2);
    }
    
}",
bfla774,1697511653,2,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""1"");
    } else{
         
         ConvertToBinary(n/2);
         printf(""%d"", n % 2);
    }
    
}",1
bgib630,1697506034,1,"#include <stdio.h>

void ConvertToBinary(int num)
{
    int number[100];
    int i = -1;
    int digit;
    
    while (num > 0)
    {
        digit = num % 2;
        num = (num - digit) / 2;
        i++;
        number[i] = digit;
    }
    for (int j = i; j >= 0; j--)
    {
        printf(""%d"", number[j]);
        
    }
}",
bgib630,1697506038,2,"#include <stdio.h>

void ConvertToBinary(int num)
{
    int number[100];
    int i = -1;
    int digit;
    
    while (num > 0)
    {
        digit = num % 2;
        num = (num - digit) / 2;
        i++;
        number[i] = digit;
    }
    for (int j = i; j >= 0; j--)
    {
        printf(""%d"", number[j]);
        
    }
}",1
bgru726,1697781447,1,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""1"");
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",
bgru726,1697781449,2,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""1"");
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",1
bguo360,1697424740,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
		return;
	}
	ConvertToBinary(n / 2);
	printf(""%d"", n % 2);
}",
bguo360,1697424745,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
		return;
	}
	ConvertToBinary(n / 2);
	printf(""%d"", n % 2);
}",1
bhua898,1697859275,1,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(num/2);
        printf(""%d"", num % 2);
    }
}",
bhua898,1697859277,2,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(num/2);
        printf(""%d"", num % 2);
    }
}",1
bjin223,1698027567,1,"void ConvertToBinary(int num) {
    ConvertToBinary(num/2);
    printf(""%d"", num%2);
}",
bjin223,1698027636,2,"void ConvertToBinary(int num) {
    if(num==0){
        return;
    }else{
    ConvertToBinary(num/2);
    printf(""%d"", num%2);
}
}",
bjin223,1698027649,3,"void ConvertToBinary(int num) {
    if(num==0){
        return;
    }else{
    ConvertToBinary(num/2);
    printf(""%d"", num%2);
}
}",1
bjon836,1697956609,1,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
bjon836,1697956612,2,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
bkho028,1697630141,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
bkho028,1697630145,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
blar030,1698033186,1,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int i = input;
    while (i > 0)
    {
        if(i % 2 == 1)
        {
            printf(""%n$d"", 1);
            i=(i-1)/2;
        }
        
        else if(i % 2 == 0)
        {
            printf(""0"");
            i = i/2;
        }
    }
}",
blar030,1698033205,2,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int i = input;
    while (i > 0)
    {
        if(i % 2 == 1)
        {
            printf(""1"");
            i=(i-1)/2;
        }
        
        else if(i % 2 == 0)
        {
            printf(""0"");
            i = i/2;
        }
    }
}",
bli482,1697513649,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
bli482,1697513653,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
bli775,1697543753,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: if the number is 0, stop.
    if (n == 0) {
        return;
    }

    // Recursive call with the quotient.
    ConvertToBinary(n / 2);

    // Print the remainder (0 or 1) which represents the binary digit
    printf(""%d"", n % 2);
}
",
bli775,1697543756,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: if the number is 0, stop.
    if (n == 0) {
        return;
    }

    // Recursive call with the quotient.
    ConvertToBinary(n / 2);

    // Print the remainder (0 or 1) which represents the binary digit
    printf(""%d"", n % 2);
}
",1
bmac148,1697775691,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
bmac148,1697775695,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
bora417,1697601004,1,"void ConvertToBinary(int n) {
     //Intilising the base case
    if (n == 1) {
        printf(""%d"", n); //ensures last digit printed
    } else {
        ConvertToBinary(n / 2); //feed the remaining numbers
        printf(""%d"", n % 2); //print the result of the first division
    }   
}
",
bora417,1697601007,2,"void ConvertToBinary(int n) {
     //Intilising the base case
    if (n == 1) {
        printf(""%d"", n); //ensures last digit printed
    } else {
        ConvertToBinary(n / 2); //feed the remaining numbers
        printf(""%d"", n % 2); //print the result of the first division
    }   
}
",1
bpak212,1697950139,1,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n > 3) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
bpak212,1697950150,2,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n > 2) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
bpak212,1697950156,3,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n > 1) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
bpak212,1697950163,4,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n > 0) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
bpak212,1697950209,5,"#include <stdio.h>

void ConvertToBinary(int b) 
{
    if (b > 1) 
    {
        ConvertToBinary(b / 2);
    }
    printf(""%d"", b % 2);
}
",
bpak212,1697950213,6,"#include <stdio.h>

void ConvertToBinary(int b) 
{
    if (b > 1) 
    {
        ConvertToBinary(b / 2);
    }
    printf(""%d"", b % 2);
}
",1
bpat907,1697764582,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
	return;
}",
bpat907,1697764584,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
	return;
}",1
bril841,1698093885,1,"void ConvertToBinary(int n) 
{
    if (n > 0) 
    {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
bril841,1698093899,2,"void ConvertToBinary(int n) 
{
    if (n > 0) 
    {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
bsil719,1697580057,1,"void ConvertToBinary(int number)
{
    if (number < 2){
        printf(""%d"", number)
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
    ",0
bsil719,1697580066,2,"void ConvertToBinary(int number)
{
    if (number < 2){
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
    ",
bsil719,1697580071,3,"void ConvertToBinary(int number)
{
    if (number < 2){
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
    ",1
bvau704,1697499654,1,"void ConvertToBinary(int num){
    

    if (num <= 1){
        printf(""%d"", num);
    }
    else{
        
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
bvau704,1697499656,2,"void ConvertToBinary(int num){
    

    if (num <= 1){
        printf(""%d"", num);
    }
    else{
        
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
bwis161,1697506832,1,"void ConvertToBinary(int n)
{
	
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		int binary = n / 2;
		printf(""%d"", n % 2);
		ConvertToBinary(binary);
	}
}",
bwis161,1697506913,2,"void ConvertToBinary(int n)
{
	
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		printf(""%d"", n % 2);
		int binary = n / 2;
		ConvertToBinary(binary);
	}
}",
bwis161,1697507292,3,"void ConvertToBinary(int n)
{
	
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		int binary = n / 2;
		ConvertToBinary(binary);
		printf(""%d"", n % 2);
	}
}",
bwis161,1697507299,4,"void ConvertToBinary(int n)
{
	
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		int binary = n / 2;
		ConvertToBinary(binary);
		printf(""%d"", n % 2);
	}
}",1
bwoo348,1698031730,1,"void ConvertToBinary(int num)
{
   if (num == 0) {
      return;
   } else {
      ConvertToBinary((num - (num%2))/2);
      printf(""%d"", num%2);
   }
}",
bwoo348,1698031733,2,"void ConvertToBinary(int num)
{
   if (num == 0) {
      return;
   } else {
      ConvertToBinary((num - (num%2))/2);
      printf(""%d"", num%2);
   }
}",1
byiu331,1697437492,1,"void ConvertToBinary(int num) {

	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", (num % 2));
		
	}
}",1
byul423,1697440784,1,"void ConvertToBinary(int number) {
	int rem = 0;
	if (number > 0) {
		rem = number % 2;
		number = number / 2;
		ConvertToBinary(number);
		printf(""%d"", rem);
	}
}",
byul423,1697440788,2,"void ConvertToBinary(int number) {
	int rem = 0;
	if (number > 0) {
		rem = number % 2;
		number = number / 2;
		ConvertToBinary(number);
		printf(""%d"", rem);
	}
}",1
cada577,1697803380,1,"void ConvertToBinary(int n)
{

    if (n == 1) {
        printf(""1"");
        return;
    }

    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);


}",
cada577,1697803385,2,"void ConvertToBinary(int n)
{

    if (n == 1) {
        printf(""1"");
        return;
    }

    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);


}",1
cana544,1697505650,1,"void ConvertToBinary(int n) {
    int quotient = n / 2;
    int remainder = n % 2;

    if (quotient) {
        ConvertToBinary(quotient);
    }

    printf(""%d"", remainder);
    return;
}",1
cang688,1697706520,1,"void ConvertToBinary(int n) {
    if (n == 1)  {
        printf(""%d"", 1);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",
cang688,1697706523,2,"void ConvertToBinary(int n) {
    if (n == 1)  {
        printf(""%d"", 1);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",1
cbee072,1697427720,1,"void ConvertToBinary(int n)
{
    int x;
    int y;
    
    
    if (n == 1) {
        printf(""%d"", n);
    }
    else {
        x = n / 2; //recursive case
        ConvertToBinary(x);
        y = n % 2;
        printf(""%d"", y);
    }
}",
cbee072,1697427727,2,"void ConvertToBinary(int n)
{
    int x;
    int y;
    
    
    if (n == 1) {
        printf(""%d"", n);
    }
    else {
        x = n / 2; //recursive case
        ConvertToBinary(x);
        y = n % 2;
        printf(""%d"", y);
    }
}",1
cben375,1697598655,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
cben375,1697598698,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
cbro223,1697430885,1,"void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""%d"", 1);
    }
    else
    {
        printf(""%d"",n%2);
        ConvertToBinary(n/2);
    }
}",
cbro223,1697430927,2,"void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""%d"", 1);
    }
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",
cbro223,1697430929,3,"void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""%d"", 1);
    }
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",1
cbro435,1697440511,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n){
    if(n==1){
        printf(""%d"",n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
cbro435,1697440515,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n){
    if(n==1){
        printf(""%d"",n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
cbro989,1697492082,1,"void ConvertToBinary(int n)
{
    if (n > 3){
        printf(""%d"", n);
    }
    
    LSB = n % 2; 
    printf(""%d"", n)

    ConvertToBinary(n / 2)
}",
cbro989,1697492098,2,"void ConvertToBinary(int n)
{
    int LSB;
    if (n > 3){
        printf(""%d"", n);
    }
    
    LSB = n % 2; 
    printf(""%d"", n);

    ConvertToBinary(n / 2)
}",
cbro989,1697492108,3,"void ConvertToBinary(int n)
{
    int LSB;
    if (n > 3){
        printf(""%d"", n);
    }
    
    LSB = n % 2; 
    printf(""%d"", n);

    ConvertToBinary(n / 2);
}",
cbro989,1697492114,4,"void ConvertToBinary(int n)
{
    
    if (n > 3){
        printf(""%d"", n);
    }
    
    LSB = n % 2; 
    printf(""%d"", n);

    ConvertToBinary(n / 2);
}",
cbro989,1697492139,5,"void ConvertToBinary(int n)
{
    
    if (n > 3){
        printf(""%d"", n);
    }
    
    LSB = n % 2; 
    printf(""%d"", LSB);

    ConvertToBinary(n / 2);
}",
cbro989,1697492148,6,"void ConvertToBinary(int n)
{
    int LSB;
    if (n > 3){
        printf(""%d"", n);
    }
    
    LSB = n % 2; 
    printf(""%d"", LSB);

    ConvertToBinary(n / 2);
}",
cbro989,1697492176,7,"void ConvertToBinary(int n)
{
    
    if (n > 3){
        printf(""%d"", n);
        return;
    }
    
    LSB = n % 2; 
    printf(""%d"", LSB);

    ConvertToBinary(n / 2);
}",
cbro989,1697492187,8,"void ConvertToBinary(int n)
{
    
    if (n > 3){
        printf(""%d"", n);
        return;
    }
    
    int LSB = n % 2; 
    printf(""%d"", LSB);

    ConvertToBinary(n / 2);
}",
cbro989,1697492244,9,"void ConvertToBinary(int n)
{
    
    if (n > 2){
        printf(""%d"", n);
        return;
    }
    
    int LSB = n % 2; 
    ConvertToBinary(n / 2);
    printf(""%d"", LSB);


}",
cbro989,1697492330,10,"void ConvertToBinary(int n)
{
    
    if (n == 0){
        printf(""%0"");
        return;
    }
    
    int LSB = n % 2; 
    ConvertToBinary(n / 2);
    printf(""%d"", LSB);


}",
cbro989,1697492339,11,"void ConvertToBinary(int n)
{
    
    if (n == 0){
        printf(""0"");
        return;
    }
    
    int LSB = n % 2; 
    ConvertToBinary(n / 2);
    printf(""%d"", LSB);


}",
cbro989,1697492346,12,"void ConvertToBinary(int n)
{
    
    if (n == 0){
        printf(""0"");
        return;
    }
    
    int LSB = n % 2; 
    ConvertToBinary(n / 2);
    printf(""%d"", LSB);


}",1
cbur703,1697676573,1,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""%d"", 1);
    }
    
    else {
        int n = value % 2;
        ConvertToBinary(value / 2);
        printf(""%d"", n);
        
    }
}",
cbur703,1697676577,2,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""%d"", 1);
    }
    
    else {
        int n = value % 2;
        ConvertToBinary(value / 2);
        printf(""%d"", n);
        
    }
}",1
ccha663,1697602529,1,"void ConvertToBinary(int number) {
    if (number/2 ==0) {
        printf(""%d"",number%2);
        return;
    } else {
        printf(""%d"",number%2);
        ConvertToBinary(number/2);
    }
    
    
}",0
ccha663,1697603542,2,"void ConvertToBinary(int number) {
    if (number/2 ==0) {
        printf(""%d"",number%2);
        
        
        
        return;
    } else {
        ConvertToBinary(number/2);
        printf(""%d"",number%2);
        
    }
    
    
}
",1
ccha854,1697695275,1,"void ConvertToBinary(int x) {
    
    if (x==1) {
        printf(""%d"", x);
    } else {
        int y = x/2;
        ConvertToBinary(y);
        printf(""%d"", x%2);
    }
}",
ccha854,1697695278,2,"void ConvertToBinary(int x) {
    
    if (x==1) {
        printf(""%d"", x);
    } else {
        int y = x/2;
        ConvertToBinary(y);
        printf(""%d"", x%2);
    }
}",1
cche441,1698032385,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%i"", num % 2);
    }
}",
cche441,1698032387,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%i"", num % 2);
    }
}",1
cche873,1697600051,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    // If the number is 0, stop recursion.
    if (num == 0) {
        return;
    }

    // Recursive call number divided by 2
    ConvertToBinary(num / 2);

    // Print the binary digit (0 or 1) corresponding to the remainder
    printf(""%d"", num % 2);
}
",
cche873,1697600097,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    // If the number is 0, stop recursion.
    if (num == 0) {
        return;
    }

    // Recursive call number divided by 2
    ConvertToBinary(num / 2);

    // Print the binary digit (0 or 1) depending on the remainder
    printf(""%d"", num % 2);
}
",1
cdel568,1697424745,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}",
cdel568,1697424751,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}",1
cdin152,1697785496,1,"void ConvertToBinary(int number)
{
	if (number <= 1) {
		printf(""%d"", number);
	} else {
		ConvertToBinary(number / 2);  
		printf(""%d"", number % 2);
	}
}",
cdin152,1697785499,2,"void ConvertToBinary(int number)
{
	if (number <= 1) {
		printf(""%d"", number);
	} else {
		ConvertToBinary(number / 2);  
		printf(""%d"", number % 2);
	}
}",1
cdin268,1697430820,1,"int ConvertToBinary(int a) {

    if (a/2 == 1) {
        printf(""1"");
        return 0;
    } else {
        printf(""%d"", a%2);
        return a - ConvertToBinary(a/2);
    }

}",
cdin268,1697753657,2,"int ConvertToBinary(int a) {

    if (a == 0) {
        printf(""1"");
        return 0;
    } else {
        printf(""%d"", a%2);
        return ConvertToBinary(a/2);
    }

}",
cdin268,1697753721,3,"int ConvertToBinary(int a) {

    if (a > 0) {
        return ConvertToBinary(a/2);
        printf(""%d"", a % 2);
    }

}",
cdin268,1697753791,4,"int ConvertToBinary(int a) {

    if (a > 0) {
        printf(""%d"", a % 2);
        return ConvertToBinary(a/2);
        
    }

}",
cdin268,1697753880,5,"void ConvertToBinary(int a) {
    if (a > 0) {
        ConvertToBinary(a / 2);
        printf(""%d"", a % 2);
    }
}",
cdin268,1697753890,6,"void ConvertToBinary(int a) {
    if (a > 0) {
        ConvertToBinary(a / 2);
        printf(""%d"", a % 2);
    }
}",1
cdsi208,1698115298,1,"void ConvertToBinary(int num) {
   
   if (num != 0) {
   int a = num % 2;
  
   num = num / 2;
   ConvertToBinary(num);
   printf(""%d"", a);
   }
}",
cdsi208,1698115300,2,"void ConvertToBinary(int num) {
   
   if (num != 0) {
   int a = num % 2;
  
   num = num / 2;
   ConvertToBinary(num);
   printf(""%d"", a);
   }
}",1
cgal160,1697780749,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
cgal160,1697780786,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
cgaz516,1697432997,1,"void ConvertToBinary(int num)
{
	if (num != 0) {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",1
chua804,1697889580,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
chua804,1697889581,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
civa625,1698106818,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n <= 0) {
        return;
    } else {
        int result = n / 2;
        int binary = n % 2;
    
        ConvertToBinary(result);
        printf(""%d "", binary);
    }
}",
civa625,1698106838,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n <= 0) {
        return;
    } else {
        int result = n / 2;
        int binary = n % 2;
    
        ConvertToBinary(result);
        printf(""%d"", binary);
    }
}",
civa625,1698106843,3,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n <= 0) {
        return;
    } else {
        int result = n / 2;
        int binary = n % 2;
    
        ConvertToBinary(result);
        printf(""%d"", binary);
    }
}",1
cjun818,1697944560,1,"void ConvertToBinary(int n) 
{
    if (n / 2 != 0) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);",
cjun818,1697944571,2,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n / 2 != 0) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);",
cjun818,1697944619,3,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n / 2 != 0) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
cjun818,1697944622,4,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n / 2 != 0) 
    {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
clee482,1697861702,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""%d"",n);
    }
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
clee482,1697861704,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""%d"",n);
    }
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
cleu746,1697771471,1,"void ConvertToBinary(int value)
{
    if (value <= 1) {
        printf(""%d"", value);
    } else {
        ConvertToBinary(value/2);
        printf(""%d"", (value % 2));
    }
}",
cleu746,1697771474,2,"void ConvertToBinary(int value)
{
    if (value <= 1) {
        printf(""%d"", value);
    } else {
        ConvertToBinary(value/2);
        printf(""%d"", (value % 2));
    }
}",1
cli942,1698135240,1,"void ConvertToBinary(int n)
{
    while (n>0){
        printf(""%d"",n % 2);
        n= n / 2;
        }
}
",
cli942,1698135284,2,"void ConvertToBinary(int n)
{
    while (n>0){
        printf(""%d"",n % 2);
        n= n / 2 - n % 2;
        }
}
",
cli942,1698135329,3,"void ConvertToBinary(int n)
{
    while (n>0){
        printf(""%d"",n % 2);
        n= n / 2;
        }
}
",
cli942,1698135609,4,"
void ConvertToBinary(int n)
{
    if (n== 1){
        printf(""%d"", n);
    }
    else{
         while (n>0){
        printf(""%d"",n % 2);
        n= n / 2;
        }
    }
   
}
",
cli942,1698136377,5,"void ConvertToBinary(int n)
{
    while (n>0){
        printf(""%d"",n % 2);
        n= n / 2;
        }
    int a;
    scanf(""%d"", a);
    while (a>0){
        printf(""%d"",a % 10);
        a= a / 10;
        }
}
",
cli942,1698136389,6,"void ConvertToBinary(int n)
{
    while (n>0){
        printf(""%d"",n % 2);
        n= n / 2;
        }
    int a*;
    scanf(""%d"", a);
    while (a>0){
        printf(""%d"",a % 10);
        a= a / 10;
        }
}
",
cli942,1698136584,7,"void ConvertToBinary(int n)
{
    if (n==1){
        printf(""%d"", n);
    }
    else{
        n=n/2;
        printf(""%d"", n % 2);
    }
}",
cli942,1698136617,8,"void ConvertToBinary(int n)
{
    if (n==1){
        printf(""%d"", n);
    }
    else{
        n= n / 2;
        printf(""%d"", n % 2);
    }
}",
cli942,1698138966,9,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
cli942,1698138971,10,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
clob269,1697499935,1,"
void ConvertToBinary(int num) {

    int binary;
    int rem;
    int count = 0;
    int ans[100] = { 0 };

    while (num != 0) {
        rem = num % 2;
        
        if (rem == 1) {
            ans[count] = 1;
        }

        count++;

        num /= 2;
    }

    for (int j = count - 1; j >= 0; j--) {
        printf(""%d"", ans[j]);
    }




}

",
clob269,1697499953,2,"
void ConvertToBinary(int num) {

    int rem;
    int count = 0;
    int ans[100] = { 0 };

    while (num != 0) {
        rem = num % 2;
        
        if (rem == 1) {
            ans[count] = 1;
        }

        count++;

        num /= 2;
    }

    for (int j = count - 1; j >= 0; j--) {
        printf(""%d"", ans[j]);
    }




}





",
clob269,1697499956,3,"
void ConvertToBinary(int num) {

    int rem;
    int count = 0;
    int ans[100] = { 0 };

    while (num != 0) {
        rem = num % 2;
        
        if (rem == 1) {
            ans[count] = 1;
        }

        count++;

        num /= 2;
    }

    for (int j = count - 1; j >= 0; j--) {
        printf(""%d"", ans[j]);
    }




}





",1
cmac377,1698113418,1,"void ConvertToBinary(int n){
    int remainder1, carry;
    
    remainder1 = n % 2;
    carry = (n - remainder1) / 2;
    
    //printf(""%d"", carry);
    
    if(carry != 0){
        if (remainder1 == 1){
            printf(""%d"", 1);
            ConvertToBinary(carry);
        } else {
            ConvertToBinary(carry);
            printf(""%d"", remainder1);
        }
    } else if (carry == 0){
        printf(""%d"", remainder1);
        return;
    }
    return;
    
}",
cmac377,1698113797,2,"void ConvertToBinary(int n){
    int remainder1, carry;
    
    remainder1 = n % 2;
    carry = n / 2;
    
    printf(""carry:%d\n"", carry);
    
    if(carry != 0){
        if (remainder1 == 1){
            printf(""%d\n"", 1);
            ConvertToBinary(carry);
        } else {
            printf(""%d\n"", remainder1);
            ConvertToBinary(carry);
            
        }
    } else if (carry == 0){
        printf(""%d\n"", remainder1);
        return;
    }
    return;
    
}",
cmac377,1698113815,3,"void ConvertToBinary(int n){
    int remainder1, carry;
    
    remainder1 = n % 2;
    carry = n / 2;
    
    //printf(""carry:%d\n"", carry);
    
    if(carry != 0){
        if (remainder1 == 1){
            printf(""%d"", 1);
            ConvertToBinary(carry);
        } else {
            printf(""%d"", remainder1);
            ConvertToBinary(carry);
            
        }
    } else if (carry == 0){
        printf(""%d"", remainder1);
        return;
    }
    return;
    
}",
cmac377,1698113925,4,"void ConvertToBinary(int n){
    int remainder1, carry;
    
    remainder1 = n % 2;
    carry = n / 2;
    
    //printf(""carry:%d\n"", carry);
    
    if(carry != 0){
        if (remainder1 == 1){
            
            ConvertToBinary(carry);
            printf(""%d"", 1);
        } else {
            
            ConvertToBinary(carry);
            printf(""%d"", remainder1);
        }
    } else if (carry == 0){
        printf(""%d"", remainder1);
        return;
    }
    return;
    
}",
cmac377,1698113928,5,"void ConvertToBinary(int n){
    int remainder1, carry;
    
    remainder1 = n % 2;
    carry = n / 2;
    
    //printf(""carry:%d\n"", carry);
    
    if(carry != 0){
        if (remainder1 == 1){
            
            ConvertToBinary(carry);
            printf(""%d"", 1);
        } else {
            
            ConvertToBinary(carry);
            printf(""%d"", remainder1);
        }
    } else if (carry == 0){
        printf(""%d"", remainder1);
        return;
    }
    return;
    
}",1
cmad989,1697527577,1,"void ConvertToBinary( int number)
{
    int remainder;
    if (number > 0) {
        ConvertToBinary(number/2);
        remainder = number % 2;
        printf(""%d"", remainder);
    }
}",
cmad989,1697527580,2,"void ConvertToBinary( int number)
{
    int remainder;
    if (number > 0) {
        ConvertToBinary(number/2);
        remainder = number % 2;
        printf(""%d"", remainder);
    }
}",1
cmas527,1698050410,1,"#include <stdio.h>

void ConverttoBinary (int n)
{
if (n==1||n==0)
{printf (""%d"", n);}
else {
int rmd=n%2;
ConverttoBinary(n/2);
printf(""%d"", rmd);
}
}",
cmas527,1698050446,2,"#include <stdio.h>

void ConvertToBinary (int n)
{
if (n==1||n==0)
{printf (""%d"", n);}
else {
int rmd=n%2;
ConvertToBinary(n/2);
printf(""%d"", rmd);
}
}",
cmas527,1698050448,3,"#include <stdio.h>

void ConvertToBinary (int n)
{
if (n==1||n==0)
{printf (""%d"", n);}
else {
int rmd=n%2;
ConvertToBinary(n/2);
printf(""%d"", rmd);
}
}",1
cmcm317,1697863748,1,"
#include <stdio.h>

void PrintReverse(int number)
{
    int value, temp;

    value = number%2;
        
    if (number == 0) {
        return;
    } else {
        PrintReverse(number/2);
        printf(""%d"", value);
    }

}",
cmcm317,1697863757,2,"
#include <stdio.h>

void PrintReverse(int number)
{
    int value;

    value = number%2;
        
    if (number == 0) {
        return;
    } else {
        PrintReverse(number/2);
        printf(""%d"", value);
    }

}",
cmcm317,1697863771,3,"
#include <stdio.h>

void ConvertToBinary(int number)
{
    int value;

    value = number%2;
        
    if (number == 0) {
        return;
    } else {
        PrintReverse(number/2);
        printf(""%d"", value);
    }

}",
cmcm317,1697863786,4,"
#include <stdio.h>

void ConvertToBinary(int number)
{
    int value;

    value = number%2;
        
    if (number == 0) {
        return;
    } else {
        ConvertToBinary(number/2);
        printf(""%d"", value);
    }

}",
cmcm317,1697863789,5,"
#include <stdio.h>

void ConvertToBinary(int number)
{
    int value;

    value = number%2;
        
    if (number == 0) {
        return;
    } else {
        ConvertToBinary(number/2);
        printf(""%d"", value);
    }

}",1
cmia215,1697584398,1,"#include <stdio.h>

void ConvertToBinary(int input)
{

	if (input == 1) {
		//printf(""%d"", input);
		return 0;
	}
	else {
		
		ConvertToBinary(input /= 2);
		printf(""%d"", input % 2);
	}

}",
cmia215,1697584411,2,"#include <stdio.h>

void ConvertToBinary(int input)
{

	if (input == 1) {
		//printf(""%d"", input);
		return;
	}
	else {
		
		ConvertToBinary(input /= 2);
		printf(""%d"", input % 2);
	}

}",
cmia215,1697584431,3,"#include <stdio.h>

void ConvertToBinary(int input)
{

	if (input == 1) {
		printf(""%d"", input);
		
	}
	else {
		
		ConvertToBinary(input /= 2);
		printf(""%d"", input % 2);
	}

}",
cmia215,1697585006,4,"#include <stdio.h>

void ConvertToBinary(int input)
{

	if (input == 1) {
		printf(""1"");
	}
	else {
		
		ConvertToBinary(input/2);
		printf(""%d"", input % 2);
	}

}
",
cmia215,1697585009,5,"#include <stdio.h>

void ConvertToBinary(int input)
{

	if (input == 1) {
		printf(""1"");
	}
	else {
		
		ConvertToBinary(input/2);
		printf(""%d"", input % 2);
	}

}
",1
cmot464,1697493394,1,"void ConvertToBinary(int num){
    if(num == 1){
    printf(""%d"", num);
    }
    else{
        ConvertToBinary(num/2);
        printf(""%d"", num % 2);
    }
}",
cmot464,1697493397,2,"void ConvertToBinary(int num){
    if(num == 1){
    printf(""%d"", num);
    }
    else{
        ConvertToBinary(num/2);
        printf(""%d"", num % 2);
    }
}",1
cnai408,1698033839,1,"void ConvertToBinary (int n) {
    if (n == 1) {
        printf(""%d"", n);
    }
    
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
cnai408,1698033841,2,"void ConvertToBinary (int n) {
    if (n == 1) {
        printf(""%d"", n);
    }
    
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
cnie825,1698138064,1,"void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",
cnie825,1698138072,2,"void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",1
coli772,1697512798,1,"void ConvertToBinary(int number) {
    if (number == 0) {
        return;
    }
    ConvertToBinary(number / 2);
    printf(""%d"", number % 2);
}",
coli772,1697512801,2,"void ConvertToBinary(int number) {
    if (number == 0) {
        return;
    }
    ConvertToBinary(number / 2);
    printf(""%d"", number % 2);
}",1
couy656,1697600343,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
couy656,1697600347,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
csan114,1697433320,1,"void ConvertToBinary(int x) 
{
	int array[100] = { 0 };
	int i = 0;
	int n = 0;

	while (x != 0) {
		array[i] = (x % 2);
		x = (x / 2);
		i++;
	}

	for (int j = i; j > 0; j--) {
		if (array[j] == 1) {
			n = j;
			break;
		}
	}

	for (int j = n; j > 0; j--) {
		printf(""%d"", array[j]);
	}
}",
csan114,1697433375,2,"void ConvertToBinary(int x) 
{
	int array[100] = { 0 };
	int i = 0;
	int n = 0;

	while (x != 0) {
		array[i] = (x % 2);
		x = (x / 2);
		i++;
	}

	for (int j = i; j >= 0; j--) {
		if (array[j] == 1) {
			n = j;
			break;
		}
	}

	for (int j = n; j >= 0; j--) {
		printf(""%d"", array[j]);
	}
}",
csan114,1697433378,3,"void ConvertToBinary(int x) 
{
	int array[100] = { 0 };
	int i = 0;
	int n = 0;

	while (x != 0) {
		array[i] = (x % 2);
		x = (x / 2);
		i++;
	}

	for (int j = i; j >= 0; j--) {
		if (array[j] == 1) {
			n = j;
			break;
		}
	}

	for (int j = n; j >= 0; j--) {
		printf(""%d"", array[j]);
	}
}",1
cset571,1697429480,1,"void ConvertToBinary(int n) {
	if (n == 1 || n == 0) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
cset571,1697429483,2,"void ConvertToBinary(int n) {
	if (n == 1 || n == 0) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
csin574,1697664244,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	} else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
csin574,1697664247,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	} else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
cste189,1697491894,1,"void ConvertToBinary(int num)
{
	if (num != 1) {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
	else {
		printf(""1"");
	}
}
",1
ctub889,1698030868,1,"#include <stdio.h>

// Recursive function to convert an integer to binary
void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); // Recursive call with the number divided by 2
        printf(""%d"", n % 2); // Print the remainder, which is the binary digit
    }
}",
ctub889,1698030876,2,"#include <stdio.h>

// Recursive function to convert an integer to binary
void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); // Recursive call with the number divided by 2
        printf(""%d"", n % 2); // Print the remainder, which is the binary digit
    }
}",1
cugn667,1697513776,1,"void ConvertToBinary(int n)
{
    int Remainder;
    int Quotient;
    
    if ( n == 0 ){
        
        return;
        
    } else {
    
    Remainder = n % 2;
    Quotient = n / 2;
    
    ConvertToBinary( Quotient );
    printf(""%d"", Remainder);
        
    }
    
}",1
cwei506,1697854987,1,"int ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
	else {
		return 0;
	}
} ",0
cwei506,1697855015,2,"int ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
	else {
		return 0;
	}
} ",
cwei506,1697855045,3,"int ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
} ",
cwei506,1697855055,4,"void ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
} ",
cwei506,1697855063,5,"void ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
} ",1
cwu200,1698033989,1,"#include <stdio.h>

int* ReverseArray (int bit[], int size) {
  int start = 0;
  int end = size - 1;
  int temp;

  while (start < end) {
    temp = bit[start];
    bit[start] = bit[end];
    bit[end] = temp;
    start++;
    end--;
  }

  return bit;
}

void ConvertToBinary(int num) {
  int bit[1000];
  int i = 0;
  
  while (num > 0) {
    bit[i] = num % 2;
    num = num / 2;
    i++;
  }

  ReverseArray(bit, i);

  int j;
  for (j = i - 1; j >= 0; j--){
    printf(""%d"", bit[j]);
  }
  
}",
cwu200,1698034065,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    int bit[1000];
    int i = 0;

    while (num > 0) { // Use greater than 0 instead of not equal to 0
        bit[i] = num % 2;
        num = num / 2;
        i++;
    }

    int j;
    for (j = i - 1; j >= 0; j--) { // Correct loop condition for printing
        printf(""%d"", bit[j]); // Print the elements of the array directly
    }
}",
cwu200,1698034067,3,"#include <stdio.h>

void ConvertToBinary(int num) {
    int bit[1000];
    int i = 0;

    while (num > 0) { // Use greater than 0 instead of not equal to 0
        bit[i] = num % 2;
        num = num / 2;
        i++;
    }

    int j;
    for (j = i - 1; j >= 0; j--) { // Correct loop condition for printing
        printf(""%d"", bit[j]); // Print the elements of the array directly
    }
}",1
cyan312,1697706996,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); // Recursive call with integer division
        printf(""%d"", n % 2);   // Print the remainder (0 or 1)
    }
}",
cyan312,1697706998,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); // Recursive call with integer division
        printf(""%d"", n % 2);   // Print the remainder (0 or 1)
    }
}",1
cyiu210,1697879486,1,"#include <stdio.h>

void ConvertToBinary(int value) 
{
    if (value == 1)  {
        printf(""%i"", value);
        return;
        
    } else  {
        
    ConvertToBinary(value / 2);
    printf(""%i"", value % 2);
    }
    
}",
cyiu210,1697879489,2,"#include <stdio.h>

void ConvertToBinary(int value) 
{
    if (value == 1)  {
        printf(""%i"", value);
        return;
        
    } else  {
        
    ConvertToBinary(value / 2);
    printf(""%i"", value % 2);
    }
    
}",1
dbar153,1697430462,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int ConvertToBinary(int number) {
	if (number == 0) {
		return 0;
	}
    ConvertToBinary(number/2);
	printf(""%d"", number % 2);
	return 0;
}",1
dcha468,1698101632,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        printf(""%d"", n % 2);   
    }
}",
dcha468,1698101634,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        printf(""%d"", n % 2);   
    }
}",1
dche306,1698054277,1,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
dche306,1698054281,2,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
deri361,1697495229,1,"#include <stdio.h> 
int binaryNum=0;
void PrintReverse(int num) {
	printf(""%d"", num % 10);
	if ((num / 10) != 0) {
		PrintReverse(num / 10);
	}
}
void ConvertToBinary(int num) {
	if (num != 0) {
		binaryNum = (binaryNum*10)+(num % 2);
		ConvertToBinary(num / 2);
	}
	if (num == 0) {
		PrintReverse(binaryNum);
	}
}",
deri361,1697495232,2,"#include <stdio.h> 
int binaryNum=0;
void PrintReverse(int num) {
	printf(""%d"", num % 10);
	if ((num / 10) != 0) {
		PrintReverse(num / 10);
	}
}
void ConvertToBinary(int num) {
	if (num != 0) {
		binaryNum = (binaryNum*10)+(num % 2);
		ConvertToBinary(num / 2);
	}
	if (num == 0) {
		PrintReverse(binaryNum);
	}
}",0
deri361,1697496077,3,"#include <stdio.h> 
int binaryNum=0;
void PrintReverse(int num) {
	printf(""%d"", num % 10);
	if ((num / 10) != 0) {
		PrintReverse(num / 10);
	}
}
void ConvertToBinary(int num) {
	if (num != 0) {
		binaryNum = (binaryNum*10)+(num % 2);
		ConvertToBinary(num / 2);
	}
	if (num == 0) {
		PrintReverse(binaryNum);
	}
}",
deri361,1697497906,4,"#include <stdio.h> 
void ConvertToBinary(int num) {
	if (num > 1) {
		ConvertToBinary(num / 2);
	}
	printf(""%d"", num%2);
}",
deri361,1697497910,5,"#include <stdio.h> 
void ConvertToBinary(int num) {
	if (num > 1) {
		ConvertToBinary(num / 2);
	}
	printf(""%d"", num%2);
}",1
dfor626,1697424104,1,"void ConvertToBinary(int n)
{
    int next, num;
    if (n == 1) {
        printf (""1"");
    }
    else {
        next = n / 2;
        ConvertToBinary(next);
        num = n % 2;
        printf(""%d"", num);
    }
}",
dfor626,1697424106,2,"void ConvertToBinary(int n)
{
    int next, num;
    if (n == 1) {
        printf (""1"");
    }
    else {
        next = n / 2;
        ConvertToBinary(next);
        num = n % 2;
        printf(""%d"", num);
    }
}",1
dgal735,1697506396,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
dgal735,1697506423,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
dha524,1697423947,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
dha524,1697423949,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
dhah941,1697858758,1,"void ConvertToBinary(int n)
{
	int result;
	int remainder;

	result = n / 2;
	remainder = n % 2;

	printf(""%d"", remainder);

	if (result == 0)
		return;
	ConvertToBinary(result);
}",
dhah941,1697858954,2,"void ConvertToBinary(int n)
{
	int result;
	int remainder;


	if (n == 1)
		printf(""%d"", n);

	result = n / 2;
	remainder = n % 2;

	printf(""%d"", remainder);

	if (result == 0)
		return;
	ConvertToBinary(result);
}",
dhah941,1697859016,3,"void ConvertToBinary(int n)
{
	int result;
	int remainder;

	result = n / 2;
	remainder = n % 2;

	printf(""%d"", remainder);

	if (result == 0)
		return;
	ConvertToBinary(result);
}",
dhah941,1697859498,4,"void ConvertToBinary(int n)
{
	int result;
	int remainder;

	result = n / 2;
	remainder = n % 2;

	if (result == 0)
		return;
	ConvertToBinary(result);
	printf(""%d"", remainder);
}",
dhah941,1697859617,5,"void ConvertToBinary(int n)
{
	int result;
	int remainder;

	result = n / 2;
	remainder = n % 2;

	if (n == 1)
	{
		printf(""%d"", 1);
	}


	if (result == 0)
		return;
	ConvertToBinary(result);
	printf(""%d"", remainder);
}",
dhah941,1697859619,6,"void ConvertToBinary(int n)
{
	int result;
	int remainder;

	result = n / 2;
	remainder = n % 2;

	if (n == 1)
	{
		printf(""%d"", 1);
	}


	if (result == 0)
		return;
	ConvertToBinary(result);
	printf(""%d"", remainder);
}",1
dhar714,1697419059,1,"void ConvertBinary(int number)
{
    if (number < 2) {
        printf(""%d"", number % 2);
    }
    else {
        ConvertBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",0
dhar714,1697419074,2,"void ConvertToBinary(int number)
{
    if (number < 2) {
        printf(""%d"", number % 2);
    }
    else {
        ConvertBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",0
dhar714,1697419101,3,"void ConvertToBinary(int number)
{
    if (number < 2) {
        printf(""%d"", number % 2);
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
dhen760,1697427174,1,"int ConvertToBinary(int number)
{
    int numbers[100] = {};
    int i = 0;
    if (number == 0) {
        return 0;
    } else {
        numbers[i]= number % 2;
        number = number/2;
        number = ConvertToBinary(number);
        i++;
    }
    for (int r=i-1;r>=0;r--) {
        printf(""%d"", numbers[r]);
    }
    return 0;
}",
dhen760,1697427176,2,"int ConvertToBinary(int number)
{
    int numbers[100] = {};
    int i = 0;
    if (number == 0) {
        return 0;
    } else {
        numbers[i]= number % 2;
        number = number/2;
        number = ConvertToBinary(number);
        i++;
    }
    for (int r=i-1;r>=0;r--) {
        printf(""%d"", numbers[r]);
    }
    return 0;
}",1
dhul688,1697495262,1,"void ConvertToBinary(int number)
{
    if (number / 2 == 0){
        printf(""%d"", number % 2);
    } else{
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
dhul688,1697495264,2,"void ConvertToBinary(int number)
{
    if (number / 2 == 0){
        printf(""%d"", number % 2);
    } else{
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
dkha055,1697426959,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n % 2);
    }
}",
dkha055,1697426961,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n % 2);
    }
}",1
dkim848,1697864996,1,"void ConvertToBinary(int x)
{
    if (x == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(x / 2);
        printf(""%d"", x % 2);
    }
}
",
dkim848,1697864999,2,"void ConvertToBinary(int x)
{
    if (x == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(x / 2);
        printf(""%d"", x % 2);
    }
}
",1
dkur670,1698115163,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);  
        printf(""%d"", num % 2);     
    }
}",
dkur670,1698115200,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);  
        printf(""%d"", num % 2);     
    }
}",1
dli630,1698103307,1,"void ConvertToBinary(int Decimal) {

    int Next_Integer = Decimal;

    if (Next_Integer == 1) {
        printf(""%d"", 1);

    } else {
        
        Next_Integer = Next_Integer / 2;
        ConvertToBinary(Next_Integer);
        printf(""%d"", Decimal % 2);

    }
    
}",
dli630,1698103308,2,"void ConvertToBinary(int Decimal) {

    int Next_Integer = Decimal;

    if (Next_Integer == 1) {
        printf(""%d"", 1);

    } else {
        
        Next_Integer = Next_Integer / 2;
        ConvertToBinary(Next_Integer);
        printf(""%d"", Decimal % 2);

    }
    
}",1
dlob194,1697437326,1,"void ConvertToBinary(int n) 
{
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
dlob194,1697437329,2,"void ConvertToBinary(int n) 
{
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
dma765,1697981078,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
dma765,1697981080,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
dmar494,1697708731,1,"void ConvertToBinary(int num) {
    int binary[50], count = 0;
    while (num != 0) {
        binary[count] = num % 2;
        num /= 2;
        count++;
    }
    for(int i = count; i > 0; i--) {
        printf(""%d"", binary[i]);
    }
}",
dmar494,1697708753,2,"void ConvertToBinary(int num) {
    int binary[50], count = 0;
    while (num != 0) {
        binary[count] = num % 2;
        num /= 2;
        count++;
    }
    for(int i = count; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",
dmar494,1697708756,3,"void ConvertToBinary(int num) {
    int binary[50], count = 0;
    while (num != 0) {
        binary[count] = num % 2;
        num /= 2;
        count++;
    }
    for(int i = count; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",0
dmar494,1697708829,4,"void ConvertToBinary(int num) {
    int binary[50], count = 0;
    while (num != 0) {
        binary[count] = num % 2;
        num /= 2;
        count++;
    }
    for(int i = count - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",
dmar494,1697708833,5,"void ConvertToBinary(int num) {
    int binary[50], count = 0;
    while (num != 0) {
        binary[count] = num % 2;
        num /= 2;
        count++;
    }
    for(int i = count - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",1
dmcn107,1698141009,1,"void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
dmcn107,1698141027,2,"void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
dmun793,1697834434,1,"void ConvertToBinary(int num)
{
	int next = num / 2;
	if (next > 0)
		ConvertToBinary(next);
	int remainder = num % 2;
	printf(""%d"", remainder);
}",
dmun793,1697834437,2,"void ConvertToBinary(int num)
{
	int next = num / 2;
	if (next > 0)
		ConvertToBinary(next);
	int remainder = num % 2;
	printf(""%d"", remainder);
}",1
dosb979,1698016112,1,"void ConvertToBinary(int n)
 {
     if (n == 1) {
         printf(""1"");
     } else {
         ConvertToBinary(n/2);
         printf(""%d"", n%2);
     }
 }",
dosb979,1698016114,2,"void ConvertToBinary(int n)
 {
     if (n == 1) {
         printf(""1"");
     } else {
         ConvertToBinary(n/2);
         printf(""%d"", n%2);
     }
 }",1
dpar783,1697717312,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
		return;
	} else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
dpar783,1697717314,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
		return;
	} else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
dpat391,1697779364,1,"void ConvertToBinary(int n) {
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
dpat391,1697779366,2,"void ConvertToBinary(int n) {
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
dpat674,1697887981,1,"void ConvertToBinary(int integer){
int arrayOfBinaryNumbers[256],i=0,j;
while(integer>0){
arrayOfBinaryNumbers[i]=integer%2;
integer=integer/2;
i=i+1;
}
j=i-1;
while(j>=0){
printf(""%d"",arrayOfBinaryNumbers[j]);
j=j-1;
}
}",1
dpet289,1697665958,1,"void ConvertToBinary(int n)
{
	int r;
	r = n % 2;
	n = n / 2;	

	if (n == 1)
	{
		printf(""%d"", n);
	}
	else
	{
		ConvertToBinary(n);
		printf(""%d"", n % 2);
	}
}",
dpet289,1697665984,2,"void ConvertToBinary(int n)
{
	n = n / 2;	

	if (n == 1)
	{
		printf(""%d"", n);
	}
	else
	{
		ConvertToBinary(n);
		printf(""%d"", n % 2);
	}
}",
dpet289,1697666255,3,"void ConvertToBinary(int n)
{
	if (n == 1)
	{
		printf(""%d"", n);
	}
	else
	{
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
dpet289,1697666258,4,"void ConvertToBinary(int n)
{
	if (n == 1)
	{
		printf(""%d"", n);
	}
	else
	{
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
dric234,1697585091,1,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""%d"", num);
    }
    else { 
        ConvertToBinary(num / 2);  
        printf(""%d"", num % 2);
 
    }
}",
dric234,1697585094,2,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""%d"", num);
    }
    else { 
        ConvertToBinary(num / 2);  
        printf(""%d"", num % 2);
 
    }
}",1
drob588,1698084692,1,"void convertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		convertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
drob588,1698084713,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
drob588,1698084723,3,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
droj056,1698110262,1,"void ConvertToBinary(int number)
{
	if (number == 0) {
		return;
	}
	ConvertToBinary(n / 2);

	pritf(""%d"", n % 2);
}",
droj056,1698110283,2,"void ConvertToBinary(int number)
{
	if (number == 0) {
		return;
	}
	ConvertToBinary(number / 2);

	pritf(""%d"", number % 2);
}",
droj056,1698110295,3,"void ConvertToBinary(int number)
{
	if (number == 0) {
		return;
	}
	ConvertToBinary(number / 2);

	printf(""%d"", number % 2);
}",
droj056,1698110299,4,"void ConvertToBinary(int number)
{
	if (number == 0) {
		return;
	}
	ConvertToBinary(number / 2);

	printf(""%d"", number % 2);
}",1
dryu303,1698050685,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
dryu303,1698050686,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
dsan845,1698116149,1,"void ConvertToBinary(int n)
{


    if (n == 0) {
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }

    
}",
dsan845,1698116153,2,"void ConvertToBinary(int n)
{


    if (n == 0) {
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }

    
}",1
dsaw164,1697438314,1,"void ConvertToBinary(int number)
{
    if(number == 1 ){
        printf(""1"");
    }
    else{
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
dsaw164,1697438318,2,"void ConvertToBinary(int number)
{
    if(number == 1 ){
        printf(""1"");
    }
    else{
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
dsin316,1698049700,1,"void ConvertToBinary(int x){
    
    int y = x % 2;

    if(x == 1){
        printf(""%d"", 1);
    } 
    else{
        ConvertToBinary((x/2));
        printf(""%d"", y);
    }
    
}",
dsin316,1698049703,2,"void ConvertToBinary(int x){
    
    int y = x % 2;

    if(x == 1){
        printf(""%d"", 1);
    } 
    else{
        ConvertToBinary((x/2));
        printf(""%d"", y);
    }
    
}",1
dstr542,1698140737,1,"void ConvertToBinary(int number)
{
	if (number == 1)
	{
		printf(""%d"", number);
	}
	else
	{

		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}

}",
dstr542,1698140739,2,"void ConvertToBinary(int number)
{
	if (number == 1)
	{
		printf(""%d"", number);
	}
	else
	{

		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}

}",1
dsut709,1697857666,1,"void ConvertToBinary(int decimal) {
	if (decimal / 2 != 0) {
		ConvertToBinary(decimal / 2);
		printf(""%d"", decimal % 2);
	}
	else {
		printf(""%d"", decimal % 2);
	}
}",
dsut709,1697857671,2,"void ConvertToBinary(int decimal) {
	if (decimal / 2 != 0) {
		ConvertToBinary(decimal / 2);
		printf(""%d"", decimal % 2);
	}
	else {
		printf(""%d"", decimal % 2);
	}
}",1
dtem664,1698100620,1,"int ConvertToBinary(int num) {
	if (num > 0) {
		ConvertToBinary(num / 2);
		 int remainder = num % 2;
		if (remainder < 10) {
			printf(""%d"", remainder);
		}
		else {
			printf(""%d"", remainder % 10);
			ConvertToBinary(remainder / 10);
		}
	}
	return 0;
}",
dtem664,1698100622,2,"int ConvertToBinary(int num) {
	if (num > 0) {
		ConvertToBinary(num / 2);
		 int remainder = num % 2;
		if (remainder < 10) {
			printf(""%d"", remainder);
		}
		else {
			printf(""%d"", remainder % 10);
			ConvertToBinary(remainder / 10);
		}
	}
	return 0;
}",1
dten781,1698050492,1,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }",
dten781,1698050508,2,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
dten781,1698050511,3,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
dtie151,1697433841,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}
}",
dtie151,1697433843,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}
}",1
dtua408,1697603754,1,"void ConvertToBinary(int number)
{ 
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        
        int newNumber = number / 2;
        ConvertToBinary(newNumber);
        
        int LSD = number % 2;
        printf (""%d"", LSD);
    }
}",
dtua408,1697603758,2,"void ConvertToBinary(int number)
{ 
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        
        int newNumber = number / 2;
        ConvertToBinary(newNumber);
        
        int LSD = number % 2;
        printf (""%d"", LSD);
    }
}",1
dver839,1697963421,1,"void ConvertToBinary(int n) {
    // Base case
    if (n == 1) {
        printf(""1"");
    }
    else {
        // Recursive Case
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
dver839,1697963425,2,"void ConvertToBinary(int n) {
    // Base case
    if (n == 1) {
        printf(""1"");
    }
    else {
        // Recursive Case
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
dvu878,1698015735,1,"void ConvertToBinary(int n) {
	if (n == 1 ) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
dvu878,1698015737,2,"void ConvertToBinary(int n) {
	if (n == 1 ) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
dwu617,1697771300,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	} else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
dwu617,1697771303,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	} else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
dyu343,1697521363,1,"
void ConvertToBinary(int binary)
{
	int remainder = binary % 2; // remainder after division by two.

	if (binary / 2 != 0)
	{
		ConvertToBinary(binary / 2);
	}

	// as stack goes back down, the highest stack will run first, therefore this will print out the reverse order.
	printf(""%d"", remainder);
}
",
dyu343,1697521366,2,"
void ConvertToBinary(int binary)
{
	int remainder = binary % 2; // remainder after division by two.

	if (binary / 2 != 0)
	{
		ConvertToBinary(binary / 2);
	}

	// as stack goes back down, the highest stack will run first, therefore this will print out the reverse order.
	printf(""%d"", remainder);
}
",1
dzha497,1698110218,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        int x = n % 2;
        printf(""%d"", x);
        ConvertToBinary(n/2);
    }
}
",
dzha497,1698110658,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
dzha497,1698110661,3,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
ealg928,1698052016,1,"#include <stdio.h>

void ConvertToBinary(int inputInteger)
{
    if (n == 1)
    {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
ealg928,1698052044,2,"#include <stdio.h>

void ConvertToBinary(int inputInteger)
{
    if (inputInteger == 1)
    {
        printf(""1"");
    } else {
        ConvertToBinary(inputInteger / 2);
        printf(""%d"", inputInteger % 2);
    }
}",
ealg928,1698052186,3,"#include <stdio.h>

void ConvertToBinary(int inputInteger)
{
    if (inputInteger == 1)
    {
        printf(""1"");
    } else {
        ConvertToBinary(inputInteger / 2);
        printf(""%d"", inputInteger % 2);
    }
    if (inputInteger == 0)
    {
        printf(""0"");
    }
}",
ealg928,1698052188,4,"#include <stdio.h>

void ConvertToBinary(int inputInteger)
{
    if (inputInteger == 1)
    {
        printf(""1"");
    } else {
        ConvertToBinary(inputInteger / 2);
        printf(""%d"", inputInteger % 2);
    }
    if (inputInteger == 0)
    {
        printf(""0"");
    }
}",1
eara128,1697701435,1,"void ConvertToBinary(int num){

   // base case
    if (num == 1){
        printf(""1 "");
    }
    else {
        ConvertToBinary(num / 2 ); 
        printf(""%d "", (num % 2)); 
    }

}
",
eara128,1697701450,2,"void ConvertToBinary(int num){

   // base case
    if (num == 1){
        printf(""1"");
    }
    else {
        ConvertToBinary(num / 2 ); 
        printf(""%d"", (num % 2)); 
    }

}
",
eara128,1697701452,3,"void ConvertToBinary(int num){

   // base case
    if (num == 1){
        printf(""1"");
    }
    else {
        ConvertToBinary(num / 2 ); 
        printf(""%d"", (num % 2)); 
    }

}
",1
earn712,1697867377,1,"void ConvertToBinary(int num)
{
    
    if (num == 1){
        printf( ""%d"", num);
    }
    else {
        ConvertToBinary(num / 2);
         printf(""%d"", num % 2);
    }
   
}
",
earn712,1697867380,2,"void ConvertToBinary(int num)
{
    
    if (num == 1){
        printf( ""%d"", num);
    }
    else {
        ConvertToBinary(num / 2);
         printf(""%d"", num % 2);
    }
   
}
",1
ebar824,1697463934,1,"void ConvertToBinary(int number){
    
    if (number % 2 ==0)
    {
       ConvertToBinary(number/2);
       printf(""%d"",0);
    }
    else if (number == 1)
    {
        printf(""%d"",1);
    }
    else
    {
        
        ConvertToBinary(number/2);
        printf(""%d"",1);
    }
}",
ebar824,1697463936,2,"void ConvertToBinary(int number){
    
    if (number % 2 ==0)
    {
       ConvertToBinary(number/2);
       printf(""%d"",0);
    }
    else if (number == 1)
    {
        printf(""%d"",1);
    }
    else
    {
        
        ConvertToBinary(number/2);
        printf(""%d"",1);
    }
}",1
echa931,1698027269,1,"void ConvertToBinary(int n){
    if(n==1) {
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",
echa931,1698027271,2,"void ConvertToBinary(int n){
    if(n==1) {
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",1
eche101,1697888489,1,"void ConvertToBinary(int input) {
    if (input > 0) {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
eche101,1697888492,2,"void ConvertToBinary(int input) {
    if (input > 0) {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",1
eche101,1697889845,3,"void ConvertToBinary(int input) {
    if (input > 0) {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
eche101,1697890560,4,"void ConvertToBinary(int input) {
    if (input > 0) {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",1
eejl688,1698119969,1,"void ConvertToBinary(int n)
{
    // Base case
    if (n == 1) {
        printf(""1"");
    }
    // Recursive case
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
eejl688,1698120066,2,"void ConvertToBinary(int n)
{
    // Base case
    if (n == 1 || n == 0) {
        printf(""%d"", n);
    }
    // Recursive case
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
eejl688,1698120957,3,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }  
}",
eejl688,1698120959,4,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }  
}",1
eejl932,1698119543,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); 
    }
    printf(""%d"", n % 2);  
}
",
eejl932,1698120512,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); 
    }
    printf(""%d"", n % 2);  
}
",1
efra318,1697872456,1,"void ConvertToBinary(int n) {

	if (n == 1) {

		printf(""%d"", n);

	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n%2);	
	}
}",
efra318,1697872459,2,"void ConvertToBinary(int n) {

	if (n == 1) {

		printf(""%d"", n);

	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n%2);	
	}
}",1
egem265,1698049536,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
egem265,1698049539,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
egho902,1697446803,1,"#include <stdio.h>

void ConvertToBinary(int number)
{
    int i = 0;
    int Binary[32];
    
    if (number == 0)
    {
        printf(""0"");
        return;
    }
    else
    {
        while(number > 0)
    {
        Binary[i] = number % 2;
        number = number / 2;
        i++;
    }
    for (int j = i -1; j >= 0; j--)
    {
        printf(""%d"", Binary[j]);
    }
    
}

}",1
ehan360,1698143446,1,"#include <stdio.h>

void ConvertToBinary(int input) {

if (input < 0) {
input = -input;
}

if (input != 0) {
int division = input / 2;
int rem = input % 2;
ConvertToBinary(division);
printf(""%d"", rem);
}
}",
ehan360,1698143448,2,"#include <stdio.h>

void ConvertToBinary(int input) {

if (input < 0) {
input = -input;
}

if (input != 0) {
int division = input / 2;
int rem = input % 2;
ConvertToBinary(division);
printf(""%d"", rem);
}
}",1
ehua682,1698032344,1,"#include <stdio.h>

void ConvertToBinary(int num) {


    if (num == 0 || num == 1) {
        printf(""%d"", num);
        return;
    }

   
   
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}
",
ehua682,1698032346,2,"#include <stdio.h>

void ConvertToBinary(int num) {


    if (num == 0 || num == 1) {
        printf(""%d"", num);
        return;
    }

   
   
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}
",1
ejeo051,1697888937,1,"void ConvertToBinary(int n)
{
    int binary;
    
    if (n == 1) {
        printf(""1"");
        return;
    }
    
    ConvertToBinary(n/2);
    binary = n % 2;
    printf(""%d"", binary);
}
",
ejeo051,1697888938,2,"void ConvertToBinary(int n)
{
    int binary;
    
    if (n == 1) {
        printf(""1"");
        return;
    }
    
    ConvertToBinary(n/2);
    binary = n % 2;
    printf(""%d"", binary);
}
",1
ekmu195,1697450783,1,"void ConvertToBinary(int n)
{   
    int remainders;
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        remainders = n % 2;
        printf(""%d"", remainders);
    }
}",
ekmu195,1697450785,2,"void ConvertToBinary(int n)
{   
    int remainders;
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        remainders = n % 2;
        printf(""%d"", remainders);
    }
}",1
elau447,1697846113,1,"void ConvertToBinary(int n) {
	int result, remainder, temp;
	int a = 0;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	remainder = n % 2;
	temp = (temp * 10) + remainder;
	PrintReverse(temp);
}",
elau447,1697846127,2,"void ConvertToBinary(int n) {
	int result, remainder, temp;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	remainder = n % 2;
	temp = (temp * 10) + remainder;
	PrintReverse(temp);
}",
elau447,1697846238,3,"void PrintReverse(int n) {
	int temp;
	int a = 0;
	while (a == 0) {
		temp = n % 10;
		printf(""%d"",temp);
		if (n / 10 == 0) {
			a = 1;
		}
		n = n / 10;
		
	}
	

}

void ConvertToBinary(int n) {
	int result, remainder, temp;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	remainder = n % 2;
	temp = (temp * 10) + remainder;
	PrintReverse(temp);
}",
elau447,1697846268,4,"void PrintReverse(int n) {
	int temp;
	int a = 0;
	while (a == 0) {
		temp = n % 10;
		printf(""%d"",temp);
		if (n / 10 == 0) {
			a = 1;
		}
		n = n / 10;
		
	}
	

}

void ConvertToBinary(int n) {
	int result, remainder, temp;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	emainder = n % 2;
	temp = (temp * 10) + remainder;
	PrintReverse(temp);
}",
elau447,1697846278,5,"void PrintReverse(int n) {
	int temp;
	int a = 0;
	while (a == 0) {
		temp = n % 10;
		printf(""%d"",temp);
		if (n / 10 == 0) {
			a = 1;
		}
		n = n / 10;
		
	}
	

}

void ConvertToBinary(int n) {
	int result, remainder, temp;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	remainder = n % 2;
	temp = (temp * 10) + remainder;
	PrintReverse(temp);
}",
elau447,1697846426,6,"void ConvertToBinary(int n) {
	int result, remainder, temp;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	remainder = n % 2;
	temp = (temp * 10) + remainder;
	int print;
	int a = 0;
	while (a == 0) {
		print = temp % 10;
		printf(""%d"", print);
		if (temp / 10 == 0) {
			a = 1;
		}
		temp = temp / 10;

	}
}",
elau447,1697846428,7,"void ConvertToBinary(int n) {
	int result, remainder, temp;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	remainder = n % 2;
	temp = (temp * 10) + remainder;
	int print;
	int a = 0;
	while (a == 0) {
		print = temp % 10;
		printf(""%d"", print);
		if (temp / 10 == 0) {
			a = 1;
		}
		temp = temp / 10;

	}
}",0
elau447,1697846471,8,"void ConvertToBinary(int n) {
	int result, remainder, temp;
	while (n / 2 != 0) {
		result = n / 2;
		remainder = n % 2;
		temp = (temp*10) + remainder;
		n = result;

	}
	remainder = n % 2;
	temp = (temp * 10) + remainder;
	int print;
	int a = 0;
	while (a == 0) {
		print = temp % 10;
		printf(""%d"", print);
		if (temp / 10 == 0) {
			a = 1;
		}
		temp = temp / 10;

	}
}",
elau447,1697847001,9,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		printf(""%d"", n % 2);
		ConvertToBinary(n/2);

		}
	


}",
elau447,1697847236,10,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);

		}

}
",
elau447,1697847238,11,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);

		}

}
",1
eles952,1697861231,1,"void ConvertToBinary(int n) 
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",
eles952,1697861248,2,"void ConvertToBinary(int n) 
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
return;
}
",
eles952,1697861255,3,"void ConvertToBinary(int n) 
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
return;
}
",1
elia955,1698139016,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
elia955,1698139018,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
else264,1697965174,1,"void ConvertToBinary(int n){
    if (n==1){
        printf(""1"");
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",
else264,1697965178,2,"void ConvertToBinary(int n){
    if (n==1){
        printf(""1"");
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",1
ely207,1697437737,1,"void ConvertToBinary(int num)
{
	if (num == 1)
	{
		printf(""%d"", num);
	}
	else
	{
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",
ely207,1697437740,2,"void ConvertToBinary(int num)
{
	if (num == 1)
	{
		printf(""%d"", num);
	}
	else
	{
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",1
ema340,1697712135,1,"void ConvertToBinary(int num) 
{
    if (num > 0) {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",
ema340,1697712183,2,"void ConvertToBinary(int num) 
{
    if (num > 0) {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",1
emah834,1698138845,1,"void ConvertToBinary(int num){ 
    if(num == 0){
        return;
    }else {
        ConvertToBinary(num/2);
        printf(""%d"", num % 2);
    }
}",
emah834,1698138851,2,"void ConvertToBinary(int num){ 
    if(num == 0){
        return;
    }else {
        ConvertToBinary(num/2);
        printf(""%d"", num % 2);
    }
}",1
emah921,1697835376,1,"void ConvertToBinary(int n) 
{
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);
}",1
emar189,1698094736,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    } else if (n != 0) {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
emar189,1698094753,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    } else if (n != 0) {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
eqiu349,1697466470,1,"#include <stdio.h>

void ConvertToBinary(int integer) {
	if (integer > 0) {
		ConvertToBinary(integer / 2);
		printf(""%d"", integer % 2);
	}

}
",
eqiu349,1697466473,2,"#include <stdio.h>

void ConvertToBinary(int integer) {
	if (integer > 0) {
		ConvertToBinary(integer / 2);
		printf(""%d"", integer % 2);
	}

}
",1
esia821,1697969423,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
		
	}
	else if(n == 0) {
		printf(""0"");
	}
	else {
		ConvertToBinary(n / 2);
		int rem = n % 2;
		printf(""%d"", rem);
	}
}
",
esia821,1697969426,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
		
	}
	else if(n == 0) {
		printf(""0"");
	}
	else {
		ConvertToBinary(n / 2);
		int rem = n % 2;
		printf(""%d"", rem);
	}
}
",1
eteo952,1697937230,1,"void ConvertToBinary(int decimal)
{

    if (decimal > 0) {

        int x = decimal / 2;

        ConvertToBinary(x);

        int remainder = decimal % 2;

        printf(""%d"", remainder);

    }

    else {

        return;
    }



}",
eteo952,1697937233,2,"void ConvertToBinary(int decimal)
{

    if (decimal > 0) {

        int x = decimal / 2;

        ConvertToBinary(x);

        int remainder = decimal % 2;

        printf(""%d"", remainder);

    }

    else {

        return;
    }



}",1
etri556,1698111187,1,"# include <stdio.h>

void ConvertToBinary(int n){
    // Meant to take a integer and return the binary equivalent of the integer.

    int result;
    int remainder;
    
    result = n / 2;
    remainder = n % 2;

    if (result != 0){
        // Runs if the result of the division calculation didn't = 0.
        ConvertToBinary(result);
        printf(""%d"", remainder);
    }else{
        // Runs if the value being inputted is smaller then 2.
        printf(""%d"", remainder);
    }
}",
etri556,1698111190,2,"# include <stdio.h>

void ConvertToBinary(int n){
    // Meant to take a integer and return the binary equivalent of the integer.

    int result;
    int remainder;
    
    result = n / 2;
    remainder = n % 2;

    if (result != 0){
        // Runs if the result of the division calculation didn't = 0.
        ConvertToBinary(result);
        printf(""%d"", remainder);
    }else{
        // Runs if the value being inputted is smaller then 2.
        printf(""%d"", remainder);
    }
}",1
evic904,1698101118,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n) {
    // If n is 1, just print 1 - base case
    if (n == 1) {
        printf(""1"");
        return;
    }

    // Convert the half of the number to binary
    ConvertToBinary(n / 2);

    // Print the remainder at the end
    printf(""%d"", n % 2);
}",
evic904,1698101151,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n) {
    // If n is 1, just print 1 - base case
    if (n == 1) {
        printf(""1"");
        return;
    }

    // Convert the half of the number to binary
    ConvertToBinary(n / 2);

    // Print the remainder at the end
    printf(""%d"", n % 2);
}",1
ewil853,1697455086,1,"void ConvertToBinary (int number){
    int num;
    if(number != 0){
    num = number%2;
    ConvertToBinary(number/2);
    printf(""%d"",num);
    }

}",1
exu922,1697966034,1,"void ConvertToBinary(int n) {
    // Base case: if n is less than 2, print n (either 0 or 1).
    if (n < 2) {
        printf(""%d"", n);
        return;
    }

    // Recursive case:
    // 1. Recursive call with the number divided by 2.
    ConvertToBinary(n / 2);  // Using integer division by 2 to get the higher order bits.

    // 2. Print the last bit of the current number.
    printf(""%d"", n % 2);  // Using modulo by 2 to get the last bit (0 or 1).
}",
exu922,1697966037,2,"void ConvertToBinary(int n) {
    // Base case: if n is less than 2, print n (either 0 or 1).
    if (n < 2) {
        printf(""%d"", n);
        return;
    }

    // Recursive case:
    // 1. Recursive call with the number divided by 2.
    ConvertToBinary(n / 2);  // Using integer division by 2 to get the higher order bits.

    // 2. Print the last bit of the current number.
    printf(""%d"", n % 2);  // Using modulo by 2 to get the last bit (0 or 1).
}",1
eyeo346,1697878148,1,"void ConvertToBinary(int n) 
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        int result = n / 2;
        ConvertToBinary(result);
        int remain = n % 2;
        printf(""%d"", remain);
    }
}",
eyeo346,1697878150,2,"void ConvertToBinary(int n) 
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        int result = n / 2;
        ConvertToBinary(result);
        int remain = n % 2;
        printf(""%d"", remain);
    }
}",1
fcoo305,1697772005,1,"void ConvertToBinary(int number) 
{
    int rem = number % 2;
    int newNum = (number - rem) / 2;
    printf(""%d"", rem);
    if (newNum != 0) 
    {
        ConvertToBinary(newNum);
    }
    
    
    
    
}",
fcoo305,1697772882,2,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while (2^(i + 1) < number) { i++; }
        int digit = 2 ^ i;
        int remainder = number - digit;
        print(""%d"", 1);
        while(digit > remainder) {
            digit = digit / 2
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697772892,3,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while (2^(i + 1) < number) { i++; }
        int digit = 2 ^ i;
        int remainder = number - digit;
        print(""%d"", 1);
        while(digit > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697772912,4,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while ((2^(i + 1)) < number) { i++; }
        int digit = (2 ^ i);
        int remainder = number - digit;
        print(""%d"", 1);
        while(digit > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697772921,5,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while ((2^(i + 1)) < number) { i++; }
        int digit = (2 ^ i);
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773025,6,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while ((2^(i)) < number) { i++; }
        int digit = (2 ^ i);
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773120,7,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while ((2^(i)) < number) { i++; }
        int digit = (2 ^ (i + 1));
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773430,8,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while ((2^(i)) < number) { i++; }
        int digit = (2 ^ (i + 1));
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773449,9,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while ((2^(i)) < number) { i++; }
        int digit = (2 ^ (i));
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773467,10,"void ConvertToBinary(int number) 
{
    if (number > 0) {
        int i = 0;
        while ((2^(i + 1)) < number) { i++; }
        int digit = (2 ^ (i));
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773587,11,"void ConvertToBinary(int number) 
{
    if (number > 1) {
        int i = 0;
        while ((2^(i + 1)) < number) { i++; }
        int digit = (2 ^ (i));
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773682,12,"void ConvertToBinary(int number) 
{
    if (number > 1) {
        int i = 0;
        while ((2^(i - 1)) < number) { i++; }
        int digit = (2 ^ (i));
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697773700,13,"void ConvertToBinary(int number) 
{
    if (number > 1) {
        int i = 0;
        while ((2^(i + 1)) < number) { i++; }
        int digit = (2 ^ (i));
        int remainder = number - digit;
        printf(""%d"", 1);
        while(digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697774366,14,"void ConvertToBinary(int number) 
{
    int rem = number % 2
    print(""%d"", rem);
    if ((number - rem) / 2) > 0) {
        ConvertToBinary((number - rem) / 2);
    }
}",
fcoo305,1697774372,15,"void ConvertToBinary(int number) 
{
    int rem = number % 2;
    print(""%d"", rem);
    if ((number - rem) / 2) > 0) {
        ConvertToBinary((number - rem) / 2);
    }
}",
fcoo305,1697774378,16,"void ConvertToBinary(int number) 
{
    int rem = number % 2;
    printf(""%d"", rem);
    if ((number - rem) / 2) > 0) {
        ConvertToBinary((number - rem) / 2);
    }
}",
fcoo305,1697774405,17,"void ConvertToBinary(int number) 
{
    int rem = number % 2;
    printf(""%d"", rem);
    if (((number - rem) / 2) > 0) {
        ConvertToBinary((number - rem) / 2);
    }
}",
fcoo305,1697775313,18,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while ((2^(i + 1)) < number) { i++; }
    printf(""%d"", 1);
    int digit = 2^i;
    int remainder = number - digit;
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
    
}",
fcoo305,1697775358,19,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while ((2^(i + 1)) < number) { i++; }
    printf(""%d"", 1);
    int digit = 2^i;
    printf(""%d"", digit)
    int remainder = number - digit;
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
    
}",
fcoo305,1697775364,20,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while ((2^(i + 1)) < number) { i++; }
    printf(""%d"", 1);
    int digit = 2^i;
    printf(""%d"", digit);
    int remainder = number - digit;
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
    
}",
fcoo305,1697775403,21,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while ((2^(i + 1)) < number) { i++; }
    printf(""%d"", 1);
    int digit = 2^i;
    printf("" %d "", digit);
    int remainder = number - digit;
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
    
}",
fcoo305,1697775525,22,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) < number) { i++; }
    printf(""%d"", 1);
    int digit = pow(2, i);
    printf("" %d "", digit);
    int remainder = number - digit;
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
    
}",
fcoo305,1697775539,23,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) < number) { i++; }
    printf(""%d"", 1);
    int digit = pow(2, i);
    int remainder = number - digit;
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
    
}",
fcoo305,1697775541,24,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) < number) { i++; }
    printf(""%d"", 1);
    int digit = pow(2, i);
    int remainder = number - digit;
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
    
}",0
fcoo305,1697775812,25,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) <= number) { i++; }
    
    printf(""%d"", 1);
    
    int digit = pow(2, i);
    int remainder = number - digit;
    
    if (remainder > 0) {
        
        while (digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        
        ConvertToBinary(remainder);
    }
    
}",
fcoo305,1697775815,26,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) <= number) { i++; }
    
    printf(""%d"", 1);
    
    int digit = pow(2, i);
    int remainder = number - digit;
    
    if (remainder > 0) {
        
        while (digit / 2 > remainder) {
            digit = digit / 2;
            printf(""%d"", 0);
        }
        
        ConvertToBinary(remainder);
    }
    
}",0
fcoo305,1697775942,27,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) <= number) { i++; }
    
    printf(""%d"", 1);
    
    int digit = pow(2, i);
    int remainder = number - digit;
    
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
        if (remainder > 0) {
            ConvertToBinary(remainder);
        }
    }
    
}",
fcoo305,1697775962,28,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) <= number) { i++; }
    
    printf(""%d"", 1);
    
    int digit = pow(2, i);
    int remainder = number - digit;
    
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
        if (remainder > 0) {
            ConvertToBinary(remainder);
        }
    
    
}",
fcoo305,1697779321,29,"void ConvertToBinary(int number) 
{
    int i = 0;
    
    while (pow(2, i + 1) <= number) { i++; }
    
    printf(""%d"", 1);
    
    int digit = pow(2, i);
    int remainder = number - digit;
    
    while (digit / 2 > remainder) {
        digit = digit / 2;
        printf(""%d"", 0);
    }
    
    if (remainder > 0) {
        ConvertToBinary(remainder);
    }
}",
fcoo305,1697784956,30,"void ConvertToBinary(int number) 
{
    printf(""%d"", number % 2);
    if (number % 2 == 1) { number--; }
    if (number > 1) { ConvertToBinary(number / 2); }
    
}",
fcoo305,1697969049,31,"void ConvertToBinary(int number)
{
    int i = 0;
    while (pow(2, i + 1) < number) {
        i++;
    }

    printf(""%d"", 1);
    int power = pow(2, i);
    int remainder = number - power;

    while (remainder + 1 < power / 2) {
        printf(""%d"", 0);
        power = power / 2;
    }
    if (remainder > 0) { ConvertToBinary(remainder); }

}",
fcoo305,1697969451,32,"void ConvertToBinary(int number)
{
    int i = 0;
    while (pow(2, i + 1) < number) {
        i++;
    }

    printf(""%d"", 1);
    int power = pow(2, i);
    int remainder = number - power;

    while (remainder < power / 2) {
        printf(""%d"", 0);
        power = power / 2;
    }
    if (remainder > 0) { ConvertToBinary(remainder); }

}",
fcoo305,1697969821,33,"void ConvertToBinary(int number)
{
    int i = 0;
    while (pow(2, i + 1) <= number) {
        i++;
    }

    printf(""%d"", 1);
    int power = pow(2, i);
    int remainder = number - power;

    while (remainder < power / 2 && power > 1) {
        printf(""%d"", 0);
        power = power / 2;
    }
    if (remainder > 0) { ConvertToBinary(remainder); }

}",
fcoo305,1697973458,34,"void ConvertToBinary(int number)
{
    int i = 0;
    while (pow(2, i + 1) <= number) {
        i++;
    }

    printf(""%d"", 1);
    int power = pow(2, i);
    int remainder = number - power;

    while ((remainder < power / 2) && (power > 1)) {
        printf(""%d"", 0);
        power = power / 2;
    }

    if (remainder > 0) { ConvertToBinary(remainder); }
    
    printf(""Working"");
}",
fcoo305,1697973467,35,"void ConvertToBinary(int number)
{
    int i = 0;
    while (pow(2, i + 1) <= number) {
        i++;
    }

    printf(""%d"", 1);
    int power = pow(2, i);
    int remainder = number - power;

    while ((remainder < power / 2) && (power > 1)) {
        printf(""%d"", 0);
        power = power / 2;
    }

    if (remainder > 0) { ConvertToBinary(remainder); }
    
}",
fcoo305,1697973478,36,"void ConvertToBinary(int number)
{
    int i = 0;
    while (pow(2, i + 1) <= number) {
        i++;
    }

    printf(""%d"", 1);
    int power = pow(2, i);
    int remainder = number - power;

    while ((remainder < power / 2) && (power > 1)) {
        printf(""%d"", 0);
        power = power / 2;
    }

    if (remainder > 0) { ConvertToBinary(remainder); }
    
}",1
fesp714,1697572795,1,"void ConvertToBinary(int n) {
    // Base case: if n is 1, print 1
    if( n == 1) {
        printf(""%d"", n);
        return;
    }
    
    // Recursive case: Convert n / 2 to binary
    ConvertToBinary(n / 2);
    // Print n % 2
    printf(""%d"", n % 2);
}",
fesp714,1697572800,2,"void ConvertToBinary(int n) {
    // Base case: if n is 1, print 1
    if( n == 1) {
        printf(""%d"", n);
        return;
    }
    
    // Recursive case: Convert n / 2 to binary
    ConvertToBinary(n / 2);
    // Print n % 2
    printf(""%d"", n % 2);
}",1
fgor787,1698036824,1,"#include <stdio.h>

void ConvertToBinary(int integer) {
    // Find if the integer input is 1 or 0, and if so just print the value as is, because int to binary for these is makes no change
    // If confirmed ot 0 or 1 then use divide by 2 and remainder 2 to convert to 1's and zero's
    // Printf
    if (integer <= 1) {
        printf(""%d"", integer);
    } else {
        ConvertToBinary(integer / 2); 
        printf(""%d"", integer % 2);
    }
}",
fgor787,1698036826,2,"#include <stdio.h>

void ConvertToBinary(int integer) {
    // Find if the integer input is 1 or 0, and if so just print the value as is, because int to binary for these is makes no change
    // If confirmed ot 0 or 1 then use divide by 2 and remainder 2 to convert to 1's and zero's
    // Printf
    if (integer <= 1) {
        printf(""%d"", integer);
    } else {
        ConvertToBinary(integer / 2); 
        printf(""%d"", integer % 2);
    }
}",1
fkee774,1697882440,1,"void ConvertToBinary(int integer) {
    if (integer == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(integer / 2);
        printf(""%d"", integer % 2);
    }
}
",
fkee774,1697882452,2,"void ConvertToBinary(int integer) {
    if (integer == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(integer / 2);
        printf(""%d"", integer % 2);
    }
}
",1
fobr691,1698068184,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
fwij709,1697436350,1,"#include <stdio.h>

void ConvertToBinary(int decimal) 
{
    if (decimal == 1) {
        printf(""%d"", 1);
    } else {
        ConvertToBinary(decimal / 2);
        printf(""%d"", decimal % 2);
    }
}",
fwij709,1697436356,2,"#include <stdio.h>

void ConvertToBinary(int decimal) 
{
    if (decimal == 1) {
        printf(""%d"", 1);
    } else {
        ConvertToBinary(decimal / 2);
        printf(""%d"", decimal % 2);
    }
}",1
fwil727,1697781167,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: if n is 0 or 1
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    // Recursive call for n/2
    ConvertToBinary(n / 2);

    // Print the remainder when divided by 2 (either 0 or 1)
    printf(""%d"", n % 2);
}",
fwil727,1697781169,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: if n is 0 or 1
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    // Recursive call for n/2
    ConvertToBinary(n / 2);

    // Print the remainder when divided by 2 (either 0 or 1)
    printf(""%d"", n % 2);
}",1
fyan180,1698073653,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
fyan180,1698073658,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
gcha636,1698050089,1,"void ConvertToBinary(int n){

    int array[10000] = {0};
    int i = 0;

    if (n <= 1){
        printf(""%d"", n);
    } else {
        while (n > 0){
            array[i] = n % 2;
            n = n/2;
            i++;
        }
        for (i = i - 1; i > - 1; i--){
        printf(""%d"", array[i]);
        }
    }
}",
gcha636,1698050092,2,"void ConvertToBinary(int n){

    int array[10000] = {0};
    int i = 0;

    if (n <= 1){
        printf(""%d"", n);
    } else {
        while (n > 0){
            array[i] = n % 2;
            n = n/2;
            i++;
        }
        for (i = i - 1; i > - 1; i--){
        printf(""%d"", array[i]);
        }
    }
}",1
gcha636,1698053703,3,"void ConvertToBinary(int n){

    int array[10000] = {0};
    int i = 0;

    // base statement
    if (n <= 1){
        printf(""%d"", n);
    } else { // where the function calls its self in a way that nothing prints until the in
            // base statement is satisfied. feel like Einstein right now.
        ConvertToBinary((n / 2));
        printf(""%d"", n % 2);
    }
}",
gcha636,1698053719,4,"void ConvertToBinary(int n){


    // base statement
    if (n <= 1){
        printf(""%d"", n);
    } else { // where the function calls its self in a way that nothing prints until the in
            // base statement is satisfied. feel like Einstein right now.
        ConvertToBinary((n / 2));
        printf(""%d"", n % 2);
    }
}",
gcha636,1698053722,5,"void ConvertToBinary(int n){


    // base statement
    if (n <= 1){
        printf(""%d"", n);
    } else { // where the function calls its self in a way that nothing prints until the in
            // base statement is satisfied. feel like Einstein right now.
        ConvertToBinary((n / 2));
        printf(""%d"", n % 2);
    }
}",1
ggao363,1698053022,1,"void ConvertToBinary(int n){
    if(n <= 1){
        printf(""%d"", n);
    } else{
        printf(""%d"", n % 2);
        ConvertToBinary(n / 2);
    }
}",0
ggao363,1698053034,2,"void ConvertToBinary(int n){
    if(n <= 1){
        printf(""%d"", n);
    } else{
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}",1
gge561,1697761900,1,"void ConvertToBinary(int integer) {

	int i = integer;
	

	if (i == 1) {
		printf(""%d"", i);
	}
	else {
		ConvertToBinary(i/2);
		printf(""%d"", i % 2);
	}

}",
gge561,1697761902,2,"void ConvertToBinary(int integer) {

	int i = integer;
	

	if (i == 1) {
		printf(""%d"", i);
	}
	else {
		ConvertToBinary(i/2);
		printf(""%d"", i % 2);
	}

}",1
gmal045,1697624022,1,"void ConvertToBinary(int value)
{
    int y = value/2, n = value%2;
    if (value==1) {
        printf(""%d"", value);
    }
    else {
        ConvertToBinary(y);
        printf(""%d"", n);
    }
}",1
gmoh887,1697506237,1,"void ConvertToBinary(int x)
{
    if (x == 1) {
        printf(""%d"", 1);
    } else {
        ConvertToBinary(x / 2);
        printf(""%d"", x % 2);
    }
}",1
gpen695,1697943058,1,"void ConvertToBinary(int num) 
{
    // Base case: if number is zero or negative, just return without printing
    if (num <= 0) 
        return;

    // First, we recursively process all bits except the last one
    ConvertToBinary(num / 2);
    
    // Then, we print the least significant bit (either 0 or 1)
    printf(""%d"", num % 2);
}",
gpen695,1697943085,2,"void ConvertToBinary(int num) 
{
    if (num <= 0) 
        return;
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",1
gvan573,1698107159,1,"int ConvertToBinary(int integer)
{
	//decimal to binary (integer % 2) print result
	if (integer > 0) {

		int value = 0;
		value = integer % 2;      //find the remainder of the integer divided by 2
		printf(""%d"", value);      //print the remainder

		integer = integer / 2;        //find the integer divided by 2

		return ConvertToBinary(integer);

	}
	else {
		return 0;
	}

}
",
gvan573,1698107381,2,"//this funtion takes an integer as input and prints the binary equivalent
int ConvertToBinary(int integer)
{
	//decimal to binary (integer % 2) print result
	if (integer > 0) {

		int value = integer % 2;      //find the remainder of the integer divided by 2

		integer = integer / 2;        //find the integer divided by 2

		int binary = ConvertToBinary(integer);

		printf(""%d"", value);      //print the remainder

		return binary;

	}
	else {
		return 0;
	}

}
",
gvan573,1698107384,3,"//this funtion takes an integer as input and prints the binary equivalent
int ConvertToBinary(int integer)
{
	//decimal to binary (integer % 2) print result
	if (integer > 0) {

		int value = integer % 2;      //find the remainder of the integer divided by 2

		integer = integer / 2;        //find the integer divided by 2

		int binary = ConvertToBinary(integer);

		printf(""%d"", value);      //print the remainder

		return binary;

	}
	else {
		return 0;
	}

}
",1
gxu660,1697592963,1,"void ConvertToBinary(int num)
{
    if (num == 1 || num == 0) {
        printf(""%d"", num);
    } else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
gxu660,1697592965,2,"void ConvertToBinary(int num)
{
    if (num == 1 || num == 0) {
        printf(""%d"", num);
    } else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
gzho986,1697801468,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",
gzho986,1697801473,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",1
hama210,1697444149,1,"void ConvertToBinary(int value) 
{
  if (value > 1) {
    ConvertToBinary(value / 2); 
  } 
  printf(""%d"", value % 2); 
}",
hama210,1697444152,2,"void ConvertToBinary(int value) 
{
  if (value > 1) {
    ConvertToBinary(value / 2); 
  } 
  printf(""%d"", value % 2); 
}",1
haus879,1697522775,1,"void ConvertToBinary(int n)
{
    int last;
    if (n == 0) {
        return;
    }
    last = n % 2;
    ConvertToBinary(n / 2);
    printf(""%d"", last);

}",1
hbas168,1697937746,1,"void ConvertToBinary(int digit) {

	if (digit == 0) return;

	ConvertToBinary(digit / 2);

	int binary = digit % 2;
	printf(""%d"", binary);
}",
hbas168,1697937747,2,"void ConvertToBinary(int digit) {

	if (digit == 0) return;

	ConvertToBinary(digit / 2);

	int binary = digit % 2;
	printf(""%d"", binary);
}",1
hber510,1697521270,1,"void ConvertToBinary(int decimal)
     {
          if (decimal == 1) {
               printf(""1"");
          } else {
              ConvertToBinary(decimal/2);
               printf(""%d"", (decimal%2));
          }
}",
hber510,1697521275,2,"void ConvertToBinary(int decimal)
     {
          if (decimal == 1) {
               printf(""1"");
          } else {
              ConvertToBinary(decimal/2);
               printf(""%d"", (decimal%2));
          }
}",1
hbhe454,1698121586,1,"void ConvertToBinary (int x)
{
    if (x>1){
        ConvertToBinary(x/2);
        
    }
    printf(""%i"",n%2);
}",
hbhe454,1698121592,2,"void ConvertToBinary (int x)
{
    if (x>1){
        ConvertToBinary(x/2);
        
    }
    printf(""%i"",x%2);
}",
hbhe454,1698121594,3,"void ConvertToBinary (int x)
{
    if (x>1){
        ConvertToBinary(x/2);
        
    }
    printf(""%i"",x%2);
}",1
hbou314,1697770490,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
hbou314,1697770494,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
hcha410,1698025679,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    
    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);
}",
hcha410,1698025683,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    
    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);
}",1
hche410,1698138380,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}



",
hche410,1698138381,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}



",1
hche864,1697507115,1,"void ConvertToBinary(int number)
{
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",
hche864,1697507118,2,"void ConvertToBinary(int number)
{
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",1
hcop563,1697675392,1,"void ConvertToBinary(int num) {

	if (num == 1) {
		printf(""%d"", 1);
	} else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",
hcop563,1697675395,2,"void ConvertToBinary(int num) {

	if (num == 1) {
		printf(""%d"", 1);
	} else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",1
hcro730,1697526111,1,"void ConvertToBinary(int decimal)
{
	if (decimal != 0) {
		ConvertToBinary(decimal / 2);
		printf(""%i"", decimal % 2);
	}
}",
hcro730,1697526113,2,"void ConvertToBinary(int decimal)
{
	if (decimal != 0) {
		ConvertToBinary(decimal / 2);
		printf(""%i"", decimal % 2);
	}
}",1
hgao080,1697437875,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
hgao080,1697437877,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
hgou636,1697895883,1,"#include <stdio.h>

void ConvertToBinary(int Value) {
    if (Value == 0) {
        return;
    } else {
        int NewValue = Value / 2;  
        ConvertToBinary(NewValue);  
        printf(""%d"", Value % 2);   
    }
}",
hgou636,1697895887,2,"#include <stdio.h>

void ConvertToBinary(int Value) {
    if (Value == 0) {
        return;
    } else {
        int NewValue = Value / 2;  
        ConvertToBinary(NewValue);  
        printf(""%d"", Value % 2);   
    }
}",1
hhil451,1698139254,1,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	printf(""%d"", input % 2);

	if ((input > 1) )
	{
		ConvertToBinary(input / 2);
	}
	
		
	
	
}",
hhil451,1698139405,2,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	

	if ((input > 1) )
	{
		ConvertToBinary(input / 2);
	}
	
		
	
	printf(""%d"",input % 2);
}",
hhil451,1698139439,3,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	

	if ((input >= 2) )
	{
		ConvertToBinary(input / 2);
	}
	
		
	
	printf(""%d"",input % 2);
}",
hhil451,1698139471,4,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	

	if ((input >= 2) )
	{
		ConvertToBinary(input/2);
	}
	
		
	
	printf(""%d"",input%2);
}",
hhil451,1698139544,5,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	

	if ((input >= 2) )
	{
	    printf(""%d"",input%2);
		ConvertToBinary(input/2);
	}
	
		
	
	
}",
hhil451,1698139556,6,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	printf(""%d"",input%2);

	if ((input >= 2) )
	{
	    
		ConvertToBinary(input/2);
	}
	
		
	
	
}",
hhil451,1698139568,7,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	

	if ((input >= 2) )
	{
	    
		ConvertToBinary(input/2);
	}
	
		
	printf(""%d"",input%2);
	
}",
hhil451,1698139571,8,"#include <stdlib.h>

void ConvertToBinary(int input)
{
	

	if ((input >= 2) )
	{
	    
		ConvertToBinary(input/2);
	}
	
		
	printf(""%d"",input%2);
	
}",1
hkah523,1698043130,1,"#include <stdio.h>
/*author:Harshdeep Kahlon*/

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}

",
hkah523,1698043135,2,"#include <stdio.h>
/*author:Harshdeep Kahlon*/

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}

",1
hkee941,1698137214,1,"void ConvertToBinary(int n) {
    if (n == 0) { //base cse
        return;
    }

    ConvertToBinary(n/2);
    printf(""%d"", n%2);
}",
hkee941,1698137218,2,"void ConvertToBinary(int n) {
    if (n == 0) { //base cse
        return;
    }

    ConvertToBinary(n/2);
    printf(""%d"", n%2);
}",1
hkim807,1697692278,1,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", (n % 2));
    }


}",
hkim807,1697692280,2,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", (n % 2));
    }


}",1
hkon883,1698143407,1,"void convertToBinary(int x) {  
    if(x > 1) {  
        convertToBinary(x / 2);  
    }  
    printf(""%d"", x % 2);  
}",0
hkon883,1698143422,2,"void ConvertToBinary(int x) {  
    if(x > 1) {  
        convertToBinary(x / 2);  
    }  
    printf(""%d"", x % 2);  
}",0
hkon883,1698143494,3,"void ConvertToBinary(int x) {  
    if(x > 1) {  
        ConvertToBinary(x / 2);  
    }  
    printf(""%d"", x % 2);  
}",1
hlee999,1697870786,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
hlee999,1697870793,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
hleu459,1698025547,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
hliu836,1697720952,1,"void ConvertToBinary(int n)
{
    int divide;
    int remain;
    
    if (n== 1){
        printf(""%d"",n);
    }else if (n==0){
        printf(""%d"",0);
    }else {
        remain = n%2;
        divide= n/2;
        ConvertToBinary(divide);
        printf(""%d"",remain);
    }
}",
hliu836,1697720955,2,"void ConvertToBinary(int n)
{
    int divide;
    int remain;
    
    if (n== 1){
        printf(""%d"",n);
    }else if (n==0){
        printf(""%d"",0);
    }else {
        remain = n%2;
        divide= n/2;
        ConvertToBinary(divide);
        printf(""%d"",remain);
    }
}",1
hly852,1697856308,1,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",
hly852,1697856311,2,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",1
hma481,1697791966,1,"void ConvertToBinary(int num) {
	if (num == 1) {
		printf(""1"");
		return;
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}
",
hma481,1697791968,2,"void ConvertToBinary(int num) {
	if (num == 1) {
		printf(""1"");
		return;
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}
",1
hmcm582,1697491668,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
hmel649,1697615995,1,"void ConvertToBinary(int input) {
    int division, remain;
    if (input > 1) {
        division = input/2;
        ConvertToBinary(division);
    }
    remain = input % 2;
    printf(""%d"", remain);
}",
hmel649,1697615998,2,"void ConvertToBinary(int input) {
    int division, remain;
    if (input > 1) {
        division = input/2;
        ConvertToBinary(division);
    }
    remain = input % 2;
    printf(""%d"", remain);
}",1
hmof971,1697664050,1,"void ConvertToBinary(int number) {
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
	ConvertToBinary(number / 2);
		printf(""%d"", (number % 2));
	}

}",
hmof971,1697664055,2,"void ConvertToBinary(int number) {
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
	ConvertToBinary(number / 2);
		printf(""%d"", (number % 2));
	}

}",1
hnew638,1697445431,1,"void ConvertToBinary(int number)
{
    if (number / 2 == 0)
    {
        printf(""%d"", number);
    }
    else
    {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);

    }
    
}
",
hnew638,1697445433,2,"void ConvertToBinary(int number)
{
    if (number / 2 == 0)
    {
        printf(""%d"", number);
    }
    else
    {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);

    }
    
}
",1
hpan363,1698133102,1,"void ConvertToBinary(int i) 
{
    if (i > 0) 
    {
        ConvertToBinary(i / 2);
    }
    return(i % 2);
}",
hpan363,1698133124,2,"void ConvertToBinary(int i) 
{
    if (i > 0) 
    {
        ConvertToBinary(i / 2);
    }
    printf(""&d""i % 2);
}",
hpan363,1698133128,3,"void ConvertToBinary(int i) 
{
    if (i > 0) 
    {
        ConvertToBinary(i / 2);
    }
    printf(""&d"",i % 2);
}",
hpan363,1698133160,4,"void ConvertToBinary(int i) 
{
    if (i > 0) 
    {
        ConvertToBinary(i / 2);
    }
    printf(""%d"",i % 2);
}",
hpan363,1698133187,5,"void ConvertToBinary(int i) 
{
    if (i > 0) 
    {
        ConvertToBinary(i / 2);
    }
    printf(""%d"",i % 2);
}",1
hpat916,1697438134,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
hpir641,1697515741,1,"void ConvertToBinary(int input) {
	if (input > 0) {
		ConvertToBinary(input / 2);
		printf(""%i"", (input % 2));
	}
}",1
hrob997,1697951030,1,"void ConvertToBinary(int n)
{
	if (n == 0) {
		printf(""%d"", 0);
	}
	else if (n == 1) {
		printf(""%d"", 1);
	}

	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}

}",
hrob997,1697951032,2,"void ConvertToBinary(int n)
{
	if (n == 0) {
		printf(""%d"", 0);
	}
	else if (n == 1) {
		printf(""%d"", 1);
	}

	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}

}",1
hsan267,1697698801,1,"void ConvertToBinary(int number)
{
    int newnumber;
    
    if (number == 1) {
        printf(""%d"", number);
    }
    else {
        
        newnumber = number/2;
        ConvertToBinary(newnumber);
        printf(""%d"", (number%2));
    }
}",
hsan267,1697698804,2,"void ConvertToBinary(int number)
{
    int newnumber;
    
    if (number == 1) {
        printf(""%d"", number);
    }
    else {
        
        newnumber = number/2;
        ConvertToBinary(newnumber);
        printf(""%d"", (number%2));
    }
}",1
hson435,1698056756,1,"int ConvertToBinary(int integer) {
    if (integer > 1) {
        ConvertToBinary(integer / 2);
    }
    printf(""%d"", integer % 2);
}",
hson435,1698056764,2,"void ConvertToBinary(int integer) {
    if (integer > 1) {
        ConvertToBinary(integer / 2);
    }
    printf(""%d"", integer % 2);
}",
hson435,1698056767,3,"void ConvertToBinary(int integer) {
    if (integer > 1) {
        ConvertToBinary(integer / 2);
    }
    printf(""%d"", integer % 2);
}",1
htew916,1698060818,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);  // Recursive call with integer division
        printf(""%d"", num % 2);     // Print the remainder (binary digit)
    }
}",
htew916,1698061197,2,"#include <stdio.h>

// The function, ConvertToBinary takes an integer as an input and prints the binary equivalent of this input value.

// Define the function, ConvertToBinary.
void ConvertToBinary(int numbers)
{
     if (num <= 0) {
        return; 
    }
    ConvertToBinary(num >> 1);  
    printf(""%d"", num & 1); 
}",
htew916,1698061242,3,"#include <stdio.h>

// The function, ConvertToBinary takes an integer as an input and prints the binary equivalent of this input value.

// Define the function, ConvertToBinary.
void ConvertToBinary(int numbers)
{
     if (numbers <= 0) {
        return; 
    }
    ConvertToBinary(numbers >> 1);  
    printf(""%d"", numbers & 1); 
}",
htew916,1698061278,4,"#include <stdio.h>

// The function, ConvertToBinary takes an integer as an input and prints the binary equivalent of this input value.
// Author: Harmony Te Waaka.

// Define the function, ConvertToBinary.
void ConvertToBinary(int numbers)
{
     if (numbers <= 0) {
        return; 
    }
    ConvertToBinary(numbers >> 1);  
    printf(""%d"", numbers & 1); 
}",
htew916,1698061301,5,"#include <stdio.h>

// The function, ConvertToBinary takes an integer as an input and prints the binary equivalent of this input value.
// Author: Harmony Te Waaka.

// Define the function, ConvertToBinary.
void ConvertToBinary(int numbers)
{
     if (numbers <= 0) {
        return; 
    }
    ConvertToBinary(numbers >> 1);  
    printf(""%d"", numbers & 1); 
}",1
htho943,1697418904,1,"#include <stdio.h>
void ConvertToBinary(int baseten) {
    if (baseten <= 0)
        return;
    
    ConvertToBinary(baseten / 2);
    printf(""%d"", baseten % 2);
}",
htho943,1697420012,2,"#include <stdio.h>
void ConvertToBinary(int baseten) {
    if (baseten <= 0)
        return;
    baseten=baseten/2;
    ConvertToBinary(baseten);
    printf(""%d"", baseten % 2);
}",
htho943,1697420029,3,"#include <stdio.h>
void ConvertToBinary(int baseten) {
    if (baseten <= 0)
        return;
    ConvertToBinary(baseten/2);
    printf(""%d"", baseten % 2);
}",
htho943,1697420071,4,"#include <stdio.h>
void ConvertToBinary(int baseten) {
    if (baseten <= 0)
        return;
    ConvertToBinary(baseten/2);
    printf(""%d"", baseten % 2);
}",1
htho943,1697421277,5,"#include <stdio.h>
void ConvertToBinary(int baseten) {
    if (baseten==1)
    {
        printf(""%d"", baseten)
    }
    ConvertToBinary(baseten/2);
    printf(""%d"", baseten % 2);
}",
htho943,1697421285,6,"#include <stdio.h>
void ConvertToBinary(int baseten) {
    if (baseten==1)
    {
        printf(""%d"", baseten);
    }
    ConvertToBinary(baseten/2);
    printf(""%d"", baseten % 2);
}",
htyl682,1698141407,1,"#include <stdio.h>
#include <math.h>

int ConvertToBinary(int input){
    int size = floor(log10(abs(input))) + 1;
    int prev=input;
    int i=1;
    int rem=0;
    int printable[100]={};
    while(i<input/2){
        printf(""%d "",i);
        i=i*2;
        rem++;
    }
    for(int j=0;j<rem+2;j++){
        printf(""i=%d,prev=%d,prev-i=%d \n"",i,prev,prev-i);
        if(prev-i>=0){
            prev=prev-i;
            printable[j]=1;
        }
        i=i/2;
    }
    
    for(i==0;i<rem+1;i++){
        printf(""%d"",printable[i]);
    }
}

int ",
htyl682,1698141447,2,"#include <stdio.h>
#include <math.h>

void ConvertToBinary(int input){
    int prev=input;
    int i=1;
    int rem=0;
    int printable[100]={};
    while(i<input/2){
        printf(""%d "",i);
        i=i*2;
        rem++;
    }
    for(int j=0;j<rem+2;j++){
        printf(""i=%d,prev=%d,prev-i=%d \n"",i,prev,prev-i);
        if(prev-i>=0){
            prev=prev-i;
            printable[j]=1;
        }
        i=i/2;
    }
    
    for(i=0;i<rem+1;i++){
        printf(""%d"",printable[i]);
    }
}",
htyl682,1698141460,3,"#include <stdio.h>
#include <math.h>

#include <stdio.h>
#include <math.h>

void ConvertToBinary(int input){
    int prev=input;
    int i=1;
    int rem=0;
    int printable[100]={};
    while(i<input/2){
        i=i*2;
        rem++;
    }
    for(int j=0;j<rem+2;j++){
        if(prev-i>=0){
            prev=prev-i;
            printable[j]=1;
        }
        i=i/2;
    }
    
    for(i=0;i<rem+1;i++){
        printf(""%d"",printable[i]);
    }
}
",
htyl682,1698141462,4,"#include <stdio.h>
#include <math.h>

#include <stdio.h>
#include <math.h>

void ConvertToBinary(int input){
    int prev=input;
    int i=1;
    int rem=0;
    int printable[100]={};
    while(i<input/2){
        i=i*2;
        rem++;
    }
    for(int j=0;j<rem+2;j++){
        if(prev-i>=0){
            prev=prev-i;
            printable[j]=1;
        }
        i=i/2;
    }
    
    for(i=0;i<rem+1;i++){
        printf(""%d"",printable[i]);
    }
}
",0
htyl682,1698141498,5,"#include <stdio.h>
#include <math.h>

void ConvertToBinary(int input){
    int prev=input;
    int i=1;
    int rem=0;
    int printable[100]={};
    while(i<(input/2+1)){
        i=i*2;
        rem++;
    }
    for(int j=0;j<rem+2;j++){
        if(prev-i>=0){
            prev=prev-i;
            printable[j]=1;
        }
        i=i/2;
    }
    
    for(i=0;i<rem+1;i++){
        printf(""%d"",printable[i]);
    }
}",
htyl682,1698141499,6,"#include <stdio.h>
#include <math.h>

void ConvertToBinary(int input){
    int prev=input;
    int i=1;
    int rem=0;
    int printable[100]={};
    while(i<(input/2+1)){
        i=i*2;
        rem++;
    }
    for(int j=0;j<rem+2;j++){
        if(prev-i>=0){
            prev=prev-i;
            printable[j]=1;
        }
        i=i/2;
    }
    
    for(i=0;i<rem+1;i++){
        printf(""%d"",printable[i]);
    }
}",1
hugn924,1698061202,1,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", 1);
    }
    else{
        int binary = n % 2;
        printf(""%d"", binary);
        ConvertToBinary(n/2);
    }
}",0
hugn924,1698061252,2,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", 1);
    }
    else{
        ConvertToBinary(n/2);
        int binary = n % 2;
        printf(""%d"", binary);
    }
}",
hugn924,1698061255,3,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", 1);
    }
    else{
        ConvertToBinary(n/2);
        int binary = n % 2;
        printf(""%d"", binary);
    }
}",1
hwen116,1697428809,1,"void ConvertToBinary(int n){

    if (n==1){//This is the base case because if n result = 1 then remainder = 1.
        printf(""1"");
    }else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
        //Printf needs to be after the recursion to print backwards. 
    }

}",
hwen116,1697428813,2,"void ConvertToBinary(int n){

    if (n==1){//This is the base case because if n result = 1 then remainder = 1.
        printf(""1"");
    }else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
        //Printf needs to be after the recursion to print backwards. 
    }

}",1
hwin877,1697679072,1,"void ConvertToBinary(int num)
{
	int temp_num = num % 2;
	num = num / 2;
	if (num == 0)
	{
		printf(""%d"", temp_num);
		return;
	}
	ConvertToBinary(num);
	printf(""%d"", temp_num);
}",
hwin877,1697679074,2,"void ConvertToBinary(int num)
{
	int temp_num = num % 2;
	num = num / 2;
	if (num == 0)
	{
		printf(""%d"", temp_num);
		return;
	}
	ConvertToBinary(num);
	printf(""%d"", temp_num);
}",1
hyan713,1697667887,1,"#include <stdio.h>
#include <string.h>

void ConvertToBinary(int number)
{
    int a, b;
    int count = 0;
    int arr[1000];
    
    while (number != 0)
    {
        a = number/2;
        
        if (a*2 != number) {
            arr[count] = 1;
        } else {
            arr[count] = 0;
        }
        
        number = a;
        count++;
        
    }
    
    for (int i = 0; i<count; i++) {
        printf(""%d"", arr[count-i-1]);
    }
}",
hyan713,1697667900,2,"#include <stdio.h>
#include <string.h>

void ConvertToBinary(int number)
{
    int a;
    int count = 0;
    int arr[1000];
    
    while (number != 0)
    {
        a = number/2;
        
        if (a*2 != number) {
            arr[count] = 1;
        } else {
            arr[count] = 0;
        }
        
        number = a;
        count++;
        
    }
    
    for (int i = 0; i<count; i++) {
        printf(""%d"", arr[count-i-1]);
    }
}",
hyan713,1697667909,3,"#include <stdio.h>


void ConvertToBinary(int number)
{
    int a;
    int count = 0;
    int arr[1000];
    
    while (number != 0)
    {
        a = number/2;
        
        if (a*2 != number) {
            arr[count] = 1;
        } else {
            arr[count] = 0;
        }
        
        number = a;
        count++;
        
    }
    
    for (int i = 0; i<count; i++) {
        printf(""%d"", arr[count-i-1]);
    }
}",
hyan713,1697667928,4,"#include <stdio.h>

void ConvertToBinary(int number)
{
    int a;
    int count = 0;
    int arr[1000];
    
    while (number != 0)
    {
        a = number/2;
        
        if (a*2 != number) {
            arr[count] = 1;
        } else {
            arr[count] = 0;
        }
        
        number = a;
        count++;
        
    }
    
    for (int i = 0; i<count; i++) {
        printf(""%d"", arr[count-i-1]);
    }
}",1
hye071,1697559936,1,"/******************************************************************************

Lab 12 question 2

*******************************************************************************/
#include <stdio.h>

void ConvertToBinary(int x ) {
    
    if (x>0) {
        printf(""%d"", x % 2) ;
    }
    
    
}",
hye071,1697560034,2,"/******************************************************************************

Lab 12 question 2

*******************************************************************************/
#include <stdio.h>

void ConvertToBinary(int x ) {
    
    if (x>0) {
        ConvertToBinary(x/2);
   
    }
    
    printf(""%d"", x % 2) ;
    
    
}",
hye071,1697560358,3,"/******************************************************************************

Lab 12 question 2

*******************************************************************************/
#include <stdio.h>

void ConvertToBinary(int x ) {
     printf(""%d"", x % 2) ;
     
     if (x/2 > 0) {
         ConvertToBinary(x/2);
     }
    
    
}",
hye071,1697560444,4,"/******************************************************************************

Lab 12 question 2

*******************************************************************************/
#include <stdio.h>

void ConvertToBinary(int x ) {
     
     if (x / 2 > 0) {
         ConvertToBinary(x / 2);
     }
     
     printf(""%d"", x % 2) ;
    
    
}",
hye071,1697560466,5,"/******************************************************************************

Lab 12 question 2

*******************************************************************************/
#include <stdio.h>

void ConvertToBinary(int x ) {
     
     if (x / 2 > 0) {
         ConvertToBinary(x / 2);
     }
     
     printf(""%d"", x % 2) ;
    
    
}",1
ibha186,1697868622,1,"void ConvertToBinary(int value) {
    if (value == 0 || value == 1) {
        
        printf(""%d"", value);
        
    } else {
        
        ConvertToBinary(value / 2);
        printf(""%d"",value % 2);
        
    }
}",
ibha186,1697868624,2,"void ConvertToBinary(int value) {
    if (value == 0 || value == 1) {
        
        printf(""%d"", value);
        
    } else {
        
        ConvertToBinary(value / 2);
        printf(""%d"",value % 2);
        
    }
}",1
ibur427,1697932937,1,"void ConvertToBinary(int num)
{
int store[10];
int it = 0;

while (num > 0) {
	store[it] = num%2;
	num = num/2;
	it++;
}

for (int a = it-1; a >= 0; a--){
	printf(""%d"",store[a]); 
}

}",
ibur427,1697932966,2,"void ConvertToBinary(int num)
{
int store[10];
int it = 0;

while (num > 0) {
	store[it] = num%2;
	num = num/2;
	it++;
}

for (int a = it-1; a >= 0; a--){
	printf(""%d"",store[a]); 
}

}",0
ibur427,1697934535,3,"void ConvertToBinary(int num)
{
int store[10];
int it = 0;
int b,c;

while (num > 0) {
	b = num;
	store[it] = num%2; // is fucking up
	num = b/2; // not problem
	it++;
}

for (int a = it-1; a >= 0; a--){
	printf(""%d"",store[a]); 
}

}",
ibur427,1697934601,4,"void ConvertToBinary(int num)
{
int store[10];
int it = 0;
int b;

while (num > 0) {
	b = num;
	store[it] = num%2; // is fucking up
	num = b/2; // not problem
	it++;
}

for (int a = it-1; a >= 0; a--){
	printf(""%d"",store[a]); 
}

}",
ibur427,1697934603,5,"void ConvertToBinary(int num)
{
int store[10];
int it = 0;
int b;

while (num > 0) {
	b = num;
	store[it] = num%2; // is fucking up
	num = b/2; // not problem
	it++;
}

for (int a = it-1; a >= 0; a--){
	printf(""%d"",store[a]); 
}

}",0
ibur427,1697970456,6,"void ConvertToBinary(int num)
{
int it = 0;
int b;
int c = num;

while (c > 0) {
	c = c/2; // not problem
	it++;
}

int* store = malloc(sizeof(int) * it);

for (int a = 0; a < it; a++){
	b = num;
	store[a] = num%2; // is fucking up
	//printf(""%d\n"",num%2);
	num = b/2; // not problem
}

for (int a = it-1; a >= 0; a--){
	//printf(""%d\n"",a);
	printf(""%d"",store[a]); 
}

}",
ibur427,1697970460,7,"void ConvertToBinary(int num)
{
int it = 0;
int b;
int c = num;

while (c > 0) {
	c = c/2; // not problem
	it++;
}

int* store = malloc(sizeof(int) * it);

for (int a = 0; a < it; a++){
	b = num;
	store[a] = num%2; // is fucking up
	//printf(""%d\n"",num%2);
	num = b/2; // not problem
}

for (int a = it-1; a >= 0; a--){
	//printf(""%d\n"",a);
	printf(""%d"",store[a]); 
}

}",1
iche428,1697926317,1,"void ConvertToBinary(int number)
{
    if (number==1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(number/2);
        printf(""%d"", number%2);
    }
}",
iche428,1697926321,2,"void ConvertToBinary(int number)
{
    if (number==1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(number/2);
        printf(""%d"", number%2);
    }
}",1
ihoo440,1697973785,1,"void ConvertToBinary(int number)
{

    int Print;
    int Re;
    
    if(number == 1)
    {
        printf(""%d"", number);
    }else
    {
        
        Re = (number / 2);
        ConvertToBinary(Re);

        Print = (number % 2);
        printf(""%d"", (Print));

    
    }
}",
ihoo440,1697973788,2,"void ConvertToBinary(int number)
{

    int Print;
    int Re;
    
    if(number == 1)
    {
        printf(""%d"", number);
    }else
    {
        
        Re = (number / 2);
        ConvertToBinary(Re);

        Print = (number % 2);
        printf(""%d"", (Print));

    
    }
}",1
ikis164,1698021672,1,"#include <stdio.h>
#include <math.h>

void ConvertToBinary(int integer) {

    if (integer > 0) {
    ConvertToBinary(integer / 2);
    printf(""%d"", integer % 2);
    }
}",
ikis164,1698021674,2,"#include <stdio.h>
#include <math.h>

void ConvertToBinary(int integer) {

    if (integer > 0) {
    ConvertToBinary(integer / 2);
    printf(""%d"", integer % 2);
    }
}",1
ikis164,1698028984,3,"#include <stdio.h>
#include <math.h>

void ConvertToBinary(int integer) {

    if (integer == 1) {
        printf(""%d"", 1);
    }

    else if (integer > 0) {
        ConvertToBinary(integer / 2);
        printf(""%d"", integer % 2);
    }
}",
ikis164,1698028986,4,"#include <stdio.h>
#include <math.h>

void ConvertToBinary(int integer) {

    if (integer == 1) {
        printf(""%d"", 1);
    }

    else if (integer > 0) {
        ConvertToBinary(integer / 2);
        printf(""%d"", integer % 2);
    }
}",1
iko203,1698034044,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n%2);
    }
}",
iko203,1698034047,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n%2);
    }
}",1
ilee973,1697930662,1,"void ConvertToBinary(int n)
{
    if(n == 0){
       return;
    }
     ConvertToBinary(n/2);
     
    printf(""%d"", n%2);
}
",1
imac384,1698027921,1,"void ConvertToBinary(int number) {
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		int nextnum = number / 2;
		int remainder = number % 2;
		ConvertToBinary(nextnum);
		PrintReverse(remainder);
	}
}",
imac384,1698027945,2,"void PrintReverse(int number) {

	if (number < 10) {
		printf(""%d"", number);
		return;
	}

	int lastdigit = number % 10;
	printf(""%d"", lastdigit);

	int array = number / 10;
	PrintReverse(array);
}

void ConvertToBinary(int number) {
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		int nextnum = number / 2;
		int remainder = number % 2;
		ConvertToBinary(nextnum);
		PrintReverse(remainder);
	}
}",
imac384,1698028034,3,"void PrintReverse(int number) {

	if (number < 10) {
		printf(""%d"", number);
		return;
	}

	int lastdigit = number % 10;
	printf(""%d"", lastdigit);

	int array = number / 10;
	PrintReverse(array);
}

void ConvertToBinary(int number) {
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		int nextnum = number / 2;
		int remainder = number % 2;
		ConvertToBinary(nextnum);
		PrintReverse(remainder);
	}
}",1
imoh000,1697933005,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    // Scenario 1: if the number is less than 2 (as binary is base2)
    if (num < 2) {
        printf(""%d"", num);
        return;
    }
    //Secnario 2: Recursive case: call the ConvertToBinary function on the quotient (Q) of the number divided by 2, then print the remainder
    else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}
",
imoh000,1697933011,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    // Scenario 1: if the number is less than 2 (as binary is base2)
    if (num < 2) {
        printf(""%d"", num);
        return;
    }
    //Secnario 2: Recursive case: call the ConvertToBinary function on the quotient (Q) of the number divided by 2, then print the remainder
    else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}
",1
iwes050,1697426138,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    //Base case
    if (n==1) {
        printf(""%d"", n);
        return;
    }

//Recursive case

int number_to_convert = n / 2;
ConvertToBinary(number_to_convert);

int n_mod_2 = n % 2;
printf(""%d"", n_mod_2);

}",
iwes050,1697426141,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    //Base case
    if (n==1) {
        printf(""%d"", n);
        return;
    }

//Recursive case

int number_to_convert = n / 2;
ConvertToBinary(number_to_convert);

int n_mod_2 = n % 2;
printf(""%d"", n_mod_2);

}",1
iwil997,1697936929,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        int b = n % 2;
        printf(""%d"", b);
        
    }
}

int main()
{
    ConvertToBinary(157);
    return 0;
}
",
iwil997,1697936935,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        int b = n % 2;
        printf(""%d"", b);
        
    }
}
",
iwil997,1697936936,3,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        int b = n % 2;
        printf(""%d"", b);
        
    }
}
",1
iwoo382,1697523553,1,"void ConvertToBinary(int n) 
{
    if (n == 1) {
        printf(""%d"", n);

    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
iwoo382,1697523555,2,"void ConvertToBinary(int n) 
{
    if (n == 1) {
        printf(""%d"", n);

    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
ixia229,1697992284,1,"void ConvertToBinary(int num) {
    int binary[32];  // Assuming a 32-bit integer
    int i = 0;
    while (num > 0) {
        binary[i] = num % 2;
        num = num / 2;
        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
    printf(""\n"");
}",
ixia229,1697992293,2,"void ConvertToBinary(int num) {
    int binary[32];
    int i = 0;
    while (num > 0) {
        binary[i] = num % 2;
        num = num / 2;
        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
    printf(""\n"");
}",
ixia229,1697992465,3,"void ConvertToBinary(int num) {
    int binary[32];
    int i = 0;
    while (num > 0) {
        binary[i] = num % 2;
        num = num / 2;
        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
    printf(""\n"");
}",1
ixu871,1697716551,1,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        printf(""Binary: 0"");
        return;
    }
    
    printf(""Binary: "");
    for (int i = 8; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}",
ixu871,1697716560,2,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        printf(""Binary: 0"");
        return;
    }
    
    printf(""Binary: "");
    for (int i = 7; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}",
ixu871,1697716577,3,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        printf(""0"");
        return;
    }
    
    printf(""Binary: "");
    for (int i = 7; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}",
ixu871,1697716607,4,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        return;
    }
    
    for (int i = 7; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}",
ixu871,1697716615,5,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        return;
    }
    
    for (int i = 7; i >= 0; i--) {
        int bits = (integer >> i) & 1;
        printf(""%d"", bits);
    }
}",
ixu871,1697716617,6,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        return;
    }
    
    for (int i = 7; i >= 0; i--) {
        int bits = (integer >> i) & 1;
        printf(""%d"", bits);
    }
}",0
ixu871,1697716627,7,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        return;
    }
    
    for (int i = 64; i >= 0; i--) {
        int bits = (integer >> i) & 1;
        printf(""%d"", bits);
    }
}",
ixu871,1697716682,8,"if (integer == 0) {
        printf(""Binary: 0"");
        return;
    }
    
    int numBits = 0;
    int temp = integer;
    while (temp != 0) {
        temp >>= 1;
        numBits++;
    }
    
    printf(""Binary: "");
    for (int i = numBits - 1; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}",
ixu871,1697716691,9,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        printf(""Binary: 0"");
        return;
    }
    
    int numBits = 0;
    int temp = integer;
    while (temp != 0) {
        temp >>= 1;
        numBits++;
    }
    
    printf(""Binary: "");
    for (int i = numBits - 1; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}
In this modified code:

It calculates the numBits by shifting the integer to the right until it becomes zero, counting the number of times it was shifted.

It then uses numBits to loop through the appropriate number of bits and extract the bits from the integer's binary representation.

This way, the code works for integers with varying numbers of bits in their binary representation.





",
ixu871,1697716696,10,"void ConvertToBinary(int integer) {
    if (integer == 0) {
        printf(""Binary: 0"");
        return;
    }
    
    int numBits = 0;
    int temp = integer;
    while (temp != 0) {
        temp >>= 1;
        numBits++;
    }
    
    printf(""Binary: "");
    for (int i = numBits - 1; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}



",
ixu871,1697716737,11,"void ConvertToBinary(int integer) {
    
    int numBits = 0;
    int temp = integer;
    while (temp != 0) {
        temp >>= 1;
        numBits++;
    }
    for (int i = numBits - 1; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}



",
ixu871,1697716748,12,"void ConvertToBinary(int integer) {
    
    int numBits = 0;
    int temp = integer;
    while (temp != 0) {
        temp >>= 1;
        numBits++;
    }
    for (int i = numBits - 1; i >= 0; i--) {
        int bit = (integer >> i) & 1;
        printf(""%d"", bit);
    }
}



",1
jahn224,1697513452,1,"void ConvertToBinary(int decimal)
{
    
    if (decimal == 1) {
        printf(""%d"", decimal);
    } else {
        ConvertToBinary(decimal/2);
        printf(""%d"", decimal %2);
    }
    
}",
jahn224,1697513458,2,"void ConvertToBinary(int decimal)
{
    
    if (decimal == 1) {
        printf(""%d"", decimal);
    } else {
        ConvertToBinary(decimal/2);
        printf(""%d"", decimal %2);
    }
    
}",1
jaus241,1697495497,1,"void ConvertToBinary(int number)
{
    if (number == 1){
        printf(""%d"", 1);
    }
    else { 
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
jaus241,1697495501,2,"void ConvertToBinary(int number)
{
    if (number == 1){
        printf(""%d"", 1);
    }
    else { 
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
jbag235,1698131168,1,"void ConvertToBinary(int input)
{
    int output;
    output = input%2;
    if (input > 0) {
        ConvertToBinary(input/2);
        printf(""%d"", output);
    }
}",1
jbam701,1697767751,1,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}

}
",
jbam701,1697767753,2,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}

}
",1
jbam753,1698108668,1,"void ConvertToBinary(int n) {

    if (n == 0) {
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
jbam753,1698108670,2,"void ConvertToBinary(int n) {

    if (n == 0) {
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
jbis394,1697970898,1,"void ConvertToBinary(int a) {

    if (a == 1) {
        printf(""%d"", a);

    } else {
        printf(""%d"", (a % 2));
        a = a / 2;
        ConvertToBinary(a);
    }
}
",
jbis394,1697970928,2,"void ConvertToBinary(int a) {

    if (a == 1) {
        printf(""%d"", a);

    } else {
        a = a /2
        printf(""%d"", (a % 2));
        ConvertToBinary(a);
    }
}
",
jbis394,1697970934,3,"void ConvertToBinary(int a) {

    if (a == 1) {
        printf(""%d"", a);

    } else {
        a = a / 2;
        printf(""%d"", (a % 2));
        ConvertToBinary(a);
    }
}
",
jbis394,1697971709,4,"void ConvertToBinary(int a) {

    if (a == 1) {
        printf(""%d"", a);

    } else {
        printf(""%d"", (a % 2));
        a = a / 2;
        ConvertToBinary(a);
    }
}
",
jbis394,1697972470,5,"void ConvertToBinary(int a) {
   
    if (a <= 0) return;
    
    ConvertToBinary(a / 2);
    printf(""%d"", (a % 2));
}
",
jbis394,1697972476,6,"void ConvertToBinary(int a) {
   
    if (a = 0) return;
    
    ConvertToBinary(a / 2);
    printf(""%d"", (a % 2));
}
",
jbis394,1697972485,7,"void ConvertToBinary(int a) {
   
    if (a == 0) return;
    
    ConvertToBinary(a / 2);
    printf(""%d"", (a % 2));
}
",
jbis394,1697972491,8,"void ConvertToBinary(int a) {

    
    ConvertToBinary(a / 2);
    printf(""%d"", (a % 2));
}
",
jbis394,1697972511,9,"void ConvertToBinary(int a) {


    
    ConvertToBinary(a / 2);
    printf(""%d"", (a % 2));
    
    if (a == 0) return;
}
",
jbis394,1697972520,10,"void ConvertToBinary(int a) {

    if (a == 0) return;

    
    ConvertToBinary(a / 2);
    printf(""%d"", (a % 2));
    }
",
jbis394,1697972522,11,"void ConvertToBinary(int a) {

    if (a == 0) return;

    
    ConvertToBinary(a / 2);
    printf(""%d"", (a % 2));
    }
",1
jbro301,1697779813,1,"void ConvertToBinary(int x)
{
    
    if(x/2==0) {
        if (x==1) {
            printf(""1"");
        } else
            printf(""0"");
        } 
    else {
       ConvertToBinary(x/2); 
        printf(""%d"",x%2);
    }


}",
jbro301,1697779841,2,"void ConvertToBinary(int x)
{
    
    if(x/2==0) {
        if (x==1) {
            printf(""1"");
        } else
            printf(""0"");
        } 
    else {
       ConvertToBinary(x/2); 
        printf(""%d"",x%2);
    }


}",1
jbru537,1698102567,1,"void ConvertToBinary(int value)
 {
if (value == 1) {
 printf(""%d "", value);
 } else {
 
 ConvertToBinary(value / 2);
 printf(""%d "",value % 2);
 }



 }",
jbru537,1698102574,2,"void ConvertToBinary(int value)
 {
if (value == 1) {
 printf(""%d "", value);
 } else {
 
 ConvertToBinary(value / 2);
 printf(""%d"",value % 2);
 }



 }",
jbru537,1698102581,3,"void ConvertToBinary(int value)
 {
if (value == 1) {
 printf(""%d"", value);
 } else {
 
 ConvertToBinary(value / 2);
 printf(""%d"",value % 2);
 }



 }",
jbru537,1698102587,4,"void ConvertToBinary(int value)
 {
if (value == 1) {
 printf(""%d"", value);
 } else {
 
 ConvertToBinary(value / 2);
 printf(""%d"",value % 2);
 }



 }",1
jbuc296,1698111667,1,"
void ConvertToBinary(int n)
{ 
  int temp;
  temp = n % 2;

  if (n == 1) {
  printf(""1"");
  } else {
   ConvertToBinary(n/2);
   printf(""%d"", temp);
  }

}
",
jbuc296,1698111669,2,"
void ConvertToBinary(int n)
{ 
  int temp;
  temp = n % 2;

  if (n == 1) {
  printf(""1"");
  } else {
   ConvertToBinary(n/2);
   printf(""%d"", temp);
  }

}
",1
jcha513,1697621987,1,"void ConvertToBinary(int n)
{
    int next;
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        
        next = n/2;
        ConvertToBinary(next);
        printf(""%d"", n%2);
        
    }
}",
jcha513,1697621990,2,"void ConvertToBinary(int n)
{
    int next;
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        
        next = n/2;
        ConvertToBinary(next);
        printf(""%d"", n%2);
        
    }
}",1
jcha574,1698054686,1,"#include <stdio.h>
void ConvertToBinary(int x)
{
    int y=0;
    if (x==1){
        printf(""%d"",1);
    }
    else{
        ConvertToBinary(x/2);
        y=x%2;
        printf(""%d"",y);
    }
}",
jcha574,1698054688,2,"#include <stdio.h>
void ConvertToBinary(int x)
{
    int y=0;
    if (x==1){
        printf(""%d"",1);
    }
    else{
        ConvertToBinary(x/2);
        y=x%2;
        printf(""%d"",y);
    }
}",1
jcha972,1697521891,1,"void ConvertToBinary(int n) {
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
jcha972,1697521894,2,"void ConvertToBinary(int n) {
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
jche456,1698119797,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int num)
{
	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",
jche456,1698119798,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int num)
{
	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",1
jchi648,1697849834,1,"void ConvertToBinary(int n) {
    
    int arr[200] = {0};
    int j = 0;
    
    if ( n == 1 ) {
        
        printf(""%d"", n);
        
    } else {
        
        while(n != 0 ) {
            
            arr[j] = n % 2;
            n = n / 2;
            j++;
            
        }
    }
    
    for (int z = j-1; z >= 0; z--) {
        printf(""%d"", arr[z]);
    }
    
}",
jchi648,1697849837,2,"void ConvertToBinary(int n) {
    
    int arr[200] = {0};
    int j = 0;
    
    if ( n == 1 ) {
        
        printf(""%d"", n);
        
    } else {
        
        while(n != 0 ) {
            
            arr[j] = n % 2;
            n = n / 2;
            j++;
            
        }
    }
    
    for (int z = j-1; z >= 0; z--) {
        printf(""%d"", arr[z]);
    }
    
}",1
jchu579,1698048173,1,"int ConvertToBinary(int num)
{
	if (num == 0)
	{
		return 0;
	}
	else
	{
		return (num % 2 + 10 * ConvertToBinary(num / 2));
	}
}",
jchu579,1698049574,2,"void ConvertToBinary(int num)
{
	if (num < 2)
	{
		if (num == 1)
		{
			printf(""%d"", num);
		}
		return;
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);

	}
}",
jchu579,1698049576,3,"void ConvertToBinary(int num)
{
	if (num < 2)
	{
		if (num == 1)
		{
			printf(""%d"", num);
		}
		return;
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);

	}
}",1
jcla431,1697506180,1,"void ConvertToBinary(int value);

void ConvertToBinary(int value)
{
	if (value == 1)
	{
		printf(""%d"", value);
	}

	else
	{
		int binary;
		ConvertToBinary(value / 2);
		binary = value % 2;
		printf(""%d"", binary);
	}
}",
jcla431,1697506185,2,"void ConvertToBinary(int value);

void ConvertToBinary(int value)
{
	if (value == 1)
	{
		printf(""%d"", value);
	}

	else
	{
		int binary;
		ConvertToBinary(value / 2);
		binary = value % 2;
		printf(""%d"", binary);
	}
}",1
jcla755,1697442380,1,"void ConvertToBinary(int n)
{
    if(n == 1)
    {
        printf(""%d"", n);
    }
    else
    {        
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
jcla755,1697442383,2,"void ConvertToBinary(int n)
{
    if(n == 1)
    {
        printf(""%d"", n);
    }
    else
    {        
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
jdal353,1698120120,1,"void ConvertToBinary(int num) {
    
    if (num == 0) {
        return;
    }

    ConvertToBinary(num / 2);
    
    printf(""%d"", num % 2);
}",
jdal353,1698120122,2,"void ConvertToBinary(int num) {
    
    if (num == 0) {
        return;
    }

    ConvertToBinary(num / 2);
    
    printf(""%d"", num % 2);
}",1
jdea126,1697725198,1,"void ConvertToBinary(int value)
{
	int binary[32];
	int i = 0;

	if (value == 1) {
		printf(""%d"", value);
	}
	else {

		while (value > 0) {
			binary[i] = value % 2;
			value = value / 2;
			i++;
		}
	}
	for (int j = i-1; j >= 0; j--) {
		printf(""%d"", binary[j]);
	}
}",
jdea126,1697725201,2,"void ConvertToBinary(int value)
{
	int binary[32];
	int i = 0;

	if (value == 1) {
		printf(""%d"", value);
	}
	else {

		while (value > 0) {
			binary[i] = value % 2;
			value = value / 2;
			i++;
		}
	}
	for (int j = i-1; j >= 0; j--) {
		printf(""%d"", binary[j]);
	}
}",1
jdu853,1697796095,1,"void ConvertToBinary(int number) {
    
    int binaryDigit = number % 2;

    if (number > 0){
        ConvertToBinary(number/2);
        printf(""%d"", binaryDigit);
    }
}",
jdu853,1697796099,2,"void ConvertToBinary(int number) {
    
    int binaryDigit = number % 2;

    if (number > 0){
        ConvertToBinary(number/2);
        printf(""%d"", binaryDigit);
    }
}",1
jear460,1698099579,1,"void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    } else {

        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
jfen705,1698054841,1,"void ConvertToBinary(int num)
{
    if (num == 1 || num == 0) {
        printf(""%d"", num);
        return;
    }
    else {
        int a;
        a = num / 2;
        ConvertToBinary(a);
        a = num % 2;
        printf(""%d"", a);
        
    }
}",
jfen705,1698054843,2,"void ConvertToBinary(int num)
{
    if (num == 1 || num == 0) {
        printf(""%d"", num);
        return;
    }
    else {
        int a;
        a = num / 2;
        ConvertToBinary(a);
        a = num % 2;
        printf(""%d"", a);
        
    }
}",1
jfet156,1697757735,1,"void ConvertToBinary(int numbers)
{
    if (numbers == 1) {
        printf(""%d"", numbers % 2);
    } else {
         ConvertToBinary(numbers / 2);
         printf(""%d"", numbers % 2);
    }
}",1
jgeo610,1697810980,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary((n / 2));
		printf(""%d"", (n % 2));
	}
}",
jgeo610,1697810982,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary((n / 2));
		printf(""%d"", (n % 2));
	}
}",1
jgol495,1697418121,1,"#include <stdio.h>
// Recursive is really over the top for something like this
void ConvertToBinary(int in){
    int rem = in / 2;
    if( rem == 0 ){
        printf(""%d"", in % 2);
        return;
    }
    ConvertToBinary(rem);
    printf(""%d"", in % 2);
}",
jgol495,1697418123,2,"#include <stdio.h>
// Recursive is really over the top for something like this
void ConvertToBinary(int in){
    int rem = in / 2;
    if( rem == 0 ){
        printf(""%d"", in % 2);
        return;
    }
    ConvertToBinary(rem);
    printf(""%d"", in % 2);
}",1
jhor229,1698115716,1,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    if (num == 0) 
    {
        return;
    }

    ConvertToBinary(num / 2);

    printf(""%d"", num % 2);
}
",
jhor229,1698115718,2,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    if (num == 0) 
    {
        return;
    }

    ConvertToBinary(num / 2);

    printf(""%d"", num % 2);
}
",1
jhwa027,1698143059,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}


",
jhwa027,1698143060,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}


",1
jjeo627,1698119946,1,"int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int main() {
    int decimal;
    printf("""");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}
",0
jjeo627,1698119953,2,"int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int main() {
    int decimal;
    printf("""");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}
",
jjeo627,1698119983,3,"int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int main() {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}",
jjeo627,1698119993,4,"int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

void main() {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}",
jjeo627,1698127680,5,"int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int main(void) {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}",
jjeo627,1698127686,6,"int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

 main(void) {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}",
jjeo627,1698127751,7,"#include <stdio.h>

int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int main(void) {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}
",
jjeo627,1698127768,8,"#include <stdio.h>

int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int (void) {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}
",
jjeo627,1698127821,9,"#include <stdio.h>

int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int main(void) {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
 return 0;   
}
",
jjeo627,1698127865,10,"#include <stdio.h>

int ConvertToBinary(int decimal) {
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);

       }
       printf(""%d"", decimal%2);
      
      
  
}

int main(void) {
    int decimal;
    printf("" "");
    scanf(""%d"", &decimal);
    ConvertToBinary(decimal);
}
",
jjeo627,1698132378,11,"

void PrintValuesBetween(int decimal){
    
    if(decimal>1){
        PrintValuesBetween(decimal/2);
        printf(""%d"",decimal%2);
    }
    else{
        printf(""%d"",decimal);
    }
}
int main(void){
    int decimal;
    printf("" "");
    scanf(""%d"",&decimal);
    PrintValuesBetween(decimal);
   
    return 0;
}
",
jjeo627,1698132392,12,"

void PrintValuesBetween(int decimal){
    
    if(decimal>1){
        PrintValuesBetween(decimal/2);
        printf(""%d"",decimal%2);
    }
    else{
        printf(""%d"",decimal);
    }
}

",
jjeo627,1698132428,13,"

void ConvertToBinary(int decimal){
    
    if(decimal>1){
        ConvertToBinary(decimal/2);
        printf(""%d"",decimal%2);
    }
    else{
        printf(""%d"",decimal);
    }
}
int main(void){
    int decimal;
    printf("" "");
    scanf(""%d"",&decimal);
    ConvertToBinary(decimal);
   
    return 0;
}
",
jjeo627,1698132434,14,"

void ConvertToBinary(int decimal){
    
    if(decimal>1){
        ConvertToBinary(decimal/2);
        printf(""%d"",decimal%2);
    }
    else{
        printf(""%d"",decimal);
    }
}
",
jjeo627,1698132436,15,"

void ConvertToBinary(int decimal){
    
    if(decimal>1){
        ConvertToBinary(decimal/2);
        printf(""%d"",decimal%2);
    }
    else{
        printf(""%d"",decimal);
    }
}
",1
jjon350,1698057688,1,"#include <stdio.h>
void ConvertToBinary(int number){
int array[100];
int i=0;

while (number>0){
    array[i]=number%2;
    number=number/2;
    i++;
}

for (int j=i; j>=0; j--){
     printf(""%d"",array[j]);
}
return 0;
}",
jjon350,1698057697,2,"#include <stdio.h>
void ConvertToBinary(int number){
int array[100];
int i=0;

while (number>0){
    array[i]=number%2;
    number=number/2;
    i++;
}

for (int j=i; j>=0; j--){
     printf(""%d"",array[j]);
}
}",
jjon350,1698057700,3,"#include <stdio.h>
void ConvertToBinary(int number){
int array[100];
int i=0;

while (number>0){
    array[i]=number%2;
    number=number/2;
    i++;
}

for (int j=i; j>=0; j--){
     printf(""%d"",array[j]);
}
}",0
jjon350,1698057807,4,"#include <stdio.h>
void ConvertToBinary(int number){
int array[100];
int i=0;

while (number>0){
    array[i]=number%2;
    number=number/2;
    i++;
}

for (int j=i-1; j>=0; j--){
     printf(""%d"",array[j]);
}
}",
jjon350,1698057809,5,"#include <stdio.h>
void ConvertToBinary(int number){
int array[100];
int i=0;

while (number>0){
    array[i]=number%2;
    number=number/2;
    i++;
}

for (int j=i-1; j>=0; j--){
     printf(""%d"",array[j]);
}
}",1
jjos057,1697956443,1,"void ConvertToBinary(int n) 
{
    if (n == 1) {
            printf(""1"");
            return;
    }
    else if (n == 0) {
            return;
    }
    
    ConvertToBinary(n / 2); /

    printf(""%d"", n % 2);   
}",
jjos057,1697956449,2,"void ConvertToBinary(int n) 
{
    if (n == 1) {
            printf(""1"");
            return;
    }
    else if (n == 0) {
            return;
    }
    
    ConvertToBinary(n / 2); 

    printf(""%d"", n % 2);   
}",
jjos057,1697956456,3,"void ConvertToBinary(int n) 
{
    if (n == 1) {
            printf(""1"");
            return;
    }
    else if (n == 0) {
            return;
    }
    
    ConvertToBinary(n / 2); 

    printf(""%d"", n % 2);   
}",1
jjun879,1697811782,1,"void ConvertToBinary(int n) 
{
    if (n / 2 != 0) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
jjun879,1697811800,2,"void ConvertToBinary(int n) 
{
    if (n / 2 != 0) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
jjun879,1697812042,3,"void ConvertToBinary(int input) 
{
    if (input / 2 != 0) {
        ConvertToBinary(input / 2);
    }
    printf(""%d"", input % 2);
}",1
jkah253,1697945912,1,"void ConvertToBinary(int n) {
    if (n==1){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}
",
jkah253,1697945915,2,"void ConvertToBinary(int n) {
    if (n==1){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}
",1
jkan172,1697428569,1,"void ConvertToBinary(int n)
{
    if ((n /2) == 0) {
        printf(""%d"", (n%2));
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", (n % 2));
    }
}",1
jkim828,1697455400,1,"void ConvertToBinary(int value)
{
    int x;
    if (value == 0) {
        return;
    } else {
        x = value % 2;

        value = value / 2;

        ConvertToBinary(value);

        printf(""%d"", x);
    }
}",
jkim828,1697455403,2,"void ConvertToBinary(int value)
{
    int x;
    if (value == 0) {
        return;
    } else {
        x = value % 2;

        value = value / 2;

        ConvertToBinary(value);

        printf(""%d"", x);
    }
}",1
jkim837,1697856341,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
jkim837,1697856343,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
jkim933,1697515525,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf (""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf (""%d"", (n % 2));
    }
}",
jkim933,1697515528,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf (""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf (""%d"", (n % 2));
    }
}",1
jkim960,1697459385,1,"void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    } else {
        // Recursively call with the remaining quotient
        ConvertToBinary(n / 2);
        // Print the remainder (binary digit)
        printf(""%d"", n % 2);
    }
}",1
jlah077,1697515680,1,"#include <math.h>

void ConvertToBinary(int number)
{
    int length = 0;
    while(number / (int)pow(2, length) != 0)
    {
        length++;
    }
    int index = length - 1;
    char binary[length + 1];
    while (number != 0)
    {
        if (number % 2)
        {
            binary[index] = '1';
        }
        else
        {
            binary[index] = '0';
        }
        number /= 2;
        index--;
    }
    binary[length] = '\0';
    printf(""%s"", binary);
}",
jlah077,1697515683,2,"#include <math.h>

void ConvertToBinary(int number)
{
    int length = 0;
    while(number / (int)pow(2, length) != 0)
    {
        length++;
    }
    int index = length - 1;
    char binary[length + 1];
    while (number != 0)
    {
        if (number % 2)
        {
            binary[index] = '1';
        }
        else
        {
            binary[index] = '0';
        }
        number /= 2;
        index--;
    }
    binary[length] = '\0';
    printf(""%s"", binary);
}",1
jlal056,1697865933,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"",n);

	} else {
		int x = n/2;
		int y = n%2;
		ConvertToBinary(x);
		printf(""%d"", y);
	}

}",
jlal056,1697865936,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"",n);

	} else {
		int x = n/2;
		int y = n%2;
		ConvertToBinary(x);
		printf(""%d"", y);
	}

}",1
jlew699,1697620569,1,"#include <stdio.h>
void ConvertToBinary(int n) 
{
    if (n > 0) 
    {
        ConvertToBinary(n / 2);
        printf(""%d"", (n % 2));
    }
}
",
jlew699,1697620572,2,"#include <stdio.h>
void ConvertToBinary(int n) 
{
    if (n > 0) 
    {
        ConvertToBinary(n / 2);
        printf(""%d"", (n % 2));
    }
}
",1
jli463,1697436991,1,"#include <stdio.h>

void ConvertToBinary(int value) {
	if (value > 1) {
		ConvertToBinary(value / 2);
	}
	printf(""%d"", value % 2);
}",
jli463,1697437003,2,"#include <stdio.h>

void ConvertToBinary(int value) {
	if (value > 1) {
		ConvertToBinary(value / 2);
	}
	printf(""%d"", value % 2);
}",1
jli876,1698111739,1,"void ConvertToBinary(int num) {
    if (num > 1) ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",
jli876,1698111744,2,"void ConvertToBinary(int num) {
    if (num > 1) ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",1
jli917,1697859328,1,"void ConvertToBinary(int x) {
    if (x >= 1) {
        ConvertToBinary(x / 2);  
        printf(""%d"", x % 2);
             
    }
}",
jli917,1697859334,2,"void ConvertToBinary(int x) {
    if (x >= 1) {
        ConvertToBinary(x / 2);  
        printf(""%d"", x % 2);
             
    }
}",1
jlia486,1697957967,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
jlia948,1698028232,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);       
}

int main() {
    ConvertToBinary(157);
}",0
jlia948,1698028320,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);       
}",1
jliu295,1697780067,1,"void ConvertToBinary(int number){
    if(number > 0){
        printf(""%d"", number % 2);
        ConvertToBinary(number / 2);
    }
}",0
jliu295,1697780307,2,"void ConvertToBinary(int number){
    if(number > 0){
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
jliu778,1698124260,1,"int ConvertToBinary(int num)  
{  
    if(num == 0)  
        return 0;  
    else  
        return((num % 2) + 10 * ConvertToBinary(num/2));  
} ",
jliu778,1698124677,2,"void ConvertToBinary(int num)  
{  
    int a, b = 0, c = 1;  
    while(num)  
    {  
        a   = num % 2;  
        num   = num / 2;  
        b   = b + (a * c);  
        c = c * 10;  
    }  
    printf(""%d"",b);
}",
jliu778,1698125019,3,"void ConvertToBinary(int num)  
{  
    int a, b = 0, c = 1;  
    while(num)  
    {  
        a   = num % 2;  
        num   = num / 2;  
        b   = b + (a * c);  
        c = c * 10;  
    }  
    printf(""%d"",b);
}",0
jliu778,1698126673,4,"void ConvertToBinary(int num){
int a=num,b=0,c=-1;
while (b==0)
{   
    if (num==0)
    {
        b=1;
    }
    num=num>>1;
    c++;
}
int arr[c];

for (int i = 0; i < c; i++)
{   
    if(a%2==0)
    {
        arr[i]=0;
    }
    else{
        arr[i]=1;
    }
    a=a>>1;
}
for (int i = 0; i < c; i++)
{
    printf(""%d"",arr[c-i-1]);
}
}",
jliu778,1698126874,5,"void ConvertToBinary(int num){
int a=num,b=0,c=-1;
while (b==0)
{   
    if (num==0)
    {
        b=1;
    }
    num=num>>1;
    c++;
}
int arr[c];

for (int i = 0; i < c; i++)
{   
    if(a%2==0)
    {
        arr[i]=0;
    }
    else{
        arr[i]=1;
    }
    a=a>>1;
}
for (int i = 0; i < c; i++)
{
    printf(""%d"",arr[c-i-1]);
}
}",1
jluo379,1697949260,1,"void ConvertToBinary(int value) {
    if (value == 1) {
        printf(""1"");
        return; //set base case
    } else {
        ConvertToBinary(value / 2); // recursive case
        printf(""%d"", (value % 2));
    }
}",
jluo379,1697949263,2,"void ConvertToBinary(int value) {
    if (value == 1) {
        printf(""1"");
        return; //set base case
    } else {
        ConvertToBinary(value / 2); // recursive case
        printf(""%d"", (value % 2));
    }
}",1
jmak320,1698055352,1,"void ConvertToBinary(int n){
    if (n == 1) {
        printf(""1"");
    } else {
        printf(""%d"", n%2);
        ConvertToBinary(n/2);
    }
}",0
jmak320,1698055483,2,"void ConvertToBinary(int n){
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);        
    }
}",
jmak320,1698055485,3,"void ConvertToBinary(int n){
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);        
    }
}",1
jmat941,1698050233,1,"#include <stdio.h>

void ConvertToBinary(int num) {

    if (num == 0) {
        
        return;
    }
    else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }

    
}",1
jmei608,1697861874,1,"void ConvertToBinary(int number) {
	if (number == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",
jmei608,1697861877,2,"void ConvertToBinary(int number) {
	if (number == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",1
jmil737,1697707627,1,"
#include <stdio.h>

void ConvertToBinary(int n){
 
 if (n == 1){
     printf(""%d"", n);
 }
 else {
     ConvertToBinary(n / 2);
     printf(""%d"", n % 2);
 }
    
}

",
jmil737,1697707630,2,"
#include <stdio.h>

void ConvertToBinary(int n){
 
 if (n == 1){
     printf(""%d"", n);
 }
 else {
     ConvertToBinary(n / 2);
     printf(""%d"", n % 2);
 }
    
}

",1
jmul290,1697505654,1,"void ConvertToBinary(int n){
    
    int nl, nt;
    nl = n % 2;
    
    nt = n / 2;
    if(nt > 0){
        ConvertToBinary(nt);
    }
    printf(""%d"", nl);
    
}",1
jpar523,1697692655,1,"#include <stdio.h>

void ConvertToBinary(int integer) 
{
    if (integer > 0) {
        ConvertToBinary(integer / 2);
        printf(""%d"", integer % 2);
    }
}",
jpar523,1697692659,2,"#include <stdio.h>

void ConvertToBinary(int integer) 
{
    if (integer > 0) {
        ConvertToBinary(integer / 2);
        printf(""%d"", integer % 2);
    }
}",1
jpar611,1697726076,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base Case: If n is 0, stop the recursion.
    if (n == 0) {
        return;
    }
    
    // Recursive Case:
    // 1. Convert n/2 to binary
    ConvertToBinary(n / 2);
    
    // 2. Print the remainder when n is divided by 2
    printf(""%d"", n % 2);
}
",
jpar611,1697726078,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base Case: If n is 0, stop the recursion.
    if (n == 0) {
        return;
    }
    
    // Recursive Case:
    // 1. Convert n/2 to binary
    ConvertToBinary(n / 2);
    
    // 2. Print the remainder when n is divided by 2
    printf(""%d"", n % 2);
}
",1
jpat915,1697492746,1,"#include <stdio.h>

void DecimalToBinary(int n) {
    
    if (n > 0) {
        DecimalToBinary(n / 2);
        
        printf(""%d"", n % 2);
    }
}",
jpat915,1697492775,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    
    if (n > 0) {
        ConvertToBinary(n / 2);
        
        printf(""%d"", n % 2);
    }
}",
jpat915,1697492807,3,"#include <stdio.h>

void ConvertToBinary(int n) {
    
    if (n > 0) {
        ConvertToBinary(n / 2);
        
        printf(""%d"", n % 2);
    }
}",1
jpau410,1697613947,1,"void ConvertToBinary(int number) {
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number/2);
        printf(""%d"", number % 2);
    }
    
}",
jpau410,1697614138,2,"void ConvertToBinary(int number) {
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number/2);
        printf(""%d"", number % 2);
    }
    
}",1
jpaz106,1698107705,1,"void ConvertToBinary(int n) 
{
    int binary;
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        //n = n / 2;
        binary = n % 2;
        ConvertToBinary(n / 2);
    }
    
    PrintReverse(binary);
}",
jpaz106,1698109173,2,"void ConvertToBinary(int n) 
{
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",
jpaz106,1698109178,3,"void ConvertToBinary(int n) 
{
    
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",1
jpud993,1698045265,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
    return;
}",
jpud993,1698045269,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
    return;
}",1
jros811,1697700015,1,"void ConvertToBinary(int number) {
    if (number == 1) {
        printf(""%d"", number);
    }
    else {
        ConvertToBinary(number/2);
        printf(""%d"", number%2);
    }
}
",
jros811,1697700017,2,"void ConvertToBinary(int number) {
    if (number == 1) {
        printf(""%d"", number);
    }
    else {
        ConvertToBinary(number/2);
        printf(""%d"", number%2);
    }
}
",1
jsan813,1698100146,1,"void ConvertToBinary(int num)
{
	if (num == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary((num / 2));
		printf(""%d"", (num % 2));
	}
}",
jsan813,1698100149,2,"void ConvertToBinary(int num)
{
	if (num == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary((num / 2));
		printf(""%d"", (num % 2));
	}
}",1
jsch842,1698103312,1,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    // Base case: If the number is 0, we've printed all the bits.
    if (num == 0) 
    {
        return;
    }

    // Recursive call to print the binary representation
    ConvertToBinary(num / 2);

    // Print the binary digit (0 or 1)
    printf(""%d"", num % 2);
}",
jsch842,1698103314,2,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    // Base case: If the number is 0, we've printed all the bits.
    if (num == 0) 
    {
        return;
    }

    // Recursive call to print the binary representation
    ConvertToBinary(num / 2);

    // Print the binary digit (0 or 1)
    printf(""%d"", num % 2);
}",1
jshe464,1698059705,1,"void PrintReverse(int values) 
{
	int a = values;
	int c = 0;
	int b = 0;
	while (a > 0) 
	{
		b = a % 10;
		a = a / 10;
		c = c * 10 + b;
		
	}
	values = c;
	printf(""%d"", c);
}
void ConvertToBinary(int value)
{
	int b=0;
	int a = 0;
	while (value > 0)
	{
		b = value % 2;
		a = a * 10 + b;
		value = value / 2;
		
	}
	PrintReverse(a);
}",
jshe464,1698059708,2,"void PrintReverse(int values) 
{
	int a = values;
	int c = 0;
	int b = 0;
	while (a > 0) 
	{
		b = a % 10;
		a = a / 10;
		c = c * 10 + b;
		
	}
	values = c;
	printf(""%d"", c);
}
void ConvertToBinary(int value)
{
	int b=0;
	int a = 0;
	while (value > 0)
	{
		b = value % 2;
		a = a * 10 + b;
		value = value / 2;
		
	}
	PrintReverse(a);
}",0
jshe464,1698060351,3,"void ConvertToBinary(int value)
{
	int b=0;
	int a[1000] = {};
	int c=0;
	int d = 0;
	while (value > 0)
	{
		b = value % 2;
		a[c]=b;
		value = value / 2;
		c = c + 1;
		d = d + 1;

	}
	
	for (int i = d - 1; i >= 0; i--)
	{
		printf(""%d"", a[i]);
	}
	
}",
jshe464,1698060355,4,"void ConvertToBinary(int value)
{
	int b=0;
	int a[1000] = {};
	int c=0;
	int d = 0;
	while (value > 0)
	{
		b = value % 2;
		a[c]=b;
		value = value / 2;
		c = c + 1;
		d = d + 1;

	}
	
	for (int i = d - 1; i >= 0; i--)
	{
		printf(""%d"", a[i]);
	}
	
}",1
jshi444,1697683264,1,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"", n);
	}
	else {	
		n = n / 2; // gives you the quotient
		ConvertToBinary(n);
		
		printf(""%d"", n % 2);
	}
}",0
jshi444,1697684638,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""1"");
	}
	else {	
		//n = n / 2; // gives you the quotient
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);
	}
}",1
jshr431,1698128371,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	else if (Decimal == 0) {
		printf(""0"");
	}
	else {
		Decimal = Decimal / 2;
		printf(""%d"", Decimal % 2);
		ConvertToBinary(Decimal);
}",
jshr431,1698128384,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	else if (Decimal == 0) {
		printf(""0"");
	}
	else {
		Decimal = Decimal / 2;
		printf(""%d"", Decimal % 2);
		ConvertToBinary(Decimal);
}",
jshr431,1698128433,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	else if (Decimal == 0) {
		printf(""0"");
	}
	else {
		Decimal = Decimal / 2;
		printf(""%d"", Decimal % 2);
		ConvertToBinary(Decimal);
	}
}",
jshr431,1698128470,4,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	
	else {
		Decimal = Decimal / 2;
		printf(""%d"", Decimal % 2);
		ConvertToBinary(Decimal);
	}
}",
jshr431,1698128544,5,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	else if (Decimal == 0) {
		printf(""0"");
	}
	else {
		printf(""%d"", Decimal % 2);
		Decimal = Decimal / 2;
		ConvertToBinary(Decimal);
	}
}",
jshr431,1698129202,6,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	else if (Decimal == 0) {
		printf(""0"");
	}
	else {
		Decimal = Decimal / 2;
		printf(""%d"", Decimal % 2);
		ConvertToBinary(Decimal);
	}
}",
jshr431,1698129806,7,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	else if (Decimal == 0) {
		printf(""0"");
	}
	else {
		ConvertToBinary(Decimal / 2);
		printf(""%d"", Decimal % 2);
		
	}
}",
jshr431,1698129826,8,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int Decimal) {

	if (Decimal == 1) {
		printf(""1"");
	}
	else if (Decimal == 0) {
		printf(""0"");
	}
	else {
		ConvertToBinary(Decimal / 2);
		printf(""%d"", Decimal % 2);
		
	}
}",1
jsim418,1697437053,1,"#include <stdio.h>

void ConvertToBinary(int num) {
     if (num == 0) {
        return;
    }
    ConvertToBinary(num/2);
    printf(""%d"",num%2);

}
",
jsim418,1697437056,2,"#include <stdio.h>

void ConvertToBinary(int num) {
     if (num == 0) {
        return;
    }
    ConvertToBinary(num/2);
    printf(""%d"",num%2);

}
",1
jsim643,1697443738,1,"void ConvertToBinary(int n) {
    if (n > 0 ) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
jsim643,1697443743,2,"void ConvertToBinary(int n) {
    if (n > 0 ) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
jsta466,1697946165,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", 1);
    } else {
        ConvertToBinary((n/2));
        int bin = n % 2;
        printf(""%d"", bin);
    }
}",
jsta466,1697946169,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", 1);
    } else {
        ConvertToBinary((n/2));
        int bin = n % 2;
        printf(""%d"", bin);
    }
}",1
jsun284,1697695336,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",1
jvil318,1698092771,1,"void ConvertToBinary(int intg) {
    if (intg > 1) {
        // Divide by 2 over and over
        ConvertToBinary(intg / 2);  
    } // Do the remainder with the modulo to find the binary from LSB
    printf(""%d"", intg % 2);
}",
jvil318,1698092775,2,"void ConvertToBinary(int intg) {
    if (intg > 1) {
        // Divide by 2 over and over
        ConvertToBinary(intg / 2);  
    } // Do the remainder with the modulo to find the binary from LSB
    printf(""%d"", intg % 2);
}",1
jwed606,1697587443,1,"void PrintBinary(int num)
{
    int has_printed_1 = 0;
    for (int bit = 32; bit-- > 0; )
    {
        int bit_is_1 = !!(num & (0b1 << bit));
        if (!bit_is_1)
        {
            if (has_printed_1)
                printf(""0"");
        }
        else
        {
            printf(""1"");
            has_printed_1 = 1;
        }
    }
    printf(""\n"");
}",
jwed606,1697587462,2,"void ConvertToBinary(int num)
{
    int has_printed_1 = 0;
    for (int bit = 32; bit-- > 0; )
    {
        int bit_is_1 = !!(num & (0b1 << bit));
        if (!bit_is_1)
        {
            if (has_printed_1)
                printf(""0"");
        }
        else
        {
            printf(""1"");
            has_printed_1 = 1;
        }
    }
    printf(""\n"");
}
",
jwed606,1697587466,3,"void ConvertToBinary(int num)
{
    int has_printed_1 = 0;
    for (int bit = 32; bit-- > 0; )
    {
        int bit_is_1 = !!(num & (0b1 << bit));
        if (!bit_is_1)
        {
            if (has_printed_1)
                printf(""0"");
        }
        else
        {
            printf(""1"");
            has_printed_1 = 1;
        }
    }
    printf(""\n"");
}
",1
jwil813,1697515066,1,"void ConvertToBinary(int n)
{
	if (n == 1){
		printf(""%d"", n);
	}
	else {
		printf(""%d"", n % 2);
		ConvertToBinary(n / 2);
	}

}",0
jwil813,1697515774,2,"void ConvertToBinary(int n)
{
	if (n == 1 || n == 0){
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}

}
",1
jwon248,1697440972,1,"#include <stdio.h>

void ConvertToBinary(int decimal)
{
    if (decimal == 0)
    {
        return;
    }

    ConvertToBinary(decimal / 2);
    printf(""%d"", decimal % 2);

    return;
}",
jwon248,1697440975,2,"#include <stdio.h>

void ConvertToBinary(int decimal)
{
    if (decimal == 0)
    {
        return;
    }

    ConvertToBinary(decimal / 2);
    printf(""%d"", decimal % 2);

    return;
}",1
jwon253,1697501474,1,"void ConvertToBinary(int n)
{
	// Base case
	if (n == 1) {
		printf(""1"");
		return;
	}

	// Recursive case
	ConvertToBinary(n / 2); // Convert n/2 to binary
	printf(""%d"", n % 2); // Print the remainder after dividing by 2
}",
jwon253,1697501480,2,"void ConvertToBinary(int n)
{
	// Base case
	if (n == 1) {
		printf(""1"");
		return;
	}

	// Recursive case
	ConvertToBinary(n / 2); // Convert n/2 to binary
	printf(""%d"", n % 2); // Print the remainder after dividing by 2
}",1
jwon323,1697773053,1,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    if (n == 1) {
        printf(""%d"", n);
    } 

    int result = n/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
}",
jwon323,1697773088,2,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    if (n == 1) {
        printf(""%d"", n);
    } 

    int result = n/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
}",
jwon323,1697773106,3,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    if (n == 1) {
        printf(""%d"", n);
    } 

    int result = n/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    //printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
}",
jwon323,1697773119,4,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    if (n == 1) {
        printf(""%d"", n);
    } 

    int result = n/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
}",
jwon323,1697773159,5,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    if (n == 1) {
        printf(""%d"", n);
    } 

    int result = n/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
}",
jwon323,1697773249,6,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    if (n == 1) {
        printf(""%d"", n);
    } 
    start = n/2

    int result = start/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
}",
jwon323,1697773254,7,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    if (n == 1) {
        printf(""%d"", n);
    } 
    start = n/2;

    int result = start/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
}",
jwon323,1697773265,8,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int start;
    
    if (n == 1) {
        printf(""%d"", n);
    } 
    start = n/2;

    int result = start/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
}",
jwon323,1697773280,9,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int start;
    
    if (n == 1) {
        printf(""%d"", n);
    } 
    start = n/2;

    int result = start/2;
    if (result == 0) {
        return;
    }
    
    int remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
}",
jwon323,1697773314,10,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
}",
jwon323,1697773345,11,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(ConvertToBinary(result));
}",
jwon323,1697773350,12,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(ConvertToBinary(remainder));
}",
jwon323,1697773358,13,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
}",
jwon323,1697773364,14,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
}",
jwon323,1697773377,15,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(remainder);
    ConvertToBinary(result);
}",
jwon323,1697773386,16,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
    ConvertToBinary(result);
}",
jwon323,1697773401,17,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
    ConvertToBinary(remainder);
}",
jwon323,1697773439,18,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
}",
jwon323,1697773442,19,"#include <stdio.h>

void ConvertToBinary(int n)
{    
    int result;
    int remainder;
    
    if (n == 1) {
        printf(""%d"", n);
    } 

    result = n/2;
    if (result == 0) {
        return;
    }
    
    remainder = n%2;
    printf(""%d"", remainder);
    
    ConvertToBinary(result);
}",0
jyan420,1697420335,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
jyan420,1697420338,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
jyua529,1697684822,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", n);

    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
        
    }

}",
jyua529,1697684824,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", n);

    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
        
    }

}",1
jzho786,1698110114,1,"void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}
",
jzho786,1698110117,2,"void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}
",1
kabb319,1697945342,1,"int ConvertToBinary(int n) 
{
    if (n > 0) {
        int quotient = n / 2;
        int remainder = n % 2;
        ConvertToBinary(quotient);
        printf (""%d"", remainder);
    }

    return 0;
    
}
",
kabb319,1697945345,2,"int ConvertToBinary(int n) 
{
    if (n > 0) {
        int quotient = n / 2;
        int remainder = n % 2;
        ConvertToBinary(quotient);
        printf (""%d"", remainder);
    }

    return 0;
    
}
",1
kahk161,1697506436,1,"void ConvertToBinary(int number)
{
	if (number == 1) {
		printf(""%d"", (number % 2));
	}
	else {
		int temp = number/2;
		ConvertToBinary(temp);
		printf(""%d"", number % 2);
	}
}",
kahk161,1697506440,2,"void ConvertToBinary(int number)
{
	if (number == 1) {
		printf(""%d"", (number % 2));
	}
	else {
		int temp = number/2;
		ConvertToBinary(temp);
		printf(""%d"", number % 2);
	}
}",1
kbar402,1697809730,1,"void ConvertToBinary(int value) {
    if (num > 1) {
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);
}",
kbar402,1697809741,2,"void ConvertToBinary(int value) {
    if (value > 1) {
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);
}",
kbar402,1697809743,3,"void ConvertToBinary(int value) {
    if (value > 1) {
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);
}",1
kbha969,1697581465,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    
    if (n == 1) {
        printf(""%d"",n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }

} ",
kbha969,1697581468,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    
    if (n == 1) {
        printf(""%d"",n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }

} ",1
kcao565,1697956436,1,"void ConvertToBinary(int n) 
{
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
kcao657,1697791955,1,"void ConvertToBinary(int n)
{
	if (n == 1){

		printf(""%d"", 1);
	}

	else {

		ConvertToBinary((n / 2));
		printf(""%d"", n % 2);
		
		
	}


}",
kcao657,1697791957,2,"void ConvertToBinary(int n)
{
	if (n == 1){

		printf(""%d"", 1);
	}

	else {

		ConvertToBinary((n / 2));
		printf(""%d"", n % 2);
		
		
	}


}",1
kfep063,1698035856,1,"void ConvertToBinary(int n) 
{
    if (n > 1) { 
        ConvertToBinary(n / 2); // This will recursively call for the quotient of n. Thus, making it smaller.
    }
    printf(""%d"", n % 2); // Print the remainder of the n beginning with the input (from right to left)
}",
kfep063,1698035862,2,"void ConvertToBinary(int n) 
{
    if (n > 1) { 
        ConvertToBinary(n / 2); // This will recursively call for the quotient of n. Thus, making it smaller.
    }
    printf(""%d"", n % 2); // Print the remainder of the n beginning with the input (from right to left)
}",1
kfer833,1698037820,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}
",1
kgra470,1697455818,1,"void ConvertToBinary(int value){
    int running_val,remainder,binary[100]={0},counter=99;
    while(value!=0){
        remainder=value%2;
        value=value/2;
        binary[counter-1]=binary[counter]*10 + remainder;
        counter--;
    }
}",
kgra470,1697456189,2,"void ConvertToBinary(int value){
    int remainder,binary[100]={0},counter=99,result=0;
    while(value!=0){
        remainder=value%2;
        value=value/2;
        binary[counter-1]=binary[counter]*10;
        binary[counter]=remainder;
        counter--;
    }
    for(int i=counter;i<100;i++){
        result=result*10 +binary[i];
    }
    printf(""%i"",result);
}",
kgra470,1697456191,3,"void ConvertToBinary(int value){
    int remainder,binary[100]={0},counter=99,result=0;
    while(value!=0){
        remainder=value%2;
        value=value/2;
        binary[counter-1]=binary[counter]*10;
        binary[counter]=remainder;
        counter--;
    }
    for(int i=counter;i<100;i++){
        result=result*10 +binary[i];
    }
    printf(""%i"",result);
}",0
kgra470,1697489865,4,"void ConvertToBinary(int value){
    int counter=99,val=1;
    int binary[200] = {0},remainder;
    while (value!=0) {
        remainder = value % 2;
        value = value / 2;
        binary[counter]=remainder;
        counter--;
    }
    for(int i=(counter+1);i<100;i++){
        printf(""%i"",binary[i]);
    }
}",
kgra470,1697489879,5,"void ConvertToBinary(int value){
    int counter=99,binary[200] = {0},remainder;
    while (value!=0) {
        remainder = value % 2;
        value = value / 2;
        binary[counter]=remainder;
        counter--;
    }
    for(int i=(counter+1);i<100;i++){
        printf(""%i"",binary[i]);
    }
}",
kgra470,1697489881,6,"void ConvertToBinary(int value){
    int counter=99,binary[200] = {0},remainder;
    while (value!=0) {
        remainder = value % 2;
        value = value / 2;
        binary[counter]=remainder;
        counter--;
    }
    for(int i=(counter+1);i<100;i++){
        printf(""%i"",binary[i]);
    }
}",1
khew624,1697772804,1,"#include <stdio.h>

void ConvertToBinary(int interger)
{
    if (interger <= 1) {
        printf(""%d"", interger);
        return;
    }
    ConvertToBinary(interger / 2);
    printf(""%d"", interger % 2);
}",
khew624,1697772811,2,"#include <stdio.h>

void ConvertToBinary(int interger)
{
    if (interger <= 1) {
        printf(""%d"", interger);
        return;
    }
    ConvertToBinary(interger / 2);
    printf(""%d"", interger % 2);
}",1
kjoe685,1697892533,1,"void ConvertToBinary(int num) {
	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
	return;
}",
kjoe685,1697892536,2,"void ConvertToBinary(int num) {
	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
	return;
}",1
kjun638,1697675363,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n/2);
    printf(""%d"", n%2);
}",1
kkha484,1698122562,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
kkha484,1698122565,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
kkim985,1697457812,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
kkim985,1697457815,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
klam376,1698054744,1,"void ConvertToBinary(int num)
{
    if (num==1){
        printf(""%d"",num);
    } else {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",
klam376,1698054748,2,"void ConvertToBinary(int num)
{
    if (num==1){
        printf(""%d"",num);
    } else {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",1
kluc619,1698131821,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",
kluc619,1698131823,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",1
kmag441,1698059708,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    int a;
    if (n > 0) {
        a = n / 2;
        ConvertToBinary(a);
        printf(""%d"", n % 2); 
    }
}
",
kmag441,1698059710,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    int a;
    if (n > 0) {
        a = n / 2;
        ConvertToBinary(a);
        printf(""%d"", n % 2); 
    }
}
",1
kmal768,1697596426,1,"void ConvertToBinary(int n) {
	if (n / 2 == 0) {
		printf(""%d"", n % 2); //check this here
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
kmck133,1697791080,1,"void ConvertToBinary(int value) {
	if (value == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(value / 2);
		printf(""%d"", value % 2);
	}
}",
kmck133,1697791083,2,"void ConvertToBinary(int value) {
	if (value == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(value / 2);
		printf(""%d"", value % 2);
	}
}",1
kmcv530,1697957540,1,"#include <stdio.h>

void ConvertToBinary(int num) {
if (num == 1) {
    return;
}
        int remainder = num % 2;
        ConvertToBinary(num / 2);
        printf(""%d"", remainder);
    }",
kmcv530,1697957573,2,"#include <stdio.h>

void ConvertToBinary(int num) {
if (num == 0) {
    return;
}
        int remainder = num % 2;
        ConvertToBinary(num / 2);
        printf(""%d"", remainder);
    }",
kmcv530,1697957605,3,"#include <stdio.h>

void ConvertToBinary(int num) {
if (num == 0) {
    return;
}
        int remainder = num % 2;
        ConvertToBinary(num / 2);
        printf(""%d"", remainder);
    }",1
kmcv530,1697961174,4,"#include <stdio.h>

void ConvertToBinary(int num) {
if (num == 0) {return;
}
        int remainder = num % 2;
        ConvertToBinary(num / 2);
        printf(""%d"", remainder);
    }",1
kng361,1698122853,1,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",1
kpat303,1697417585,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",
kpat303,1697417587,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",1
kpau893,1697427463,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    }
     else {
         
        ConvertToBinary(n / 2);
        
        printf(""%d"", n % 2);
        
    }
}",1
kpay633,1697506957,1,"#include <stdio.h>

void ConvertToBinary(int n);


void ConvertToBinary(int n) 
{
	//base case
	if (n==1) {
		printf(""%d"", n); 
	}
	else {
		int temp = n / 2;
		ConvertToBinary(temp);
		int y = n % 2;
		printf(""%d"", y);

	}
}",
kpay633,1697506961,2,"#include <stdio.h>

void ConvertToBinary(int n);


void ConvertToBinary(int n) 
{
	//base case
	if (n==1) {
		printf(""%d"", n); 
	}
	else {
		int temp = n / 2;
		ConvertToBinary(temp);
		int y = n % 2;
		printf(""%d"", y);

	}
}",1
kpir468,1698097958,1,"void ConvertToBinary(int num) {
    if (num / 2 != 0) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}
",
kpir468,1698097961,2,"void ConvertToBinary(int num) {
    if (num / 2 != 0) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}
",1
kpla566,1697599247,1,"void ConvertToBinary(int x) {
  if (x == 0) {
    return;
  }
  ConvertToBinary(x / 2);
  printf(""%d"", x % 2);

  return;
}
",1
kqua446,1697885982,1,"#include <stdio.h>

void ConvertToBinary(int num)
{    
    if (num / 2 > 0) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",1
kraj720,1698087687,1,"void ConvertToBinary(int number_10) {
    if (number_10 > 0) {
        int number_2 = number_10 % 2;
        ConvertToBinary(number_10 / 2);
        printf(""%d"", number_2);
    }
}",
kraj720,1698087691,2,"void ConvertToBinary(int number_10) {
    if (number_10 > 0) {
        int number_2 = number_10 % 2;
        ConvertToBinary(number_10 / 2);
        printf(""%d"", number_2);
    }
}",1
kraj720,1698088466,3,"void ConvertToBinary(int number_10) 
{
    if (number_10 > 0) 
    {
        int number_2 = number_10 % 2;
        ConvertToBinary(number_10 / 2);
        printf(""%d"", number_2);
    }
}",1
kraw552,1697417123,1,"#include <stdio.h>

void ConvertToBinary(int x) 
{
    if (x == 0) 
    {
        return;
    }

    ConvertToBinary(x / 2);

    printf(""%d"", x % 2);
}
",
kraw552,1697417126,2,"#include <stdio.h>

void ConvertToBinary(int x) 
{
    if (x == 0) 
    {
        return;
    }

    ConvertToBinary(x / 2);

    printf(""%d"", x % 2);
}
",1
krec980,1697507848,1,"void ConvertToBinary(int number) {

	int binary;

	if (number == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(number / 2);
		binary = number % 2;
		printf(""%d"",  binary);
		
	}
}
",
krec980,1697507879,2,"void ConvertToBinary(int number) {

	int binary;

	if (number == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(number / 2);
		binary = number % 2;
		printf(""%d"",  binary);
		
	}
}
",1
ksai757,1698036895,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
ksai757,1698036897,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
ksik996,1697448071,1,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""%d"", n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
ksik996,1697448073,2,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""%d"", n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
kwan244,1697956272,1,"void ConvertToBinary(int Num) {
	//Base Case
	if (Num == 1) {
		printf(""%d"", Num);
	}
	//Recursive case
	else {
		ConvertToBinary(Num / 2);
		printf(""%d"", Num % 2);
	}
}",
kwan244,1697956275,2,"void ConvertToBinary(int Num) {
	//Base Case
	if (Num == 1) {
		printf(""%d"", Num);
	}
	//Recursive case
	else {
		ConvertToBinary(Num / 2);
		printf(""%d"", Num % 2);
	}
}",1
kwan797,1697492772,1,"void ConvertToBinary(int number)
{
	if (number <= 0) {
		return;
	}
	else {
		ConvertToBinary(number/2);
		printf(""%d"",number%2);
	}
}",
kwan797,1697492778,2,"void ConvertToBinary(int number)
{
	if (number <= 0) {
		return;
	}
	else {
		ConvertToBinary(number/2);
		printf(""%d"",number%2);
	}
}",1
kyoo839,1697885039,1,"void ConvertToBinary(int n)
{

    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
kyoo839,1697885042,2,"void ConvertToBinary(int n)
{

    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
kzhu796,1697843736,1,"void ConvertToBinary(int n) 
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		//convert to binary
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);

	}
}",
kzhu796,1697843739,2,"void ConvertToBinary(int n) 
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		//convert to binary
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);

	}
}",1
laba812,1697944134,1,"void ConvertToBinary(int integer){

    if (integer == 0){
        return;
    }

int zero_or_one = integer % 2;

ConvertToBinary( integer/2 );
printf(""%d"", zero_or_one);

}
",
laba812,1697944136,2,"void ConvertToBinary(int integer){

    if (integer == 0){
        return;
    }

int zero_or_one = integer % 2;

ConvertToBinary( integer/2 );
printf(""%d"", zero_or_one);

}
",1
lazz729,1697800380,1,"void ConvertToBinary(int binarary)
{

    if (binarary == 1) {
        printf(""%d"", binarary);
    } else {
        ConvertToBinary(binarary/2);
        printf(""%d"", binarary%2);
    }

}",
lazz729,1697800400,2,"void ConvertToBinary(int binarary)
{

    if (binarary == 1) {
        printf(""%d"", binarary);
    } else {
        ConvertToBinary(binarary/2);
        printf(""%d"", binarary%2);
    }

}",1
lbla772,1697855642,1,"void ConvertToBinary(int number) {
    if (numbre > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", n % 2);
    }
}",0
lbla772,1697855831,2,"void ConvertToBinary(int number) {
    
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", n % 2);
    }
    
}",0
lbla772,1697855847,3,"void ConvertToBinary(int number) {
    
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
    
}",1
lbou433,1697501418,1,"void ConvertToBinary(int Base10)
{
	if (Base10 / 2 > 0) {
		ConvertToBinary(Base10 / 2);
	}
	printf(""%d"", Base10 % 2);
}",
lbou433,1697501421,2,"void ConvertToBinary(int Base10)
{
	if (Base10 / 2 > 0) {
		ConvertToBinary(Base10 / 2);
	}
	printf(""%d"", Base10 % 2);
}",1
lbyr117,1698035380,1,"void ConvertToBinary(int number)
{
    if (number > 0)
    {
        ConvertToBinary(number/2);
        printf(""%d"",(number%2));
    }
}",
lbyr117,1698035383,2,"void ConvertToBinary(int number)
{
    if (number > 0)
    {
        ConvertToBinary(number/2);
        printf(""%d"",(number%2));
    }
}",1
lcam453,1698036181,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
lcam453,1698036183,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
lcan243,1697859601,1,"#include <stdio.h>
void ConvertToBinary(int number){
if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}


",
lcan243,1697859604,2,"#include <stdio.h>
void ConvertToBinary(int number){
if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}


",1
lche668,1698058045,1,"// prints base first.
// else prints 0 or 1 depending on the modulo of 2
void ConvertToBinary(int n)
{
	int m;
	if (n == 1) {
		printf(""%d"", n);
	}
	if (n > 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",0
lche668,1698058051,2,"// prints base first.
// else prints 0 or 1 depending on the modulo of 2
void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	if (n > 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
lche668,1698058061,3,"// prints base first.
// else prints 0 or 1 depending on the modulo of 2
void ConvertToBinary(int n)
{
	if (n > 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
lche668,1698058067,4,"// prints base first.
// else prints 0 or 1 depending on the modulo of 2
void ConvertToBinary(int n)
{
	if (n > 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
lchu848,1697948881,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}
",
lchu848,1697948886,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}
",1
ldam917,1697797466,1,"void ConvertToBinary(int n) 
{
    while (number>0) 
    {
        ConvertToBinary(number/2); 
        printf(""%d"",number%2);     
    }
}",
ldam917,1697797482,2,"void ConvertToBinary(int number) 
{
    while (number>0) 
    {
        ConvertToBinary(number/2); 
        printf(""%d"",number%2);     
    }
}",
ldam917,1697797587,3,"void ConvertToBinary(int number) 
{
    if (number>0) 
    {
        ConvertToBinary(number/2);
        int binary=number%2;
        printf(""%d"",binary);     
    }
}
",
ldam917,1697797601,4,"void ConvertToBinary(int number) 
{
    if (number>0) 
    {
        ConvertToBinary(number/2);
        int binary=number%2;
        printf(""%d"",binary);     
    }
}
",1
ldea753,1697708532,1,"void ConvertToBinary(int num) {
    if (num != 0) {
        ConvertToBinary(num / 2);

        int bit = num % 2;
        printf(""%d"", bit);
    }
}",
ldea753,1697708537,2,"void ConvertToBinary(int num) {
    if (num != 0) {
        ConvertToBinary(num / 2);

        int bit = num % 2;
        printf(""%d"", bit);
    }
}",1
ldou101,1698026647,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
ldou101,1698026650,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
lfan827,1698013961,1,"void ConvertToBinary(int a){
    int b, i = 0;
    int l[32];
    while(a != 0 ){
        b = a % 2;
        a = a / 2;
        l[i] = b;
        i++;
    }
    i = i - 1;
    for (b = i; b >= 0; b--){
        printf(""%d"",l[b]);
    }
}",
lfan827,1698013963,2,"void ConvertToBinary(int a){
    int b, i = 0;
    int l[32];
    while(a != 0 ){
        b = a % 2;
        a = a / 2;
        l[i] = b;
        i++;
    }
    i = i - 1;
    for (b = i; b >= 0; b--){
        printf(""%d"",l[b]);
    }
}",1
lgan833,1697945719,1,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
lgan833,1697945722,2,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
lhal844,1697428417,1,"void ConvertToBinary(int n)
{
	if (n < 2)
	{
		printf(""%i"", n);
	}
	else
	{
		printf(""%i"", n % 2);
		ConvertToBinary(n / 2);
	}
}",0
lhal844,1697498567,2,"void ConvertToBinary(int n)
{
	if (n < 2)
	{
		printf(""%i"", n);
	}
	else
	{
		
		ConvertToBinary(n / 2);
		printf(""%i"", n % 2);
	}
}",1
lhua313,1697899834,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
lhua313,1697899837,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
ljer106,1697825570,1,"#include <stdio.h>

void ConvertToBinary(int number) {

    int binary[32]; 
    int index = 0;

    while (number > 0 && index < 32) {
        binary[index] = number % 2;
        number = number / 2;
        index++;
    }

    for (int i = index - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",
ljer106,1697825572,2,"#include <stdio.h>

void ConvertToBinary(int number) {

    int binary[32]; 
    int index = 0;

    while (number > 0 && index < 32) {
        binary[index] = number % 2;
        number = number / 2;
        index++;
    }

    for (int i = index - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",1
ljer106,1697828766,3,"void ConvertToBinary(int number) {
    if (number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", number % 2);
}
",
ljer106,1697828768,4,"void ConvertToBinary(int number) {
    if (number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", number % 2);
}
",1
ljun123,1697943877,1,"void ConvertToBinary(int number) {
    if (number < 2) {
        printf(""%d"", number);
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
ljun123,1697943882,2,"void ConvertToBinary(int number) {
    if (number < 2) {
        printf(""%d"", number);
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
lkel942,1697573118,1,"void ConvertToBinary(int decimal)
{
	if (decimal / 2 != 0)
	{
		ConvertToBinary(decimal / 2);
	}
	printf(""%d"", decimal % 2);
}",
lkel942,1697573121,2,"void ConvertToBinary(int decimal)
{
	if (decimal / 2 != 0)
	{
		ConvertToBinary(decimal / 2);
	}
	printf(""%d"", decimal % 2);
}",1
llat663,1697754317,1,"#include <stdio.h>

void ConvertToBinary(int number)
{
	if (number > 0) 
	{
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}
",1
llei074,1697951909,1,"void ConvertToBinary(int input) {

	if (input == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(input / 2);
		printf(""%d"", input % 2);
	}
}",
llei074,1697951910,2,"void ConvertToBinary(int input) {

	if (input == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(input / 2);
		printf(""%d"", input % 2);
	}
}",1
lli393,1697508346,1,"void ConvertToBinary(int nums){
	int binary;

	if (nums == 1){
		printf(""%d"", nums);
	} else {
		ConvertToBinary(nums / 2);
		binary = nums % 2;
		printf(""%d"", binary);
	}
}",
lli393,1697508350,2,"void ConvertToBinary(int nums){
	int binary;

	if (nums == 1){
		printf(""%d"", nums);
	} else {
		ConvertToBinary(nums / 2);
		binary = nums % 2;
		printf(""%d"", binary);
	}
}",1
llia622,1698054212,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf (""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
llia622,1698054214,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf (""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
llig859,1697972350,1,"
void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
lliu182,1698050817,1,"void ConvertToBinary(int number) {
	if (number != 0) {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
		
	}
}",
lliu182,1698050819,2,"void ConvertToBinary(int number) {
	if (number != 0) {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
		
	}
}",1
llu744,1698117547,1,"void ConvertToBinary(int number)
{
    int temparr[64];
    int i = 0;
    
    while (number > 0) {
        temparr[i] = number % 2;
        number /= 2;
        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", temparr[j]);
    }
    printf(""\n"");
}",
llu744,1698117552,2,"void ConvertToBinary(int number)
{
    int temparr[64];
    int i = 0;
    
    while (number > 0) {
        temparr[i] = number % 2;
        number /= 2;
        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", temparr[j]);
    }
    printf(""\n"");
}",1
lmen032,1698139673,1,"void ConvertToBinary(int number) {

    number / 2;
    printf(""%d"", number % 2);
}",
lmen032,1698139718,2,"void ConvertToBinary(int number) {

    int half = number / 2;
    printf(""%d"", half % 2);
}",
lmen032,1698139841,3,"void ConvertToBinary (number){
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
",
lmen032,1698139850,4,"void ConvertToBinary (int number){
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
",
lmen032,1698139952,5,"void ConvertToBinary (int number){
  
    number / 2;
    for (number > 0; number / 2){
        printf(""d"", number % 2)
    }
",
lmen032,1698139974,6,"void ConvertToBinary (int number){
  
    int i = number / 2;
    for (i > 0; i / 2){
        printf(""d"", i % 2)
    }
",
lmen032,1698140114,7,"void ConvertToBinary(int number) {
   int i = number;
    if (i > 0) {
        ConvertToBinary(i / 2);
        printf(""%d"", i % 2);
    }
}",
lmen032,1698140116,8,"void ConvertToBinary(int number) {
   int i = number;
    if (i > 0) {
        ConvertToBinary(i / 2);
        printf(""%d"", i % 2);
    }
}",1
lmor438,1698098516,1,"//AUTHOR:Lukem
void PrintReverse(int A){
    
    int Current;
    int Next;
    
    Current=A%10;
    Next=A/10;
    printf(""%d"",Current);
    
    if(Next!=0){
        
       PrintReverse(Next); 
        
    }
    
}



void ConvertToBinary(int A){
    
    int Current;
    int Next;
    
    
    if(A==1){
        
        printf(""%d"",A);
        
    }
    else{
        
        
        Current=A%2;
        Next=A/2;
        ConvertToBinary(Next);
        PrintReverse(Current);
        
        
    }
    

    
}",
lmor438,1698098519,2,"//AUTHOR:Lukem
void PrintReverse(int A){
    
    int Current;
    int Next;
    
    Current=A%10;
    Next=A/10;
    printf(""%d"",Current);
    
    if(Next!=0){
        
       PrintReverse(Next); 
        
    }
    
}



void ConvertToBinary(int A){
    
    int Current;
    int Next;
    
    
    if(A==1){
        
        printf(""%d"",A);
        
    }
    else{
        
        
        Current=A%2;
        Next=A/2;
        ConvertToBinary(Next);
        PrintReverse(Current);
        
        
    }
    

    
}",1
lpry623,1697888731,1,"void ConvertToBinary (int number) 
{
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
lpry623,1697888734,2,"void ConvertToBinary (int number) 
{
    if (number <= 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
lrei069,1697449499,1,"void ConvertToBinary(int number) {
    if (number == 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
lros711,1697538222,1,"#include <stdio.h>

void ConvertToBinary(int Decimal)
{
	if (Decimal == 1 || Decimal == 0) {
		printf(""%d"", Decimal);
	}
	else
	{
		ConvertToBinary(Decimal / 2);
		printf(""%d"", Decimal % 2);
	}
	
}",
lros711,1697538225,2,"#include <stdio.h>

void ConvertToBinary(int Decimal)
{
	if (Decimal == 1 || Decimal == 0) {
		printf(""%d"", Decimal);
	}
	else
	{
		ConvertToBinary(Decimal / 2);
		printf(""%d"", Decimal % 2);
	}
	
}",1
lrya284,1697517372,1,"#include <stdio.h>

void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
lrya284,1697517418,2,"#include <stdio.h>

void ConvertToBinary(int number) 
{
    if (number == 0) {
    return;
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
lrya284,1697517438,3,"#include <stdio.h>

void ConvertToBinary(int number) 
{
    if (number == 0) {
    return;
    
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
lsal082,1697878959,1,"void ConvertToBinary(int n)
{
    if(n == 0 || n == 1){
        printf(""%d"", n);
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
lsal082,1697878961,2,"void ConvertToBinary(int n)
{
    if(n == 0 || n == 1){
        printf(""%d"", n);
        return;
    }
    
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
lsen376,1697876558,1,"void ConvertToBinary(int value) {

	int digit;
	char Array[256] = { 0 };
	int counter = 0;

	while (value > 0) {
		digit = value % 2;
		value = value / 2;

		Array[counter] = (char)digit;
		counter++;
	}
	
	for (int i = 0; i < counter; i++) {
		printf(""%d"", Array[counter - i - 1]);
	}
}",
lsen376,1697876562,2,"void ConvertToBinary(int value) {

	int digit;
	char Array[256] = { 0 };
	int counter = 0;

	while (value > 0) {
		digit = value % 2;
		value = value / 2;

		Array[counter] = (char)digit;
		counter++;
	}
	
	for (int i = 0; i < counter; i++) {
		printf(""%d"", Array[counter - i - 1]);
	}
}",1
lsha172,1698030647,1,"void ConvertToBinary(int n)
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
lsha172,1698030653,2,"void ConvertToBinary(int n)
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
lspu128,1697482336,1,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
        
    }
}",
lspu128,1697482341,2,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
        
    }
}",1
lsu376,1697530689,1,"#include <stdio.h>

void ConvertToBinary(int x)
{
	if (x > 0) {
		ConvertToBinary(x / 2);
		printf(""%d"", x % 2);
	}

	

}",
lsu376,1697530692,2,"#include <stdio.h>

void ConvertToBinary(int x)
{
	if (x > 0) {
		ConvertToBinary(x / 2);
		printf(""%d"", x % 2);
	}

	

}",1
lsua311,1698131782,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
",
lsua311,1698131821,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    // Base case: when the number becomes zero
    if (num == 0) {
        return;
    }

    // Recursive call with the remaining digits
    ConvertToBinary(num / 2);

    // Print the binary digit (remainder when divided by 2)
    printf(""%d"", num % 2);",
lsua311,1698131860,3,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);",
lsua311,1698131878,4,"
void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);",
lsua311,1698131896,5,"void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",
lsua311,1698131899,6,"void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",1
ltan813,1698054306,1,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",
ltan813,1698054310,2,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",1
lvan346,1697869582,1,"void ConvertToBinary(int n) {
    if (n == 1){
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
lvan346,1697869584,2,"void ConvertToBinary(int n) {
    if (n == 1){
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
lvin900,1697948302,1,"void ConvertToBinary(int input) {

	if (input == 1) {
		printf(""%d"", input);
	}
	else {
		int inp = (input / 2);
		ConvertToBinary(inp);
		printf(""%d"", (input % 2));
	}
}",
lvin900,1697948304,2,"void ConvertToBinary(int input) {

	if (input == 1) {
		printf(""%d"", input);
	}
	else {
		int inp = (input / 2);
		ConvertToBinary(inp);
		printf(""%d"", (input % 2));
	}
}",1
lwer802,1698140237,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }

    // First, recursively print the binary representation of n/2
    ConvertToBinary(n / 2);

    // Then print the least significant bit of n
    printf(""%d"", n % 2);
}

int main() {
    int number = 157;
    if (number == 0) {
        printf(""0"");
    } else {
        ConvertToBinary(number);
    }
    printf(""\n"");
    return 0;
}
",
lwer802,1698140420,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }

    // First, recursively print the binary representation of n/2
    ConvertToBinary(n / 2);

    // Then print the least significant bit of n
    printf(""%d"", n % 2);
}
",
lwer802,1698140422,3,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }

    // First, recursively print the binary representation of n/2
    ConvertToBinary(n / 2);

    // Then print the least significant bit of n
    printf(""%d"", n % 2);
}
",1
lwon290,1698021166,1,"void ConvertToBinary(int n) {
	int quotient = n / 2;
	int remainder = n % 2;
	
	if (n == 1) {
		printf(""1"");
		return;
	}
	else {
		ConvertToBinary(quotient);
		printf(""%d"", remainder);
	}
}
",
lwon290,1698021169,2,"void ConvertToBinary(int n) {
	int quotient = n / 2;
	int remainder = n % 2;
	
	if (n == 1) {
		printf(""1"");
		return;
	}
	else {
		ConvertToBinary(quotient);
		printf(""%d"", remainder);
	}
}
",1
lyou975,1697874904,1,"void ConvertToBinary(int n){
    
    if (n == 1){
        printf(""%d"", 1);
    } else {

        ConvertToBinary(n/2);

        printf(""%d"", n%2 );
    }
    
}",
lyou975,1697874906,2,"void ConvertToBinary(int n){
    
    if (n == 1){
        printf(""%d"", 1);
    } else {

        ConvertToBinary(n/2);

        printf(""%d"", n%2 );
    }
    
}",1
mabb997,1697944631,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
	}
}",
mabb997,1697944653,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}
",
mabb997,1697944660,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}
",1
mahu925,1697414926,1,"void ConvertToBinary(int n)
{
    int remainder1;
    remainder1 = n;
    int result = 0;
    result = n;
    int array[200];
    int i = 0;
    int total = 0;
    while(result != 0)
   {
       remainder1 = result%2;
       result = result/2;
       //printf(""%d\n"",result);
       //printf(""%d\n"",remainder1);
       array[i] = remainder1;
       i++;
       
   }
   total = i;
   for(i = total-1; i>= 0; i--)
   printf(""%d"", array[i]);
}",1
mala824,1698113898,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); 
    }
    printf(""%d"", n % 2);
}",
mala824,1698113903,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2); 
    }
    printf(""%d"", n % 2);
}",1
mbah279,1697862392,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }

    printf(""%d"", n % 2);
}",
mbah279,1697862394,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }

    printf(""%d"", n % 2);
}",1
mbal759,1697419596,1,"void ConvertToBinary(int number)
{
    if (number == 1) {
        printf(""%d"", number);
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
mbal759,1697419597,2,"void ConvertToBinary(int number)
{
    if (number == 1) {
        printf(""%d"", number);
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
mboy221,1697419613,1,"void ConvertToBinary(int num) {
    int a = 0;
    int numbers[10000] = {0};
    while (num>0) {
        numbers[a] = (num%2);
        num = num/2;
        a++;
    }
    for (int i = a-1; i>=0; i--) {
        printf(""%d"",numbers[i]);
    }
}",
mboy221,1697419616,2,"void ConvertToBinary(int num) {
    int a = 0;
    int numbers[10000] = {0};
    while (num>0) {
        numbers[a] = (num%2);
        num = num/2;
        a++;
    }
    for (int i = a-1; i>=0; i--) {
        printf(""%d"",numbers[i]);
    }
}",1
mbut885,1697840943,1,"void ConvertToBinary(int number)
{
    if ((number / 2) == 0) {
        printf(""%d"", number%2);
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
mbut885,1697840945,2,"void ConvertToBinary(int number)
{
    if ((number / 2) == 0) {
        printf(""%d"", number%2);
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
mcam799,1697875159,1,"void ConvertToBinary(int n)
{
	int r;

	
	if (n == 1) {
		printf(""1 ""); 
	} else {
		
		r = n % 2; //get remainder
		
		n = n / 2; //update n
		ConvertToBinary(n); //Repeat

		printf(""%d "", r);
	}
}",
mcam799,1697875182,2,"void ConvertToBinary(int n)
{
	int r;

	
	if (n == 1) {
		printf(""1""); 
	} else {
		
		r = n % 2; //get remainder
		
		n = n / 2; //update n
		ConvertToBinary(n); //Repeat

		printf(""%d"", r);
	}
}",
mcam799,1697875184,3,"void ConvertToBinary(int n)
{
	int r;

	
	if (n == 1) {
		printf(""1""); 
	} else {
		
		r = n % 2; //get remainder
		
		n = n / 2; //update n
		ConvertToBinary(n); //Repeat

		printf(""%d"", r);
	}
}",1
mcha833,1697868614,1,"void ConvertToBinary(int num)
{
    int value;
    value = num % 2;
    
    if (num == 0 || num == 1){
        printf(""%d"", value);
    }
    
    else {
        ConvertToBinary(num/2);
        printf(""%d"", value);
    }
}",
mcha833,1697868752,2,"void ConvertToBinary(int num)
{
    int value;
    value = num % 2;
    
    if (num == 0 || num == 1){
        printf(""%d"", value);
    }
    
    else {
        ConvertToBinary(num/2);
        printf(""%d"", value);
    }
}",1
mcha876,1697712872,1,"void ConvertToBinary(int n) {
    if (n == 0) {
        return;  
    } 
    else {
        int remainder = n % 2;
        ConvertToBinary(n / 2);  
        printf(""%d"", remainder); 
    }
}",
mcha876,1697712874,2,"void ConvertToBinary(int n) {
    if (n == 0) {
        return;  
    } 
    else {
        int remainder = n % 2;
        ConvertToBinary(n / 2);  
        printf(""%d"", remainder); 
    }
}",1
mche403,1697943822,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",
mche403,1697943829,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",1
mcro807,1698121150,1,"void ConvertToBinary(int n) {
    if (n == 1) {
    printf(""1"");
    }
    n = n / 2;
    ConvertToBinary(n);
    int R = n % 2;
    printf(""%d"", R);
}",
mcro807,1698121185,2,"void ConvertToBinary(int n) {
    if (n == 1) {
    printf(""1"");
    }
    n = n / 2;
    ConvertToBinary(n);
    
    printf(""%d"", n % 2);
}
",
mcro807,1698121204,3,"void ConvertToBinary(int n) {
    if (n == 1) {
    printf(""1"");
    }
    
    ConvertToBinary(n / 2);
    
    printf(""%d"", n % 2);
}
",
mcro807,1698121305,4,"void ConvertToBinary(int n) {
    
    if (n == 1) {
        printf(""1"");
        return;
    }
    n = n / 2;
    ConvertToBinary(n);
    int R = n % 2;
    printf(""%d"", R);
}
",
mcro807,1698121341,5,"void ConvertToBinary(int n) {
    
    if (n == 1) {
        printf(""1"");
        return;
    }
    
    ConvertToBinary(n / 2);
    int R = n % 2;
    printf(""%d"", R);
}
",
mcro807,1698121399,6,"void ConvertToBinary(int n) {
    
    if (n == 1) {
    printf(""1"");
    return;
    }
    
    ConvertToBinary(n / 2);
    int R = n % 2;
    printf(""%d"", R);
}
",1
mdav506,1697787013,1,"void ConvertToBinary(int input)
{
	if (input == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(input / 2);
		printf(""%d"", input % 2);
	}
}",
mdav506,1697787016,2,"void ConvertToBinary(int input)
{
	if (input == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(input / 2);
		printf(""%d"", input % 2);
	}
}",1
mfle888,1697941493,1,"#include <stdio.h>

  void ConvertToBinary(int number) {
   //if no less than 10 (single digit print it
     if (number == 0) {
        return;
     } else {
        ConvertToBinary(number / 2); 
        printf(""%d"", number % 2);  
     }
  }",
mfle888,1697941512,2,"#include <stdio.h>

  void ConvertToBinary(int number) {

     if (number == 0) {
        return;
     } else {
        ConvertToBinary(number / 2); 
        printf(""%d"", number % 2);  
     }
  }",1
mfuj750,1698552215,1,"void ConvertToBinary(int value)
{
	int result, remainder;

	result = value / 2;
	remainder = value % 2;

	if (result != 0) {
		printf(""%d"", remainder);
		ConvertToBinary(result);
	}
	else {
		printf(""%d"", remainder);
	}
}",
mfuj750,1698552467,2,"void ConvertToBinary(int value)
{
	int result, remainder;

	result = value / 2;
	remainder = value % 2;

	if (result != 0) {
		ConvertToBinary(result);
	}
	printf(""%d"", remainder);
}",
mfuj750,1698552470,3,"void ConvertToBinary(int value)
{
	int result, remainder;

	result = value / 2;
	remainder = value % 2;

	if (result != 0) {
		ConvertToBinary(result);
	}
	printf(""%d"", remainder);
}",1
mger154,1698047308,1,"void ConvertToBinary(int n) {

int quotient;
int remainder;

if (n < 2) {
    printf(""%d"", n);
    return;
}

quotient = n / 2;
remainder = n % 2;

ConvertToBinary(quotient);

printf(""%d"", remainder);

}",
mger154,1698047310,2,"void ConvertToBinary(int n) {

int quotient;
int remainder;

if (n < 2) {
    printf(""%d"", n);
    return;
}

quotient = n / 2;
remainder = n % 2;

ConvertToBinary(quotient);

printf(""%d"", remainder);

}",1
mgoy303,1697433395,1,"#include <math.h>

void ConvertToBinary(int num) {
    int count = 0;
    int temp = num;
    while (temp >= 1) {
        temp /= 2;
        count++;
    }

    int sum = 0, add = 0; 
    for (int i = count - 1; i >= 0; i--) {
        add = pow(2, i);
        if (sum + add > num) {
            printf(""0"");
        } else {
            sum += add;
            printf(""1"");
        }
    }
}",1
mgoy303,1697452282,2,"#include <math.h>

void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}

",1
mgua740,1697772300,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
mgua740,1697772846,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    
    printf(""%d"", n % 2);
}",
mgua740,1697772849,3,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    
    printf(""%d"", n % 2);
}",1
mhua821,1698026956,1,"void ConvertToBinary(int n) {
   
    if (n == 1) {
        printf(""1""); // Print 1 if the input is 1
    } else {
        ConvertToBinary(n/2); // Converting the input to binary by /2 each time
        printf(""%d"", n%2); // Print the remainder
    }
}",
mhua821,1698026960,2,"void ConvertToBinary(int n) {
   
    if (n == 1) {
        printf(""1""); // Print 1 if the input is 1
    } else {
        ConvertToBinary(n/2); // Converting the input to binary by /2 each time
        printf(""%d"", n%2); // Print the remainder
    }
}",1
mjun868,1698043888,1,"#include <stdio.h>

void ConvertToBinary(int number){
    
    if (number > 0){
        ConverToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
mjun868,1698043904,2,"#include <stdio.h>

void ConvertToBinary(int number){
    
    if (number > 0){
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
mjun868,1698043921,3,"#include <stdio.h>

void ConvertToBinary(int number){
    
    if (number > 0){
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
mjun868,1698043924,4,"#include <stdio.h>

void ConvertToBinary(int number){
    
    if (number > 0){
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
mjun868,1698044133,5,"#include <stdio.h>

void ConvertToBinary(int number){
    
    if (number > 0){
         printf(""%d"", number % 2);
        ConvertToBinary(number / 2);
    }
}",0
mjun868,1698044144,6,"#include <stdio.h>

void ConvertToBinary(int number){
    
    if (number > 0){
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
mkab524,1697546653,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
mkab524,1697546655,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
mkaj411,1697501130,1,"void ConvertToBinary(int values) {
	int binary;
	if (values != 0) {
		ConvertToBinary(values / 2);
		binary = values % 2;
		printf(""%d"", binary);
	} 
	
}",
mkaj411,1697501137,2,"void ConvertToBinary(int values) {
	int binary;
	if (values != 0) {
		ConvertToBinary(values / 2);
		binary = values % 2;
		printf(""%d"", binary);
	} 
	
}",1
mkee115,1697496948,1,"#include <stdio.h>

void ConvertToBinary(int number)
{
    int numquotient, numremainder;
    
    if (number > 0)
    {
        
        numquotient = number / 2;
        numremainder = number % 2;
        
        ConvertToBinary(numquotient);
        
        printf(""%d"", numremainder);
        
    }
}",1
mken566,1697936396,1,"void ConvertToBinary(int input)
{
    int integer = input;
    int remain = 0;
    
    if (integer > 0)
    {
        integer = input / 2;
        remain = input % 2;
        ConvertToBinary(integer);
        printf(""%d"", remain);
    }
}",
mken566,1697936402,2,"void ConvertToBinary(int input)
{
    int integer = input;
    int remain = 0;
    
    if (integer > 0)
    {
        integer = input / 2;
        remain = input % 2;
        ConvertToBinary(integer);
        printf(""%d"", remain);
    }
}",1
mket106,1697959735,1,"void ConvertToBinary(int number)
{

    if (number > 1) {
        ConvertToBinary(number / 2);
    } 
    printf(""%d"", number % 2);
    
}",
mket106,1697959742,2,"void ConvertToBinary(int number)
{

    if (number > 1) {
        ConvertToBinary(number / 2);
    } 
    printf(""%d"", number % 2);
    
}",1
mkim670,1697712268,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
mkim670,1697712271,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
mkim719,1697928861,1,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    // if num is less than 2
    if (num < 2) 
    {
        printf(""%d"", num);
        return;
    }
    
    // Print the remainder
    printf(""%d"", num % 2);
    ConvertToBinary(num / 2); // Recursive call ConvertToBinary with half of the number
}
",
mkim719,1697928923,2,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    // if num is less than 2
    if (num < 2) 
    {
        printf(""%d"", num);
        return;
    }
    
    ConvertToBinary(num / 2); // Recursive call ConvertToBinary with half of the number
    printf(""%d"", num % 2);    // Print the remainder
}
",
mkim719,1697928926,3,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    // if num is less than 2
    if (num < 2) 
    {
        printf(""%d"", num);
        return;
    }
    
    ConvertToBinary(num / 2); // Recursive call ConvertToBinary with half of the number
    printf(""%d"", num % 2);    // Print the remainder
}
",1
mlaw649,1698118637,1,"
void ConvertToBinary(int number) {
    // coninue to divide by 2 untill reach 0
    if (number > 0) {
        int binary = number % 2;
        
        // use recursion to repeat
        ConvertToBinary(number / 2);
        printf(""%d"", binary);
        
    }
}",
mlaw649,1698118692,2,"
void ConvertToBinary(int number) 
{
    // coninue to divide by 2 untill reach 0
    if (number > 0) {
        int binary = number % 2;
        
        // use recursion to repeat
        ConvertToBinary(number / 2);
        printf(""%d"", binary);
        
    }
}",1
mle063,1697599501,1,"void ConvertToBinary(int input)
{
    if (input == 0) {
        return;
    }
    
    ConvertToBinary(input/2);
    printf(""%d"", input%2);
}",
mle063,1697599505,2,"void ConvertToBinary(int input)
{
    if (input == 0) {
        return;
    }
    
    ConvertToBinary(input/2);
    printf(""%d"", input%2);
}",1
mlin729,1697666909,1,"#include <stdio.h>
void ConvertToBinary(int value){
    if (value <= 1){
        printf(""%d"", value);
    }
    else{
        
        ConvertToBinary(value/2);
        printf(""%d"",value % 2);
    }
}",1
mloh302,1697417779,1,"#include <stdio.h>`

void ConvertToBinary(int x)
{
    // do math
    int div_result = x / 2;
    int mod_result = x % 2;

    // call self
    if (div_result > 0)
        ConvertToBinary(div_result);

    // print
    printf(""%i"", mod_result);

    // return 
    return;
}",
mloh302,1697417789,2,"#include <stdio.h>

void ConvertToBinary(int x)
{
    // do math
    int div_result = x / 2;
    int mod_result = x % 2;

    // call self
    if (div_result > 0)
        ConvertToBinary(div_result);

    // print
    printf(""%i"", mod_result);

    // return 
    return;
}",
mloh302,1697417793,3,"#include <stdio.h>

void ConvertToBinary(int x)
{
    // do math
    int div_result = x / 2;
    int mod_result = x % 2;

    // call self
    if (div_result > 0)
        ConvertToBinary(div_result);

    // print
    printf(""%i"", mod_result);

    // return 
    return;
}",1
mmak111,1697938227,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
}",
mmak111,1697938229,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
}",1
mman402,1697745884,1,"void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""%d"", 1);
    }
    else
    {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
mman402,1697745886,2,"void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""%d"", 1);
    }
    else
    {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
mman808,1698039271,1,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }else{
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",
mman808,1698039274,2,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }else{
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",1
mmas199,1698109777,1,"#include <stdio.h>

void ConvertToBinary(int n) 
{

    if (n < 2) 
    {
        printf(""%d"", n);
    } 
    else 
    {

        ConvertToBinary(n / 2);

        printf(""%d"", n % 2);
    }
}
",
mmas199,1698109781,2,"#include <stdio.h>

void ConvertToBinary(int n) 
{

    if (n < 2) 
    {
        printf(""%d"", n);
    } 
    else 
    {

        ConvertToBinary(n / 2);

        printf(""%d"", n % 2);
    }
}
",1
mmca276,1698048076,1,"void ConvertToBinary(int x) {
    if(x <= 1) {
        int y = (x % 2);
        printf(""%d"", y);
    }
    else {
        ConvertToBinary(x/2);
        printf(""%d"", (x % 2));
    }

}",
mmca276,1698048079,2,"void ConvertToBinary(int x) {
    if(x <= 1) {
        int y = (x % 2);
        printf(""%d"", y);
    }
    else {
        ConvertToBinary(x/2);
        printf(""%d"", (x % 2));
    }

}",1
mmcg745,1698022580,1,"#include <stdio.h>


void ConvertToBinary(int number){
 if (number == 0) {
        return;
    }
    ConvertToBinary(number / 2);
    printf(""%d"", number % 2);
}",
mmcg745,1698022585,2,"#include <stdio.h>


void ConvertToBinary(int number){
 if (number == 0) {
        return;
    }
    ConvertToBinary(number / 2);
    printf(""%d"", number % 2);
}",1
mmoh314,1698123181,1,"void ConvertToBinary(int number)
{
	if (number / 2 != 0)
	{
		ConvertToBinary(number/2);
	}
	printf(""%d"", number % 2);
}",
mmoh314,1698123184,2,"void ConvertToBinary(int number)
{
	if (number / 2 != 0)
	{
		ConvertToBinary(number/2);
	}
	printf(""%d"", number % 2);
}",1
mmoh456,1698108395,1,"void ConvertToBinary(int integer)
{
	int base;
	int rec;

	if (integer == 1)
		printf(""1"");

	rec = integer / 2;
	printf(""%d"", rec);
	ConvertToBinary(rec);
}


",
mmoh456,1698108425,2,"void ConvertToBinary(int integer)
{
	
	int rec;

	if (integer == 1)
		printf(""1"");

	rec = integer / 2;
	printf(""%d"", rec);
	ConvertToBinary(rec);
}


",
mmoh456,1698108596,3,"void ConvertToBinary(int integer)
{
	
	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}

	rec = integer / 2;
	printf(""%d"", rec);
	ConvertToBinary(rec);
}


",
mmoh456,1698108725,4,"void ConvertToBinary(int integer)
{
	
	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}

	rec = integer / 2;
	ConvertToBinary(rec);
	printf(""%d"", rec);
	
}


",
mmoh456,1698108791,5,"void ConvertToBinary(int integer)
{
	
	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}

	rec = integer / 2;
	ConvertToBinary(rec);
	printf(""%d"", rec%2);
	
}


",
mmoh456,1698108919,6,"void ConvertToBinary(int integer)
{
	
	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}

	rec = integer / 2;
	printf(""%d"", rec%2);
	ConvertToBinary(rec);
	
}


",
mmoh456,1698108963,7,"void ConvertToBinary(int integer)
{
	
	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}

	rec = integer / 2;
	printf(""%d"", rec%2);
	ConvertToBinary(rec%2);
	
}


",
mmoh456,1698109027,8,"void ConvertToBinary(int integer)
{
	
	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}

	rec = integer / 2;
	rec = rec % 2;
	printf(""%d"", rec);
	ConvertToBinary(rec);
}


",
mmoh456,1698109116,9,"void ConvertToBinary(int integer)
{

	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}

	rec = integer % 2;
	ConvertToBinary(rec);
	printf(""%d"", rec);
}


",
mmoh456,1698109349,10,"void ConvertToBinary(int integer)
{

	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}
	else {
		rec = integer/2;
		printf(""%d"", rec%2);
		ConvertToBinary(rec);
	}
}


",
mmoh456,1698109419,11,"void ConvertToBinary(int integer)
{

	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}
	else {
		rec = integer/2;
		ConvertToBinary(rec);
		printf(""%d"", rec%2);
		
	}
}


",
mmoh456,1698109655,12,"void ConvertToBinary(int integer)
{

	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}
	else {
		rec = integer/2;
		ConvertToBinary(rec%2);
	
		
	}
}


",
mmoh456,1698109706,13,"void ConvertToBinary(int integer)
{

	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}
	else {
		rec = integer/2;
		ConvertToBinary(rec);
		printf(""%d"",integer%2)
	
		
	}
}


",
mmoh456,1698109718,14,"void ConvertToBinary(int integer)
{

	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}
	else {
		rec = integer/2;
		ConvertToBinary(rec);
		printf(""%d"", integer % 2);
	
		
	}
}


",
mmoh456,1698109726,15,"void ConvertToBinary(int integer)
{

	int rec;

	if (integer == 1) {
		printf(""1"");
		return;
	}
	else {
		rec = integer/2;
		ConvertToBinary(rec);
		printf(""%d"", integer % 2);
	
		
	}
}


",1
mnay503,1697540209,1,"#include <stdio.h>

void ConvertToBinary(int n) 
{
    if (n > 0) 
    {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",1
mnic190,1698076947,1,"void ConvertToBinary(int number) {
    int binary[10] = {0};
    int count = 0;
    if (number == 0) {
        printf(""%d"",0);
    }
    while(number > 0) {
        int binary_digit = number % 2;
        binary[count] = binary_digit;
        number = number / 2;
        count ++;
    }
    for (int i = count-1;i >=0;i--) {
        printf(""%d"", binary[i]);
    }
}",
mnic190,1698076949,2,"void ConvertToBinary(int number) {
    int binary[10] = {0};
    int count = 0;
    if (number == 0) {
        printf(""%d"",0);
    }
    while(number > 0) {
        int binary_digit = number % 2;
        binary[count] = binary_digit;
        number = number / 2;
        count ++;
    }
    for (int i = count-1;i >=0;i--) {
        printf(""%d"", binary[i]);
    }
}",0
mnic190,1698076963,3,"void ConvertToBinary(int number) {
    int binary[1000] = {0};
    int count = 0;
    if (number == 0) {
        printf(""%d"",0);
    }
    while(number > 0) {
        int binary_digit = number % 2;
        binary[count] = binary_digit;
        number = number / 2;
        count ++;
    }
    for (int i = count-1;i >=0;i--) {
        printf(""%d"", binary[i]);
    }
}",
mnic190,1698076965,4,"void ConvertToBinary(int number) {
    int binary[1000] = {0};
    int count = 0;
    if (number == 0) {
        printf(""%d"",0);
    }
    while(number > 0) {
        int binary_digit = number % 2;
        binary[count] = binary_digit;
        number = number / 2;
        count ++;
    }
    for (int i = count-1;i >=0;i--) {
        printf(""%d"", binary[i]);
    }
}",1
moco678,1697580491,1,"
int ConvertToBinary(int Value) {
    int Number;


    if (Value == 0) {
        return 0;
    }
    else {
        Number = Value % 2 ;

         
            printf(""%d"", Number);
        

       

        return ConvertToBinary(Value / 2);
    }
    
    
}
",
moco678,1697581417,2,"void ConvertToBinary(int Value) {
    if (Value > 0) {
        ConvertToBinary(Value / 2);
        printf(""%d"", Value % 2);
    }
}

",
moco678,1697581473,3,"void ConvertToBinary(int Value) {

    if (Value > 0) {

        ConvertToBinary(Value / 2);

        printf(""%d"", Value % 2);
    }
}
",
moco678,1697581474,4,"void ConvertToBinary(int Value) {

    if (Value > 0) {

        ConvertToBinary(Value / 2);

        printf(""%d"", Value % 2);
    }
}
",1
mpar342,1698131475,1,"void ConvertToBinary(int n) 
{
    if (n > 0) 
    {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
mpat501,1697428764,1,"void ConvertToBinary(int n)
{
    if (n>1){
        ConvertToBinary(n/2);
    }
     
    printf(""%i"", n%2);
}",
mpat501,1697428768,2,"void ConvertToBinary(int n)
{
    if (n>1){
        ConvertToBinary(n/2);
    }
     
    printf(""%i"", n%2);
}",1
mpey262,1697430310,1,"void ConvertToBinary(int decimal) {
    if (decimal > 0) {
        ConvertToBinary(decimal / 2);
        printf(""%d"", decimal % 2);
    }
}",
mpey262,1697430313,2,"void ConvertToBinary(int decimal) {
    if (decimal > 0) {
        ConvertToBinary(decimal / 2);
        printf(""%d"", decimal % 2);
    }
}",1
mran851,1698105773,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 1) {
        printf (""%d"", n);
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
mran851,1698105781,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 1) {
        printf (""%d"", n);
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
mris618,1698133074,1,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
mris618,1698133077,2,"void ConvertToBinary(int number) {
    if (number > 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
mrog757,1697680417,1,"void ConvertToBinary(int num)
{
    if (num / 2 == 0) {
        printf(""%d"", num);
    }
    else {
        ConvertToBinary((num / 2));
        printf(""%d"", (num % 2));
    }
}",
mrog757,1697680421,2,"void ConvertToBinary(int num)
{
    if (num / 2 == 0) {
        printf(""%d"", num);
    }
    else {
        ConvertToBinary((num / 2));
        printf(""%d"", (num % 2));
    }
}",1
mron793,1697846373,1,"void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""1"");
    }

    else
    {
        ConvertToBinary((n/2));

        printf(""%d"", (n % 2));
    }
}",
mron793,1697846376,2,"void ConvertToBinary(int n)
{
    if (n == 1)
    {
        printf(""1"");
    }

    else
    {
        ConvertToBinary((n/2));

        printf(""%d"", (n % 2));
    }
}",1
mshi672,1697853570,1,"void ConvertToBinary(int value)
{
	if (value == 1)
	{
		printf(""1"");
	}
	else
	{
		ConvertToBinary((value / 2));
		printf(""%d"", (value % 2));
	}
}",
mshi672,1697853573,2,"void ConvertToBinary(int value)
{
	if (value == 1)
	{
		printf(""1"");
	}
	else
	{
		ConvertToBinary((value / 2));
		printf(""%d"", (value % 2));
	}
}",1
msin609,1698022199,1,"void ConvertToBinary(int num) {
	if (num < 2) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",
msin609,1698022201,2,"void ConvertToBinary(int num) {
	if (num < 2) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",1
msuv992,1698058513,1,"void ConvertToBinary(int number) {
    
    
     if (number > 1) {
        ConvertToBinary(number / 2);
    }

    printf(""%d"", number % 2); 

}
",1
mtam709,1698119682,1,"void ConvertToBinary(int input)
{
    if (input < 2)
    {
        printf(""%d"", input);
    }
    else
    {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
mtam709,1698119687,2,"void ConvertToBinary(int input)
{
    if (input < 2)
    {
        printf(""%d"", input);
    }
    else
    {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",1
mtha724,1697509357,1,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""%d"", n % 2);
    } else{
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);        
    }
}",
mtha724,1697509360,2,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""%d"", n % 2);
    } else{
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);        
    }
}",1
mtob213,1698056261,1,"void ConvertToBinary(int n)
{
    if (n == 1 || n == 0){
        printf(""%d"", n);
        return;
    }
    
    ConvertToBinary(n / 2);
    
    printf(""%d"", n % 2);
}",
mtob213,1698056805,2,"void ConvertToBinary(int n)
{
    if (n == 1 || n == 0){
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
mtob213,1698133910,3,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""%d"", n);
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
mtob213,1698133940,4,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""1"");
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
mtob213,1698134026,5,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""1"");
        return;
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
mwan364,1697574876,1,"void ConvertToBinary(int n) {
	int remainder = 0;
	if (n == 1) {
		printf(""%d"", n);
	} else {
		remainder = n % 2;
		n = n / 2;
		ConvertToBinary(n);
		printf(""%d"", remainder);
	}
}",
mwan364,1697574879,2,"void ConvertToBinary(int n) {
	int remainder = 0;
	if (n == 1) {
		printf(""%d"", n);
	} else {
		remainder = n % 2;
		n = n / 2;
		ConvertToBinary(n);
		printf(""%d"", remainder);
	}
}",1
myou984,1697513883,1,"void ConvertToBinary(int n)
{
    if (n == 1 || n == 0) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", (n % 2));
    }
}",
myou984,1697513886,2,"void ConvertToBinary(int n)
{
    if (n == 1 || n == 0) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", (n % 2));
    }
}",1
mzha612,1697401411,1,"void ConvertToBinary(int i){
    printf(""%d"", i % 2); 
    i > 2 ? ConvertToBinary(i / 2): NULL;
}",0
mzha612,1697401449,2,"void ConvertToBinary(int i){
    
    i > 2 ? ConvertToBinary(i / 2): NULL;
    printf(""%d"", i % 2); 
}",0
mzha612,1697401460,3,"void ConvertToBinary(int i){
    
    i > 1 ? ConvertToBinary(i / 2): NULL;
    printf(""%d"", i % 2); 
}",1
nabr105,1697941152,1,"void ConvertToBinary(int binary_num) 
{
    if (binary_num == 1)
    {
        printf(""1"");
    } else {
        int n = binary_num / 2; 
        ConvertToBinary(n); 
        printf(""%d"", (binary_num % 2)); 
    }
}",
nabr105,1697941154,2,"void ConvertToBinary(int binary_num) 
{
    if (binary_num == 1)
    {
        printf(""1"");
    } else {
        int n = binary_num / 2; 
        ConvertToBinary(n); 
        printf(""%d"", (binary_num % 2)); 
    }
}",1
nalg484,1698016364,1,"#include <stdio.h>
void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
nalg484,1698016368,2,"#include <stdio.h>
void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
nask472,1697507770,1," void ConvertToBinary(int n)
 {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
nask472,1697507774,2," void ConvertToBinary(int n)
 {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
ncha509,1697941609,1,"void ConvertToBinary(int num){
    int i;
    if (num==1){
        printf(""%i"",num);
    }else{
        ConvertToBinary(num/2);  
        printf(""%i"",num%2);
    }
}",
ncha509,1697941620,2,"void ConvertToBinary(int num){
    if (num==1){
        printf(""%i"",num);
    }else{
        ConvertToBinary(num/2);  
        printf(""%i"",num%2);
    }
}",
ncha509,1697941623,3,"void ConvertToBinary(int num){
    if (num==1){
        printf(""%i"",num);
    }else{
        ConvertToBinary(num/2);  
        printf(""%i"",num%2);
    }
}",1
ndas832,1697767427,1,"#include <stdio.h>

void ConvertToBinary (int n) {
    if (n==0) {
         return; 
    } else 
    ConvertToBinary(n/2); 
    printf (""%d"", n%2);
} 
",
ndas832,1697767429,2,"#include <stdio.h>

void ConvertToBinary (int n) {
    if (n==0) {
         return; 
    } else 
    ConvertToBinary(n/2); 
    printf (""%d"", n%2);
} 
",1
ndso791,1698098609,1,"void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
ndso791,1698098616,2,"void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
ngam724,1697683999,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n /2);
		printf(""%d"", n % 2);
	}
}",
ngam724,1697684002,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n /2);
		printf(""%d"", n % 2);
	}
}",1
ngan146,1697448935,1,"void ConvertToBinary(int num) {

    if (num > 1){
        printf(""%d"", num%2);
        ConvertToBinary(num/2);
    }else {
        printf(""1"");
    }
}",
ngan146,1697449030,2,"void ConvertToBinary(int num) {

    if (num > 0){
        printf(""%d"", num%2);
        ConvertToBinary(num/2);
    }
    
    }
}",
ngan146,1697449034,3,"void ConvertToBinary(int num) {

    if (num > 0){
        printf(""%d"", num%2);
        ConvertToBinary(num/2);
    }
    

}",
ngan146,1697503487,4,"void ConvertToBinary(int num) {

    if (num > 0){
       
        ConvertToBinary(num/2);
    }
     printf(""%d"", num%2);

}",
ngan146,1697503491,5,"void ConvertToBinary(int num) {

    if (num > 0){
       
        ConvertToBinary(num/2);
    }
     printf(""%d"", num%2);

}",1
ngna565,1697492058,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        
        ConvertToBinary(n / 2);
        
        printf(""%d"", n % 2);
    }
}",
ngna565,1697492063,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        
        ConvertToBinary(n / 2);
        
        printf(""%d"", n % 2);
    }
}",1
nhar865,1697452424,1,"void ConvertToBinary(int num) {
    int digit = num & 1;
    num >>= 1;

    if (num != 0) {
        ConvertToBinary(num);
    }

    printf(""%d"", digit);
}",
nhar865,1697452427,2,"void ConvertToBinary(int num) {
    int digit = num & 1;
    num >>= 1;

    if (num != 0) {
        ConvertToBinary(num);
    }

    printf(""%d"", digit);
}",1
nhrs452,1697492139,1,"#include <stdio.h>

void ConvertToBinary(int input){
    if(input == 1){
        printf(""%d"", input);
    }
    else{
        ConvertToBinary(input/2);
        printf(""%d"", input%2);
    }
}
",
nhrs452,1697492141,2,"#include <stdio.h>

void ConvertToBinary(int input){
    if(input == 1){
        printf(""%d"", input);
    }
    else{
        ConvertToBinary(input/2);
        printf(""%d"", input%2);
    }
}
",1
nhua986,1697510602,1,"void ConvertToBinary(int n)
{
    if (n != 0) {
        if ((n % 2) == (n / 2)){
            printf(""%d"", n);
        } else {
            printf(""%d"", (n % 2));
            ConvertToBinary(n / 2);
        }
    }
    return;
}",
nhua986,1698054974,2,"void ConvertToBinary(int n)
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}",
nhua986,1698054976,3,"void ConvertToBinary(int n)
{
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}",1
nhut042,1697671217,1,"int ConvertToBinary (int number)
{
  if (number == 1)
    {
        printf(""%d"", number);
        return 0;
    }
  else
    {
        ConvertToBinary(number/2) ;
        printf(""%d"",number % 2);
        return 0;
    }
}",
nhut042,1697671224,2,"int ConvertToBinary (int number)
{
  if (number == 1)
    {
        printf(""%d"", number);
        return 0;
    }
  else
    {
        ConvertToBinary(number/2) ;
        printf(""%d"",number % 2);
        return 0;
    }
}",1
nisa397,1697491999,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}
}",
nisa397,1697492005,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}
}",1
njon803,1697533788,1,"void ConvertToBinary(int n)
{
	if (n == 0) {
		return 0;
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}


}",0
njon803,1697533943,2,"void ConvertToBinary(int n)
{
	if (n == 0) {
		return;
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}


}",
njon803,1697533945,3,"void ConvertToBinary(int n)
{
	if (n == 0) {
		return;
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
		
	}


}",1
nlal162,1697891634,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
nlal162,1697891638,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
nmah920,1697766961,1,"void ConvertToBinary(int integer) 
{
    if (integer > 1) 
    {
        ConvertToBinary(integer / 2);
    }
    printf(""%d"", integer % 2);
}",
nmah920,1697766964,2,"void ConvertToBinary(int integer) 
{
    if (integer > 1) 
    {
        ConvertToBinary(integer / 2);
    }
    printf(""%d"", integer % 2);
}",1
nqua370,1698139071,1,"void ConvertToBinary(int num) 
{
    if (num > 1) {
       ConvertToBinary(num / 2);
     }
    
    printf(""%d"", num % 2);
}",
nqua370,1698139074,2,"void ConvertToBinary(int num) 
{
    if (num > 1) {
       ConvertToBinary(num / 2);
     }
    
    printf(""%d"", num % 2);
}",1
nren130,1697887302,1,"void ConvertToBinary(int number) 
{
    
    if (number != 0) {
        
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
        
    
    }
    
    
    
}
",1
nrub019,1697555998,1,"void ConvertToBinary(int number){

    int sum = 0;


    int remainder = number % 2;
    if (number != 0){
        ConvertToBinary(number/2);
        printf(""%d"", remainder);
    }
}",
nrub019,1697556013,2,"void ConvertToBinary(int number){
    int remainder = number % 2;
    if (number != 0){
        ConvertToBinary(number/2);
        printf(""%d"", remainder);
    }
}",
nrub019,1697556020,3,"void ConvertToBinary(int number){
    int remainder = number % 2;
    if (number != 0){
        ConvertToBinary(number/2);
        printf(""%d"", remainder);
    }
}",1
nthe160,1697960001,1,"void PrintReverse(int number) {
    int x = number % 2;
    int y = number / 2;
    printf(""%i"", x);
    if (y > 0) {

        PrintReverse(y);
    }
}",
nthe160,1697960011,2,"void PrintReverse(int number) {
    int x = number % 2;
    int y = number / 2;
    printf(""%i"", x);
    if (y > 0) {
        PrintReverse(y);
    }
}",
nthe160,1697960023,3,"void ConvertToBinary(int number) {
    int x = number % 2;
    int y = number / 2;
    printf(""%i"", x);
    if (y > 0) {
        PrintReverse(y);
    }
}",
nthe160,1697960031,4,"void ConvertToBinary(int number) {
    int x = number % 2;
    int y = number / 2;
    printf(""%i"", x);
    if (y > 0) {
        ConvertToBinary(y);
    }
}",
nthe160,1697960896,5,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%i"", n % 2);
    }
}",
nthe160,1697960979,6,"void ConvertToBinary(int number) {
    if (number == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%i"", number % 2);
    }
}",
nthe160,1697961020,7,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%i"", n % 2);
    }
}",
nthe160,1697961144,8,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    }
    else {
        ConvertToBinary(n / 2);
        printf(""%i"", n % 2);
    }
}",1
ntia856,1697932383,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    
    ConvertToBinary(n / 2);
    
    printf(""%d"", n % 2);
}
",
ntia856,1697932385,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        return;
    }
    
    ConvertToBinary(n / 2);
    
    printf(""%d"", n % 2);
}
",1
ntur101,1697987825,1,"void ConvertToBinary(int number) {
    
    if (number > 0) 
    {
        ConvertToBinary(number / 2);
        printf(""%d"", (number % 2));
    }

    
}",
ntur101,1697987827,2,"void ConvertToBinary(int number) {
    
    if (number > 0) 
    {
        ConvertToBinary(number / 2);
        printf(""%d"", (number % 2));
    }

    
}",1
nwei818,1697501447,1,"void ConvertToBinary(int n){
    if (n > 0){
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
} ",1
nwil850,1697507817,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

void ConvertToBinary(int value){
    if (value > 1){
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);      
}
",
nwil850,1697507819,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

void ConvertToBinary(int value){
    if (value > 1){
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);      
}
",1
nyua944,1697503134,1,"#include <stdio.h>
#include <string.h>

void ConvertToBinary(int n) {
    int binary[100];
    int i;
    
    while (n > 0) {
        binary[i] = n % 2;
        n = n / 2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary[j]);
    }
    
}",
nyua944,1697503135,2,"#include <stdio.h>
#include <string.h>

void ConvertToBinary(int n) {
    int binary[100];
    int i;
    
    while (n > 0) {
        binary[i] = n % 2;
        n = n / 2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary[j]);
    }
    
}",0
nyua944,1697503233,3,"#include <stdio.h>
#include <string.h>

void ConvertToBinary(int n) {
    int binary[100];
    int i;

    if (n == 0) {
        printf(""Binary: 0\n"");
        return;
    }
    
    while (n > 0) {
        binary[i] = n % 2;
        n = n / 2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary[j]);
    }
    
}",0
nyua944,1697503458,4,"#include <stdio.h>
#include <string.h>

void ConvertToBinary(int n) {
    int binary[100];
    int i = 0;

    if (n == 0) {
        printf(""0"");
        return;
    }
    
    while (n > 0) {
        binary[i] = n % 2;
        n = n / 2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary[j]);
    }
    printf(""\n"");
    
}",1
obar199,1698114881,1,"void ConvertToBinary(int a){
    int b = log2(a);
    int c = 0;
    int sum = 0;
    
    for (int i=0;i<=b;i++){
        
        c=(a/(pow(2,i)));
        sum+=(c%2)*(pow(10,i));
        
    }
    printf(""%d"",sum);
}",
obar199,1698114884,2,"void ConvertToBinary(int a){
    int b = log2(a);
    int c = 0;
    int sum = 0;
    
    for (int i=0;i<=b;i++){
        
        c=(a/(pow(2,i)));
        sum+=(c%2)*(pow(10,i));
        
    }
    printf(""%d"",sum);
}",0
obar199,1698116347,3,"void ConvertToBinary(int a){
    int b = log2(a);
    //printf(""%d\n"",a);
    //printf(""%d\n"",b);
    int c = 0;
    //int d = pow(10,9);
    //printf(""%d\n"",d);
    int sum = 0;
    int sum2 = 0;
    if(b<10){
        for (int i=0;i<=b;i++){
            
            c=(a/(pow(2,i)));
            sum+=(c%2)*(pow(10,i));
            
        }
        printf(""%d"",sum);
    }
    else{
        for (int i=0;i<=b-10;i++){
            
            c=(a/(1024*(pow(2,i))));
            //printf(""%d\n"",c);
            sum2+=(c%2)*(pow(10,i));
            
        }
        printf(""%d"",sum2);
        for (int i=0;i<10;i++){
            
            c=(a/(pow(2,i)));
            //printf(""%d\n"",c);
            sum+=(c%2)*(pow(10,i));
            
        }
        printf(""%010d"",sum);
    }
    
}",
obar199,1698116349,4,"void ConvertToBinary(int a){
    int b = log2(a);
    //printf(""%d\n"",a);
    //printf(""%d\n"",b);
    int c = 0;
    //int d = pow(10,9);
    //printf(""%d\n"",d);
    int sum = 0;
    int sum2 = 0;
    if(b<10){
        for (int i=0;i<=b;i++){
            
            c=(a/(pow(2,i)));
            sum+=(c%2)*(pow(10,i));
            
        }
        printf(""%d"",sum);
    }
    else{
        for (int i=0;i<=b-10;i++){
            
            c=(a/(1024*(pow(2,i))));
            //printf(""%d\n"",c);
            sum2+=(c%2)*(pow(10,i));
            
        }
        printf(""%d"",sum2);
        for (int i=0;i<10;i++){
            
            c=(a/(pow(2,i)));
            //printf(""%d\n"",c);
            sum+=(c%2)*(pow(10,i));
            
        }
        printf(""%010d"",sum);
    }
    
}",1
ogab251,1697680810,1,"#include <stdio.h>

void ConvertToBinary(int value)
{
    for (int i = 0; i < value; i++) {
        if (value != 0) {
            sum = value / 2;
        if (sum % 2 == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        value++;
    }
    printf(""%d"", binaryValue);
}",
ogab251,1697680844,2,"#include <stdio.h>

void ConvertToBinary(int value)
{
    int sum;
    int binaryValue;
    
    for (int i = 0; i < value; i++) {
        if (value != 0) {
            sum = value / 2;
        if (sum % 2 == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        value++;
    }
    printf(""%d"", binaryValue);
}",
ogab251,1697680891,3,"#include <stdio.h>

void ConvertToBinary(int value)
{
    int sum;
    int binaryValue;
    
    for (int i = 0; i < value; i++) {
        if (value != 0) {
            sum = value / 2;
        if (sum % 2 == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        value++;
    }
    printf(""%d"", binaryValue);
    ConvertToBinary(value);
}",
ogab251,1697681300,4,"void ConvertToBinary(int value)
{
    int binaryValue;

    if (value == 0) {
        return;
    } else {
        int sum = value / 2;
            
        if (sum % 2 == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        printf(""%d"", binaryValue);
        ConvertToBinary(sum);
    }
}
",
ogab251,1697681320,5,"void ConvertToBinary(int value)
{
    int binaryValue;

    if (value == 0) {
        return;
    } else {
        int sum = value / 2;
            
        if (sum % 2 == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        ConvertToBinary(sum);
        printf(""%d"", binaryValue);
    }
}
",
ogab251,1697681627,6,"void ConvertToBinary(int value)
{
    int binaryValue;

    if (value == 0) {
        return;
    } else {
        int binaryValue = value % 2;
        
        if (binaryValue == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        ConvertToBinary(value / 2);
        printf(""%d"", binaryValue);
    }
}
",
ogab251,1697681695,7,"void ConvertToBinary(int value)
{
    int binaryValue;

    if (value == 0) {
        return;
    } else {
        binaryValue = value % 2;
        
        if (binaryValue == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        ConvertToBinary(value / 2);
        printf(""%d"", binaryValue);
    }
}
",
ogab251,1697681706,8,"void ConvertToBinary(int value)
{
    int binaryValue;

    if (value == 0) {
        return;
    } else {
        binaryValue = value % 2;
        
        if (binaryValue == 0) {
            binaryValue = 0;
        } else {
            binaryValue = 1;
        }
        ConvertToBinary(value / 2);
        printf(""%d"", binaryValue);
    }
}
",1
ogan176,1697519828,1,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""%d"", 1);
    }else{
        printf(""%d"", n % 2);
        ConvertToBinary(n / 2);
    }


}",0
ogan176,1697520036,2,"void ConvertToBinary(int n)
{
    if (n == 0){
        printf(""%d"", 0);
        return;
    }else if (n == 1){
        printf(""%d"", 1);
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);


}",1
ogar584,1697772704,1,"void ConvertToBinary(int value)
{
    if (value > 1)
    {
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);
}",
ogar584,1697772708,2,"void ConvertToBinary(int value)
{
    if (value > 1)
    {
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);
}",1
oguo680,1697854204,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
oguo680,1697854205,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
oko158,1698019663,1,"int ConvertToBinary(n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
	return 0;
}",
oko158,1698019668,2,"int ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
	return 0;
}",
oko158,1698019670,3,"int ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
	return 0;
}",1
opat597,1698039623,1,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n > 1){
        ConvertToBinary(n / 2);
    }

    printf(""%d"", n % 2);
}",1
opre469,1697767541,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		int remainder = n % 2;
		n = n / 2;
		ConvertToBinary(n);
		printf(""%d"", remainder);
	}
}",
opre469,1697767543,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		int remainder = n % 2;
		n = n / 2;
		ConvertToBinary(n);
		printf(""%d"", remainder);
	}
}",1
orow585,1697890492,1,"void ConvertToBinary(int number) {
	if (number == 0) {
		return;
	}
	ConvertToBinary(number / 2);
	printf(""%d"", number % 2);

}",
orow585,1697890495,2,"void ConvertToBinary(int number) {
	if (number == 0) {
		return;
	}
	ConvertToBinary(number / 2);
	printf(""%d"", number % 2);

}",1
osca399,1698048182,1,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}
",
osca399,1698048222,2,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    
   int binary = num % 2;
    printf(""%d"", binary);
}
",
osca399,1698048225,3,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    
   int binary = num % 2;
    printf(""%d"", binary);
}
",1
oshi740,1697666444,1,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"",n);
		return;
	}

	ConvertToBinary(n / 2);
	printf(""%d"", n % 2);
}",
oshi740,1697666446,2,"void ConvertToBinary(int n) {

	if (n == 1) {
		printf(""%d"",n);
		return;
	}

	ConvertToBinary(n / 2);
	printf(""%d"", n % 2);
}",1
pchh683,1698104052,1,"void ConvertToBinary(int Int)
{
    if (Int / 2 == 0)
    {
        printf(""%d"", Int % 2);
    }
    else
    {
        ConvertToBinary(Int / 2);
        printf(""%d"", Int % 2);
    }
}",1
pfil701,1698145135,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);  // Recursive call to convert the quotient
        printf(""%d"", n % 2);     // Print the remainder (binary digit)
    }
}",1
pfon568,1697611457,1,"#include <stdio.h>

void ConvertToBinary(int decimal)
{
    if (decimal > 1)
    {
        ConvertToBinary(decimal / 2);
    }
    
    printf(""%d"", decimal % 2);
}",
pfon568,1697611461,2,"#include <stdio.h>

void ConvertToBinary(int decimal)
{
    if (decimal > 1)
    {
        ConvertToBinary(decimal / 2);
    }
    
    printf(""%d"", decimal % 2);
}",1
phao209,1698141133,1,"void ConvertToBinary (int number) {
    if (int number = 1) {
    printf(""%d"",number);
} else {
    printf(""%d"",number%2);
    ConvertToBinary(number/2) {
    }
}",
phao209,1698141162,2,"void ConvertToBinary (int number) {
    if (int number == 1) {
    printf(""%d"",number);
} else {
    printf(""%d"",number%2);
    ConvertToBinary(number/2) {
    }
}",
phao209,1698141175,3,"void ConvertToBinary (int number) {
    if (int number == 1) {
    printf(""%d"",number);
} else {
    printf(""%d"",number%2);
    ConvertToBinary(number/2); {
    }
}",
phao209,1698141365,4,"void ConvertToBinary (int number) {
    int Binary = 1 || 0;
    if (int number == 1) {
    printf(""%d"",number);
} else {
    (int number%2 == Binary) {
     printf(""%d"",Binary);
     ConvertToBinary(number/2);
    }
}
",
phao209,1698141450,5,"void ConvertToBinary (int number) {
    int Binary = number()%2;
    if (int number == 1) {
    printf(""%d"",number);
} else {
     printf(""%d"",Binary);
     ConvertToBinary(number/2);
    }
}
",
phao209,1698141474,6,"void ConvertToBinary (int number) {
    int number = 0;
    int Binary = number()%2;
    if (int number == 1) {
    printf(""%d"",number);
} else {
     printf(""%d"",Binary);
     ConvertToBinary(number/2);
    }
}
",
phao209,1698141623,7,"void ConvertToBinary (int number) {
    if (number == 1){
      printf(""%d"",number);
    } else {
        ConvertToBinary(number/2);
        printf(""%d"",number%2)
    }
}",
phao209,1698141731,8,"void ConvertToBinary (int number) {
    if (number == 1) {
      printf(""%d"",number);
    } else {
        ConvertToBinary(number/2);
        printf(""%d"",number%2)
    }
}",
phao209,1698141781,9,"#include <stdio.h>

void ConvertToBinary (int number) {
    if (number == 1) {
      printf(""%d"",number);
    } else {
        ConvertToBinary(number/2);
        printf(""%d"",number%2)
    }
}",
phao209,1698142977,10,"#include <stdio.h>

void ConvertToBinary(int number) {
    if (number == 1) { // Number = 1 directly return result
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2); 
    }
}
",
phao209,1698142980,11,"#include <stdio.h>

void ConvertToBinary(int number) {
    if (number == 1) { // Number = 1 directly return result
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2); 
    }
}
",1
pkim777,1697424996,1,"void ConvertToBinary(int n) {
    int recursive, output;
    if (n == 1) {
        printf(""%d"", 1);
    } else {
        recursive = n / 2;
        ConvertToBinary(recursive);
        output = n % 2;
        printf(""%d"", output);
    }
}",1
plah275,1698142806,1,"void ConvertToBinary(int a) {
if (a == 1) {
    
    printf(""1"");
} else {
    ConvertToBinary(a/2);
    printf(""%d"",a%2);
}

}",
plah275,1698142809,2,"void ConvertToBinary(int a) {
if (a == 1) {
    
    printf(""1"");
} else {
    ConvertToBinary(a/2);
    printf(""%d"",a%2);
}

}",1
plan310,1697512369,1,"void ConvertToBinary(int n)
{
    if (n != 1) {
        ConvertToBinary(n / 2);
    }
    
    printf(""%d"", (n % 2));
}",
plan310,1697512375,2,"void ConvertToBinary(int n)
{
    if (n != 1) {
        ConvertToBinary(n / 2);
    }
    
    printf(""%d"", (n % 2));
}",1
ppax865,1697608497,1,"void ConvertToBinary(int num) {
    int tempbinary;
    if (num > 0) {
        ConvertToBinary(num / 2);
        tempbinary = num % 2;
        printf(""%d"", tempbinary);
    }
}
",
ppax865,1697608528,2,"void ConvertToBinary(int num) {
    int tempbinary;
    if (num > 0) {
        ConvertToBinary(num / 2);
        tempbinary = num % 2;
        printf(""%d"", tempbinary);
    }
}
",1
pper327,1697933308,1,"void ConvertToBinary (int input)
{
    //Base Case
    if (input == 1){
        printf (""1"");
    } else { //Recursive Case
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
pper327,1697933311,2,"void ConvertToBinary (int input)
{
    //Base Case
    if (input == 1){
        printf (""1"");
    } else { //Recursive Case
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",1
ppra303,1697978807,1,"void ConvertToBinary(int Numbern) // Define the function
{
    
    if (Numbern > 0) // Here this check ensures that we don't attempt to convert negative numbers or zero
    {
        ConvertToBinary(Numbern / 2); //Binary digits are obtained by repeatedly dividing the number by 2 and recording the remainders
        printf(""%d"", Numbern % 2);   // Print the remainder, 0 or 1
    }
}",
ppra303,1697978811,2,"void ConvertToBinary(int Numbern) // Define the function
{
    
    if (Numbern > 0) // Here this check ensures that we don't attempt to convert negative numbers or zero
    {
        ConvertToBinary(Numbern / 2); //Binary digits are obtained by repeatedly dividing the number by 2 and recording the remainders
        printf(""%d"", Numbern % 2);   // Print the remainder, 0 or 1
    }
}",1
pshe539,1697418915,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n/2 == 0){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",
pshe539,1697418917,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n/2 == 0){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",1
psin207,1698015170,1,"#include <stdio.h>

void ConvertToBinary(int x)
{
    if (x == 1) {
        printf(""%d"", 1);
    }else{ 
      ConvertToBinary(x/2);
      printf(""%d"", x%2);
    }
}",
psin207,1698015173,2,"#include <stdio.h>

void ConvertToBinary(int x)
{
    if (x == 1) {
        printf(""%d"", 1);
    }else{ 
      ConvertToBinary(x/2);
      printf(""%d"", x%2);
    }
}",1
pwat943,1697677690,1,"void ConvertToBinary(int num) {
    // Base case: If the number is 0 or 1, print the corresponding binary digit.
    if (num <= 1) {
        printf(""%d"", num);
    }
    else {
        // Recursively call the function with the integer divided by 2.
        ConvertToBinary(num / 2);
        // Print the remainder (0 or 1) to get the binary representation.
        printf(""%d"", num % 2);
    }
}",
pwat943,1697677710,2,"void ConvertToBinary(int num) {
    // Base case: If the number is 0 or 1, print the corresponding binary digit.
    if (num <= 1) {
        printf(""%d"", num);
    }
    else {
        // Recursively call the function with the integer divided by 2.
        ConvertToBinary(num / 2);
        // Print the remainder (0 or 1) to get the binary representation.
        printf(""%d"", num % 2);
    }
}",1
pwil422,1698123289,1,"void ConvertToBinary(int num)
{
   if (num <= 1) {
      printf(""%d"", num);
   } else {
      PrintReverse(num / 2);
      printf(""%d"", num % 2);  
   }
} ",
pwil422,1698123330,2,"void ConvertToBinary(int num)
{
   if (num <= 1) {
      printf(""%d"", num);
   } else {
      ConvertToBinary(num / 2);
      printf(""%d"", num % 2);  
   }
} ",
pwil422,1698123334,3,"void ConvertToBinary(int num)
{
   if (num <= 1) {
      printf(""%d"", num);
   } else {
      ConvertToBinary(num / 2);
      printf(""%d"", num % 2);  
   }
} ",1
pwu278,1697890208,1,"void ConvertToBinary(int value)
{
	int remainder;
	int result;

	if (value == 0) {
		return;
	}	
	else {
		remainder = value % 2;
		result = value / 2;

		ConvertToBinary(result);

		printf(""%d"", remainder);
	}
}",
pwu278,1697890211,2,"void ConvertToBinary(int value)
{
	int remainder;
	int result;

	if (value == 0) {
		return;
	}	
	else {
		remainder = value % 2;
		result = value / 2;

		ConvertToBinary(result);

		printf(""%d"", remainder);
	}
}",1
pxie161,1697454742,1,"void ConvertToBinary(int x){

if(x == 0){
    printf(""0"");
    return;
}

if(x == 1){
    printf(""1"");
    return;
}

else{
    ConvertToBinary(x/2);
    printf(""%d"", x%2);
}
",0
pxie161,1697454783,2,"void ConvertToBinary(int x){

if(x == 0){
    printf(""0"");
    return;
}

if(x == 1){
    printf(""1"");
    return;
}

else{
    ConvertToBinary(x/2);
    printf(""%d"", x%2);
}
",
pxie161,1697454890,3,"

void ConvertToBinary(int x){

if(x == 0){
    printf(""0"");
    return;
}

if(x == 1){
    printf(""1"");
    return;
}

else{
    ConvertToBinary(x/2);
    printf(""%d"", x%2);
}


}",
pxie161,1697454892,4,"

void ConvertToBinary(int x){

if(x == 0){
    printf(""0"");
    return;
}

if(x == 1){
    printf(""1"");
    return;
}

else{
    ConvertToBinary(x/2);
    printf(""%d"", x%2);
}


}",1
pyou182,1697618822,1,"#include <stdio.h>

int ConvertToBinary(int n)
{

    if (n == 1) {
        printf(""%d "", n); 
    } else {
        printf(""%d "", (n % 2));
        return ConvertToBinary(n / 2);
    }

    return 0;
}",
pyou182,1697618843,2,"#include <stdio.h>

int ConvertToBinary(int n)
{

    if (n == 1) {
        printf(""%d"", n); 
    } else {
        printf(""%d"", (n % 2));
        return ConvertToBinary(n / 2);
    }

    return 0;
}",
pyou182,1697619194,3,"void ConvertToBinary(int n)
{

    if (n <= 1) {
        printf(""%d"", n); 
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", (n % 2));
    }

}",
pyou182,1697619198,4,"void ConvertToBinary(int n)
{

    if (n <= 1) {
        printf(""%d"", n); 
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", (n % 2));
    }

}",1
qche619,1698122881,1,"#include <stdio.h>

void ConvertToBinary(int number) {
    if (number >= 0 && number < 2) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
qche619,1698122885,2,"#include <stdio.h>

void ConvertToBinary(int number) {
    if (number >= 0 && number < 2) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
qkan386,1697418047,1,"void ConvertToBinary(int decimal) {

	if (decimal == 1) {
		printf(""1"");
	}

	else if (decimal == 0) {
		printf(""0"");
	}
	
	else {
		ConvertToBinary(decimal / 2);
		printf(""%d"", decimal % 2);
	}
	
}",
qkan386,1697418049,2,"void ConvertToBinary(int decimal) {

	if (decimal == 1) {
		printf(""1"");
	}

	else if (decimal == 0) {
		printf(""0"");
	}
	
	else {
		ConvertToBinary(decimal / 2);
		printf(""%d"", decimal % 2);
	}
	
}",1
qmcc945,1697420423,1,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""1 "");
        return;
    } else {
        ConvertToBinary(value / 2);
        printf(""%d "", (value % 2));
    }
}",
qmcc945,1697420435,2,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""1"");
        return;
    } else {
        ConvertToBinary(value / 2);
        printf(""%d"", (value % 2));
    }
}",
qmcc945,1697420438,3,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""1"");
        return;
    } else {
        ConvertToBinary(value / 2);
        printf(""%d"", (value % 2));
    }
}",1
qtra338,1697867084,1,"void ConvertToBinary(int decimalNum) {

    if (decimalNum == 1) {
        printf(""%d"",decimalNum);
        return; 
    } else {
        ConvertToBinary(decimalNum / 2);
    }

    printf(""%d"",decimalNum % 2);
}",
qtra338,1697867086,2,"void ConvertToBinary(int decimalNum) {

    if (decimalNum == 1) {
        printf(""%d"",decimalNum);
        return; 
    } else {
        ConvertToBinary(decimalNum / 2);
    }

    printf(""%d"",decimalNum % 2);
}",1
qwu129,1698141801,1,"void ConvertToBinary(int n) {
        if (n==0){
                return;
        }
        ConvertToBinary (n/2);
        
        int remainder = n%2;
        printf(""%d"",remainder);
}
",
qwu129,1698141803,2,"void ConvertToBinary(int n) {
        if (n==0){
                return;
        }
        ConvertToBinary (n/2);
        
        int remainder = n%2;
        printf(""%d"",remainder);
}
",1
qzho943,1697423632,1,"void ConvertToBinary(int n) {
    // Base case
    if (n == 0) {
        printf(""%d"",n);
        return;
    }
    
    // Recursive case
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
qzho943,1697423635,2,"void ConvertToBinary(int n) {
    // Base case
    if (n == 0) {
        printf(""%d"",n);
        return;
    }
    
    // Recursive case
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
raic989,1697971100,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary((n / 2));
		printf(""%d"", (n % 2));
	}
}",
raic989,1697971105,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary((n / 2));
		printf(""%d"", (n % 2));
	}
}",1
rand321,1697453197,1,"void ConvertToBinary(int num){
 
 if(num == 1){
     printf(""%d"", 1);
 }else{
    ConvertToBinary(num / 2);
    printf(""%d"", (num % 2));
    
 }
    
}",
rand321,1697453199,2,"void ConvertToBinary(int num){
 
 if(num == 1){
     printf(""%d"", 1);
 }else{
    ConvertToBinary(num / 2);
    printf(""%d"", (num % 2));
    
 }
    
}",1
rbaj698,1698113940,1,"void ConvertToBinary (int n)

{
	if (n > 0) {
		n = n / 2;
		r = n % 2;
			if (r % 10 == r) {
				printf(""%d"" , r % 10);
			} else {
				printf(""%d"" , r % 10);
				ConvertToBinary(n / 10);
			}
		}
}
",
rbaj698,1698113960,2,"void ConvertToBinary (int n)

{
	if (n > 0) {
		n = n / 2;
		int r = n % 2;
			if (r % 10 == r) {
				printf(""%d"" , r % 10);
			} else {
				printf(""%d"" , r % 10);
				ConvertToBinary(n / 10);
			}
		}
}
",
rbaj698,1698114166,3,"void ConvertToBinary (int n)

{
	if (n > 0) {
		int r = n % 2;
		ConvertToBinary(n / 2);
		printf(""%d"" , r );
		}
}
",
rbaj698,1698114168,4,"void ConvertToBinary (int n)

{
	if (n > 0) {
		int r = n % 2;
		ConvertToBinary(n / 2);
		printf(""%d"" , r );
		}
}
",1
rbat374,1697684986,1,"void ConvertToBinary(int num) {
    int q, r;
    q = num / 2;
    r = num % 2;
    printf(""%d"", r);
    if (q > 0) {
        ConvertToBinary(q);
    }
}",
rbat374,1697685042,2,"void ConvertToBinary(int num) {
    int q, r;
    q = num / 2;
    r = num % 2;
    if (q > 0) {
        ConvertToBinary(q);
    }
    printf(""%d"", r);
}",
rbat374,1697685044,3,"void ConvertToBinary(int num) {
    int q, r;
    q = num / 2;
    r = num % 2;
    if (q > 0) {
        ConvertToBinary(q);
    }
    printf(""%d"", r);
}",1
rbat561,1697446913,1,"void ConvertToBinary(int number) {
    if (number == 0)
    {
        return;
    } else 
    {  
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
rbat561,1697446917,2,"void ConvertToBinary(int number) {
    if (number == 0)
    {
        return;
    } else 
    {  
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
rbui853,1697461455,1,"void ConvertToBinary(int values)
{
    if (values == 1) {
        printf(""%d"", values);
    }
    else {
        ConvertToBinary(values / 2);
        printf(""%d"", values % 2);
    }
}",
rbui853,1697461457,2,"void ConvertToBinary(int values)
{
    if (values == 1) {
        printf(""%d"", values);
    }
    else {
        ConvertToBinary(values / 2);
        printf(""%d"", values % 2);
    }
}",1
rbus291,1697600378,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
rchi339,1698022361,1,"ConvertToBinary(int num) 
{ 
    
    if (num == 1){
        printf(""%d"", 1);
    }
    else{
        int binaryDigit = num % 2;
        int remainingNum = num / 2;
        
        ConvertToBinary(remainingNum);
        printf(""%d"", binaryDigit);
    }
}",
rchi339,1698022373,2,"void ConvertToBinary(int num) 
{ 
    
    if (num == 1){
        printf(""%d"", 1);
    }
    else{
        int binaryDigit = num % 2;
        int remainingNum = num / 2;
        
        ConvertToBinary(remainingNum);
        printf(""%d"", binaryDigit);
    }
}",
rchi339,1698022377,3,"void ConvertToBinary(int num) 
{ 
    
    if (num == 1){
        printf(""%d"", 1);
    }
    else{
        int binaryDigit = num % 2;
        int remainingNum = num / 2;
        
        ConvertToBinary(remainingNum);
        printf(""%d"", binaryDigit);
    }
}",1
rcou530,1697947718,1,"void ConvertToBinary(int n){

	if (n != 0){
		ConvertToBinary(n/2);

		int binaryDigit = n % 2;
		printf(""%d"", binaryDigit);
	}
	return;
}",
rcou530,1697947721,2,"void ConvertToBinary(int n){

	if (n != 0){
		ConvertToBinary(n/2);

		int binaryDigit = n % 2;
		printf(""%d"", binaryDigit);
	}
	return;
}",1
rdas322,1698106480,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);  
    }
    printf(""%d"", n % 2);   
}


",
rdas322,1698106483,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);  
    }
    printf(""%d"", n % 2);   
}


",1
rdic384,1698129188,1,"void ConvertToBinary(int value) {
    if (value > 1) {
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);
}
",
rdic384,1698129194,2,"void ConvertToBinary(int value) {
    if (value > 1) {
        ConvertToBinary(value / 2);
    }
    printf(""%d"", value % 2);
}
",1
rdon807,1698115235,1,"void ConvertToBinary(int number) {

    if (number == 0) {
        
        return;
    }

    if (number > 0) {

        ConvertToBinary(number / 2);

        printf(""%d"", number % 2);
    }
}",
rdon807,1698115249,2,"void ConvertToBinary(int number) {

    if (number == 0) {
        
        return;
    }

    if (number > 0) {

        ConvertToBinary(number / 2);

        printf(""%d"", number % 2);
    }
}",1
rdun690,1697890108,1,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",
rdun690,1697890111,2,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",1
rger104,1697626958,1,"void  ConvertToBinary(int input)
{
	if (input==1) {
		printf(""1"");
	} else if (input == 0) {
		printf(""0"");
		//It doesn't need this but it prevents it breaking if 0 is input
	} else {
		ConvertToBinary(input/2);
		printf(""%d"",input%2);
	}
}",
rger104,1697626961,2,"void  ConvertToBinary(int input)
{
	if (input==1) {
		printf(""1"");
	} else if (input == 0) {
		printf(""0"");
		//It doesn't need this but it prevents it breaking if 0 is input
	} else {
		ConvertToBinary(input/2);
		printf(""%d"",input%2);
	}
}",1
rgre692,1698138216,1,"void ConvertToBinary(int number) {
    if (number >= 2) {
        ConvertToBinary(number / 2);
    }
    
    printf(""%d"", number % 2);
}",
rgre692,1698138218,2,"void ConvertToBinary(int number) {
    if (number >= 2) {
        ConvertToBinary(number / 2);
    }
    
    printf(""%d"", number % 2);
}",1
rhen291,1698131638,1,"#include <stdio.h>

void ConvertToBinary(int num)
{
	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",
rhen291,1698131641,2,"#include <stdio.h>

void ConvertToBinary(int num)
{
	if (num == 1) {
		printf(""%d"", num);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",1
rkan756,1697581600,1,"void ConvertToBinary(int n)
{
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
rkan756,1697581604,2,"void ConvertToBinary(int n)
{
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
rkar406,1697667683,1,"void ConvertToBinary(int n){
    if (n>0){
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",
rkar406,1697667689,2,"void ConvertToBinary(int n){
    if (n>0){
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",1
rkar406,1697752781,3,"void ConvertToBinary(int n){
    if (n>0){
        printf(""%d"",n%2);
        ConvertToBinary(n/2);
    }
}",
rkar406,1697752818,4,"void ConvertToBinary(int n){
    if (n>0){
        ConvertToBinary(n/2);
         printf(""%d"",n%2);
    }
}",
rkar406,1697752920,5,"void ConvertToBinary(int n){
    if (n>0){
        ConvertToBinary(n/2);
         printf(""%d"",n%2);
    }
}",1
rkha931,1697442002,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
rkha931,1697442007,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
rkir245,1698136632,1,"void ConvertToBinary(int n) 
{
    if (n == 1)
    {
        printf(""%d"", n);
    }
    else
    {
        int binary = n / 2;
        while (binary > 0)
        {
            int binary_mod = binary % 2;
            printf(""%d"", binary_mod);
            binary = binary / 2;
        }

        int last_print = n % 2;

        printf(""%d"", last_print);   
    }
}",
rkir245,1698137053,2,"void ConvertToBinary(int n) 
{
    if (n == 1)
    {
        printf(""%d"", n);
    }
    else
    {
        int divide = n / 2;
        ConvertToBinary(divide);

        int binary_num = n % 2;
        printf(""%d"", binary_num);
    }
}",
rkir245,1698137056,3,"void ConvertToBinary(int n) 
{
    if (n == 1)
    {
        printf(""%d"", n);
    }
    else
    {
        int divide = n / 2;
        ConvertToBinary(divide);

        int binary_num = n % 2;
        printf(""%d"", binary_num);
    }
}",1
rleg709,1698116461,1,"#include <stdio.h>
#define BASE 2

void  ConvertToBinary(int integer) 
{
    int quotient, mod;
    if (integer > 1) {
        quotient = integer / BASE; 
        ConvertToBinary(quotient); 
    }
        mod = integer % BASE;
        printf(""%d"", mod); // Keep printing the remainders until the quotient becomes 0
}",
rleg709,1698116463,2,"#include <stdio.h>
#define BASE 2

void  ConvertToBinary(int integer) 
{
    int quotient, mod;
    if (integer > 1) {
        quotient = integer / BASE; 
        ConvertToBinary(quotient); 
    }
        mod = integer % BASE;
        printf(""%d"", mod); // Keep printing the remainders until the quotient becomes 0
}",1
rlin108,1697503821,1,"void ConvertToBinary(int number)
{
    // Base case
    if (number / 2 == 0) {
        printf(""%d"", number);
    }
    // Recursive Case
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
rmar633,1698110899,1,"void ConvertToBinary(int n){

int divisor = 0;
if (n == 1) {
 
} else {
    divisor = n/2;
    ConvertToBinary(divisor);
}
if (n % 2 == 0){
    printf(""0"");
} else {
    printf(""1"");
}
}",
rmar633,1698110903,2,"void ConvertToBinary(int n){

int divisor = 0;
if (n == 1) {
 
} else {
    divisor = n/2;
    ConvertToBinary(divisor);
}
if (n % 2 == 0){
    printf(""0"");
} else {
    printf(""1"");
}
}",1
rmur989,1697718530,1,"void ConvertToBinary(int quo) {
    int binary[100] = {0};
    int i = 0;
    
    while (quo > 0) {
        binary[i] = quo % 2;
        quo = quo / 2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
}",
rmur989,1697718532,2,"void ConvertToBinary(int quo) {
    int binary[100] = {0};
    int i = 0;
    
    while (quo > 0) {
        binary[i] = quo % 2;
        quo = quo / 2;
        i++;
    }
    
    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
}",1
rnga701,1697701042,1,"void ConvertToBinary(int n){
    if (n==1){
        printf(""%d"",n);
    }else{
        int rem=n/2;
        ConvertToBinary(rem);
        int rest =n % 2;
        printf(""%d"",rest);
        
    }
}",
rnga701,1697701044,2,"void ConvertToBinary(int n){
    if (n==1){
        printf(""%d"",n);
    }else{
        int rem=n/2;
        ConvertToBinary(rem);
        int rest =n % 2;
        printf(""%d"",rest);
        
    }
}",1
rnig735,1698035618,1,"void ConvertToBinary(int n)
{
    int backwards[15], i=0;
    if (n>1) {
        while ((n != 1)&&(n!=0)) {
            backwards[i] = n%2;
            n=n/2;
            i++;
        }
    } else if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    }
    for (int j=(i-1); j>=0; j--) {
        printf(""%d"", backwards[j]);
    }
}",
rnig735,1698035631,2,"void ConvertToBinary(int n)
{
    int backwards[15], i=0;
    if (n>1) {
        while ((n != 1)&&(n!=0)) {
            backwards[i] = n%2;
            n=n/2;
            i++;
        }
    } else if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    }
    for (int j=i; j>=0; j--) {
        printf(""%d"", backwards[j]);
    }
}",
rnig735,1698035645,3,"void ConvertToBinary(int n)
{
    int backwards[15], i=0;
    if (n>1) {
        while ((n != 1)&&(n!=0)) {
            backwards[i] = n%2;
            n=n/2;
            i++;
        }
    } else if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    }
    for (int j=(i-1); j>=0; j--) {
        printf(""%d"", backwards[j]);
    }
}",
rnig735,1698035681,4,"void ConvertToBinary(int n)
{
    int backwards[15], i=0;
    
    while ((n != 1)&&(n!=0)) {
        backwards[i] = n%2;
        n=n/2;
        i++;
    }
    if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    }
    for (int j=(i-1); j>=0; j--) {
        printf(""%d"", backwards[j]);
    }
}",
rnig735,1698035688,5,"void ConvertToBinary(int n)
{
    int backwards[15], i=0;
    
    while ((n != 1)&&(n!=0)) {
        backwards[i] = n%2;
        n=n/2;
        i++;
    }
    if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    }
    for (int j=(i-1); j>=0; j--) {
        printf(""%d"", backwards[j]);
    }
}",1
rnig735,1698095026,6,"void ConvertToBinary(int n)
{
    if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    } else {
        n=n/2;
        ConvertToBinary(n);
        printf(""%d"",n%2);
    }
}",
rnig735,1698095167,7,"void ConvertToBinary(int n)
{
    if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",
rnig735,1698095170,8,"void ConvertToBinary(int n)
{
    if (n==1) {
        printf(""1"");
    } else if (n==0) {
        printf(""0"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
    }
}",1
rpar376,1697680247,1,"void ConvertToBinary(int passedin) {
    
    int lsd=passedin%2;
    int passedthrough=passedin/2;
    
    if (passedthrough==0) {
        printf(""%d"",lsd);
    } else {
        printf(""%d"",lsd);
        ConvertToBinary(passedthrough);
    }
    
}",
rpar376,1697681960,2,"void ConvertToBinary(int passedin) {
    
    int lsd;
    int passedthrough=passedin/2;
    
    if (passedin!=0) {
        ConvertToBinary(passedthrough);
        printf(""%d"",passedin%2);
    }
}",
rpar376,1697681973,3,"void ConvertToBinary(int passedin) {
    
    int passedthrough=passedin/2;
    
    if (passedin!=0) {
        ConvertToBinary(passedthrough);
        printf(""%d"",passedin%2);
    }
}",
rpar376,1697681975,4,"void ConvertToBinary(int passedin) {
    
    int passedthrough=passedin/2;
    
    if (passedin!=0) {
        ConvertToBinary(passedthrough);
        printf(""%d"",passedin%2);
    }
}",1
rpat943,1697504946,1,"#include <stdio.h>

void ConvertToBinary(int decimal) {
    
    
    if (decimal > 0) {
        ConvertToBinary(decimal / 2);
        printf(""%d"", decimal % 2);
    }
}
",1
rraj313,1697506182,1,"void recursiveConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    recursiveConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",
rraj313,1697506194,2,"void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",
rraj313,1697506197,3,"void ConvertToBinary(int num) {
    if (num == 0) {
        return;
    }
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",1
rroz381,1697759550,1,"void ConvertToBinary(int num)
{
    int remainders[100];
    int i = 0;
    int j;
    
    while (num > 0) {
        remainders[i] = num % 2;
        num = num / 2;
        i++;
    }
    
    for(j = i - 1; j >= 0; j--) {
        printf(""%d"", remainders[j]);
    }
}",
rroz381,1697759553,2,"void ConvertToBinary(int num)
{
    int remainders[100];
    int i = 0;
    int j;
    
    while (num > 0) {
        remainders[i] = num % 2;
        num = num / 2;
        i++;
    }
    
    for(j = i - 1; j >= 0; j--) {
        printf(""%d"", remainders[j]);
    }
}",1
rsha769,1698042236,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
rsha769,1698044575,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
rsha970,1697972542,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
rsha970,1697972545,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
rsin531,1698114241,1,"#include <stdio.h>

void ConvertToBinary(int number) {
    
    if (number == 0 || number == 1) {
        printf(""%d"", number);
    } else {
        
        ConvertToBinary(number / 2);
        
        printf(""%d"", number % 2);
    }
}",
rsin531,1698114243,2,"#include <stdio.h>

void ConvertToBinary(int number) {
    
    if (number == 0 || number == 1) {
        printf(""%d"", number);
    } else {
        
        ConvertToBinary(number / 2);
        
        printf(""%d"", number % 2);
    }
}",1
rsin719,1697447610,1,"#include <stdio.h>

void ConvertToBinary(int number) {
    if (number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", number % 2);
}",
rsin719,1697447612,2,"#include <stdio.h>

void ConvertToBinary(int number) {
    if (number > 1) {
        ConvertToBinary(number / 2);
    }
    printf(""%d"", number % 2);
}",1
rsmi948,1697684772,1,"void ConvertToBinary(int inputInt)
{
    int final_one = 0;
    int count = 0;
    int binaryArray[100] = {0};

    while (inputInt != 0){
        if (inputInt % 2 == 0){
            binaryArray[count] = 0;
        } else {
            binaryArray[count] = 1;
            final_one = count;
        }
        inputInt -= (double)inputInt / 2;
        count++;
    }

    for (int i = final_one; i > -1; i--) {
        printf(""%d"", binaryArray[i]);
    }
    return;
}",1
rsta265,1697529653,1,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"",n);
    }
    else{
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",
rsta265,1697529657,2,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"",n);
    }
    else{
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",1
rtan654,1697507910,1,"void ConvertToBinary(int n){
    if (n == 0){
        return; // Base case: Stop recursion when n is zero
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2); // Print the remainder
    }
}",
rtan654,1697507912,2,"void ConvertToBinary(int n){
    if (n == 0){
        return; // Base case: Stop recursion when n is zero
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2); // Print the remainder
    }
}",1
rtap592,1698128274,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        // Recursive call to print binary equivalent of the quotient
        ConvertToBinary(n / 2);
        // Print the remainder, which is the binary digit
        printf(""%d"", n % 2);
    }
}
",
rtap592,1698128356,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        // Recursive call to print binary equivalent of the quotient
        ConvertToBinary(n / 2);
        // Print the remainder, which is the binary digit
        printf(""%d"", n % 2);
    }
}
",1
rvog842,1698104750,1,"#include <stdio.h>

void ConvertToBinary(int n) {
if (n == 0) {
    return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
rvog842,1698104755,2,"#include <stdio.h>

void ConvertToBinary(int n) {
if (n == 0) {
    return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
rwar748,1697441240,1,"#include <stdio.h>

void ConvertToBinary(int number){
    if(number==0){
        return;
    }

    else{
    ConvertToBinary(number/2);
    printf(""%d"", number % 2);
}
}",
rwar748,1697441242,2,"#include <stdio.h>

void ConvertToBinary(int number){
    if(number==0){
        return;
    }

    else{
    ConvertToBinary(number/2);
    printf(""%d"", number % 2);
}
}",1
rzha972,1697518306,1,"void ConvertBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        printf(""%d"", n%2);
        ConvertBinary(n/2);
        
    }
}",
rzha972,1697518325,2,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        printf(""%d"", n%2);
        ConvertBinary(n/2);
        
    }
}",
rzha972,1697518333,3,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        printf(""%d"", n%2);
        ConvertToBinary(n/2);
        
    }
}",
rzha972,1697518413,4,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        printf(""%d"", (n/2)%2);
        printf(""%d"", n%2)
        ConvertToBinary(n/2);
        
    }
}",
rzha972,1697518417,5,"void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        printf(""%d"", (n/2)%2);
        printf(""%d"", n%2);
        ConvertToBinary(n/2);
        
    }
}",
rzha972,1697518499,6,"#include <stdio.h>

void ConvertBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        ConvertBinary(n/2);
        printf(""%d"", n%2);
        
        
    }
}
",
rzha972,1697518507,7,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
        
        
    }
}
",
rzha972,1697518510,8,"#include <stdio.h>

void ConvertToBinary(int n){
    if (n == 1){
        printf(""%d"", n);
    }
    else{
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
        
        
    }
}
",1
sabo272,1697488162,1,"#include <stdio.h>
void ConvertToBinary(int n)
{
	if (n <= 1){
		printf(""%d"", n); // append last digit (1 or 0)
	} else{
		ConvertToBinary(n/2);
		printf(""%d"", n%2); // Print remainders in reverse.
		
	}
}",
sabo272,1697488166,2,"#include <stdio.h>
void ConvertToBinary(int n)
{
	if (n <= 1){
		printf(""%d"", n); // append last digit (1 or 0)
	} else{
		ConvertToBinary(n/2);
		printf(""%d"", n%2); // Print remainders in reverse.
		
	}
}",1
sali153,1697787963,1,"void ConvertToBinary(int numToConvert) {

	if (numToConvert == 1)
	{
		printf(""%d"", numToConvert);
	}
	else
	{
		printf(""%d"", numToConvert % 2);
		ConvertToBinary(numToConvert / 2);
	}

}",
sali153,1697788094,2,"void ConvertToBinary(int numToConvert) {

	if (numToConvert == 1)
	{
		printf(""%d"", numToConvert);
	}
	else
	{
		ConvertToBinary(numToConvert / 2);
		printf(""%d"", numToConvert % 2);
		
	}

}",
sali153,1697788096,3,"void ConvertToBinary(int numToConvert) {

	if (numToConvert == 1)
	{
		printf(""%d"", numToConvert);
	}
	else
	{
		ConvertToBinary(numToConvert / 2);
		printf(""%d"", numToConvert % 2);
		
	}

}",1
sban919,1697463227,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    
    if (n == 0){
        printf(""%d"", n);
    }
    
    /* Find number of the binary digits. */
    int length = 0;
    int temp = n;
    while (temp != 0){
        temp /= 2;
        length ++;
    }
    
    /* Initialise binary array. */
    int binary[length];
    
    /* Place binary number to binary array, which will be reverse. */
    for (int i = 0; n > 0; i++){
    binary[i] = n % 2;
    n /= 2;
    }
    
    /* Print binary reverse for equivalent. */
    for (int i = length - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",1
sbas887,1698040424,1,"void ConvertToBinary(int number) {
	if (number / 2 == 0) {
		printf(""%d"", number % 2);
	}
	else {
		printf(""%d"", number % 2);
		number = number / 2;
		ConvertToBinary(number);
	}
}",
sbas887,1698041429,2,"void ConvertToBinary(int number) {

	if (number == 0) {
		return;
	}
	else {
		ConvertToBinary(number/2);
		printf(""%d"", number % 2);
	}
}",
sbas887,1698041435,3,"void ConvertToBinary(int number) {

	if (number == 0) {
		return;
	}
	else {
		ConvertToBinary(number/2);
		printf(""%d"", number % 2);
	}
}",1
sben564,1697878287,1,"void ConvertToBinary(int x) {
    
    if (x > 0) {
        ConvertToBinary(x / 2);
        printf(""%d"", x % 2);
    }
        
}",
sben564,1697878289,2,"void ConvertToBinary(int x) {
    
    if (x > 0) {
        ConvertToBinary(x / 2);
        printf(""%d"", x % 2);
    }
        
}",1
sbha564,1698098588,1,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
sbha564,1698098591,2,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
sbou664,1698143235,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2); // Recursively call with the quotient
        printf(""%d"", (num % 2));    // Print the remainder (0 or 1)
    }

}",
sbou664,1698143240,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2); // Recursively call with the quotient
        printf(""%d"", (num % 2));    // Print the remainder (0 or 1)
    }

}",1
sbou664,1698143278,3,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2); 
        printf(""%d"", (num % 2));
    }

}",1
sbro373,1697492601,1,"void ConvertToBinary(int number)
{
    if (number == 0) {
        printf(""0"");
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", (number % 2));
    }
}",
sbro373,1697492616,2,"void ConvertToBinary(int number)
{
    if (number == 0) {
        printf(""0"");
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", (number % 2));
    }
}",1
scar362,1697628122,1,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""%d"", n);
    } else {
        ConvertToBinary((n/2));
        printf(""%d"", (n%2));
    }
    
}",
scar362,1697628125,2,"void ConvertToBinary(int n)
{
    if (n == 1){
        printf(""%d"", n);
    } else {
        ConvertToBinary((n/2));
        printf(""%d"", (n%2));
    }
    
}",1
sche525,1697802063,1,"void ConvertToBinary(int number)
{
    if (number == 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
sche525,1697802065,2,"void ConvertToBinary(int number)
{
    if (number == 1) {
        printf(""%d"", number);
    } else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
scho575,1698019838,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
scho575,1698019842,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
schu718,1697767393,1,"#include <stdio.h>

void ConvertToBinary(int decimal)
{
    
    if (decimal == 0)
    {
        return;
    }
    else 
    {
        ConvertToBinary(decimal/2);
        printf(""%d"", decimal % 2);
    }
}
",
schu718,1697767396,2,"#include <stdio.h>

void ConvertToBinary(int decimal)
{
    
    if (decimal == 0)
    {
        return;
    }
    else 
    {
        ConvertToBinary(decimal/2);
        printf(""%d"", decimal % 2);
    }
}
",1
schu800,1697944033,1,"void ConvertToBinary(int integer){
        if (integer==1){
                printf(""%d"",integer);
        }
        else{
                ConvertToBinary(integer/2);
                printf(""%d"",integer%2);
        }
}",
schu800,1697944035,2,"void ConvertToBinary(int integer){
        if (integer==1){
                printf(""%d"",integer);
        }
        else{
                ConvertToBinary(integer/2);
                printf(""%d"",integer%2);
        }
}",1
scol559,1698116903,1,"void ConvertToBinary(int number)
{
    if (number == 1)
    {
        printf(""1"");
        return;
    }
    else
    {

        int r = number / 2;
        int b = number % 2;
        ConvertToBinary(r);
        printf(""%d"", b);

    }
}",
scol559,1698116905,2,"void ConvertToBinary(int number)
{
    if (number == 1)
    {
        printf(""1"");
        return;
    }
    else
    {

        int r = number / 2;
        int b = number % 2;
        ConvertToBinary(r);
        printf(""%d"", b);

    }
}",1
sdal739,1697966612,1,"void ConvertToBinary(int n) {
	if (n < 1) {
		printf(""%d"", n % 2);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
sdal739,1697966615,2,"void ConvertToBinary(int n) {
	if (n < 1) {
		printf(""%d"", n % 2);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
sden589,1698131957,1,"void ConvertToBinary(int num) {
    if (num < 2) {
        printf(""%d"", num);
        return;
    }

    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",
sden589,1698132111,2,"void ConvertToBinary(int integer) {
    if (integer < 2) {
        printf(""%d"", integer);
        return;
    }

    ConvertToBinary(integer / 2);
    printf(""%d"", integer % 2);
}",
sden589,1698132138,3,"void ConvertToBinary(int integer) {
    if (integer < 2) {
        printf(""%d"", integer);
        return;
    }

    ConvertToBinary(integer / 2);
    printf(""%d"", integer % 2);
}",1
sekb555,1697429650,1,"void ConvertToBinary(int n)
{
    //base case: if the number is 1 or less then the function stops
    if(n <= 1)
    {
        printf(""%d"", n%2);
        return;
    }
    else
    {
        ConvertToBinary(n/2);
    }
    printf(""%d"", n%2);
    

}",1
sgal263,1698048303,1,"void ConvertToBinary(int decimal){

int array[10000] = {0}; 
int i = 0;

	while (decimal != 0){
	array[i] = decimal % 2;
	decimal = decimal / 2; 
	i++;
	}

	for (int j = i - 1; j >= 0; j--){
	printf(""%d"", array[j]);
	}

}
",
sgal263,1698048307,2,"void ConvertToBinary(int decimal){

int array[10000] = {0}; 
int i = 0;

	while (decimal != 0){
	array[i] = decimal % 2;
	decimal = decimal / 2; 
	i++;
	}

	for (int j = i - 1; j >= 0; j--){
	printf(""%d"", array[j]);
	}

}
",1
sgal263,1698055351,3,"void ConvertToBinary(int number) {
    // Base case: if number is less than 2, print n
    if (number < 2) {
        printf(""%d"", number);
    } else {
        // Recursive call on the quotient of number divided by 2
        ConvertToBinary(number / 2);
        // Print the remainder when n is divided by 2
        printf(""%d"", number % 2);
    }
}
",
sgal263,1698055354,4,"void ConvertToBinary(int number) {
    // Base case: if number is less than 2, print n
    if (number < 2) {
        printf(""%d"", number);
    } else {
        // Recursive call on the quotient of number divided by 2
        ConvertToBinary(number / 2);
        // Print the remainder when n is divided by 2
        printf(""%d"", number % 2);
    }
}
",1
sgal263,1698055374,5,"void ConvertToBinary(int number) {
    // Base case: if number is less than 2, print n
    if (number < 2) {
        printf(""%d"", number);
    } else {
        // Recursive call on the quotient of number divided by 2
        ConvertToBinary(number / 2);
        // Print the remainder when number is divided by 2
        printf(""%d"", number % 2);
    }
}
",1
sgib237,1698120198,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    int x;
    
    if (num == 0) {
        return;
    } else {
        
        x = num/2;
        ConvertToBinary(x);
        printf(""%d"", num % 2);
    }
}",
sgib237,1698120201,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    int x;
    
    if (num == 0) {
        return;
    } else {
        
        x = num/2;
        ConvertToBinary(x);
        printf(""%d"", num % 2);
    }
}",1
shan333,1698114020,1,"void ConvertToBinary(int num)
{
    if (num == 1){
        printf(""1"");
    } else {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",
shan333,1698114029,2,"void ConvertToBinary(int num)
{
    if (num == 1){
        printf(""1"");
    } else {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",1
shan790,1697535252,1,"void ConvertToBinary(int num) {
	if (num == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",
shan790,1697535253,2,"void ConvertToBinary(int num) {
	if (num == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(num / 2);
		printf(""%d"", num % 2);
	}
}",1
she940,1697507997,1,"void ConvertToBinary(int x) {
	/*x = x / 2;*/
	if (x == 1) {
		printf(""%d"", x);
	}
	else {
		/*x = x / 2;*/
		ConvertToBinary(x / 2);
		int binary = x % 2;
		printf(""%d"", binary);
		/*x = x / 2;*/
		
	}
}",
she940,1697508000,2,"void ConvertToBinary(int x) {
	/*x = x / 2;*/
	if (x == 1) {
		printf(""%d"", x);
	}
	else {
		/*x = x / 2;*/
		ConvertToBinary(x / 2);
		int binary = x % 2;
		printf(""%d"", binary);
		/*x = x / 2;*/
		
	}
}",1
shsa718,1697971127,1,"void ConvertToBinary (int n){

    // Base case
    if (n==1){
        printf(""%d"",n);
        return;
    }

    // Working towards base case
    ConvertToBinary(n/2);
    printf(""%d"", n%2);

}
",
shsa718,1697971130,2,"void ConvertToBinary (int n){

    // Base case
    if (n==1){
        printf(""%d"",n);
        return;
    }

    // Working towards base case
    ConvertToBinary(n/2);
    printf(""%d"", n%2);

}
",1
shua365,1697845605,1,"#include <math.h>
void ConvertToBinary(int num){
    int temp=log2(num);
    int output[temp];
    int count=0;
    while (num !=0){
        output[count]=num%2;
        num=num/2;
        count++;
    }
    for (int i =count-1;i>=0; i--){
        printf(""%i"", output[i]);
    }
}",
shua365,1697845620,2,"#include <math.h>
void ConvertToBinary(int num){
    int temp=log2(num);
    int output[temp];
    int count=0;
    while (num !=0){
        output[count]=num%2;
        num=num/2;
        count++;
    }
    for (int i =count-1;i>=0; i--){
        printf(""%i"", output[i]);
    }
}",1
shum116,1697795738,1,"void ConvertToBinary(int n)
{
	int convert = n / 2;
	int other = n % 2; 

	if (n ==1) {
		printf(""%d"", n);
	}
	else {
		printf(""%d"", convert);
		ConvertToBinary(other);
	}
}",
shum116,1697796520,2,"void ConvertToBinary(int n)
{
	int convert = n / 2;
	int other = n % 2; 

	if (n == 1) {
		printf(""%d"", 1);
	}
	
	else {
		printf(""%d"", other);
		ConvertToBinary(convert);
	}

}",
shum116,1697796868,3,"void ConvertToBinary(int n)
{
	int convert = n / 2;
	int other = n % 2; 

	if (n == 1) {
		printf(""%d"", 1);
	}
	
	else {
		printf(""%d"", other);
		ConvertToBinary(convert);
		PrintReverse(other);
	}

}",
shum116,1697797140,4,"void ConvertToBinary(int n)
{
	int convert = n / 2;
	int other = n % 2; 

	if (n == 1) {
		printf(""%d"", 1);
	}
	
	else {
		ConvertToBinary(convert);
		printf(""%d"", other);
		
		
	}

}",
shum116,1697797143,5,"void ConvertToBinary(int n)
{
	int convert = n / 2;
	int other = n % 2; 

	if (n == 1) {
		printf(""%d"", 1);
	}
	
	else {
		ConvertToBinary(convert);
		printf(""%d"", other);
		
		
	}

}",1
sike083,1697846528,1,"void ConvertToBinary(int num) {
    if (num < 2) {
        printf(""%d"", num);
        return;
    }

    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}
",
sike083,1697846531,2,"void ConvertToBinary(int num) {
    if (num < 2) {
        printf(""%d"", num);
        return;
    }

    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}
",1
sjaf029,1698020193,1,"void ConvertToBinary(int n) {
	if (n > 0) {

		//keep dividing n over 2 until its value becomes zero
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
sjaf029,1698020198,2,"void ConvertToBinary(int n) {
	if (n > 0) {

		//keep dividing n over 2 until its value becomes zero
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
sjai563,1697939994,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int inputNumber) 
{
    if (inputNumber > 0) {
        ConvertToBinary(inputNumber / 2); 
        printf(""%d"", inputNumber % 2);   
    }
}

#include <stdio.h>

",
sjai563,1697940004,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int inputNumber) 
{
    if (inputNumber > 0) {
        ConvertToBinary(inputNumber / 2); 
        printf(""%d"", inputNumber % 2);   
    }
}

#include <stdio.h>

",1
sjai563,1697940768,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int inputNumber) 
{
    if (inputNumber > 0) {
        ConvertToBinary(inputNumber / 2); 
        printf(""%d"", inputNumber % 2);   
    }
}



",
sjam309,1697786883,1,"void ConvertToBinary(int number)
{
    if(number > 0){
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
sjam309,1697786886,2,"void ConvertToBinary(int number)
{
    if(number > 0){
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
sjob296,1697531653,1,"#include <stdio.h>

void ConvertToBinary(int number) 
{
    if (number <= 1) 
    {
        printf(""%d"", number);
    } else 
    {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
sjob296,1697531655,2,"#include <stdio.h>

void ConvertToBinary(int number) 
{
    if (number <= 1) 
    {
        printf(""%d"", number);
    } else 
    {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
skan221,1697782422,1,"void ConvertToBinary(int x) 
{
    if (x <= 1) {
        printf(""%d"", x);
        return;
    }
    ConvertToBinary(x / 2);
    printf(""%d"", x % 2);
}",
skan221,1697782434,2,"void ConvertToBinary(int x) 
{
    if (x <= 1) {
        printf(""%d"", x);
        return;
    }
    ConvertToBinary(x / 2);
    printf(""%d"", x % 2);
}",1
skea516,1697495896,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    } else {
       ConvertToBinary(n/2);
       printf(""%d"", (n%2));
    }
}",1
skmu887,1698017549,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    // if number is 0 stop 
    if (num == 0) {
        return;
    }
    
    
    ConvertToBinary(num / 2);
    
    // Print the remainder which is the binary number
    printf(""%d"", num % 2);
}",
skmu887,1698017552,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    // if number is 0 stop 
    if (num == 0) {
        return;
    }
    
    
    ConvertToBinary(num / 2);
    
    // Print the remainder which is the binary number
    printf(""%d"", num % 2);
}",1
skop291,1698114362,1,"#include <stdio.h>

// Function prototype
void ConvertToBinary(int n);

int main() {
    // Test the function with the example provided
    ConvertToBinary(157);
    return 0;
}

// Recursive function to print the binary representation of a number
void ConvertToBinary(int n) {
    // Base case: when the number is zero, recursion ends.
    if (n == 0) {
        return;
    }

    // Recursive call to print the next bit (n/2)
    ConvertToBinary(n / 2);

    // Print the least significant bit of the current number
    printf(""%d"", n % 2);
}",
skop291,1698114369,2,"#include <stdio.h>

// Function prototype
void ConvertToBinary(int n);


// Recursive function to print the binary representation of a number
void ConvertToBinary(int n) {
    // Base case: when the number is zero, recursion ends.
    if (n == 0) {
        return;
    }

    // Recursive call to print the next bit (n/2)
    ConvertToBinary(n / 2);

    // Print the least significant bit of the current number
    printf(""%d"", n % 2);
}",
skop291,1698114372,3,"#include <stdio.h>

// Function prototype
void ConvertToBinary(int n);


// Recursive function to print the binary representation of a number
void ConvertToBinary(int n) {
    // Base case: when the number is zero, recursion ends.
    if (n == 0) {
        return;
    }

    // Recursive call to print the next bit (n/2)
    ConvertToBinary(n / 2);

    // Print the least significant bit of the current number
    printf(""%d"", n % 2);
}",1
skul970,1697422024,1,"void ConvertToBinary(int number) {
    if (number == 1) {
        return;
        
    } else {
        printf(""%d"", number%2);
        ConvertToBinary(number/2);
    }
}",0
skul970,1697422060,2,"void ConvertToBinary(int number) {
    if (number == 0) {
        return;
        
    } else {
        printf(""%d"", number%2);
        ConvertToBinary(number/2);
    }
}",0
skul970,1697423173,3,"void ConvertToBinary(int number) {
    
    if (number>1) {
        ConvertToBinary(number/2);
    }
    printf(""%d"", number%2);
}
",1
slam669,1697442220,1,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}
",1
slie508,1697931285,1,"void ConvertToBinary(int n)
{
    if (n ==1){
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
slie508,1697931288,2,"void ConvertToBinary(int n)
{
    if (n ==1){
        printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
sluo487,1698122353,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
sluo487,1698122356,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
smac708,1697509456,1,"#include <stdio.h> 

void ConvertToBinary(int n) 
{
    int rec_digit; 
    int first_number; 

    if (n == 1) { 
        printf(""%d"", n); 

    }else { 

        rec_digit = n/2; 
        ConvertToBinary(rec_digit); 

        first_number = n % 2; 
        printf(""%d"", first_number);
    }

}",1
sman821,1697927758,1,"void ConverToBinary(int input) {
    if (input == 1) {
        printf(""%d"", input);
    } else {
        ConverToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
sman821,1697927799,2,"void ConvertToBinary(int input) {
    if (input == 1) {
        printf(""%d"", input);
    } else {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
sman821,1697927802,3,"void ConvertToBinary(int input) {
    if (input == 1) {
        printf(""%d"", input);
    } else {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",1
sman833,1697523086,1,"void ConvertToBinary(int n) 
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",
sman833,1697523089,2,"void ConvertToBinary(int n) 
{
    if (n == 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    
}",1
smck855,1698039716,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
smou122,1697599602,1,"void ConvertToBinary(int a){
    int placeholder[100] = {0};
    int remainder = 1;
    int count = 0;
    if (a == 0){
        printf(""0"");
        return;
    }
    while (a != 0){
        placeholder[count] = a % 2;
        a = a / 2;
        count++;
    }
    int j;
    for (j = count-1 ; j >= 0; j--){
        printf(""%d"", placeholder[j]);
    }
}",
smou122,1697599623,2,"void ConvertToBinary(int a){
    int placeholder[100] = {0};
    int count = 0;
    if (a == 0){
        printf(""0"");
        return;
    }
    while (a != 0){
        placeholder[count] = a % 2;
        a = a / 2;
        count++;
    }
    int j;
    for (j = count-1 ; j >= 0; j--){
        printf(""%d"", placeholder[j]);
    }
}",
smou122,1697599628,3,"void ConvertToBinary(int a){
    int placeholder[100] = {0};
    int count = 0;
    if (a == 0){
        printf(""0"");
        return;
    }
    while (a != 0){
        placeholder[count] = a % 2;
        a = a / 2;
        count++;
    }
    int j;
    for (j = count-1 ; j >= 0; j--){
        printf(""%d"", placeholder[j]);
    }
}",1
smun623,1698101929,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
smun623,1698101947,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
snas404,1698106730,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n)
{
	if ((n / 2) == 0) {
		printf(""%d"", n);
	}else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
}

",
snas404,1698106734,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int n)
{
	if ((n / 2) == 0) {
		printf(""%d"", n);
	}else {
		ConvertToBinary(n / 2);
		printf(""%d"", (n % 2));
	}
}

",1
span558,1697429370,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
span558,1697429426,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
spar473,1697596509,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
spar473,1697596512,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
spar820,1697858250,1,"void ConvertToBinary(int n) {
    
    if (n == 1)
        printf(""%d"", 1);
    else {
      int next = n / 2;
      ConvertToBinary(next);
      int binary = n % 2;
      printf(""%d"", binary);
    }
    
}",
spar820,1697858254,2,"void ConvertToBinary(int n) {
    
    if (n == 1)
        printf(""%d"", 1);
    else {
      int next = n / 2;
      ConvertToBinary(next);
      int binary = n % 2;
      printf(""%d"", binary);
    }
    
}",1
srak374,1698141505,1,"void ConvertToBinary(int n) {
    int binary_num[100];
    
    int i = 0;
    
    while (n> 0) {
        binary_num[i] = n%2;
        n = n/2;
        i ++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary_num[j]);
    }
}",
srak374,1698141509,2,"void ConvertToBinary(int n) {
    int binary_num[100];
    
    int i = 0;
    
    while (n> 0) {
        binary_num[i] = n%2;
        n = n/2;
        i ++;
    }
    
    for (int j = i - 1; j >= 0; j--){
        printf(""%d"", binary_num[j]);
    }
}",1
sran136,1698041624,1,"void ConvertToBinary(int n) {
	if (n != 0) {
		int remainder = n % 2;
		printf(""%d"", remainder);
		ConvertToBinary(n / 2);
	}
	else {
		return;
	}
}",
sran136,1698043598,2,"void ConvertToBinary(int number) {
	if (number > 0) {
		ConvertToBinary(number / 2); 
		printf(""%d"", number% 2);    
	}
}",
sran136,1698043603,3,"void ConvertToBinary(int number) {
	if (number > 0) {
		ConvertToBinary(number / 2); 
		printf(""%d"", number% 2);    
	}
}",1
sran136,1698043823,4,"void ConvertToBinary(int number) {
		
		ConvertToBinary(number / 2); 
		printf(""%d"", number% 2);  
		
}",
sran136,1698043907,5,"void ConvertToBinary(int number) {
		if( number > 0){
		ConvertToBinary(number / 2); 
		printf(""%d"", number% 2); 
		}
		
}",
sran136,1698043911,6,"void ConvertToBinary(int number) {
		if( number > 0){
		ConvertToBinary(number / 2); 
		printf(""%d"", number% 2); 
		}
		
}",1
sran136,1698043941,7,"void ConvertToBinary(int number) {
		if( number > 0){
		    ConvertToBinary(number / 2); 
		    printf(""%d"", number % 2); 
		}
		
}",
sran136,1698043945,8,"void ConvertToBinary(int number) {
		if( number > 0){
		    ConvertToBinary(number / 2); 
		    printf(""%d"", number % 2); 
		}
		
}",1
srou953,1698058408,1,"void ConvertToBinary(int n) 
{
    if(n==1);
    {
        printf(""1"");
    }
    
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
    
}

",
srou953,1698058479,2,"void ConvertToBinary(int n) 
{
    if(n==1)
    {
        printf(""1"");
    }
    
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
    
}

",
srou953,1698058485,3,"void ConvertToBinary(int n) 
{
    if(n==1)
    {
        printf(""1"");
    }
    
    else
    {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
    
}

",1
ssan467,1697706507,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
ssan467,1697706510,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", n);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
ssco465,1698093791,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int number) {
    if (number > 1) {
        ConvertToBinary(number / 2);  
    }
    printf(""%d"", number % 2);  
}",
ssco465,1698093794,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int number) {
    if (number > 1) {
        ConvertToBinary(number / 2);  
    }
    printf(""%d"", number % 2);  
}",1
ssey266,1697773304,1,"void ConvertToBinary(int quo) {
    int binary[100] = {0};
    int i = 0;

    while (quo > 0) {
        binary[i] = quo % 2;
        quo = quo / 2;
        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
}
",
ssey266,1697773306,2,"void ConvertToBinary(int quo) {
    int binary[100] = {0};
    int i = 0;

    while (quo > 0) {
        binary[i] = quo % 2;
        quo = quo / 2;
        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
}
",1
ssiv093,1698136546,1,"void ConvertToBinary(int num) { if (num / 2 != 0) { ConvertToBinary(num / 2); } printf(""%d"", num % 2); } ",1
sson972,1697446554,1,"void ConvertToBinary(int n)
{
	if (n == 1)
	{
		printf(""1"");
	}
	else
	{
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);
	}
}",
sson972,1697446556,2,"void ConvertToBinary(int n)
{
	if (n == 1)
	{
		printf(""1"");
	}
	else
	{
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);
	}
}",1
sspa275,1698125302,1,"#include <stdio.h>
#include <math.h>
void ConvertToBinary(int input){
    int limit = log2(input);
    int binary[100] = {0};
    int i = 0;
    while (input > 0){
        binary[i] = input%2;
        input = input/2;
        i++;
    }
    for(int j = limit; j >= 0; j--){
        printf(""%i"", binary[j]);
    }
}",
sspa275,1698125304,2,"#include <stdio.h>
#include <math.h>
void ConvertToBinary(int input){
    int limit = log2(input);
    int binary[100] = {0};
    int i = 0;
    while (input > 0){
        binary[i] = input%2;
        input = input/2;
        i++;
    }
    for(int j = limit; j >= 0; j--){
        printf(""%i"", binary[j]);
    }
}",1
ssri357,1697506120,1,"void ConvertToBinary(int number);

void ConvertToBinary(int number) {

	if (number == 1) {
		printf(""%d"", number);
	}

	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}


}",
ssri357,1697506124,2,"void ConvertToBinary(int number);

void ConvertToBinary(int number) {

	if (number == 1) {
		printf(""%d"", number);
	}

	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}


}",1
steb012,1697503272,1,"void ConvertToBinary(int number){
    if (number == 0){
        printf(""0"");
        return;
    }
    
    int binary[32];
    int i = 0;
    int j = 0;
    
    
    while (number > 0){
        binary[i++] = number % 2;
        number = number / 2;

    }
    
    
    for (j = i - 1; j >= 0; j--){
      printf(""%d"", binary[j]);
    }
    
    
}",
steb012,1697503274,2,"void ConvertToBinary(int number){
    if (number == 0){
        printf(""0"");
        return;
    }
    
    int binary[32];
    int i = 0;
    int j = 0;
    
    
    while (number > 0){
        binary[i++] = number % 2;
        number = number / 2;

    }
    
    
    for (j = i - 1; j >= 0; j--){
      printf(""%d"", binary[j]);
    }
    
    
}",1
stia357,1697845350,1,"void ConvertToBinary(int decimal) 
{
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);  
    }
    printf(""%d"", decimal % 2);  
}
",
stia357,1697845356,2,"void ConvertToBinary(int decimal) 
{
    if (decimal > 1) {
        ConvertToBinary(decimal / 2);  
    }
    printf(""%d"", decimal % 2);  
}
",1
sum778,1697921592,1,"void ConvertToBinary(int integer) {

    if (integer == 0) {
        printf(""0"");
        return;
    }

    ConvertToBinary(integer / 2);
    printf(""%d"", integer % 2);
}",1
sval918,1698136866,1,"#include <stdio.h>

void ConvertToBinary(int num){
    if (num > 1){
        ConvertToBinary(num / 2);
    }
    
    printf(""%d"", num % 2);
}",
sval918,1698137073,2,"void ConvertToBinary(int num) {
    if (num == 0) {
        printf(""0"");
        return;
    }

    int binary[32]; 
    int i = 0;

    while (num > 0) {
        binary[i] = num % 2;
        num = num / 2;
        i++; 
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
}",
sval918,1698137115,3,"void ConvertToBinary(int num) {
    if (num == 0) {
        printf(""0"");
        return;
    }

    int binary[32]; 
    int i = 0;

    while (num > 0) {
        binary[i] = num % 2;
        num = num / 2;
        i++; 
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binary[j]);
    }
}",1
swan472,1697885811,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",
swan472,1697885813,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",1
sweb390,1697531165,1,"void ConvertToBinary(int n) {
	if (n != 0) {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
	
}",1
swil676,1697976993,1,"#include <stdio.h>

void ConvertToBinary (int number){

    if (number == 1){
        printf(""%d"", number);
    
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }

}",
swil676,1697976996,2,"#include <stdio.h>

void ConvertToBinary (int number){

    if (number == 1){
        printf(""%d"", number);
    
    }
    else {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }

}",1
syok443,1697449406,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int number){

    int binary[100];
    int i;
    int index = 0;
    for(i = 0; i < 100; i++){
        binary[i] = -1;
    }

    while(number > 0){

        if(number % 2 == 0){
            number = number / 2;
            binary[index++] = 0;
        } else {
            number = number / 2.0 - 0.5;
            binary[index++] = 1;
        }
    }

    for(i = 100 - 1; i >= 0; i--){
        if(binary[i] != -1){
            printf(""%d"", binary[i]);
        }
    }

}
",
syok443,1697449413,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int number){

    int binary[100];
    int i;
    int index = 0;
    for(i = 0; i < 100; i++){
        binary[i] = -1;
    }

    while(number > 0){

        if(number % 2 == 0){
            number = number / 2;
            binary[index++] = 0;
        } else {
            number = number / 2.0 - 0.5;
            binary[index++] = 1;
        }
    }

    for(i = 100 - 1; i >= 0; i--){
        if(binary[i] != -1){
            printf(""%d"", binary[i]);
        }
    }

}
",1
syok443,1697499183,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int number){

    if(number == 1){
        printf(""1"");
        return;
    }else{
        ConvertToBinary(number / 2);
    }
    printf(""%d"", number % 2);
}",
syok443,1697499186,4,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void ConvertToBinary(int number){

    if(number == 1){
        printf(""1"");
        return;
    }else{
        ConvertToBinary(number / 2);
    }
    printf(""%d"", number % 2);
}",1
syua841,1698128936,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    
    if (num == 0) {
        return;
    }
    
    ConvertToBinary(num/2);
    printf(""%d"", num % 2);
}

",
syua841,1698128940,2,"
void ConvertToBinary(int num) {
    
    if (num == 0) {
        return;
    }
    
    ConvertToBinary(num/2);
    printf(""%d"", num % 2);
}

",
syua841,1698128942,3,"
void ConvertToBinary(int num) {
    
    if (num == 0) {
        return;
    }
    
    ConvertToBinary(num/2);
    printf(""%d"", num % 2);
}

",1
szen566,1697508554,1,"void ConvertToBinary(int number)
{
	int n2;
	// Base case:
	if (number == 1) {
		printf(""1"");
	}

	// Convert n/2 to binary then print n%2 // Print remainders in reverse
	else {
		n2 = number / 2;
		ConvertToBinary(n2);
		printf(""%d"", number % 2);
	}
}",
szen566,1697508558,2,"void ConvertToBinary(int number)
{
	int n2;
	// Base case:
	if (number == 1) {
		printf(""1"");
	}

	// Convert n/2 to binary then print n%2 // Print remainders in reverse
	else {
		n2 = number / 2;
		ConvertToBinary(n2);
		printf(""%d"", number % 2);
	}
}",1
szho466,1698133542,1,"#include <stdio.h>

void ConvertToBinary(int deci) {
    
    if (deci == 0) {
        printf(""0"");
        return;
    }
    
    if (deci > 0) {
        ConvertToBinary(deci / 2);
        printf(""%d"", deci % 2);
    }
}",
szho466,1698133545,2,"#include <stdio.h>

void ConvertToBinary(int deci) {
    
    if (deci == 0) {
        printf(""0"");
        return;
    }
    
    if (deci > 0) {
        ConvertToBinary(deci / 2);
        printf(""%d"", deci % 2);
    }
}",1
tais804,1697505698,1,"void ConvertToBinary(int input) {

    if (input == 1) {
        printf(""%d"", input);
    } else {
        ConvertToBinary(input/2);
        printf(""%d"", input%2);
    }
}",
tais804,1697505700,2,"void ConvertToBinary(int input) {

    if (input == 1) {
        printf(""%d"", input);
    } else {
        ConvertToBinary(input/2);
        printf(""%d"", input%2);
    }
}",1
tbad483,1697969265,1,"void ConvertToBinary(int num) {
    printf(""%d"", num % 2);
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
}",
tbad483,1697969281,2,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",
tbad483,1697969282,3,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);
    }
    printf(""%d"", num % 2);
}",1
tbar968,1697796517,1,"void ConvertToBinary(int number){
    if (number==0){
        return;
    }
    else{
        ConvertToBinary(number/2);
        printf(""%d"", number%2);
    }
}",
tbar968,1697796519,2,"void ConvertToBinary(int number){
    if (number==0){
        return;
    }
    else{
        ConvertToBinary(number/2);
        printf(""%d"", number%2);
    }
}",1
tbar971,1697693262,1,"void ConvertToBinary(int number) 
{
    if (number < 2) {
        printf(""%d"", number);
    } else {
        ConvertToBinary((number / 2));
        printf(""%d"", (number % 2));
    }
}",
tbar971,1697693264,2,"void ConvertToBinary(int number) 
{
    if (number < 2) {
        printf(""%d"", number);
    } else {
        ConvertToBinary((number / 2));
        printf(""%d"", (number % 2));
    }
}",1
tbas606,1697956509,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2); // Recursively call for the quotient
        printf(""%d"", num % 2);    // Print the remainder (binary digit)
    }
}",
tbas606,1697956567,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2); 
        printf(""%d"", num % 2);    
    }
}",
tbas606,1697956568,3,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2); 
        printf(""%d"", num % 2);    
    }
}",1
tbed601,1697849702,1,"#include <stdio.h>

void decimalToBinary(int n) {
    if (n == 0) {
        printf(""0"");  
    } else if (n == 1) {
        printf(""1"");  
    } else {
        decimalToBinary(n / 2);              
        printf(""%d"", n % 2);             
    }
}",
tbed601,1697849725,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        printf(""0"");  
    } else if (n == 1) {
        printf(""1"");  
    } else {
        ConvertToBinary(n / 2);              
        printf(""%d"", n % 2);             
    }
}",
tbed601,1697849729,3,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) {
        printf(""0"");  
    } else if (n == 1) {
        printf(""1"");  
    } else {
        ConvertToBinary(n / 2);              
        printf(""%d"", n % 2);             
    }
}",1
tbri557,1697964819,1,"void ConvertToBinary(int input){
    int rem;
    int quo = input;
    int arr[50];
    int i = 0;
    int firstvalreached = 0;
    
    while(quo != 0){
        rem = quo%2;;
        quo = floor(quo/2.0);
        arr[i] = rem;
        i++;
        
    }
    for(int j = 49; j >= 0; j--){
        if(arr[j] == 1){
            firstvalreached = 1;
        }
        if(firstvalreached){
            printf("" %d"", arr[j]);
        }
        
    }
}",
tbri557,1697964864,2,"void ConvertToBinary(int input){
    int rem;
    int quo = input;
    int arr[50];
    int i = 0;
    int firstvalreached = 0;
    
    while(quo != 0){
        rem = quo%2;;
        quo = quo/2.0;
        arr[i] = rem;
        i++;
        
    }
    for(int j = 49; j >= 0; j--){
        if(arr[j] == 1){
            firstvalreached = 1;
        }
        if(firstvalreached){
            printf("" %d"", arr[j]);
        }
        
    }
}",
tbri557,1697965066,3,"void ConvertToBinary(int input){
    int rem;
    int quo = input;
    int arr[50];
    int i = 0;
    int firstvalreached = 0;
    
    while(quo != 0){
        rem = quo%2;;
        quo = quo/2.0;
        arr[i] = rem;
        i++;
        
    }
    for(int j = 49; j >= 0; j--){
        if(arr[j] == 1){
            firstvalreached = 1;
        }
        if(firstvalreached){
            printf(""%d"", arr[j]);
        }
        
    }
}",
tbri557,1697965134,4,"void ConvertToBinary(int input){
    int rem;
    int quo = input;
    int arr[50];
    int i = 0;
    int firstvalreached = 0;
    
    while(quo != 0){
        rem = quo%2;;
        quo = quo/2.0;
        arr[i] = rem;
        i++;
        
    }
    for(int j = 49; j >= 0; j--){
        if(arr[j] != 0){
            continue;
            firstvalreached = 1;
        }
        if(firstvalreached){
            printf(""%d"", arr[j]);
        }
        
    }
}",
tbri557,1697965160,5,"void ConvertToBinary(int input){
    int rem;
    int quo = input;
    int arr[50];
    int i = 0;
    int firstvalreached = 0;
    
    while(quo != 0){
        rem = quo%2;;
        quo = quo/2.0;
        arr[i] = rem;
        i++;
        
    }
    for(int j = 49; j >= 0; j--){
        if(arr[j] != 0){
            firstvalreached = 1;
        }
        if(firstvalreached){
            printf(""%d"", arr[j]);
        }
        
    }
}",
tbri557,1697965379,6,"void ConvertToBinary(int input){
    int rem;
    int quo = input;
    int arr[50];
    int i = 0;
    int firstvalreached = 0;
    
    while(quo != 0){
        rem = quo%2;;
        quo = quo/2.0;
        arr[i] = rem;
        i++;
        
    }
    for(int j = 49; j >= 0; j--){
        if(arr[j] != 0){
            firstvalreached = 1;
        }
        if(firstvalreached){
            printf(""%d"", arr[j]);
        }
        
    }
}",0
tbri557,1697965457,7,"void ConvertToBinary(int input) {
    if (input == 0) {
        printf(""0"");
        return;
    }

    int binary[32];
    int index = 0;

    while (input > 0) {
        binary[index] = input % 2;
        input /= 2;
        index++;
    }

    for (int i = index - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }

    printf(""\n"");
}",
tbri557,1697965496,8,"void ConvertToBinary(int input) {
    if (input == 0) {
        printf(""0"");
        return;
    }

    int binary[32];
    int index = 0;

    while (input > 0) {
        binary[index] = input % 2;
        input /= 2;
        index++;
    }

    for (int i = index - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",
tbri557,1697965499,9,"void ConvertToBinary(int input) {
    if (input == 0) {
        printf(""0"");
        return;
    }

    int binary[32];
    int index = 0;

    while (input > 0) {
        binary[index] = input % 2;
        input /= 2;
        index++;
    }

    for (int i = index - 1; i >= 0; i--) {
        printf(""%d"", binary[i]);
    }
}",1
tche867,1698102446,1,"void PrintReverse(int number)
{
	int current_digit;
	while (number > 0)
	{
		current_digit = number - (number / 10) * 10;
		number = number / 10;
		printf(""%d"", current_digit);
	}
}
void ConvertToBinary(int number)
{
	int value = 0;
	while (number != 0)
	{
		if (number % 2 == 0)
		{
			// the binary bit would be 0
			value = value * 10 + 0; 
		}
		else
		{
			// the binary bit would be 1
			value = value * 10 + 1;
		}
		number = number / 2;		
	}
	PrintReverse(value);
}",
tche867,1698102448,2,"void PrintReverse(int number)
{
	int current_digit;
	while (number > 0)
	{
		current_digit = number - (number / 10) * 10;
		number = number / 10;
		printf(""%d"", current_digit);
	}
}
void ConvertToBinary(int number)
{
	int value = 0;
	while (number != 0)
	{
		if (number % 2 == 0)
		{
			// the binary bit would be 0
			value = value * 10 + 0; 
		}
		else
		{
			// the binary bit would be 1
			value = value * 10 + 1;
		}
		number = number / 2;		
	}
	PrintReverse(value);
}",0
tche867,1698104163,3,"#include <math.h>
void ConvertToBinary(int number)
{
	int value = 0;
	int power = 0;
	int add_value = 0;
	while (number != 0)
	{
		if (number % 2 == 1)
		{
			// the binary bit would be 1
			add_value = pow(10,power);
			value = value +  add_value;
		}
		power++;
		number = number / 2;
	}
	printf(""%d"",value);
}",
tche867,1698104165,4,"#include <math.h>
void ConvertToBinary(int number)
{
	int value = 0;
	int power = 0;
	int add_value = 0;
	while (number != 0)
	{
		if (number % 2 == 1)
		{
			// the binary bit would be 1
			add_value = pow(10,power);
			value = value +  add_value;
		}
		power++;
		number = number / 2;
	}
	printf(""%d"",value);
}",0
tche867,1698108140,5,"void ConvertToBinary(int number)
{
	int output[20];
	int i,j;
	for (i=0 ; number > 0; i++)
	{
		output[i] = number % 2;
		number = number / 2;
	}
	for (j = i - 1; j >= 0; j--)
	{
		printf(""%d"", output[j]);
	}
}",
tche867,1698108142,6,"void ConvertToBinary(int number)
{
	int output[20];
	int i,j;
	for (i=0 ; number > 0; i++)
	{
		output[i] = number % 2;
		number = number / 2;
	}
	for (j = i - 1; j >= 0; j--)
	{
		printf(""%d"", output[j]);
	}
}",1
tcoo725,1697704224,1,"#include <stdio.h>

void ConvertToBinary(int number){
    
    
    if (number == 0){
        return;
    }
    if (number > 0){
        ConvertToBinary(number/2);
        number = number % 2;
        printf(""%d"" , number);
        
    }
}",1
tden200,1698144828,1,"void ConvertToBinary(int number) {

    if(number < 1 ){
    printf(""%d"", number);
    }
    
else{
	

	printf(""%d"", (number%2));
	
	number = (number/ 2);
	
	ConvertToBinary(number);
}

	



}
",
tden200,1698144889,2,"void ConvertToBinary(int number) {

    if(number < 1 ){
    printf(""%d"", number);
    }
    
else{
	


	
	number = (number/ 2);
	
	ConvertToBinary(number);
	printf(""%d"", (number%2));
}

	



}
",
tden200,1698144958,3,"void ConvertToBinary(int number) {

    if(number < 1 ){
    printf(""%d"", number);
    }
    
else{
	
	
	
	
	ConvertToBinary(number/2);
	
	printf(""%d"", (number%2));
}

	



}
",
tden200,1698144961,4,"void ConvertToBinary(int number) {

    if(number < 1 ){
    printf(""%d"", number);
    }
    
else{
	
	
	
	
	ConvertToBinary(number/2);
	
	printf(""%d"", (number%2));
}

	



}
",1
tdha392,1698028009,1,"void ConvertToBinary(int n) {
    
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    if (n==0) {
        printf(""%d"", n);
    }
}",
tdha392,1698028028,2,"void ConvertToBinary(int n) {
    
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    if (n==0) {
        printf(""%d"", n);
    }
}",1
tdha392,1698028047,3,"void ConvertToBinary(int n) {
    
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    else (n==0) {
        printf(""%d"", n);
    }
}",
tdha392,1698028058,4,"void ConvertToBinary(int n) {
    
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    else {
        printf(""%d"", n);
    }
}",
tdha392,1698028065,5,"void ConvertToBinary(int n) {
    
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
    else {
        printf(""%d"", n);
    }
}",1
tdic873,1698017068,1,"void ConvertToBinary(int number) { 
    if (number == 1) printf(""1"");
    else {
        if ((number / 2) > 0) ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",
tdic873,1698017071,2,"void ConvertToBinary(int number) { 
    if (number == 1) printf(""1"");
    else {
        if ((number / 2) > 0) ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}",1
tdon950,1697882970,1,"void ConvertToBinary(int n)
{
    if (n > 1) {
        ConvertToBinary(n / 2);
        
    } 
    printf(""%d"", n % 2);
}",
tdon950,1697882973,2,"void ConvertToBinary(int n)
{
    if (n > 1) {
        ConvertToBinary(n / 2);
        
    } 
    printf(""%d"", n % 2);
}",1
tdu824,1698046833,1,"void ConvertToBinary(int input)
 {
    int binary;
    if (input == 1){
        printf(""%d"", input);
    } else {
    binary = input % 2;
    input = input / 2;
    ConvertToBinary(input);
    printf(""%d"", binary);
    }

 } 
",
tdu824,1698046836,2,"void ConvertToBinary(int input)
 {
    int binary;
    if (input == 1){
        printf(""%d"", input);
    } else {
    binary = input % 2;
    input = input / 2;
    ConvertToBinary(input);
    printf(""%d"", binary);
    }

 } 
",1
tfai092,1697960437,1,"void ConvertToBinary(int n) {
    
    if (n > 0) {
        int NewNumber = n / 2;
        ConvertToBinary(NewNumber);
        printf(""%d"", n % 2);
    }
}",
tfai092,1697960438,2,"void ConvertToBinary(int n) {
    
    if (n > 0) {
        int NewNumber = n / 2;
        ConvertToBinary(NewNumber);
        printf(""%d"", n % 2);
    }
}",1
tfai653,1697505654,1,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""%d"", value);
    } else {
        ConvertToBinary(value / 2);
        printf(""%d"", value % 2);
    }
}",
tfai653,1697505658,2,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""%d"", value);
    } else {
        ConvertToBinary(value / 2);
        printf(""%d"", value % 2);
    }
}",1
tfru173,1698134626,1,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    if (num <= 1) 
    {
        printf(""%d"", num);
    } else 
    {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
tfru173,1698134646,2,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    if (num <= 1) 
    {
        printf(""%d"", num);
    } else 
    {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",
tfru173,1698134649,3,"#include <stdio.h>

void ConvertToBinary(int num) 
{
    if (num <= 1) 
    {
        printf(""%d"", num);
    } else 
    {
        ConvertToBinary(num/2);
        printf(""%d"", num%2);
    }
}",1
thal182,1697507169,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
thal182,1697507172,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
thar970,1697904374,1,"void ConvertToBinary(int num) {
    if (num == 0) return;
    ConvertToBinary(num / 2);
    printf(""%d"", num % 2);
}",1
thid924,1697975205,1,"void ConvertToBinary(int number) {

	if (number == 1) {
		printf(""%d "", number);
	}
	else {
		ConvertToBinary(number / 2);
			printf(""%d "", number % 2);

	}

}",
thid924,1697975216,2,"void ConvertToBinary(int number) {

	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		ConvertToBinary(number / 2);
			printf(""%d"", number % 2);

	}

}",
thid924,1697975218,3,"void ConvertToBinary(int number) {

	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		ConvertToBinary(number / 2);
			printf(""%d"", number % 2);

	}

}",1
thua238,1697882661,1,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(value/2);
        printf(""%d"", value%2);
    }
}",
thua238,1697882664,2,"void ConvertToBinary(int value)
{
    if (value == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(value/2);
        printf(""%d"", value%2);
    }
}",1
thut580,1697514296,1,"void ConvertToBinary(int number)
{
	if (number != 0) {
		printf(""%d"", number % 2);
		number = (number - (number % 2)) / 2;
		ConvertToBinary(number);
	}
}",
thut580,1697515186,2,"void ConvertToBinary(int number)
{
	if (number > 0) { 
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",
thut580,1697515188,3,"void ConvertToBinary(int number)
{
	if (number > 0) { 
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",1
tkan918,1698110553,1,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",
tkan918,1698110555,2,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""1"");
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n%2);
    }
}",1
tlal352,1698105422,1,"void ConvertToBinary(int n)
{
    if (n==1 ) {
        printf(""%d"", n);
    } else {
        ConvertToBinary((n/2));
        int x = n % 2;
        printf(""%d"", x);
    }
}",
tlal352,1698105424,2,"void ConvertToBinary(int n)
{
    if (n==1 ) {
        printf(""%d"", n);
    } else {
        ConvertToBinary((n/2));
        int x = n % 2;
        printf(""%d"", x);
    }
}",1
tlin438,1697967136,1,"void ConvertToBinary(int n) {
    // Base case: if n is 1, simply print 1
    if (n == 1) {
        printf(""1"");
    }
    // Recursive case: convert n / 2 to binary, and then print n % 2
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
tlin438,1697967168,2,"void ConvertToBinary(int n) {
    //if n is 1, simply print 1
    if (n == 1) {
        printf(""1"");
    }
    //convert n / 2 to binary, and then print n % 2
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
tlin438,1697967171,3,"void ConvertToBinary(int n) {
    //if n is 1, simply print 1
    if (n == 1) {
        printf(""1"");
    }
    //convert n / 2 to binary, and then print n % 2
    else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
tlu253,1697578138,1,"void ConvertToBinary(int input)
{
    if (input == 1) {
        printf(""%d"", 1);
    } else {
        ConvertToBinary(input/2);
        printf(""%d"", (input % 2));
    }

}
",
tlu253,1697578140,2,"void ConvertToBinary(int input)
{
    if (input == 1) {
        printf(""%d"", 1);
    } else {
        ConvertToBinary(input/2);
        printf(""%d"", (input % 2));
    }

}
",1
tluu816,1697946461,1,"int ConvertToBinary(int decimal) {
	if (decimal == 1) {
		printf(""1"");
		return 0;
	}
	else {
		ConvertToBinary(decimal/2);
		printf(""%d"", decimal % 2);
		
	}
}",
tluu816,1697946513,2,"int ConvertToBinary(int decimal) {
	if (decimal == 1) {
		printf(""1"")
	}
	else {
		ConvertToBinary(decimal/2);
		printf(""%d"", decimal % 2);
		
	}
}",
tluu816,1697946519,3,"int ConvertToBinary(int decimal) {
	if (decimal == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(decimal/2);
		printf(""%d"", decimal % 2);
		
	}
}",
tluu816,1697946524,4,"void ConvertToBinary(int decimal) {
	if (decimal == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(decimal/2);
		printf(""%d"", decimal % 2);
		
	}
}",
tluu816,1697946526,5,"void ConvertToBinary(int decimal) {
	if (decimal == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(decimal/2);
		printf(""%d"", decimal % 2);
		
	}
}",1
tman942,1697850765,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);  // Recursively convert the quotient to binary
    }
    putchar((num % 2) + '0');  // Print the remainder (0 or 1)
}",
tman942,1697850776,2,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num / 2);  // Recursively convert the quotient to binary
    }
    putchar((num % 2) + '0');  // Print the remainder (0 or 1)
}",1
tmcl219,1698011341,1,"void ConvertToBinary(int Number)
{
    int Remainder;
    if (Number > 0){
        Remainder = Number % 2;
            printf(""%d "", Remainder);
        Number = Number / 2;
        ConvertToBinary(Number);
    }
    
}",
tmcl219,1698014489,2,"void ConvertToBinary(int Number)
{
    int Remainder;
    if (Number >= 1){
        Number = Number / 2;
        ConvertToBinary(Number);
        Remainder = Number % 2;
            printf(""%d"", Remainder);
    }
}",
tmcl219,1698050999,3,"void PrintReverse(int Number) {
    int LastDigit;
    
    if (Number > 0) {
        LastDigit = Number % 10;
            printf(""%d"", LastDigit);
    
        Number = Number / 10;
        PrintReverse(Number);
    }
}

void ConvertToBinary(int Number)
{
    int Remainder;
    if (Number > 1){
        Remainder = Number % 2;
            printf(""%d"", Remainder);
        Number = Number / 2;
        ConvertToBinary(Number);
    } else if (Number == 1){
        printf(""%d"", Number);
    }
    PrintReverse(Remainder);
}",
tmcl219,1698051730,4,"void ConvertToBinary(int Number)
{
    int Remainder;
    if (Number > 0) {
        Remainder = Number % 2;
        Number = Number / 2;
        ConvertToBinary(Number);
            printf(""%d"", Remainder);
    }
}",
tmcl219,1698051740,5,"void ConvertToBinary(int Number)
{
    int Remainder;
    if (Number > 0) {
        Remainder = Number % 2;
        Number = Number / 2;
        ConvertToBinary(Number);
            printf(""%d"", Remainder);
    }
}",1
tmen190,1697426311,1,"// --------------------------------------------------------------------------------------------------------//
/* Convert a decimal integer into binary */

void ConvertToBinary(int num) {
	// Base Case
	if (num == 1)
	{
		printf(""1"");
		return;
	}
	else if (num == 0)
	{
		printf(""0"");
		return;
	}

	// Reapply function to floored half of the number
	ConvertToBinary(num / 2);

	// Print out remainder
	int remainder = num % 2;
	printf(""%d"", remainder);
}",
tmen190,1697426315,2,"// --------------------------------------------------------------------------------------------------------//
/* Convert a decimal integer into binary */

void ConvertToBinary(int num) {
	// Base Case
	if (num == 1)
	{
		printf(""1"");
		return;
	}
	else if (num == 0)
	{
		printf(""0"");
		return;
	}

	// Reapply function to floored half of the number
	ConvertToBinary(num / 2);

	// Print out remainder
	int remainder = num % 2;
	printf(""%d"", remainder);
}",1
tmir110,1698114488,1,"#include <stdio.h>
#include <math.h>

int ConvertToBinary(int value) {
    
    int k = ceil(log(value + 1) / log(2));
    
    int array[k];
    int result;
    
    for (int i = 0; i < k; i++) {
        
        array[i] = value % 2;
        value = value / 2;
        
    }
    
    for (int i = k - 1; i > -1; i--) {
        printf(""%d"", array[i]);
    }
}",
tmir110,1698114497,2,"#include <stdio.h>
#include <math.h>

int ConvertToBinary(int value) {
    
    int k = ceil(log(value + 1) / log(2));
    
    int array[k];
    
    for (int i = 0; i < k; i++) {
        
        array[i] = value % 2;
        value = value / 2;
        
    }
    
    for (int i = k - 1; i > -1; i--) {
        printf(""%d"", array[i]);
    }
}",
tmir110,1698114513,3,"#include <stdio.h>
#include <math.h>

int ConvertToBinary(int value) {
    
    int k = ceil(log(value + 1) / log(2));
    
    int array[k];
    
    for (int i = 0; i < k; i++) {
        
        array[i] = value % 2;
        value = value / 2;
        
    }
    
    for (int i = k - 1; i > -1; i--) {
        printf(""%d"", array[i]);
    }
    
    return 0;
}",
tmir110,1698114516,4,"#include <stdio.h>
#include <math.h>

int ConvertToBinary(int value) {
    
    int k = ceil(log(value + 1) / log(2));
    
    int array[k];
    
    for (int i = 0; i < k; i++) {
        
        array[i] = value % 2;
        value = value / 2;
        
    }
    
    for (int i = k - 1; i > -1; i--) {
        printf(""%d"", array[i]);
    }
    
    return 0;
}",1
tmun974,1697510417,1,"void ConvertToBinary(int x){

    if(x==1){
        printf(""1"");
    }
    else{
        ConvertToBinary(x/2);
        printf(""%d"", x%2);
    }
}",
tmun974,1697510432,2,"void ConvertToBinary(int x){

    if(x==1){
        printf(""1"");
    }
    else{
        ConvertToBinary(x/2);
        printf(""%d"", x%2);
    }
}",1
tpan328,1697882516,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
tpan328,1697882518,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
tpat456,1697416294,1,"void ConvertToBinary(int n)
{
int code = 0;
int num = 0;
code = n % 2;
num = n / 2;
if (num != '\0') { 
ConvertToBinary(num);
}
printf(""%d"",code);
}",1
tpil529,1697668120,1,"void ConvertToBinary(int value)
{
    if (value == 0)
    {
        return;
    }
    else
    {
        ConvertToBinary(value/2);
        printf(""%d"", value % 2);

    }
return;
}",
tpil529,1697668122,2,"void ConvertToBinary(int value)
{
    if (value == 0)
    {
        return;
    }
    else
    {
        ConvertToBinary(value/2);
        printf(""%d"", value % 2);

    }
return;
}",1
tpra228,1697956652,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
tpra228,1697956654,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
tpur744,1697857735,1,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
tpur744,1697857737,2,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
tqhu735,1697419498,1,"void ConvertToBinary(int number){
    if (number == 1) {
        printf(""%d"", number);
    }
    else{
        ConvertToBinary(number/2);
        printf(""%d"", number % 2);
    }
}",
tqhu735,1697419501,2,"void ConvertToBinary(int number){
    if (number == 1) {
        printf(""%d"", number);
    }
    else{
        ConvertToBinary(number/2);
        printf(""%d"", number % 2);
    }
}",1
tron042,1697525074,1,"#include <stdio.h>
void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        int N = n % 2; 
        printf(""%d"", N);  
    }
}
",
tron042,1697525076,2,"#include <stdio.h>
void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2); 
        int N = n % 2; 
        printf(""%d"", N);  
    }
}
",1
tsan986,1697931541,1,"void ConvertToBinary(int value)
{
    if ( value == 1){
        printf(""%d"", 1);
    } else {
        ConvertToBinary(value / 2);
        printf(""%d"", value % 2);
    }
}",
tsan986,1697931543,2,"void ConvertToBinary(int value)
{
    if ( value == 1){
        printf(""%d"", 1);
    } else {
        ConvertToBinary(value / 2);
        printf(""%d"", value % 2);
    }
}",1
tsin304,1698058936,1,"void ConvertToBinary(double input)
{
    
    double result = input;
    int remainders = 0;
    
    while (result > 0.5)
    {
        result = result/2;
        if (result - 0.5 == (int)result)
        {
            remainders = remainders*10 + 1;
            result = result - 0.5;
        }
        else
            remainders = remainders*10;
        
        
    }
    PrintReverse(remainders);
}
",0
tsin304,1698096586,2,"void ConvertToBinary(int input)
{
    
    if (input == 1)
    {   
        printf(""%d"",input);
        return;
    }
    
    printf(""%d"",input % 2);
    input = input/2;
    
    
    if (input > 0)
    ConvertToBinary(input);
    

}",0
tsin304,1698105739,3,"void ConvertToBinary(int input)
{
    
    if (input > 0)
    {
        ConvertToBinary(input/2);
        printf(""%d"",input % 2);
    }
    
    
}",1
ttho505,1697945140,1,"void DecimaltoBinary(int value) {
	int remainder, result;
	remainder = value % 2;
	result = value / 2;
	if (result != 0) {
		DecimaltoBinary(result);
	}
	printf(""%d"", remainder);


}",
ttho505,1697945173,2,"#include <stdio.h>
void DecimaltoBinary(int value) {
	int remainder, result;
	remainder = value % 2;
	result = value / 2;
	if (result != 0) {
		DecimaltoBinary(result);
	}
	printf(""%d"", remainder);


}",
ttho505,1697945205,3,"#include <stdio.h>


void DecimaltoBinary(int value) {
	int remainder, result;
	remainder = value % 2;
	result = value / 2;
	if (result != 0) {
		DecimaltoBinary(result);
	}
	printf(""%d"", remainder);


}",
ttho505,1697945228,4,"#include <stdio.h>


void ConvertToBinary(int value) {
	int remainder, result;
	remainder = value % 2;
	result = value / 2;
	if (result != 0) {
		DecimaltoBinary(result);
	}
	printf(""%d"", remainder);


}",
ttho505,1697945246,5,"#include <stdio.h>


void ConvertToBinary(int value) {
	int remainder, result;
	remainder = value % 2;
	result = value / 2;
	if (result != 0) {
		ConvertToBinary(result);
	}
	printf(""%d"", remainder);


}",
ttho505,1697945256,6,"#include <stdio.h>


void ConvertToBinary(int value) {
	int remainder, result;
	remainder = value % 2;
	result = value / 2;
	if (result != 0) {
		ConvertToBinary(result);
	}
	printf(""%d"", remainder);


}",1
ttho743,1697872671,1,"void ConvertToBinary(int n)
{
    if(n == 1){
        printf(""%d"",1);
        return;
    }
    int i;
    i = n%2;
    n = n/2;
    printf(""%d"",i);
}",
ttho743,1697873817,2,"#include <stdio.h>
void ConvertToBinary(int n) {
    if (n == 0) {
        return;  
    }
    ConvertToBinary(n / 2); 
    int i = n % 2;
    printf(""%d"", i); 
}
",
ttho743,1697873823,3,"
void ConvertToBinary(int n) {
    if (n == 0) {
        return;  
    }
    ConvertToBinary(n / 2); 
    int i = n % 2;
    printf(""%d"", i); 
}
",
ttho743,1697873825,4,"
void ConvertToBinary(int n) {
    if (n == 0) {
        return;  
    }
    ConvertToBinary(n / 2); 
    int i = n % 2;
    printf(""%d"", i); 
}
",1
twad520,1698143930,1,"void ConvertToBinary(int num) {
    
    if (num > 0) {
        
        ConvertToBinary(num / 2); 
        
        printf(""%d"", num % 2);   
        
    }
}",
twad520,1698143934,2,"void ConvertToBinary(int num) {
    
    if (num > 0) {
        
        ConvertToBinary(num / 2); 
        
        printf(""%d"", num % 2);   
        
    }
}",1
twol698,1697777047,1,"void ConvertToBinary(int value){
    if (value==1){
        printf(""%d"",value);
        return;
    }else{
        ConvertToBinary(value/2); 
        printf(""%i"", value%2);
    }
}",
twol698,1697777053,2,"void ConvertToBinary(int value){
    if (value==1){
        printf(""%d"",value);
        return;
    }else{
        ConvertToBinary(value/2); 
        printf(""%i"", value%2);
    }
}",1
tyou333,1697438266,1,"void ConvertToBinary(int number) {
    if (number != 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
",
tyou333,1697438270,2,"void ConvertToBinary(int number) {
    if (number != 0) {
        ConvertToBinary(number / 2);
        printf(""%d"", number % 2);
    }
}
",1
tyou421,1697846690,1,"void ConvertToBinary(int n)
{
	/*This function converts an integer from base 10 to
	  binary (base 2) recursively. It does this by applying
	  mod 2 to the integer to find the first binary digit, 
	  then divide the integer by 2. Then, it applies mod 2
	  to the quotient to get the next binary digit, then
	  divides by 2 again. It repeats this until the quotient
	  is less than 1. The remainders (binary digits) are then
	  written in reverse.
	  
	 Inputs:
			n: A base 10 integer that will be converted to binary.
			
	 Outputs:
			None.
			
	 Author: Toma Yousif*/



	// Declare the variables.
	int remainder;


	// If the input integer is 1, print 1.
	if (n == 1)
	{
		printf(""%d"", n);
	}
	// If the input integer is 0, print 0;
	else if (n == 0)
	{
		printf(""0"");
	}
	// Else, convert the input integer to binary
	// and print out the remainder when it is divided
	// by 2.
	else
	{
		ConvertToBinary((n / 2));
		remainder = n % 2;
		printf(""%d"", remainder);
	}
}",
tyou421,1697846693,2,"void ConvertToBinary(int n)
{
	/*This function converts an integer from base 10 to
	  binary (base 2) recursively. It does this by applying
	  mod 2 to the integer to find the first binary digit, 
	  then divide the integer by 2. Then, it applies mod 2
	  to the quotient to get the next binary digit, then
	  divides by 2 again. It repeats this until the quotient
	  is less than 1. The remainders (binary digits) are then
	  written in reverse.
	  
	 Inputs:
			n: A base 10 integer that will be converted to binary.
			
	 Outputs:
			None.
			
	 Author: Toma Yousif*/



	// Declare the variables.
	int remainder;


	// If the input integer is 1, print 1.
	if (n == 1)
	{
		printf(""%d"", n);
	}
	// If the input integer is 0, print 0;
	else if (n == 0)
	{
		printf(""0"");
	}
	// Else, convert the input integer to binary
	// and print out the remainder when it is divided
	// by 2.
	else
	{
		ConvertToBinary((n / 2));
		remainder = n % 2;
		printf(""%d"", remainder);
	}
}",1
tzha578,1697586202,1,"#include <stdio.h>

void ConvertToBinary(int input){
    if(input == 1){
        printf(""1"");
    }else{
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
tzha578,1697586205,2,"#include <stdio.h>

void ConvertToBinary(int input){
    if(input == 1){
        printf(""1"");
    }else{
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",1
tzho903,1698131122,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
        return;
    }
    int leftover = n / 2;
    ConvertToBinary(leftover);
    int result = n % 2;
    printf(""%d"",result);
    
}",
tzho903,1698131124,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
        return;
    }
    int leftover = n / 2;
    ConvertToBinary(leftover);
    int result = n % 2;
    printf(""%d"",result);
    
}",1
uali517,1697522181,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""1"");
	}
	else {
		ConvertToBinary(n/2);
		printf(""%d"", n % 2);
	}
}",1
ujai264,1697761432,1,"#include <stdio.h>
void ConvertToBinary(int a){
    if (a == 1){
        printf(""%i"", a);
    } else {
    
    ConvertToBinary(a/2);
    printf(""%i"", a % 2);
    }


}",
ujai264,1697761435,2,"#include <stdio.h>
void ConvertToBinary(int a){
    if (a == 1){
        printf(""%i"", a);
    } else {
    
    ConvertToBinary(a/2);
    printf(""%i"", a % 2);
    }


}",1
uuel157,1698136357,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        // Recursive call with the quotient (integer division)
        ConvertToBinary(n / 2);
        // Print the remainder, which is the binary digit
        printf(""%d"", n % 2);
    }
}",
uuel157,1698136360,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        // Recursive call with the quotient (integer division)
        ConvertToBinary(n / 2);
        // Print the remainder, which is the binary digit
        printf(""%d"", n % 2);
    }
}",1
vbar374,1698107841,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: if n is 0 or 1, print it
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    // Recursive call with n divided by 2
    ConvertToBinary(n / 2);

    // Print the remainder of n divided by 2 (i.e., the last binary bit)
    printf(""%d"", n % 2);
}",1
vkap589,1697877058,1,"void ConvertToBinary(int n)
{
    int result;
    int x;
    
    if (n == 1) {
        printf(""1"");
    }
    else {
        result = n/2;
        x = n%2;
        
        
        ConvertToBinary(result);
        printf(""%d"", x);
    }
    
    
    
}",
vkap589,1697877061,2,"void ConvertToBinary(int n)
{
    int result;
    int x;
    
    if (n == 1) {
        printf(""1"");
    }
    else {
        result = n/2;
        x = n%2;
        
        
        ConvertToBinary(result);
        printf(""%d"", x);
    }
    
    
    
}",1
vlai276,1697891826,1,"void ConvertToBinary(int n) {
    if (n = 1) {
        printf(""%d"", n);
    } else {
        printf(""%d"" n % 2);
        ConvertToBinary(n / 2);
    }
}
",
vlai276,1697891842,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        printf(""%d"" n % 2);
        ConvertToBinary(n / 2);
    }
}
",
vlai276,1697891857,3,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        printf(""%d"", n % 2);
        ConvertToBinary(n / 2);
    }
}
",
vlai276,1697892075,4,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    } else {
        printf(""%d"", n % -2);
        ConvertToBinary(n / 2);
    }
}
",
vlai276,1697892259,5,"void ConvertToBinary(int n) {
    if (n == 1) {
        ConvertToBinary(n / 2);
        printf(""%d"" n % 2);
        
    }
}
",
vlai276,1697892272,6,"void ConvertToBinary(int n) {
    if (n == 1) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}
",
vlai276,1697892285,7,"void ConvertToBinary(int n) {
    if (n >= 1) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}
",
vlai276,1697892290,8,"void ConvertToBinary(int n) {
    if (n >= 1) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
        
    }
}
",1
vpat188,1698061948,1,"#include <stdio.h>

void ConvertToBinary(int Num){
    
    int CutBinary = Num / 2;
    int SingleBinary = Num % 2;
    
    if (Num == 1){
        printf(""%d"", Num);
    } else {
        ConvertToBinary(CutBinary);
        printf(""%d"", SingleBinary);
    }
   
}",
vpat188,1698061953,2,"#include <stdio.h>

void ConvertToBinary(int Num){
    
    int CutBinary = Num / 2;
    int SingleBinary = Num % 2;
    
    if (Num == 1){
        printf(""%d"", Num);
    } else {
        ConvertToBinary(CutBinary);
        printf(""%d"", SingleBinary);
    }
   
}",1
vwon573,1698059121,1,"void ConvertToBinary(int num){
    if (num > 1){
        ConvertToBinary(num/2);
        
    }
    printf(""%d"", num % 2);
}",
vwon573,1698059124,2,"void ConvertToBinary(int num){
    if (num > 1){
        ConvertToBinary(num/2);
        
    }
    printf(""%d"", num % 2);
}",1
vwu693,1698119500,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
vwu693,1698119508,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
vxie208,1697493405,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		int value = n / 2;
		ConvertToBinary(value);
		printf(""%d"", n % 2);
		
	}
}",
vxie208,1697493407,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		int value = n / 2;
		ConvertToBinary(value);
		printf(""%d"", n % 2);
		
	}
}",1
wany079,1697788429,1,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""%d"", num);
    }
    else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
        
    }
}",
wany079,1697788432,2,"void ConvertToBinary(int num) {
    if (num == 1) {
        printf(""%d"", num);
    }
    else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
        
    }
}",1
wany722,1698049663,1,"#include<stdio.h>
void ConvertToBinary(int num)
{
    int b;
    b = num % 2;
    if(num >= 2)
        ConvertToBinary(num/2);
    printf(""%d"", b);
}",
wany722,1698049672,2,"#include<stdio.h>
void ConvertToBinary(int num)
{
    int b;
    b = num % 2;
    if(num >= 2)
        ConvertToBinary(num/2);
    printf(""%d"", b);
}",1
wany843,1697932070,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case
    if (n == 0) {
        return;
    }

    // Recursive call for the rest of the bits
    ConvertToBinary(n / 2);

    // Print the last bit
    printf(""%d"", n % 2);
}
",
wany843,1697932073,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case
    if (n == 0) {
        return;
    }

    // Recursive call for the rest of the bits
    ConvertToBinary(n / 2);

    // Print the last bit
    printf(""%d"", n % 2);
}
",1
wany897,1697592950,1,"void ConvertToBinary(int n)
{
	if (n == 1)
	{
		printf(""1"");
	}
	else
	{
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
wany932,1697857599,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) return;
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}

int main() {
    ConvertToBinary(157);
    return 0;
}
",0
wany932,1697857601,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) return;
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}

int main() {
    ConvertToBinary(157);
    return 0;
}
",
wany932,1697857621,3,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) return;
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}
",
wany932,1697857622,4,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) return;
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}
",1
wkev690,1697767608,1,"void ConvertToBinary(int value){
    if(value == 1){
        printf(""%d"", value);
    }else{
        ConvertToBinary(value/2);
        printf(""%d"", value % 2);
    }

}",
wkev690,1697767612,2,"void ConvertToBinary(int value){
    if(value == 1){
        printf(""%d"", value);
    }else{
        ConvertToBinary(value/2);
        printf(""%d"", value % 2);
    }

}",1
wli798,1697926871,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
    printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",
wli798,1697926873,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
    printf(""%d"", n);
    } else {
        ConvertToBinary(n/2);
        printf(""%d"", n % 2);
    }
}",1
wlin709,1697913209,1,"#include <stdio.h>

void ConvertToBinary(int i) 
{
    if (i <= 0) {
        return;
    }

    ConvertToBinary(i / 2);

    // Print remainder of i 
    printf(""%d"", i % 2);
}
",
wlin709,1697913210,2,"#include <stdio.h>

void ConvertToBinary(int i) 
{
    if (i <= 0) {
        return;
    }

    ConvertToBinary(i / 2);

    // Print remainder of i 
    printf(""%d"", i % 2);
}
",1
wliy226,1698115841,1,"void ConvertToBinary(int n) {
    // Base case: If n is 1, simply print 1
    if (n == 1) {
        printf(""1"");
    } else {
        // Recursive case:
        // 1. Convert n / 2 to binary
        ConvertToBinary(n / 2);
        
        // 2. Print n % 2
        printf(""%d"", n % 2);
    }
}",
wliy226,1698115992,2,"void ConvertToBinary(int n) {
    
    if (n == 1) { //checks if n is 1
        printf(""1"");//prints 1 if it is simply 1
    } else {
        ConvertToBinary(n / 2);//otherwise convert n/2 to binary 
        printf(""%d"", n % 2);// then print n%2
    }
}",
wliy226,1698115994,3,"void ConvertToBinary(int n) {
    
    if (n == 1) { //checks if n is 1
        printf(""1"");//prints 1 if it is simply 1
    } else {
        ConvertToBinary(n / 2);//otherwise convert n/2 to binary 
        printf(""%d"", n % 2);// then print n%2
    }
}",1
wmas516,1697795680,1,"int ConvertToBinary(int x) {while (x) {printf(""%d"", x % 2);x /= 2;}}",
wmas516,1697795700,2,"int ConvertToBinary(int x) {
    while (x) {printf(""%d"", x % 2);x /= 2;}}",
wmas516,1697795708,3,"int ConvertToBinary(int x) {
    while (x) {printf(""%d"", x % 2);x /= 2;}
    return;
}",
wmas516,1697795723,4,"int ConvertToBinary(int x) {
    while (x) {
        printf(""%d"", x % 2);
        x /= 2;
        
    }
    return 0;
}",
wmas516,1697801025,5,"int ConvertToBinary(int x) {
	int y[100] = {0}, length = 0;
	while (x) {
		y[length++] = x % 2;
		x /= 2;
	}
	for (int i = length-1; i > -1; i--) {
		printf(""%d"",y[i]);
	}
}",
wmas516,1697801044,6,"int ConvertToBinary(int x) {
	int y[100] = {0}, length = 0;
	while (x) {
		y[length++] = x % 2;
		x /= 2;
	}
	for (int i = length-1; i > -1; i--) {
		printf(""%d"",y[i]);
	}
	return 0;
}",
wmas516,1697801046,7,"int ConvertToBinary(int x) {
	int y[100] = {0}, length = 0;
	while (x) {
		y[length++] = x % 2;
		x /= 2;
	}
	for (int i = length-1; i > -1; i--) {
		printf(""%d"",y[i]);
	}
	return 0;
}",1
wwan296,1697670800,1,"void ConvertToBinary(int num)
{
	if (num >= 2) {
		ConvertToBinary(num / 2);
	}
	printf(""%d"", num % 2);
}",
wwan296,1697670805,2,"void ConvertToBinary(int num)
{
	if (num >= 2) {
		ConvertToBinary(num / 2);
	}
	printf(""%d"", num % 2);
}",1
wwon485,1697505947,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",
wwon485,1697505950,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}
",1
wwu295,1697907240,1,"void ConvertToBinary(int number) {
	if (number == 0) {
		return;
	}
	else {
		ConvertToBinary(number / 2);
		printf(number % 2);
	}
}",
wwu295,1697907278,2,"void ConvertToBinary(int number) {
	if (number == 0) {
		return;
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",
wwu295,1697907280,3,"void ConvertToBinary(int number) {
	if (number == 0) {
		return;
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",1
wyu523,1697492546,1,"void ConvertToBinary(int n){
    if (n==1){
        printf(""%d"",n);
    }
    else{
        ConvertToBinary(n/2);
        n=n%2;
        printf(""%d"",n);
    }
}
",
wyu523,1697492548,2,"void ConvertToBinary(int n){
    if (n==1){
        printf(""%d"",n);
    }
    else{
        ConvertToBinary(n/2);
        n=n%2;
        printf(""%d"",n);
    }
}
",1
wyua331,1697965218,1,"int ConvertToBinary(int num)
{
    int i=0;
    int n[10];

    while(i>(-1))
    {
        n[i]=num%2;
        num=(num-n[i])/2;
        i++;
        //printf(""%d----"",num);
        if(num==0)
        {
            break;
        }

    }
    while(i>0)
    {
        printf(""%d"",n[i-1]);
        i--;
    }

}
",
wyua331,1697965310,2,"int ConvertToBinary(int num)
{
    int i=0;
    int n[10];

    while(i>(-1))
    {
        n[i]=num%2;
        num=(num-n[i])/2;
        i++;
        //printf(""%d----"",num);
        if(num==0)
        {
            break;
        }

    }
    while(i>0)
    {
        printf(""%d"",n[i-1]);
        i--;
    }
   return;
}
",
wyua331,1697965318,3,"int ConvertToBinary(int num)
{
    int i=0;
    int n[10];

    while(i>(-1))
    {
        n[i]=num%2;
        num=(num-n[i])/2;
        i++;
        //printf(""%d----"",num);
        if(num==0)
        {
            break;
        }

    }
    while(i>0)
    {
        printf(""%d"",n[i-1]);
        i--;
    }
   return 0;
}
",
wyua331,1697965321,4,"int ConvertToBinary(int num)
{
    int i=0;
    int n[10];

    while(i>(-1))
    {
        n[i]=num%2;
        num=(num-n[i])/2;
        i++;
        //printf(""%d----"",num);
        if(num==0)
        {
            break;
        }

    }
    while(i>0)
    {
        printf(""%d"",n[i-1]);
        i--;
    }
   return 0;
}
",0
wyua331,1697965586,5,"int ConvertToBinary(int num)
{
    int i=0;
    int n[10000];

    while(i>(-1))
    {
        n[i]=num%2;
        num=(num-n[i])/2;
        i++;
        //printf(""%d----"",num);
        if(num==0)
        {
            break;
        }

    }
    while(i>0)
    {
        printf(""%d"",n[i-1]);
        i--;
    }
   return 0;
}
",
wyua331,1697965588,6,"int ConvertToBinary(int num)
{
    int i=0;
    int n[10000];

    while(i>(-1))
    {
        n[i]=num%2;
        num=(num-n[i])/2;
        i++;
        //printf(""%d----"",num);
        if(num==0)
        {
            break;
        }

    }
    while(i>0)
    {
        printf(""%d"",n[i-1]);
        i--;
    }
   return 0;
}
",1
wzha508,1698041851,1,"void ConvertToBinary(int number)
{
	if (number > 0) {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}

",
wzha508,1698041855,2,"void ConvertToBinary(int number)
{
	if (number > 0) {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}

",1
xche362,1697540634,1,"void ConvertToBinary(int n) {
    if (n == 0){
    return;
    }
    else{
        ConvertToBinary(n / 2);
        int MSB = n % 2;
        printf(""%d"", MSB);
    }
}",1
xkan320,1697693663,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
xkan320,1697693669,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
xli330,1697591879,1,"void ConvertToBinary(int n) {
    if (n / 2 == 0) {
        printf(""%d"", n % 2);
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",
xli330,1697591893,2,"void ConvertToBinary(int n) {
    if (n / 2 == 0) {
        printf(""%d"", n % 2);
        return;
    }
    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}",1
xmet073,1698133989,1,"# include <stdio.h>

void ConvertToBinary(int numba) {
    if (numba==0||numba==1){
        printf(""%d"",numba);
    }
    else{
        ConvertToBinary(numba/2);
        printf(""%d"",numba % 2);
     }
    }",
xmet073,1698133993,2,"# include <stdio.h>

void ConvertToBinary(int numba) {
    if (numba==0||numba==1){
        printf(""%d"",numba);
    }
    else{
        ConvertToBinary(numba/2);
        printf(""%d"",numba % 2);
     }
    }",1
xsny378,1697447330,1,"void ConvertToBinary(  int number)
{
    int j = 0;
    int i;
    int Binary[32];
    if(number==0)
    { 
        printf(""0"");
    }
    else {
         while(number !=0)
          i = number % 2;
         Binary[j] = i; 
         number /= 2;
         j++;
    }
    
    for (int k = j - 1; k >= 0; k--) {
            printf(""%d"", Binary[k]);
   
}
}",
xsny378,1697447468,2,"void ConvertToBinary(  int number)
{
    int j = 0;
    int i;
    int Binary[32];
    if(number==0)
    { 
        printf(""0"");
    }
    else {
         while(number !=0)
          i = number % 2;
         Binary[j] = i; 
         number /= 2;
         j++;
    }
    
    for (int k = j - 1; k >= 0; k--) {
            printf(""%d"", Binary[j]);
   
}
}",
xsny378,1697447524,3,"void ConvertToBinary(  int number)
{
    int j = 0;
    int i;
    int Binary[32];
    if(number==0)
    { 
        printf(""0"");
    }
    else {
         while(number !=0){
          i = number % 2;
         Binary[j] = i; 
         number /= 2;
         j++;
         }
    }
    
    for (int k = j - 1; k >= 0; k--) {
            printf(""%d"", Binary[k]);
   
}
}",
xsny378,1697447528,4,"void ConvertToBinary(  int number)
{
    int j = 0;
    int i;
    int Binary[32];
    if(number==0)
    { 
        printf(""0"");
    }
    else {
         while(number !=0){
          i = number % 2;
         Binary[j] = i; 
         number /= 2;
         j++;
         }
    }
    
    for (int k = j - 1; k >= 0; k--) {
            printf(""%d"", Binary[k]);
   
}
}",1
xtan207,1697576560,1,"void ConvertToBinary(int numbers) {

    if (numbers == 0) {
        return;
    }
    ConvertToBinary(numbers/2);

    printf(""%d"", numbers % 2);
}",
xtan207,1697576564,2,"void ConvertToBinary(int numbers) {

    if (numbers == 0) {
        return;
    }
    ConvertToBinary(numbers/2);

    printf(""%d"", numbers % 2);
}",1
xugn489,1697888959,1,"void ConvertToBinary( int x){
    if (x > 0) {
        ConvertToBinary(x / 2);
        printf(""%d"", x % 2);
    }
}",
xugn489,1697889011,2,"void ConvertToBinary( int x){
    if (x > 0) {
        ConvertToBinary(x / 2);
        printf(""%d"", x % 2);
    }
}",1
yayo322,1697946481,1,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    }
    else {
        val = n % 2; 
        printf(""%d"", val); 
        ConvertToBinary(n / 2);
    }
}",
yayo322,1697946593,2,"void ConvertToBinary(int n) {
    if (n == 1) {
        printf(""%d"", n);
    }
    else {
        int val = n % 2; 
        printf(""%d"", val); 
        ConvertToBinary(n / 2);
    }
}",
yayo322,1697946651,3,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    }
    else {
        int val = n % 2; 
        printf(""%d"", val); 
        ConvertToBinary(n / 2);
    }
}",
yayo322,1697946799,4,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    }
    else {
        ConvertToBinary(n / 2);
        int val = n % 2; 
        printf(""%d"", val); 
    }
}",
yayo322,1697946803,5,"void ConvertToBinary(int n) {
    if (n <= 1) {
        printf(""%d"", n);
    }
    else {
        ConvertToBinary(n / 2);
        int val = n % 2; 
        printf(""%d"", val); 
    }
}",1
ybha528,1697775722,1,"void ConvertToBinary(int number)
{
	if (number == 0)
	{
		return; //dividing until remainder /2 is 0
	}

	ConvertToBinary(number / 2); //recursing next bit
	printf(""%d"", number % 2); //printing LSB least significant bit 
}",
ybha528,1697794432,2,"void ConvertToBinary(int number)
{
	if (number == 0)
	{
		return; //dividing until remainder /2 is 0
	}

	ConvertToBinary(number / 2); //recursing next bit
	printf(""%d"", number % 2); //printing LSB least significant bit 
}",1
ycho749,1698040690,1,"void ConvertToBinary(int i) 
{
    if (i == 0 || i == 1) 
    {
        printf(""%d"", i);
        return;
    }
    ConvertToBinary(i / 2);
    printf(""%d"", i % 2);
}",
ycho749,1698040693,2,"void ConvertToBinary(int i) 
{
    if (i == 0 || i == 1) 
    {
        printf(""%d"", i);
        return;
    }
    ConvertToBinary(i / 2);
    printf(""%d"", i % 2);
}",1
ycho760,1697971492,1,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}

}",
ycho760,1697971497,2,"void ConvertToBinary(int n)
{
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}

}",1
ydai729,1698140411,1,"#include <stdio.h>

void ConvertToBinary(int num);
void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}
",1
ydar075,1698144236,1,"void ConvertToBinary(int n) {
	if (n == 0) {
		return;
	}
	ConvertToBinary(n / 2);
	printf(""%d"", n % 2);
}",
ydar075,1698144240,2,"void ConvertToBinary(int n) {
	if (n == 0) {
		return;
	}
	ConvertToBinary(n / 2);
	printf(""%d"", n % 2);
}",1
yfan919,1698041471,1,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    while (input != 0) {
        a = a * 10 + input % 2;
        input /= 2;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698041538,2,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    while (input != 0) {
        a = a + (input % 2) * 10;
        input /= 2;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698041569,3,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    while (input != 0) {
        a = a * 10 + input % 2;
        input /= 2;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698041658,4,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    while (input != 1) {
        a = a * 10 + input % 2;
        input /= 2;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698041668,5,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    while (input != 0) {
        a = a * 10 + input % 2;
        input /= 2;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698041839,6,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    while (input != 0) {
        a = a * 10 + input % 2;
        input /= 2;
    }
    int reversed = 0;
    while (a != 0) {
        reversed = reversed * 10 + a % 10;
        a /= 10;
    }
    printf(""%d"",reversed);
    return reversed;
}",0
yfan919,1698042250,7,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    int b = 1;
    while (input != 0) {
        a = a + (input % 2) * b;
        input /= 2;
        b += 1;
    }
}",0
yfan919,1698042281,8,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    int b = 1;
    while (input != 0) {
        a = a + (input % 2) * b;
        input /= 2;
        b += 1;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698042309,9,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    int b = 0;
    while (input != 0) {
        a = a + (input % 2) * 10 ^ b;
        input /= 2;
        b += 1;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698042326,10,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    int b = 0;
    while (input != 0) {
        a = a + (input % 2) * 10^b;
        input /= 2;
        b += 1;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698042481,11,"#include <stdio.h>

int ConvertToBinary(int input)
{
    int a = 0;
    int b = 0;
    while (input != 0) {
        a = a + (input % 2) * pow(10,b);
        input /= 2;
        b += 1;
    }
    printf(""%d"",a);
    return a;
}",0
yfan919,1698042853,12,"#include <stdio.h>

void ConvertToBinary(int input) {
    if (input == 0) {
        printf(""0"");
        return;
    }
    
    int remainder = input % 2;
    ConvertToBinary(input / 2);
    
    printf(""%d"", remainder);
}",1
yfen481,1697421038,1,"void ConvertToBinary(int n)
 {
    if(n==1){
        printf(""1"");
    }else{
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
        
    }
 }",
yfen481,1697421041,2,"void ConvertToBinary(int n)
 {
    if(n==1){
        printf(""1"");
    }else{
        ConvertToBinary(n/2);
        printf(""%d"",n%2);
        
    }
 }",1
yhaf839,1697438809,1,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",
yhaf839,1697438839,2,"void ConvertToBinary(int n) {
    if (n > 0) {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }
}",1
yilm466,1697943831,1,"void ConvertToBinary(int n)
{
    if (n == 1 || 0) {
        printf(""1"");
    }else
    {
        n = n/2;
        printf(""%d"", n %2);
    }

}",
yilm466,1697943883,2,"void ConvertToBinary(int n)
{
    if (n == 1 || 0) {
        printf(""1"");
    }else
    {
        n = n/2;
        printf(""%d"", n %2);
    }
    ConvertToBinary(n);

}",
yilm466,1697943900,3,"void ConvertToBinary(int n)
{
    if (n == 1 || 0) {
        printf(""1"");
        return;
    }else
    {
        n = n/2;
        printf(""%d"", n %2);
    }
    ConvertToBinary(n);

}",
yilm466,1697943971,4,"void ConvertToBinary(int n)
{
    if (n == 1 || 0) {
        printf(""1"");
        return;
    }else
    {
        printf(""%d"", n %2);
        n = n/2;

    }
    ConvertToBinary(n);

}",
yilm466,1697944036,5,"void ConvertToBinary(int n)
{
    if (n == 0) {
        printf(""0"");
        return;
    } else if (n == 1) {
        printf(""1"");
        return;
    }

    }else
    {
        printf(""%d"", n %2);
        n = n/2;

    }
    ConvertToBinary(n);

}",
yilm466,1697944051,6,"void ConvertToBinary(int n)
{
    if (n == 0) {
        printf(""0"");
        return;
    } else if (n == 1) {
        printf(""1"");
        return;
    }else
    {
        printf(""%d"", n %2);
        n = n/2;

    }
    ConvertToBinary(n);

}",
yilm466,1697944071,7,"void ConvertToBinary(int n)
{
    if (n == 0) {
        printf(""0"");
        return;
    } else if (n == 1) {
        printf(""1"");
        return;
    }else
    {
        printf(""%d"", n %2);

    }
    ConvertToBinary(n/2);

}",
yilm466,1697944089,8,"void ConvertToBinary(int n)
{
    if (n == 0) {
        printf(""0"");
        return;
    } else if (n == 1) {
        printf(""1"");
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}
",
yilm466,1697944548,9,"void ConvertToBinary(int n)
{
    if (n == 0) {
        printf(""0"");
        return;
    } else if (n == 1) {
        printf(""1"");
        return;
    }

    ConvertToBinary(n / 2);
    printf(""%d"", n % 2);
}
",1
yjun129,1697751880,1,"void ConvertToBinary(int value) {
	int remainder[1000];
	int loop = 0;

	while (value != 0) {
		remainder[loop] = value % 2;
		value = value / 2;
		loop++;
	}


	for (int i = loop - 1; i >= 0; i--) {
		printf(""%d"", remainder[i]);
	}
}",1
yjun129,1697753739,2,"void ConvertToBinary(int n) {
    if (n < 2) {
        printf(""%d"", n);
        return;
    }
    else {
        ConvertToBinary(n / 2);

        printf(""%d"", n % 2);
    }
}",1
ykwa219,1698015738,1,"void ConvertToBinary(int n) {
	int r;
	if (n < 2) {
		printf(""%d"", n);
	}
	else {
		r = n % 2;
		ConvertToBinary(n / 2);
	}
	printf(""%d"", r);
}",
ykwa219,1698015945,2,"void ConvertToBinary(int n) {
	int r;
	if (n != 0) {
		r = n % 2;
		ConvertToBinary(n / 2);
		printf(""%d"", r);
	}
}",
ykwa219,1698015947,3,"void ConvertToBinary(int n) {
	int r;
	if (n != 0) {
		r = n % 2;
		ConvertToBinary(n / 2);
		printf(""%d"", r);
	}
}",1
ylee818,1698022951,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n / 2 != 0) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",
ylee818,1698022954,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n / 2 != 0) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}
",1
yrah128,1698023978,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        // Recursively call the function with the remaining part of n
        ConvertToBinary(n / 2);
        // Print the binary digit (0 or 1) for the current bit
        printf(""%d"", n % 2);
    }
}",
yrah128,1698023981,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n > 0) {
        // Recursively call the function with the remaining part of n
        ConvertToBinary(n / 2);
        // Print the binary digit (0 or 1) for the current bit
        printf(""%d"", n % 2);
    }
}",1
ysun512,1697459397,1,"#include <stdio.h>

void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
ytho155,1697618996,1,"#include <stdio.h>

void ConvertToBinary(int value) {
    int arr[100];
    int i = 0;

    while (value != 0) {// do binary shit
        arr[i] = value % 2;
        value = value / 2;
        i++;
    }

    // yewwww we have binary lets print it
    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", arr[j]);
    }

    printf(""\n"");
}",
ytho155,1697618999,2,"#include <stdio.h>

void ConvertToBinary(int value) {
    int arr[100];
    int i = 0;

    while (value != 0) {// do binary shit
        arr[i] = value % 2;
        value = value / 2;
        i++;
    }

    // yewwww we have binary lets print it
    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", arr[j]);
    }

    printf(""\n"");
}",1
ytse120,1697632013,1,"void ConvertToBinary(int num) {
    printf(""%d"",num%2);
    if (num > 1) {
        ConvertToBinary(num/2);
    }
}",
ytse120,1697632543,2,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num/2);
    }
    printf(""%d"",num%2);
}",
ytse120,1697632545,3,"void ConvertToBinary(int num) {
    if (num > 1) {
        ConvertToBinary(num/2);
    }
    printf(""%d"",num%2);
}",1
yxie884,1697946656,1,"void ConvertToBinary(int decimal){
    int binary;
    if(decimal == 1){
        printf(""%d"", decimal);
    }else{
        binary = decimal/2;
        ConvertToBinary(binary%2);
    }
}",
yxie884,1697946711,2,"
void ConvertToBinary(int decimal){
    int binary;
    if(decimal == 1){
        printf(""%d"", decimal);
    }else{
        binary = decimal/2;
        ConvertToBinary(decimal%2);
        decimal = binary;
    }
}",
yxie884,1697947061,3,"void ConvertToBinary(int decimal){
    int binary = decimal/2;
    if(decimal == 1){
        printf(""%d"", decimal);
    }else{
        ConvertToBinary(binary);
        printf(""%d"", decimal % 2);
    }
}",
yxie884,1697947063,4,"void ConvertToBinary(int decimal){
    int binary = decimal/2;
    if(decimal == 1){
        printf(""%d"", decimal);
    }else{
        ConvertToBinary(binary);
        printf(""%d"", decimal % 2);
    }
}",1
yyin299,1697866670,1,"#include <stdio.h>
void ConvertToBinary(int n)
{
    int remain;
    int quotient;
    
    remain = n % 2;
    quotient = n / 2;
    
    if (quotient > 0)
    {
        ConvertToBinary(quotient);
        printf(""%d"", remain);
    }
    else
    {
        printf(""%d"", remain);
    }
}
",
yyin299,1697866673,2,"#include <stdio.h>
void ConvertToBinary(int n)
{
    int remain;
    int quotient;
    
    remain = n % 2;
    quotient = n / 2;
    
    if (quotient > 0)
    {
        ConvertToBinary(quotient);
        printf(""%d"", remain);
    }
    else
    {
        printf(""%d"", remain);
    }
}
",1
yyin440,1697505594,1,"#include <stdio.h>

void ConvertToBinary (int a) {
    if (a < 2) {
        printf(""%d"",a);
        return;
    }
    ConvertToBinary(a / 2);
    printf(""%d"", a % 2);
}",
yyin440,1697505598,2,"#include <stdio.h>

void ConvertToBinary (int a) {
    if (a < 2) {
        printf(""%d"",a);
        return;
    }
    ConvertToBinary(a / 2);
    printf(""%d"", a % 2);
}",1
yzhe520,1697756092,1,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",
yzhe520,1697756094,2,"void ConvertToBinary(int n) {
	if (n == 1) {
		printf(""%d"", 1);
	}
	else {
		ConvertToBinary(n / 2);
		printf(""%d"", n % 2);
	}
}",1
zche975,1698130355,1,"def PrintReverse(n):
    # Base case: if the number is a single-digit number
    if n < 10:
        print(n, end="""")
        return

    # Print the last digit of the number
    print(n % 10, end="""")

    # Recursively call the function with the remaining digits
    PrintReverse(n // 10)
",
zche975,1698130420,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    // Base case: if the number is 0 or 1
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    // Recursively call the function for the quotient
    ConvertToBinary(n / 2);

    // Print the remainder (current binary digit)
    printf(""%d"", n % 2);
}",
zche975,1698130443,3,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);
}",
zche975,1698130444,4,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0 || n == 1) {
        printf(""%d"", n);
        return;
    }

    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);
}",1
zcol623,1697453267,1,"//author:zcol623
void ConvertToBinary(int n) {
    if (n > 1) {//Base Case: If n is less than or equal to the 1,modulo 2 is the binary equivalent 
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);//print the remainder of integer part divided by 2
}",
zcol623,1697453272,2,"//author:zcol623
void ConvertToBinary(int n) {
    if (n > 1) {//Base Case: If n is less than or equal to the 1,modulo 2 is the binary equivalent 
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);//print the remainder of integer part divided by 2
}",1
zcra120,1697843509,1," #include <stdio.h>
void ConvertToBinary(int x)
  {
      int counter = 0;
      int binary[1000000];
 while (x>0){
     binary[counter++] = x%2;
     x = x/2;
     
 }
   
  for(int i = counter-1;i>=0;i--){
      printf(""%d"",binary[i]);
  }
 
  }

void main()
{
   ConvertToBinary(12);
 
   return;
}
  

",
zcra120,1697843514,2," #include <stdio.h>
void ConvertToBinary(int x)
  {
      int counter = 0;
      int binary[1000000];
 while (x>0){
     binary[counter++] = x%2;
     x = x/2;
     
 }
   
  for(int i = counter-1;i>=0;i--){
      printf(""%d"",binary[i]);
  }
 
  }

",
zcra120,1697843517,3," #include <stdio.h>
void ConvertToBinary(int x)
  {
      int counter = 0;
      int binary[1000000];
 while (x>0){
     binary[counter++] = x%2;
     x = x/2;
     
 }
   
  for(int i = counter-1;i>=0;i--){
      printf(""%d"",binary[i]);
  }
 
  }

",1
zfu276,1697946013,1,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",
zfu276,1697946015,2,"void ConvertToBinary(int n) {
    if (n > 1) {
        ConvertToBinary(n / 2);
    }
    printf(""%d"", n % 2);
}",1
zgab423,1698020724,1,"void ConvertToBinary(int digit) {
    
    if (digit > 1) {
        ConvertToBinary(digit/2);
    }
    
    printf(""%d"", digit % 2);
}
",
zgab423,1698020727,2,"void ConvertToBinary(int digit) {
    
    if (digit > 1) {
        ConvertToBinary(digit/2);
    }
    
    printf(""%d"", digit % 2);
}
",1
zgar110,1698022080,1,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
zgar110,1698022083,2,"void ConvertToBinary(int num) {
    if (num > 0) {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
zgas053,1698022801,1,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }   
}",
zgas053,1698022803,2,"void ConvertToBinary(int n)
{
    if (n == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(n / 2);
        printf(""%d"", n % 2);
    }   
}",1
zgin653,1697500107,1,"#include <math.h>

void ConvertToBinary(int number){
    for (int i = floor(log2(number)); i >= 0; i--){
        //printf(""%d"", (int)pow(2,i));
        printf(""%d"", number/(int)pow(2,i));
        number -= (number/(int)pow(2,i))*(int)pow(2,i);
    }
}",1
zguo839,1697946398,1,"#include <stdio.h>

void ConvertToBinary(int anumber) {
    if (anumber > 1) {
        ConvertToBinary(anumber / 2); 
    }
    printf(""%d"", anumber % 2);
}

",
zguo839,1697946400,2,"#include <stdio.h>

void ConvertToBinary(int anumber) {
    if (anumber > 1) {
        ConvertToBinary(anumber / 2); 
    }
    printf(""%d"", anumber % 2);
}

",1
zhon780,1697455320,1,"#include <stdio.h>

void ConvertToBinary(int input)
{
    if (input / 2 != 0) {
        ConvertToBinary(input / 2);
    }
    printf(""%d"", input % 2);
}",
zhon780,1697455322,2,"#include <stdio.h>

void ConvertToBinary(int input)
{
    if (input / 2 != 0) {
        ConvertToBinary(input / 2);
    }
    printf(""%d"", input % 2);
}",1
zliu381,1697712054,1,"#include <stdio.h>
void ConvertToBinary(int n) {
	int a;
	a = n % 2;
	if (n ==0) {
		
		return;
	}
	else {

		ConvertToBinary(n/2);
	}
	
	printf(""%d"", a);
}
int main(void) {
	ConvertToBinary(157);

}
",
zliu381,1697712062,2,"#include <stdio.h>
void ConvertToBinary(int n) {
	int a;
	a = n % 2;
	if (n ==0) {
		
		return;
	}
	else {

		ConvertToBinary(n/2);
	}
	
	printf(""%d"", a);
}
",
zliu381,1697712065,3,"#include <stdio.h>
void ConvertToBinary(int n) {
	int a;
	a = n % 2;
	if (n ==0) {
		
		return;
	}
	else {

		ConvertToBinary(n/2);
	}
	
	printf(""%d"", a);
}
",1
zliu578,1697788891,1,"void ConvertToBinary(int value)
{
	if (value != 1) {
		ConvertToBinary(value / 2);
	}
	printf(""%d"", value % 2);
}",
zliu578,1697788893,2,"void ConvertToBinary(int value)
{
	if (value != 1) {
		ConvertToBinary(value / 2);
	}
	printf(""%d"", value % 2);
}",1
zpen457,1697613112,1,"void ConvertToBinary(int num)
{
    if (num == 1){
        printf(""1"");
    } else if (num == 0){
        printf(""0"");
    } else {
        ConvertToBinary(num/2);
        printf(""%d"",num % 2);
    }
}",
zpen457,1697613116,2,"void ConvertToBinary(int num)
{
    if (num == 1){
        printf(""1"");
    } else if (num == 0){
        printf(""0"");
    } else {
        ConvertToBinary(num/2);
        printf(""%d"",num % 2);
    }
}",1
zqia091,1698119515,1,"#include <stdio.h>

void ConvertToBinary(int x) 
{
    if (x==0||x==1) 
    {
        printf(""%d"", x);
        return;
    }
    ConvertToBinary(x/2);
    printf(""%d"", x % 2);
}",
zqia091,1698119528,2,"#include <stdio.h>

void ConvertToBinary(int x) 
{
    if (x==0||x==1) 
    {
        printf(""%d"", x);
        return;
    }
    ConvertToBinary(x/2);
    printf(""%d"", x % 2);
}",1
zshi453,1697966542,1,"#include <stdio.h>

void DecimalToBinary(int n)
{
    int output, remainder;
    if (n <= 0){
        return;
    }
    else if (n == 1){
        output = 1;
        printf(""%d"",output);
    }
    else{
        printf(""%d"",n%2);
        DecimalToBinary(n/2);
    }
}",
zshi453,1697966565,2,"#include <stdio.h>

void ConvertToBinary(int n)
{
    int output, remainder;
    if (n <= 0){
        return;
    }
    else if (n == 1){
        output = 1;
        printf(""%d"",output);
    }
    else{
        printf(""%d"",n%2);
        ConvertToBinary(n/2);
    }
}",
zshi453,1697966572,3,"#include <stdio.h>

void ConvertToBinary(int n)
{
    int output;
    if (n <= 0){
        return;
    }
    else if (n == 1){
        output = 1;
        printf(""%d"",output);
    }
    else{
        printf(""%d"",n%2);
        ConvertToBinary(n/2);
    }
}",
zshi453,1697966644,4,"#include <stdio.h>

void DecimalToBinary(int n)
{
    int output;
    if (n <= 0){
        return;
    }
    else if (n == 1){
        output = 1;
        printf(""%d"",output);
    }
    else{
        DecimalToBinary(n/2);
    }
    printf(""%d"",n%2);
}",
zshi453,1697966657,5,"#include <stdio.h>

void ConvertToBinary(int n)
{
    int output;
    if (n <= 0){
        return;
    }
    else if (n == 1){
        output = 1;
        printf(""%d"",output);
    }
    else{
        ConvertToBinary(n/2);
    }
    printf(""%d"",n%2);
}",
zshi453,1697966778,6,"#include <stdio.h>

void ConvertToBinary(int n)
{
    int output;
    if (n>1){
        ConvertToBinary(n/2);
    }
    printf(""%d"",n%2);
    else if (n==1){
        output = 1;
        printf(""%d"",1);
    }
}",
zshi453,1697966800,7,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n>1){
        ConvertToBinary(n/2);
    }
    printf(""%d"",n%2);
}",
zshi453,1697966802,8,"#include <stdio.h>

void ConvertToBinary(int n)
{
    if (n>1){
        ConvertToBinary(n/2);
    }
    printf(""%d"",n%2);
}",1
zvor566,1697855822,1,"void ConvertToBinary(int number) 
{
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",
zvor566,1697855826,2,"void ConvertToBinary(int number) 
{
	if (number == 1) {
		printf(""%d"", number);
	}
	else {
		ConvertToBinary(number / 2);
		printf(""%d"", number % 2);
	}
}",1
zwan373,1698051255,1,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) return;

    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);
}",
zwan373,1698051256,2,"#include <stdio.h>

void ConvertToBinary(int n) {
    if (n == 0) return;

    ConvertToBinary(n / 2);

    printf(""%d"", n % 2);
}",1
zwil198,1698009809,1,"void ConvertToBinary(int input) {
    
    if (input > 0) {
        
        ConvertToBinary(input / 2); 
        printf(""%d"", input % 2);
        
    }
}",
zwil198,1698009812,2,"void ConvertToBinary(int input) {
    
    if (input > 0) {
        
        ConvertToBinary(input / 2); 
        printf(""%d"", input % 2);
        
    }
}",1
zwon694,1697424672,1,"void ConvertToBinary(int input)
{
    if (input == 1){
        printf(""1"");
    } else {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",
zwon694,1697424675,2,"void ConvertToBinary(int input)
{
    if (input == 1){
        printf(""1"");
    } else {
        ConvertToBinary(input / 2);
        printf(""%d"", input % 2);
    }
}",1
zwu591,1697883133,1,"void ConvertToBinary(int decimal)
{
    if (decimal == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(decimal / 2);
        printf(""%d"", decimal % 2);
    }
}",1
zwu591,1697951844,2,"void ConvertToBinary(int decimal)
{
    if (decimal != 1)
    ConvertToBinary(decimal / 2);

    printf(""%d"", decimal % 2);
}",1
zyah987,1698045980,1,"#include <stdio.h>

void ConvertToBinary(int val) 
{
    if (val <= 1) 
    {
        printf(""%d"", val);
        return;
    }
    
    ConvertToBinary(val / 2);
    printf(""%d"", val % 2);
}

",
zyah987,1698045983,2,"#include <stdio.h>

void ConvertToBinary(int val) 
{
    if (val <= 1) 
    {
        printf(""%d"", val);
        return;
    }
    
    ConvertToBinary(val / 2);
    printf(""%d"", val % 2);
}

",1
zyao804,1697948142,1,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count+1] = ""/0"";
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count-i]);
    }
}",
zyao804,1697948211,2,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count+1] = '/0';
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count-i]);
    }
}",
zyao804,1697948249,3,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count+1] = '\0';
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count-i]);
    }
}",
zyao804,1697948260,4,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count+1] = '\0';
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count]);
    }
}",
zyao804,1697948268,5,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count+1] = '\0';
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count-i]);
    }
}",
zyao804,1697948403,6,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count] = '\0';
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count-i]);
    }
}
",
zyao804,1697948510,7,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count] = '\0';
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count-i]);
    }
}",
zyao804,1697948512,8,"#include <stdio.h>

void ConvertToBinary(int input)
{
    int array[1000];
    int count = 0;
    while (input>0){
        array[count] = input%2;
        input = input / 2;
        count++;
    }
    array[count] = '\0';
    for (int i=0;i<=count;i++){
        printf(""%d"",array[count-i]);
    }
}",1
zyu100,1697428091,1,"void ConvertToBinary (int value){
    if ( value ==1){
        printf (""1"");
        }else{
ConvertToBinary (value /2);
   printf(""%d"",value%2) ;
}

}",
zyu100,1697428093,2,"void ConvertToBinary (int value){
    if ( value ==1){
        printf (""1"");
        }else{
ConvertToBinary (value /2);
   printf(""%d"",value%2) ;
}

}",1
zzho965,1698049596,1,"void ConvertToBinary(int num) {
    if (num == 0) {
        return; 
    } else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);",
zzho965,1698049610,2,"void ConvertToBinary(int num) {
    if (num == 0) {
        return; 
    } else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",
zzho965,1698049615,3,"void ConvertToBinary(int num) {
    if (num == 0) {
        return; 
    } else {
        ConvertToBinary(num / 2);
        printf(""%d"", num % 2);
    }
}",1
zzol692,1697964820,1,"void ConvertToBinary(int a)
{
    if (a == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(a / 2);
        printf(""%d"", a % 2);
    }
}",
zzol692,1697964825,2,"void ConvertToBinary(int a)
{
    if (a == 1) {
        printf(""1"");
    } else {
        ConvertToBinary(a / 2);
        printf(""%d"", a % 2);
    }
}",1
