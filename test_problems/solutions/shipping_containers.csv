upi,time,try,answer,rawfraction
aakm278,1695035237,1,"#include <stdio.h>
#include <math.h>

int main()
{
    int LargeCap;
    int SmallCap;
    int Items;
    printf(""Large capacity:\n"");
    scanf(""%i"",&LargeCap);
    printf(""Small capacity:\n"");
    scanf(""%i"",&SmallCap);
    printf(""Number of items:\n"");
    scanf(""%i"",&Items);
    
    int Large = Items / LargeCap;
    int Small = ( Items % LargeCap) / SmallCap;
    int Scrap = ( Items % LargeCap) % SmallCap;
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i\n"", Large, Small, Scrap);
}",1
aana675,1694918406,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    
    int num_large_containers = total_items / large_capacity;
    int num_small_containers = (total_items % large_capacity) / small_capacity;

    
    int scrapped_items = total_items - (num_large_containers * large_capacity + num_small_containers * small_capacity);

    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",1
abha257,1694840143,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large;
	int small;
	int total;
	int Lbox;
	int Sbox;
	int scrap;
	int Sleft;
	
	printf(""Large capacity: \n"");
	scanf(""%d"", &large);
	printf(""Small capacity: \n"");
	scanf(""%d"", &small);
	printf(""Number of items: \n"");
	scanf(""%d"", &total);

	Lbox = total / large;
	Sleft = total % large;
	Sbox = Sleft / small;
	scrap = Sleft % small;

	printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Lbox, Sbox, scrap);
	return 0;
}",1
acam267,1694859903,1,"#include <stdio.h>

int main() {
    int largeCapacity;
    int smallCapacity;
    int totalItems;
    
    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);
    printf(""Small capacity:"");
    scanf(""%d"", &smallCapacity);
    printf(""Number of items:"");
    scanf(""%d"", &totalItems);
    
    int large = totalItems / largeCapacity;
    int small = (totalItems - (largeCapacity*large)) / smallCapacity;
    int scrap = totalItems - (largeCapacity*large) - (small*smallCapacity);
    
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);
    return 0;
}",0
acam267,1694859963,2,"#include <stdio.h>

int main() {
    int largeCapacity;
    int smallCapacity;
    int totalItems;
    
    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);
    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);
    printf(""\nNumber of items:"");
    scanf(""%d"", &totalItems);
    
    int large = totalItems / largeCapacity;
    int small = (totalItems - (largeCapacity*large)) / smallCapacity;
    int scrap = totalItems - (largeCapacity*large) - (small*smallCapacity);
    
    printf(""\nAllocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);
    return 0;
}",1
ache725,1694873175,1,"#include <stdio.h>
int main(void)
{
    int large_capacity;
    int small_capacity;
    int number;
    int large;
    int small;
    int scrap;
    int total_2;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &number);

    large = number/large_capacity;

    small = (number%large_capacity)/small_capacity;

    scrap = (number%large_capacity)%small_capacity;


     printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);
    return 0;
}",0
ache725,1694873251,2,"#include <stdio.h>
int main(void)
{
    int large_capacity;
    int small_capacity;
    int number;
    int large;
    int small;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &number);

    large = number/large_capacity;

    small = (number%large_capacity)/small_capacity;

    scrap = (number%large_capacity)%small_capacity;


     printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);
    return 0;
}",1
achi359,1694993414,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int largeCapacity, smallCapacity, large, small, items, scrap;
//initialise values for the capcities of the respective boxes as well as total no. of items
printf(""Large capacity:"");
scanf(""%d"", &largeCapacity);

printf(""\nSmall capacity:"");
scanf(""%d"", &smallCapacity);

printf(""\nNumber of items:"");
scanf(""%d"", &items);

// calculate the number of boxes required and the amount of scrap
large = items / largeCapacity;
small = (items % largeCapacity) / smallCapacity;
scrap = items - (large * largeCapacity) - (small * smallCapacity);
printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large, small, scrap);

    return 0;
}

",1
adav221,1695031315,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &total_items);

    int num_large_containers = total_items / large_capacity;
    int num_small_containers = (total_items % large_capacity) / small_capacity;

    int num_scrapped_items = total_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);

    return 0;
}",0
adav221,1695031717,2,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int num_large_containers = total_items / large_capacity;
    int num_small_containers = (total_items % large_capacity) / small_capacity;

    int num_scrapped_items = total_items % large_capacity % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);

    return 0;
}",1
adey750,1695003964,1,"#include <stdio.h>
int main()
{
   int largeContainer;
   int smallContainer; 
   
   int largeCap;
   int smallCap; 
  
   int numItems;
   int itemsLeft;
   
   printf(""Large capacity:\n"");
   scanf(""%d"",&largeCap);
   
   printf(""Small capacity:\n"");
   scanf(""%d"",&smallCap);
   
   printf(""Number of items:\n"");
   scanf(""%d"",&numItems);
   
   largeContainer = numItems/largeCap;
   itemsLeft = numItems % largeCap;
   
   smallContainer = itemsLeft/ smallCap;
   itemsLeft =  itemsLeft % smallCap; 
   
   printf(""Allocated:\n"");
   printf("" - Large: %d\n"",largeContainer);
   printf("" - Small: %d\n"",smallContainer);
   printf("" - Scrap: %d"",itemsLeft);
}",1
afit324,1694938781,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int number;
    int largenum;
    int smallnum;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &number);
    
    largenum = number / large;
    smallnum = (number % large) / small;
    scrap = number - (largenum * large) - (smallnum * small);
    
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", largenum, smallnum, scrap);
    
    return 0;
}",1
agan859,1694947388,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int LargeBox;
	int SmallBox;
	int Items;
	int Large;
	int Small;
	int Scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &LargeBox);


	printf(""Small capacity:\n"");
	scanf(""%d"", &SmallBox);

	printf(""Number of items:\n"");
	scanf(""%d"", &Items);

	Large = Items / LargeBox;

	Small = (Items % LargeBox) / SmallBox;

	Scrap = Items - (Large * LargeBox) - (Small * SmallBox);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", Large);
	printf("" - Small: %d\n"", Small);
	printf("" - Scrap: %d\n"", Scrap);



	return 0;
}
",1
agay279,1695027623,1,"#include <stdio.h>

int main() {

    int large;
    int small;
    int scrap;
    int largecap;
    int smallcap;
    int items;
    printf(""Large capacity:\n"");
    scanf(""%d"",&largecap);
    printf(""Small capacity:\n"");
    scanf(""%d"",&smallcap);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);

    large=items/largecap;
    small=(items%largecap)/smallcap;
    scrap=(items%largecap)%smallcap;

    printf(""Allocated:\n- Large: %d\n- Small: %d\n- Scrap: %d"",large,small,scrap);
    
  


    return 0;
}",0
agay279,1695027761,2,"#include <stdio.h>

int main() {

    int large;
    int small;
    int scrap;
    int largecap;
    int smallcap;
    int items;
    printf(""Large capacity:\n"");
    scanf(""%d"",&largecap);
    printf(""Small capacity:\n"");
    scanf(""%d"",&smallcap);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);

    large=items/largecap;
    small=(items%largecap)/smallcap;
    scrap=(items%largecap)%smallcap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);
    
  


    return 0;
}",1
agou682,1695031800,1,"int main() {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""\nNumber of items:"");
    scanf(""%d"", &totalItems);

    int largeContainers = totalItems / largeCapacity;
    int smallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = totalItems - (largeContainers * largeCapacity + smallContainers * smallCapacity);

    printf(""Allocated:\n"");
    printf(""- Large: %d\n"", largeContainers);
    printf(""- Small: %d\n"", smallContainers);
    printf(""- Scrap: %d\n"", scrappedItems);

    return 0;
}",0
agou682,1695031834,2,"#include <stdio.h>
int main() {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""\nNumber of items:"");
    scanf(""%d"", &totalItems);

    int largeContainers = totalItems / largeCapacity;
    int smallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = totalItems - (largeContainers * largeCapacity + smallContainers * smallCapacity);

    printf(""Allocated:\n"");
    printf(""- Large: %d\n"", largeContainers);
    printf(""- Small: %d\n"", smallContainers);
    printf(""- Scrap: %d\n"", scrappedItems);

    return 0;
}",0
agou682,1695031920,3,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""\nNumber of items:"");
    scanf(""%d"", &totalItems);

    int largeContainers = totalItems / largeCapacity;
    int smallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = totalItems - (largeContainers * largeCapacity + smallContainers * smallCapacity);

    printf(""Allocated:\n"");
    printf(""\n- Large: %d"", largeContainers);
    printf(""\n- Small: %d"", smallContainers);
    printf(""\n- Scrap: %d"", scrappedItems);

    return 0;
}",0
agou682,1695031953,4,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""\nNumber of items:\n"");
    scanf(""%d"", &totalItems);

    int largeContainers = totalItems / largeCapacity;
    int smallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = totalItems - (largeContainers * largeCapacity + smallContainers * smallCapacity);

    printf(""Allocated:\n"");
    printf(""\n- Large: %d"", largeContainers);
    printf(""\n- Small: %d"", smallContainers);
    printf(""\n- Scrap: %d"", scrappedItems);

    return 0;
}",0
agou682,1695031968,5,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""\nNumber of items:\n"");
    scanf(""%d"", &totalItems);

    int largeContainers = totalItems / largeCapacity;
    int smallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = totalItems - (largeContainers * largeCapacity + smallContainers * smallCapacity);

    printf(""Allocated:"");
    printf(""\n- Large: %d"", largeContainers);
    printf(""\n- Small: %d"", smallContainers);
    printf(""\n- Scrap: %d"", scrappedItems);

    return 0;
}",0
agou682,1695031983,6,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""\nNumber of items:\n"");
    scanf(""%d"", &totalItems);

    int largeContainers = totalItems / largeCapacity;
    int smallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = totalItems - (largeContainers * largeCapacity + smallContainers * smallCapacity);

    printf(""Allocated:"");
    printf(""\n - Large: %d"", largeContainers);
    printf(""\n - Small: %d"", smallContainers);
    printf(""\n - Scrap: %d"", scrappedItems);

    return 0;
}",1
ahac139,1695030644,1,"#include <stdio.h>

int main(void) {

	int lc;
	int sc;
	int n;

	printf(""Large capacity:\n"");
	scanf(""%i"", &lc);
	printf(""Small capacity:\n"");
	scanf(""%i"", &sc);
	printf(""Number of items:\n"");
	scanf(""%i"", &n);

	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", n / lc, n % lc / sc, n % lc % sc);

}",1
ahac223,1695036449,1,"#include <stdio.h>

int main ()
{ 
    
  int LargeCapacity
  ;printf(""Large capacity: "");
  ;scanf(""%d"", &LargeCapacity);
  ;printf(""\n"");
  
  int SmallCapacity;
  ;printf(""Small capacity: "");
  ;scanf(""%d"", &SmallCapacity);
  ;printf(""\n"");
  
  int NumberOfItems
  ;printf(""Number of items: "");
  ;scanf(""%d"", &NumberOfItems);
  ;printf(""\n"");
  
  int numOfLarge = NumberOfItems / LargeCapacity;
  int b = NumberOfItems%LargeCapacity;
  int a = b / SmallCapacity;
  int Scrap = NumberOfItems - (numOfLarge * LargeCapacity) - (a * SmallCapacity);
 
 ;printf(""Allocated: "")
 ;printf(""\n"");
 ;printf("" - Large: %d"", numOfLarge);
 ;printf(""\n - Small: %d"", a);
 ;printf(""\n - Scrap: %d"", Scrap);
  
  
  
  
  return 0;
}
",1
ahua579,1694851146,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeContainer;
	int smallContainer;
	int numberOfItems;
	printf(""Large capacity:\n"");
	scanf(""%d"", &largeContainer);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallContainer);
	printf(""Number of items:\n"");
	scanf(""%d"", &numberOfItems);

	int largeAllocated;
	largeAllocated = numberOfItems / largeContainer;
	int smallAllocated;
	smallAllocated = (numberOfItems - largeContainer * largeAllocated) / smallContainer;
	int scrap;
	scrap = numberOfItems - (largeContainer * largeAllocated) - (smallContainer * smallAllocated);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", largeAllocated);
	printf("" - Small: %d\n"", smallAllocated);
	printf("" - Scrap: %d"", scrap);

	return 0;
}
",1
ahus071,1695017265,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    //get values from user
    int capLarge,capSmall,numTotal;
    printf(""Large capacity:\n"");
    scanf(""%d"",&capLarge);
    printf(""Small capacity:\n"");
    scanf(""%d"",&capSmall);
    printf(""Number of items:\n"");
    scanf(""%d"",&numTotal);

    int numLarge = numTotal / capLarge;
    int numSmall = (numTotal % capLarge) / capSmall;
    int numScrap = (numTotal % capLarge) % capSmall;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",numLarge,numSmall,numScrap);
    return 0;
}",1
ajeo563,1694856451,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int scrap;
    int n_large;
    int n_small;
   
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    n_large = (items - (items % large))/large;

    n_small = ((items % large)-((items % large) % small))/small;
    
    scrap = (items % large) % small;



    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", n_large, n_small, scrap);


   
    return 0;
}

",1
ajhz216,1694930590,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Large;
    int Small;
    int LeftOver;
    int NumLarge;
    int NumSmall;
    int Total;

    printf(""Large capacity: \n"");
    scanf(""%i"", &Large);
    printf(""Small capacity: \n"");
    scanf(""%i"", &Small);
    printf(""Number of items: \n"");
    scanf(""%i"", &Total);

    NumLarge = Total / Large;
    NumSmall = (Total % Large) / Small;
    LeftOver = (Total % Large) % Small;

    printf(""Allocated: \n"");
    printf("" - Large: %i \n"", NumLarge);
    printf("" - Small: %i \n"", NumSmall);
    printf("" - Scrap: %i \n"", LeftOver);

    return 0;
}

",1
ajhz318,1694863376,1,"#include <stdio.h>
int main(void)
{
    int large_cap;
    int small_cap;
    int number;

    int large;
    int small;
    int scrap;

    int total_aft_large;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large_cap);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items: \n"");
    scanf(""%d"", &number);

    large = number / large_cap;

    total_aft_large = number % large_cap;

    small = total_aft_large / small_cap;

    scrap = total_aft_large % small_cap;


    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0; 
}",1
ajhz488,1695020866,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    double large, small, items;
    int l, s, scraps;

    printf(""Large capacity: \n"");
    scanf(""%lf"", &large);
    printf(""Small capacity: \n"");
    scanf(""%lf"", &small);
    printf(""Number of items: \n"");
    scanf(""%lf"", &items);

    l = items/large;
    items = items - l*large;
    s = items/small;
    scraps = items - s*small;


    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", l, s, scraps);

    return 0;
}

",1
ajin489,1694838412,1,"#include <stdio.h>

int main(void) {
    int L, S, N, large, small, scrap, remainder;
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);
    printf(""Small capacity:\n"");
    scanf(""%d"", &S);
    printf(""Number of items:\n"");
    scanf(""%d"", &N);

    remainder = N % L;
    large = (N - remainder) / L;
    scrap = remainder % S;
    small = (remainder - scrap) / S;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);
    return 0;
}",1
ajoh511,1694926872,1,"#include <stdio.h>

int main(void)
{
    int n_large;
    int n_small;
    int rem;
    int scrap;
    int l_capacity;
    int s_capacity;
    int n_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &n_items);

    n_large = n_items/l_capacity;
    rem = n_items%l_capacity;

    n_small = rem/s_capacity;
    scrap = rem%s_capacity;
    printf(""Allocated:\n- Large: %d\n- Small: %d\n- Scrap: %d\n"", n_large, n_small, scrap);

    return 0;


}",0
ajoh511,1694926917,2,"#include <stdio.h>

int main(void)
{
    int n_large;
    int n_small;
    int rem;
    int scrap;
    int l_capacity;
    int s_capacity;
    int n_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &n_items);

    n_large = n_items/l_capacity;
    rem = n_items%l_capacity;

    n_small = rem/s_capacity;
    scrap = rem%s_capacity;
    printf(""Allocated:\ - Large: %d\n - Small: %d\n - Scrap: %d\n"", n_large, n_small, scrap);

    return 0;


}",0
ajoh511,1694935639,3,"#include <stdio.h>

int main(void)
{
    int n_large;
    int n_small;
    int rem;
    int scrap;
    int l_capacity;
    int s_capacity;
    int n_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &n_items);

    n_large = n_items/l_capacity;
    rem = n_items%l_capacity;

    n_small = rem/s_capacity;
    scrap = rem%s_capacity;
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", n_large, n_small, scrap);

    return 0;


}",1
akam256,1695016441,1,"#include <stdio.h>
#include <math.h>

int main()

{

    
    int L ;
    int S ;
    int T ;
    int Large;
    int Small;
    int Scrap;
    
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);
    printf(""Small capacity:\n"");
    scanf(""%d"", &S);
    printf(""Number of items:\n"");
    scanf(""%d"", &T);
    printf(""Allocated:\n"");
    
    
    Large = T % L ;
    L = T / L ;
    L = floor(L);
    scanf(""%d"", &L);
    printf("" - Large: %d\n"", L);
    
    Small = Large % S;
    S = Large /  S;
    S = floor(S);
    scanf(""%d"", &S);
    printf("" - Small: %d\n"", S);
    
    Scrap = Small;
    scanf(""%d"", &Small);
    printf("" - Scrap: %d"", Small);


    



    return 0;

}",0
akam256,1695026631,2,"#include <stdio.h>
#include <math.h>

int main()

{

    
    int L ;
    int S ;
    int T ;
    int Large;
    int Small;
    
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);
    printf(""Small capacity:\n"");
    scanf(""%d"", &S);
    printf(""Number of items:\n"");
    scanf(""%d"", &T);
    printf(""Allocated:\n"");
    
    
    Large = T % L ;
    L = T / L ;
    L = floor(L);
    scanf(""%d"", &L);
    printf("" - Large: %d\n"", L);
    
    Small = Large % S;
    S = Large /  S;
    S = floor(S);
    scanf(""%d"", &S);
    printf("" - Small: %d\n"", S);
    
    
    scanf(""%d"", &Small);
    printf("" - Scrap: %d"", Small);


    



    return 0;

}",1
akam677,1695037804,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, num_items;

    // Prompt the user for the capacities and number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    // Calculate the number of containers and scraps
    int num_large_containers = num_items / large_capacity;
    int num_small_containers = (num_items % large_capacity) / small_capacity;
    int num_scraps = (num_items % large_capacity) % small_capacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scraps);

    return 0;
}
",1
akin699,1695024053,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
// Author: Anahera Kingston

int main(void)
{
    int large_c;
    int small_c;
    int items_no;

    // Get input from user

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_c);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_c);

    printf(""Number of items:\n"");
    scanf(""%d"", &items_no);

    // Do calculations for information

    int items_large;
    items_large = items_no/large_c;

    int large_remainder;
    large_remainder = items_no % large_c;

    int items_small;
    items_small = large_remainder/small_c;

    int scrap;
    scrap = large_remainder%small_c;

    // Print output
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", items_large);
    printf("" - Small: %d\n"", items_small);
    printf("" - Scrap: %d\n"", scrap);


    return 0;
}

",1
akmu146,1694868786,1,"#include <stdio.h>

int main(void)
{
    int largeCapacity;
    int smallCapacity;
    int numberOfItems;
    int largeAllocated;
    int smallAllocated;
    int scrap;
    scanf(""%i"", &largeCapacity);
    scanf(""%i"", &smallCapacity);
    scanf(""%i"", &numberOfItems);
    largeAllocated = (numberOfItems-(numberOfItems % largeCapacity))/largeCapacity;
    smallAllocated = ((numberOfItems % largeCapacity) - ((numberOfItems % largeCapacity) % smallCapacity))/smallCapacity;
    scrap = numberOfItems - (largeCapacity * largeAllocated) - (smallAllocated * smallCapacity);
    printf(""Large capacity:\nSmall capacity:\nNumber of items:\nAllocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", largeAllocated, smallAllocated, scrap);

    return 0;
}

",1
akod059,1694932933,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeCap;
	int smallCap;
	int itemNum;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &itemNum);

	int largeNum;
	
	largeNum = itemNum / largeCap;

	int largeLO;
	
	largeLO = itemNum % largeCap;

	int smallNum;

	smallNum = largeLO / smallCap;

	int scrap;

	scrap = largeLO % smallCap;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largeNum, smallNum, scrap);

	return 0;
}",1
akri368,1695034972,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int Large;
	int Small;
	int IC;
	int Scrap;
	int LargeR;
	int LargeC;
	int SmallC;
	

	printf(""Large capacity:\n"");
	scanf(""%d"", &Large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &Small);

	printf(""Number of items:\n"");
	scanf(""%d"", &IC);

	LargeC = IC / Large;
	LargeR = IC % Large;

	SmallC = LargeR / Small;
	Scrap = LargeR % Small;

;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", LargeC);
	printf("" - Small: %d\n"", SmallC);
	printf("" - Scrap: %d\n"", Scrap);

	return (0);
}",1
akwo440,1695029471,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    // Establish variables
    int large;
    int small;
    int items;
    int remainder = 0;
    int nLarge = 0;
    int nSmall = 0;


    // Ask for user inputs
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    // Calculations
    while (large<items){
        items = items-large;
        nLarge = nLarge+1;
    }
        while (small<items){
        items = items-small;
        nSmall = nSmall+1;
    }
    remainder = items;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", nLarge);
    printf("" - Small: %d\n"", nSmall);   
    printf("" - Scrap: %d\n"", remainder);

    return 0;
}

",0
akwo440,1695029796,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    // Establish variables
    int large;
    int small;
    int items;
    int remainder = 0;
    int nLarge = 0;
    int nSmall = 0;


    // Ask for user inputs
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    // Calculations
    while (large<=items){
        items = items-large;
        nLarge = nLarge+1;
    }
        while (small<=items){
        items = items-small;
        nSmall = nSmall+1;
    }
    remainder = items;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", nLarge);
    printf("" - Small: %d\n"", nSmall);   
    printf("" - Scrap: %d\n"", remainder);

    return 0;
}

",1
alum086,1694983369,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of containers
    int largeContainers = totalItems / largeCapacity;
    int smallContainers = 0;
    int scrapItems = 0;

    // Calculate the remaining items and containers
    int remainingItems = totalItems % largeCapacity;
    
    if (remainingItems > 0) {
        // If there are remaining items, try to fill small containers
        smallContainers = remainingItems / smallCapacity;
        scrapItems = remainingItems % smallCapacity;
    }

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}
",1
amac853,1695004023,1,"#include <stdio.h>
#include <math.h>

int main() {
    int largeCap;
    int smallCap;
    int numItems;
    int numLarge;
    int numSmall;
    int scrap;
    int remLarge;
    int remSmall;
    
    printf(""Large capacity:\n"");
    scanf(""%i"", &largeCap);
    printf(""Small capacity:\n"");
    scanf(""%i"", &smallCap);
    printf(""Number of items:\n"");
    scanf(""%i"", &numItems);
    
    remLarge = numItems % largeCap;
    remSmall = remLarge % smallCap;
    
    numLarge = numItems/largeCap - remLarge/largeCap;
    numSmall = remLarge/smallCap - remSmall/smallCap;
    scrap = remSmall % smallCap;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",numLarge,numSmall,scrap);
}
",1
amag544,1695006206,1,"#include <stdio.h>

int main(void)
{
    int large, small, number, largecontainer, smallcontainer, scrap;
    printf(""Large capacity:\n"");
    scanf(""%i"", &large);
    printf(""Small capacity:\n"");
    scanf(""%i"", &small);
    printf(""Number of items:\n"");
    scanf(""%i"", &number);
    
    largecontainer = number/large;
    smallcontainer = (number - (largecontainer*large))/small;
    scrap = number - (largecontainer * large) - (smallcontainer * small);
    
    printf(""Allocated:\n"");
    printf("" - Large: %i\n"", largecontainer);
    printf("" - Small: %i\n"", smallcontainer);
    printf("" - Scrap: %i"", scrap);
    
    
    return 0;
}",1
amah664,1695036825,1,"include <stdio.h> 

int main(void)
{
    int LargeCap; 
    int SmallCap;
    int total;
    int Large; 
    int Small;
    int Scrap;
    
    printf(""Large Capacity:\n"");
    scanf(""%d"", &LargeCap);
    printf(""Small Capacity:\n""); 
    scanf(""%d"", &SmallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &total); 

    Large = total / LargeCap; 
    Scrap = total - Large; 

    Small = Scrap / SmallCap; 
    Scrap = Scrap - Small; 

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", Large); 
    printf("" - Small: %d\n"", Small); 
    printf("" - Scrap: %d"", Scrap);



    return 0;
}",0
amah664,1695036867,2,"#include <stdio.h> 

int main(void)
{
    int LargeCap; 
    int SmallCap;
    int total;
    int Large; 
    int Small;
    int Scrap;
    
    printf(""Large Capacity:\n"");
    scanf(""%d"", &LargeCap);
    printf(""Small Capacity:\n""); 
    scanf(""%d"", &SmallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &total); 

    Large = total / LargeCap; 
    Scrap = total - Large; 

    Small = Scrap / SmallCap; 
    Scrap = Scrap - Small; 

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", Large); 
    printf("" - Small: %d\n"", Small); 
    printf("" - Scrap: %d"", Scrap);



    return 0;
}",0
amah664,1695037145,3,"#include <stdio.h> 

int main(void)
{
    int LargeCap; 
    int SmallCap;
    int total;
    int Large; 
    int Small;
    int Scrap;
    
    printf(""Large Capacity:\n"");
    scanf(""%d"", &LargeCap);
    printf(""Small Capacity:\n""); 
    scanf(""%d"", &SmallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &total); 

    Large = total / LargeCap; 
    Scrap = total - Large * LargeCap; 

    Small = Scrap / SmallCap; 
    Scrap = Scrap - Small * SmallCap; 

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", Large); 
    printf("" - Small: %d\n"", Small); 
    printf("" - Scrap: %d"", Scrap);



    return 0;
}",0
amah664,1695037212,4,"#include <stdio.h> 

int main(void)
{
    int LargeCap; 
    int SmallCap;
    int total;
    int Large; 
    int Small;
    int Scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &LargeCap);
    printf(""Small capacity:\n""); 
    scanf(""%d"", &SmallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &total); 

    Large = total / LargeCap; 
    Scrap = total - Large * LargeCap; 

    Small = Scrap / SmallCap; 
    Scrap = Scrap - Small * SmallCap; 

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", Large); 
    printf("" - Small: %d\n"", Small); 
    printf("" - Scrap: %d"", Scrap);



    return 0;
}",1
amal783,1694914571,1,"#include <stdio.h>
int main(void) {
    int lcap, scap, n, large, small;
    printf(""Large capacity:\n"");
    scanf(""%d"", &lcap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &scap);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    printf(""Allocated:\n"");
    large = n / lcap;
    n -= (large * lcap);
    small = n / scap;
    n -= (small * scap);
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d"", n);
    return 0;
}",1
amar516,1695004968,1,"#include <stdio.h>
int main(void)
{
int l;
int s;
int n;
int Large;
int Remainder;
int Scrap;


	printf(""Large capacity:\n"");
	scanf(""%d"", &l);

	printf(""Small capacity:\n"");
	scanf(""%d"", &s);

	printf(""Number of items:\n"");
	scanf(""%d"", &n);
	
	Large = n / l;
	Remainder = n % l;
	Small = Remainder / s;
	Scrap = RemainderFirst % s;


	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", Large);
	printf("" - Small: %d\n"", Small);
	printf("" - Scrap: %d\n"", Scrap);

	return 0;
}",0
amar516,1695005033,2,"#include <stdio.h>
int main(void)
{
int l;
int s;
int n;
int large;
int Remainder;
int small;
int Scrap;


	printf(""Large capacity:\n"");
	scanf(""%d"", &l);

	printf(""Small capacity:\n"");
	scanf(""%d"", &s);

	printf(""Number of items:\n"");
	scanf(""%d"", &n);
	
	large = n / l;
	Remainder = n % l;
	small = Remainder / s;
	Scrap = Remainder % s;


	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", Scrap);

	return 0;
}",1
amar704,1694780227,1,"#include <stdio.h>
#include <math.h>

int main()
{
    int caplarge;
    int capsmall;
    int items;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity:"");
    scanf(""%d"", &caplarge);
    
    printf(""\nSmall capacity:"");
    scanf(""%d"", &capsmall);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &items);
    
    large = items / caplarge;
    large = floor(large);
    
    items -= large * caplarge;
    
    small = items / capsmall;
    small = floor(small);
    
    items -= small * capsmall;
    
    scrap = items;
    
    printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}",1
amar768,1694923949,1,"#include <stdio.h>

int main(void)
{
    int capacityLarge, capacitySmall, n, allocatedLarge, allocatedSmall, allocatedScrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &capacityLarge);

    printf(""Small capacity:\n"");
    scanf(""%d"", &capacitySmall);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    allocatedLarge = n/capacityLarge;

    allocatedSmall = (n % capacityLarge) / capacitySmall;

    allocatedScrap = n - allocatedLarge*capacityLarge - allocatedSmall*capacitySmall;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", allocatedLarge);
    printf("" - Small: %d\n"", allocatedSmall);
    printf("" - Scrap: %d\n"", allocatedScrap);

    return 0;
}",1
amat407,1694859618,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{

    int Lcap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Lcap);

    int Scap;
    printf(""Small capacity:\n"");
    scanf(""%d"", &Scap);
    
    int items;
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    int L_amount;
    L_amount=items/Lcap;
    items=items-L_amount*Lcap;

    int S_amount;
    S_amount=items/Scap;

    int Scrap;
    Scrap=items-S_amount*Scap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",L_amount,S_amount,Scrap);

    return 0;
}",1
amhk276,1694937737,1,"#include <stdio.h>

int main(void)
{
int Large;
int Small;
int Items;
int Allocated_L;
int Allocated_S;
int Scrap;
printf(""Large capacity:\n"");
scanf(""%d"", &Large);
printf(""Small capacity:\n"");
scanf(""%d"", &Small);
printf(""Number of items:\n"");
scanf(""%d"", &Items);
Allocated_L = Items/Large;
Allocated_S = (Items-(Large*Allocated_L))/Small;
Scrap = Items - (Allocated_L*Large) - (Allocated_S * Small);
printf(""Allocated:\n - Large: %d \n - Small: %d \n - Scrap: %d \n"",Allocated_L, Allocated_S, Scrap);
return 0;
}",1
amok249,1694814677,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    printf(""Large capacity:\n"");
    scanf(""%i"",&large);
    
    int small;
    printf(""Small capacity:\n"");
    scanf(""%i"",&small);
    
    int items;
    printf(""Number of items:\n"");
    scanf(""%i"",&items);
    
    int inlarge = floor(items/large);
    
    int itemsleft = items%large;
    
    int insmall = floor(itemsleft/small);
    
    int scraps = itemsleft%small;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",inlarge, insmall, scraps);
    
    return 0;
}
",0
amok249,1694816920,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    int large;
    printf(""Large capacity:\n"");
    scanf(""%i"",&large);
    
    int small;
    printf(""Small capacity:\n"");
    scanf(""%i"",&small);
    
    int items;
    printf(""Number of items:\n"");
    scanf(""%i"",&items);
    
    int inlarge = floor(items/large);
    
    int itemsleft = items%large;
    
    int insmall = floor(itemsleft/small);
    
    int scraps = itemsleft%small;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",inlarge, insmall, scraps);
    
    return 0;
}

",1
amur986,1695022265,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {
        
        int large;
        printf(""Large capacity:"");
        scanf(""%d"",&large);
        
        int small;
        printf(""\nSmall capacity:"");
        scanf(""%d"",&small);

        int n;
        printf(""\nNumber of items:"");
        scanf(""%d"", &n);

        
        int largecount;
        largecount=n/large;
        
       
      
        
        int smallcount;
        smallcount = ((n-largecount*large) /small );

        int throw;
        throw = (n-largecount*large-smallcount*small);
        
        
        
        
        printf(""\nAllocated:"");
        printf(""\n - Large: %d"",largecount);
        printf(""\n - Small: %d"", smallcount);
        printf(""\n - Scrap: %d"", throw);
        
        
        return 0;
}
",1
anig922,1695005076,1,"#include <stdio.h>
#include <math.h>


int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int Number;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity :\n"");
    scanf(""%d"", &LargeCapacity);
    printf(""Small capacity :\n"");
    scanf(""%d"", &SmallCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &Number);
    
    large = floor(Number/LargeCapacity);
    small = floor((Number % LargeCapacity)/SmallCapacity);
    scrap = (Number % LargeCapacity)%SmallCapacity;
    
    printf(""Allocated: \n - Large : %d\n - Small : %d\n - Scrap : %d"",large,small,scrap);
    return 0;
    
    
}",0
anig922,1695005108,2,"#include <stdio.h>
#include <math.h>


int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int Number;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &LargeCapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &SmallCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &Number);
    
    large = floor(Number/LargeCapacity);
    small = floor((Number % LargeCapacity)/SmallCapacity);
    scrap = (Number % LargeCapacity)%SmallCapacity;
    
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);
    return 0;
    
    
}",1
aosm976,1695030691,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) 
{

    int lrg_cntr, sml_cntr, items, leftover;
    int lrg_cap, sml_cap, scrap;

    // get capacity of large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &lrg_cap);

    // get capacity of small container
    printf(""\nSmall capacity:\n"");
    scanf(""%d"", &sml_cap);

    // get number of items
    printf(""\nNumber of Items:\n"");
    scanf(""%d"", &items);

    // calculate total number of large containers required
    lrg_cntr =  (items - (items % lrg_cap))/lrg_cap; // 3
    // calculate leftover items after dividing into large containers
    leftover = items - (lrg_cntr * lrg_cap); // 7
    // calculate total number of small containers required
    sml_cntr = (leftover - (leftover % sml_cap))/sml_cap; // 2
    
    // calculate scrap items (leftover after small containers)
    scrap = leftover - (sml_cntr * sml_cap);

    // print results
    printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", 
    lrg_cntr, sml_cntr, scrap);

    return 0;
}",0
aosm976,1695030762,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) 
{

    int lrg_cntr, sml_cntr, items, leftover;
    int lrg_cap, sml_cap, scrap;

    // get capacity of large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &lrg_cap);

    // get capacity of small container
    printf(""Small capacity:\n"");
    scanf(""%d"", &sml_cap);

    // get number of items
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    // calculate total number of large containers required
    lrg_cntr =  (items - (items % lrg_cap))/lrg_cap; // 3
    // calculate leftover items after dividing into large containers
    leftover = items - (lrg_cntr * lrg_cap); // 7
    // calculate total number of small containers required
    sml_cntr = (leftover - (leftover % sml_cap))/sml_cap; // 2
    
    // calculate scrap items (leftover after small containers)
    scrap = leftover - (sml_cntr * sml_cap);

    // print results
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", 
    lrg_cntr, sml_cntr, scrap);

    return 0;
}",1
apan786,1694945875,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items, large, small, scraps;
    
    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    large = total_items / large_capacity;

    small = (total_items % large_capacity) / small_capacity;

    scraps = total_items - ((large*large_capacity)+(small*small_capacity));
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}
",0
apan786,1694945891,2,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items, large, small, scraps;
    
    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    large = total_items / large_capacity;

    small = (total_items % large_capacity) / small_capacity;

    scraps = total_items - ((large*large_capacity)+(small*small_capacity));
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scraps);

    return 0;
}
",1
apat750,1694852069,1,"
#include <stdio.h>
int 
main (void)
{
    int largecap,smallcap, items, largeneeded, smallneeded, remaining,scrap;
     printf(""Large capacity:\n"");
     scanf(""%d"", &largecap);
     printf(""Small capacity:\n"");
     scanf(""%d"", &smallcap);
     printf(""Number of items:\n"");
     scanf(""%d"", &items);
     
     largeneeded = items/largecap;
     remaining= items%largecap;
     smallneeded= remaining/smallcap;
     scrap= remaining%smallcap;
     printf(""Allocated: \n"");
     printf("" - Large: %d\n"", largeneeded);
     printf("" - Small: %d\n"", smallneeded);
     printf("" - Scrap: %d\n"", scrap);
     
}
",1
apat824,1695010555,1,"#include <stdio.h>

int main() {
    int l_capacity;
    int s_capacity;
    int no_items;
    int large;
    int small;
    int scraps;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &l_capacity);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &s_capacity);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &no_items);
    
    large = no_items / l_capacity;
    
    small = (no_items % l_capacity) / s_capacity;
    
    scraps = no_items - (large * l_capacity) - (small * s_capacity);
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", large);
    printf("" - Small: %d \n"", small);
    printf("" - Scrap: %d \n"", scraps);
    
    return 0;
}",1
apen181,1694875708,1,"#include <stdio.h>
int main()
{
    int LargeCapacity;
    int SmallCapacity;
    int items;
    int large;
    int small;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%i"", &LargeCapacity); 
    printf(""Small capacity:\n"");
    scanf(""%i"", &SmallCapacity); 
    printf(""Number of items:\n"");
    scanf(""%i"", &items); 

    large = items / LargeCapacity; 
    small = (items % LargeCapacity) / SmallCapacity; 
    scrap = (items % LargeCapacity) % SmallCapacity;

    printf(""Allocated:\n - Large : %i \n - Small : %i\n - scrap : %i \n"", large, small, scrap);

    return 0;
}",0
apen181,1694875748,2,"#include <stdio.h>
int main()
{
    int LargeCapacity;
    int SmallCapacity;
    int items;
    int large;
    int small;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%i"", &LargeCapacity); 
    printf(""Small capacity:\n"");
    scanf(""%i"", &SmallCapacity); 
    printf(""Number of items:\n"");
    scanf(""%i"", &items); 

    large = items / LargeCapacity; 
    small = (items % LargeCapacity) / SmallCapacity; 
    scrap = (items % LargeCapacity) % SmallCapacity;

    printf(""Allocated:\n - Large: %i \n - Small: %i\n - Scrap: %i \n"", large, small, scrap);

    return 0;
}",1
apur448,1694986306,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int l, s, n, large, small, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    large = (n - (n%l))/l;
    small = ((n%l)-((n%l)%s))/s;
    scrap = ((n%l)%s);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);


    return 0;
}",1
aqu284,1695036838,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int lc;		// Large capacity
	int sc;		// Small capacity
	int num;	// Number of items
	int nol;	// Number of large boxes
	int nos;	// Number of small boxes
	int lv;		// Large volume(# of items in large)
	int sv;		// Small volume(# of items in small)

	printf(""Large capacity:\n"");
	scanf(""%d"", &lc);

	printf(""Small capacity:\n"");
	scanf(""%d"", &sc);

	printf(""Number of items:\n"");
	scanf(""%d"", &num);

	nol = num / lc; // Number of large boxes = item # / large capacity - autofloors
	lv = nol * lc;	// Taking up lv amount of volume
	lv = num - lv;	// Taking Finding remaining amount of items after large has been filled

	nos = lv / sc;	// Number of small boxes = area remaining / small capacity - autofloors
	sv = nos * sc;	// takes up sv amount of volume
	sv = lv - sv;	// Leading to sv remaining/scrapped items

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", nol);
	printf("" - Small: %d\n"", nos);
	printf("" - Scrap: %d\n"", sv);
	return 0;
}",1
arus530,1694839699,1,"#include <stdio.h>

int main()
{
    int CapL;
    int CapS;
    int NumItem;
    
    int NumL;
    int NumS;
    int Scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &CapL);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &CapS);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &NumItem);
    
    Scrap = NumItem % CapL;
    NumL = (NumItem-Scrap)/CapL;
    
    NumItem = Scrap;
    Scrap = NumItem % CapS;
    NumS = (NumItem-Scrap)/CapS;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", NumL);
    printf("" - Small: %d\n"", NumS);
    printf("" - Scrap: %d\n"", Scrap);
    
    return 0;
}
",1
aryu462,1695005416,1,"#include <stdio.h> 

int main() 
{
    int largecapacity, smallcapacity, totalitems;
    
    // User for input 
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity); 
    
    printf(""Number of items:\n""); 
    scanf(""%d"", &totalitems); 
    
    // Calculating the number of large containers needed 
    int largecontainers = totalitems / largecapacity;
    
    //Calculating the number of small containers needed 
    int smallcontainers = (totalitems % largecapacity) / smallcapacity;
    
    //Calculating number of scraps 
    int scrappeditems = totalitems % largecapacity % smallcapacity; 
    
    // Displaying results 
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers); 
    printf("" - Small: %d\n"", smallcontainers); 
    printf("" - Scrap: %d\n"", scrappeditems); 
    
    return 0; 
    
}
    
}",0
aryu462,1695005431,2,"#include <stdio.h> 

int main() 
{
    int largecapacity, smallcapacity, totalitems;
    
    // User for input 
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity); 
    
    printf(""Number of items:\n""); 
    scanf(""%d"", &totalitems); 
    
    // Calculating the number of large containers needed 
    int largecontainers = totalitems / largecapacity;
    
    //Calculating the number of small containers needed 
    int smallcontainers = (totalitems % largecapacity) / smallcapacity;
    
    //Calculating number of scraps 
    int scrappeditems = totalitems % largecapacity % smallcapacity; 
    
    // Displaying results 
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers); 
    printf("" - Small: %d\n"", smallcontainers); 
    printf("" - Scrap: %d\n"", scrappeditems); 
    
    return 0; 
    
}
    ",1
asaa285,1694985835,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    double largeCapacity, smallCapacity, total, large, small, extra;
    printf(""Large capacity:"");
    scanf(""%lf"", &largeCapacity);
    printf(""\nSmall capacity:"");
    scanf(""%lf"", &smallCapacity);
    printf(""\nNumber of items:"");
    scanf(""%lf"", &total);
    
    large = floor(total/largeCapacity);
    small = floor((total - largeCapacity*large)/smallCapacity);
    extra = total - small*smallCapacity - large*largeCapacity;
    
    printf(""\nAllocated:\n - Large: %.0lf\n - Small: %.0lf\n - Scrap: %.0lf"", large, small, extra);
    return 0;
}",0
asaa285,1694985902,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    double largeCapacity, smallCapacity, total, large, small, extra;
    printf(""Large capacity:"");
    scanf(""%lf"", &largeCapacity);
    printf(""\nSmall capacity:"");
    scanf(""%lf"", &smallCapacity);
    printf(""\nNumber of items:"");
    scanf(""%lf"", &total);
    
    large = floor(total/largeCapacity);
    small = floor((total - largeCapacity*large)/smallCapacity);
    extra = total - small*smallCapacity - large*largeCapacity;
    
    printf(""\nAllocated:\n - Large: %.0lf\n - Small: %.0lf\n - Scrap: %.0lf"", large, small, extra);
    return 0;
}",1
asah845,1694994410,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int CL;
	int CS;
	int TItems;
	int NumBig;
	int NumSmall;
	int Scrapg;

	printf(""Large capacity: "");
	scanf(""%d"", &CL);

	printf(""Small capacity: "");
	scanf(""%d"", &CS);

	printf(""Number of items: "");
	scanf(""%d"", &TItems);

	NumBig = (TItems / CL);
	NumSmall = ((TItems % CL)/CS);
	Scrapg = TItems - (NumBig * CL) - (NumSmall * CS);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", NumBig);
	printf("" - Small: %d\n"", NumSmall);
	printf("" - Scrap: %d\n"", Scrapg);







}",0
asah845,1694994830,2,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int CL;
	int CS;
	int TItems;
	int NumBig;
	int NumSmall;
	int Scrapg;

	printf(""Large capacity: \n"");
	scanf(""%d"", &CL);

	printf(""Small capacity: \n"");
	scanf(""%d"", &CS);

	printf(""Number of items: \n"");
	scanf(""%d"", &TItems);

	NumBig = (TItems / CL);
	NumSmall = ((TItems % CL)/CS);
	Scrapg = TItems - (NumBig * CL) - (NumSmall * CS);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", NumBig);
	printf("" - Small: %d\n"", NumSmall);
	printf("" - Scrap: %d\n"", Scrapg);







}",1
ashi565,1695021223,1,"#include <stdio.h>

int main() {
int large_container_capacity, small_container_capacity, total_items;

printf(""Large capacity: \n "");
scanf(""%d"", &large_container_capacity);

printf(""Small capacity: \n "");
scanf(""%d"", &small_container_capacity);

printf(""Number of items: \n "");
scanf(""%d"", &total_items);

int large_containers = total_items / large_container_capacity;
int small_containers = (total_items % large_container_capacity) / small_container_capacity;

int scrapped_items = total_items - (large_containers * large_container_capacity + small_containers * small_container_capacity);

printf(""Total number of large containers needed: %d\n"", large_containers);
printf(""Total number of small containers needed: %d\n"", small_containers);
printf(""Number of items to be scrapped: %d\n"", scrapped_items);

return 0;
}",0
ashi565,1695021352,2,"#include <stdio.h>

int main() {
int large_container_capacity, small_container_capacity, total_items;

printf(""Large capacity:\n"");
scanf(""%d"", &large_container_capacity);

printf(""Small capacity:\n"");
scanf(""%d"", &small_container_capacity);

printf(""Number of items:\n"");
scanf(""%d"", &total_items);

int large_containers = total_items / large_container_capacity;
int small_containers = (total_items % large_container_capacity) / small_container_capacity;

int scrapped_items = total_items - (large_containers * large_container_capacity + small_containers * small_container_capacity);

printf(""Allocated:\n"");
printf("" - Large: %d\n"", large_containers);
printf("" - Small: %d\n"", small_containers);
printf("" - Scrap: %d\n"", scrapped_items);

return 0;
}",1
asim819,1694830845,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{

	//Get large capacity from user
	int large;
	printf(""Large capacity:\n"");
	scanf(""%d"", &large);
	printf(""\n"");

	//Get small capacity from user
	int small;
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""\n"");

	//Get number of items from user
	int items;
	printf(""Number of items:\n"");
	scanf(""%d"", &items);
	printf(""\n"");

	//Compute number of large
	int numlarge;
	numlarge = items / large;

	//Compute remaining items
	int remaining;
	remaining = items % large;

	//Compute number of small containers
	int numsmall;
	numsmall = remaining / small;

	//Compute items to scrap
	remaining = remaining % small;

	//Print results
	printf(""Allocated:\n"");
	printf(""- Large: %d\n"", numlarge);
	printf(""- Small: %d\n"", numsmall);
	printf(""- Scrap: %d\n"", remaining);

}",0
asim819,1694830877,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{

	//Get large capacity from user
	int large;
	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	//Get small capacity from user
	int small;
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	//Get number of items from user
	int items;
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	//Compute number of large
	int numlarge;
	numlarge = items / large;

	//Compute remaining items
	int remaining;
	remaining = items % large;

	//Compute number of small containers
	int numsmall;
	numsmall = remaining / small;

	//Compute items to scrap
	remaining = remaining % small;

	//Print results
	printf(""Allocated:\n"");
	printf(""- Large: %d\n"", numlarge);
	printf(""- Small: %d\n"", numsmall);
	printf(""- Scrap: %d\n"", remaining);

}",0
asim819,1694830915,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{

	//Get large capacity from user
	int large;
	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	//Get small capacity from user
	int small;
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	//Get number of items from user
	int items;
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	//Compute number of large
	int numlarge;
	numlarge = items / large;

	//Compute remaining items
	int remaining;
	remaining = items % large;

	//Compute number of small containers
	int numsmall;
	numsmall = remaining / small;

	//Compute items to scrap
	remaining = remaining % small;

	//Print results
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", numlarge);
	printf("" - Small: %d\n"", numsmall);
	printf("" - Scrap: %d\n"", remaining);

}",1
aski294,1694939738,1,"int main(void)
{
    int nItems, largeSize, smallSize, nLarge, nSmall, nScrap;
 
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeSize);
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallSize);
    printf(""Number of items: \n"");
    scanf(""%d"", &nItems);

    nLarge = nItems / largeSize;
    nScrap = nItems % largeSize;
    nSmall = nScrap / smallSize;
    nScrap %= smallSize;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", nLarge, nSmall, nScrap);

    return 0;
}",0
aski294,1694939781,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int nItems, largeSize, smallSize, nLarge, nSmall, nScrap;
 
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeSize);
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallSize);
    printf(""Number of items: \n"");
    scanf(""%d"", &nItems);

    nLarge = nItems / largeSize;
    nScrap = nItems % largeSize;
    nSmall = nScrap / smallSize;
    nScrap %= smallSize;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", nLarge, nSmall, nScrap);

    return 0;
}",1
asmi629,1695012398,1,"#include <stdio.h>

int main() {
    int L, S, n;

    printf(""Large capacity: \n"");
    scanf(""%d"", &L);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &S);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    
    int nL = n / L;
    int nS = 0;
    int waste = 0;
    
    if (n % L != 0) {
        nS = (n % L) / S;
        waste = (n % L) % S;
    }
    
    printf(""Allocated:\n"");
    printf("" - Large: %d \n"", nL);
    printf("" - Small: %d \n"", nS);
    printf("" - Scrap: %d \n"", waste);


    return 0;
}",1
atay777,1695022370,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int number;
    int nlarge;
    int nsmall;
    int nscrap;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &number);

    nlarge=number/large;
    nsmall=number%large/small;
    nscrap=number%large%small;

    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", nlarge, nsmall, nscrap);
}",1
atup175,1695032256,1,"#include <stdio.h>

int main()
{
    int large, small, scrap;
    int largeCapacity, smallCapacity, total;
    
    printf(""Large capacity: "");
    scanf(""%d"", &largeCapacity);
    printf(""\n"");
    
    printf(""Small capacity: "");
    scanf(""%d"", &smallCapacity);
    printf(""\n"");
    
    printf(""Number of items: "");
    scanf(""%d"", &total);
    printf(""\n"");
    
    large = total / largeCapacity;
    total = total - large * largeCapacity;
    small = total / smallCapacity;
    scrap = total - small * smallCapacity;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d"", large);
    printf(""\n"");
    printf("" - Small: %d"", small);
    printf(""\n"");
    printf("" - Scrap: %d"", scrap);
    
    
    return 0;
}",1
avan381,1694851010,1,"#include <stdio.h>

int main(void)
{

int capacityL;
int capacityS;
int numberTotal;

int numberL;
int numberS;
int LeftOver;

printf(""Large capacity:\n"");
scanf(""%d"", &capacityL);

printf(""Small capacity:\n"");
scanf(""%d"", &capacityS);

printf(""Number of items:\n"");
scanf(""%d"", &numberTotal);

// get number of large crates that go into and number of left over items
numberL = numberTotal/capacityL;
numberTotal = numberTotal - numberL * capacityL;

// do the same for small boxes- get how many go into remainder and the leftover
numberS = numberTotal/capacityS;
LeftOver = numberTotal - numberS * capacityS;

printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numberL, numberS, LeftOver );


    return 0;
}",1
awar747,1694944285,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, numItems;

    // Ask participant to enter the capacity of a large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    // Ask participant to enter the capacity of a small container
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    // Ask participant to enter the total number of items in the order
    printf(""Number of items:\n"");
    scanf(""%d"", &numItems);

    // Calculate the number of large containers needed
    int numLargeContainers = numItems / largeCapacity;
    int remainingItems = numItems % largeCapacity;

    // Calculate the number of small containers needed
    int numSmallContainers = remainingItems / smallCapacity;
    remainingItems = remainingItems % smallCapacity;

    // Calculate the number of items that will be scrapped
    int numScrapped = remainingItems;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", numScrapped);

    return 0;
}",1
awri757,1694832984,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, numItems, overMod, numScrap, numLarge, numSmall;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);

    printf(""Number of items:\n"");
    scanf(""%d"", &numItems);

    overMod = numItems % largeCap;
    numLarge = (numItems - overMod) / largeCap;

    numScrap = numItems - (numLarge * largeCap);
    overMod = numScrap % smallCap;
    numSmall = (numScrap - overMod) / smallCap;
    numScrap = numScrap - (numSmall * smallCap);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numLarge, numSmall, numScrap);

    return 0;
}",1
ayan607,1694864501,1,"#include <stdio.h>

int main(void)
{
    int largeCapacity;
    int smallCapacity;
    int numItems;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &numItems);
    
    int numLarge = numItems / largeCapacity;
    
    int numSmall = numItems % largeCapacity / smallCapacity;
    
    int numScarp = numItems % largeCapacity % smallCapacity;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numLarge, 
    numSmall, numScarp);
}",1
ayou303,1694844347,1,"#include <stdio.h>

int main() {
	int Large;
	int Small;
	int items;
	int Scrap;
	int Clarge;
	int Csmall;
	int Smallitems;
	printf(""Large capacity:"");
	scanf(""%d"", &Large);

	printf(""Small capacity:"");
	scanf(""%d"", &Small);

	printf(""Number of items:"");
	scanf(""%d"", &items);


	Clarge = items / Large;
	Smallitems = items - Large * Clarge;
	Csmall = Smallitems/Small;
	Scrap = items - Clarge * Large - Csmall * Small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", Clarge);
	printf("" - Small: %d\n"", Csmall);
	printf("" - Scrap: %d"", Scrap);

	return(0);

}

",0
ayou303,1694844368,2,"#include <stdio.h>

int main() {
	int Large;
	int Small;
	int items;
	int Scrap;
	int Clarge;
	int Csmall;
	int Smallitems;
	printf(""Large capacity:\n"");
	scanf(""%d"", &Large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &Small);

	printf(""Number of items:\n"");
	scanf(""%d"", &items);


	Clarge = items / Large;
	Smallitems = items - Large * Clarge;
	Csmall = Smallitems/Small;
	Scrap = items - Clarge * Large - Csmall * Small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", Clarge);
	printf("" - Small: %d\n"", Csmall);
	printf("" - Scrap: %d"", Scrap);

	return(0);

}

",1
ayou533,1694839671,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;
    int large_containers, small_containers, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    large_containers = total_items / large_capacity;
    total_items = total_items % large_capacity;

    small_containers = total_items / small_capacity;
    total_items = total_items % small_capacity;

    scrap = total_items;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
ayua214,1695002876,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    // Input the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large and small containers needed
    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;

    // Calculate the number of scrapped items
    int scrapped_items = total_items % small_capacity;

    // Display the allocation and scrapped items
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",0
ayua214,1695003096,2,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    // Input the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large and small containers needed
    int large_containers = total_items / large_capacity;
    int scrapped_items = total_items - (large_containers * large_capacity) - (small_containers * small_capacity);


    // Calculate the number of scrapped items
    int scrapped_items = total_items % small_capacity;

    // Display the allocation and scrapped items
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",0
ayua214,1695003152,3,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    // Input the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large and small containers needed
    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;

    // Calculate the scrapped items
    int scrapped_items = total_items - (large_containers * large_capacity) - (small_containers * small_capacity);

    // Display the allocation and scrapped items
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",1
bate521,1695037430,1,"#include <stdio.h>

int main() {
    int large_cap, small_cap, total_items, large_cont, small_cont, scrap_items, rem_items;
    printf(""Large capacity:"");
    scanf(""%d"", &large_cap);
    printf(""\n"");
    printf(""Small capacity:"");
    scanf(""%d"", &small_cap);
    printf(""\n"");
    printf(""Number of items:"");
    scanf(""%d"", &total_items);
    printf(""\n"");
    
    large_cont = total_items / large_cap;
    small_cont = 0;
    scrap_items = 0;
    
    rem_items = total_items % large_cap;
    
    if (rem_items > 0) 
    {
        small_cont = rem_items / small_cap;
        scrap_items = rem_items % small_cap;
    }
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_cont);
    printf("" - Small: %d\n"", small_cont);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}
",1
bcar662,1694947631,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int LrgCap;
    int SmlCap;
    int TotalNum;
    int NumLrg;
    int NumSml;
    int NumLeft;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &LrgCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &SmlCap);

    printf(""Number of items:\n"");
    scanf(""%d"", &TotalNum);

    NumLrg = TotalNum / LrgCap;
    NumSml = TotalNum % LrgCap / SmlCap;
    NumLeft = TotalNum - (NumLrg * LrgCap + NumSml * SmlCap);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", NumLrg, NumSml, NumLeft);

    return 0;
}",1
bcha726,1695028773,1,"#include <stdio.h>

int main()
{
    int largeCap;
    int smallCap;
    int numItems;
    int numLarge;
    int numSmall;
    int numLeft;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &numItems);
    
    numLarge = numItems/largeCap;
    numSmall = (numItems%largeCap)/smallCap;
    numLeft = (numItems%largeCap)%smallCap;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLarge);
    printf("" - Small: %d\n"", numSmall);
    printf("" - Scrap: %d"", numLeft);

    return 0;
}",1
bcru157,1695020069,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int large_capacity, small_capacity, nitems;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large_capacity);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small_capacity);

	printf(""Number of items:\n"");
	scanf(""%d"", &nitems);

	int n_large = nitems / large_capacity;
	int n_small = (nitems % large_capacity) / small_capacity;
	int scrap = (nitems - (n_large * large_capacity)) % small_capacity;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", n_large);
	printf("" - Small: %d\n"", n_small);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}",1
besk864,1695011628,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS
#pragma warning(disable : 4996)

int main()
{
    int l_cap;
    int s_cap;
    int items;
    double mod;
    int n_large;
    int n_small;
    int scrap;
    int rem;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &s_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);


    rem = items % l_cap;
   
    n_large = (items - rem) / l_cap;
    
    scrap = rem % s_cap;
    
    n_small = (rem - scrap) / s_cap;
    
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", n_large, n_small, scrap);
    
    
    
    
    return 0;

}",0
besk864,1695011665,2,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int main()
{
    int l_cap;
    int s_cap;
    int items;
    int n_large;
    int n_small;
    int scrap;
    int rem;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &s_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);


    rem = items % l_cap;
   
    n_large = (items - rem) / l_cap;
    
    scrap = rem % s_cap;
    
    n_small = (rem - scrap) / s_cap;
    
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", n_large, n_small, scrap);
    
    
    
    
    return 0;

}",1
bfla774,1695022910,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
int main(void)
{
	int largecap;
	int smallcap;
	int items;
	int large;
	int small;
	int scrap;
	int numlarge;
	int numsmall;
	int numscrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largecap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallcap);

	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	numlarge = items / largecap;
	numsmall = (items % largecap) / smallcap;
	numscrap = ((items % largecap) % smallcap);
	


	printf(""Allocated\n - Large: %d \n - Small: %d \n - Scrap: %d"" ,numlarge,numsmall, numscrap );

	return 0;

}",0
bfla774,1695022983,2,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
int main(void)
{
	int largecap;
	int smallcap;
	int items;
	int numlarge;
	int numsmall;
	int numscrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largecap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallcap);

	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	numlarge = items / largecap;
	numsmall = (items % largecap) / smallcap;
	numscrap = ((items % largecap) % smallcap);
	


	printf(""Allocated\n - Large: %d \n - Small: %d \n - Scrap: %d"" ,numlarge,numsmall, numscrap );

	return 0;

}",0
bfla774,1695023047,3,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
int main(void)
{
	int largecap;
	int smallcap;
	int items;
	int numlarge;
	int numsmall;
	int numscrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largecap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallcap);

	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	numlarge = items / largecap;
	numsmall = (items % largecap) / smallcap;
	numscrap = ((items % largecap) % smallcap);
	


	printf(""Allocated:\n - Large: %d \n - Small: %d \n - Scrap: %d"" ,numlarge,numsmall, numscrap );

	return 0;

}",1
blar030,1694993481,1,"#include <stdio.h>

int main()
{
    int lc;
    int sc;
    int n;
    int lg;
    int sm;
    int scr;
    
    printf(""Large capacity:\n"");
    scanf (""%d"", &lc);

    printf(""Small capacity:\n"");
    scanf (""%d"", &sc);
    
    printf(""Number of items:\n"");
    scanf (""%d"", &n);
    
    lg = n/lc; 

    sm = ((n - (lg*lc))/sc);
    
    scr = n - (lg * lc) - (sm * sc);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n "", lg, sm, scr);
    
    return 0;
}",1
bli482,1694860212,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int lc;
    int lm;
    int sc;
    int sm;
    int n;
    int scrap;
    int r;
    

    printf(""Large capacity:\n"");
    scanf(""%i"", &lc);
    printf(""Small capacity:\n"");
    scanf(""%i"", &sc);
    printf(""Number of items:\n"");
    scanf(""%i"", &n);

    r = n % lc;
    scrap = r % sc;
    sm = (r - scrap) / sc;
    lm = (n - r) / lc;

    printf(""Allocated:\n"");
    printf("" - Large: %i\n"", lm);
    printf("" - Small: %i\n"", sm);
    printf("" - Scrap: %i"", scrap);



    return 0;
}

",1
blin888,1694834718,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large, small, items;
    int largeContainers, remainingItems, smallContainers, scrap;
    
    

    printf(""Large capacity: \n"");
    scanf(""%d"", &large);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    printf(""Allocated: \n"");

    largeContainers = items / large;
    remainingItems = items % large;
    smallContainers = remainingItems / small;
    scrap = remainingItems % small;

    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d"", scrap);

    return 0;
}",1
bmac148,1694777609,1,"#include <stdio.h>

int main(void)
{
 int large;
 int small;
 int items;
 int scrap;
 int l;
 int s;

 printf(""Large capacity: \n"");
 scanf("" %d"", &large);

 printf(""Small capacity: \n"");
 scanf("" %d"", &small);

 printf(""Number of items: \n"");
 scanf("" %d"", &items);

 l = items/large;
 s = (items - (large * l)) / small;
 scrap = items - (large*l) - (small*s);

 printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", l, s, scrap);
 
 return 0;
}
",1
bora417,1694854223,1,"#define  _CRT_SECURE_NO_WARNINGS 
#include <stdio.h>

int main(void)
{
int large;
int small;
int items;

printf(""Large capacity:\n"");
scanf(""%d"",&large);

printf(""Small capacity:\n"");
scanf(""%d"",&small);

printf(""Number of items:\n"");
scanf(""%d"",&items);

int large_containers;
large_containers = items/large; // how many fit into the containers
items = items%large; // how many are leftover

int small_containers;
small_containers = items/small;
items = items%small;

printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",large_containers,small_containers,items);
return 0;
}",1
bpak212,1695024694,1,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user the option to enter the inputs of capacity both larger and smaller containers, the final number of items given in the example above
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from this example
    int numoflargecontainers = (numofitems / largercapacity);
    int numofsmallcontainers = ((numofitems % largercapacity) / smallercapacity);

    // find the number of items that will be scrapped from this example
    int scrappeditems = (numofitems % smallercapacity);

    // display the final result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargecontainers);
    printf("" - Small: %d\n"", numofsmallcontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695024738,2,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user the option to enter the inputs of capacity both larger and smaller containers, the final number of items given in the example above
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from this example
    int numoflargecontainers = (numofitems / largercapacity);
    int numofsmallcontainers = (numofitems % largercapacity) / smallercapacity;

    // find the number of items that will be scrapped from this example
    int scrappeditems = numofitems % smallercapacity;

    // display the final result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargecontainers);
    printf("" - Small: %d\n"", numofsmallcontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031329,3,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numberofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargecontainers = (totalitems / largercapacity);
    int numofsmallercontainers = 0;

    if (totalitems % largercapacity > 0) 
    {
        numofsmallercontainers = totalitems % largercapacity / smallercapacity;
    }

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = totalitems % smallercapacity;

    // Display the result
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031340,4,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargecontainers = (totalitems / largercapacity);
    int numofsmallercontainers = 0;

    if (totalitems % largercapacity > 0) 
    {
        numofsmallercontainers = totalitems % largercapacity / smallercapacity;
    }

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = totalitems % smallercapacity;

    // Display the result
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031371,5,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargecontainers = (numofitems / largercapacity);
    int numofsmallercontainers = 0;

    if (totalitems % largercapacity > 0) 
    {
        numofsmallercontainers = numofitems % largercapacity / smallercapacity;
    }

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems % smallercapacity;

    // Display the result
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031386,6,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargecontainers = (numofitems / largercapacity);
    int numofsmallercontainers = 0;

    if (numofitems % largercapacity > 0) 
    {
        numofsmallercontainers = numofitems % largercapacity / smallercapacity;
    }

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems % smallercapacity;

    // Display the result
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031421,7,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = (numofitems / largercapacity);
    int numofsmallercontainers = 0;

    if (numofitems % largercapacity > 0) 
    {
        numofsmallercontainers = numofitems % largercapacity / smallercapacity;
    }

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems % smallercapacity;

    // Display the result
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031460,8,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = (numofitems / largercapacity);
    int numofsmallercontainers = 0;

    if (numofitems % largercapacity > 0) 
    {
        numofsmallercontainers = numofitems % largercapacity / smallercapacity;
    }

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems % smallercapacity;

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031604,9,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = (numofitems / largercapacity);
    int numofsmallercontainers = 0;

    if (numofitems % largercapacity > 0) 
    {
        numofsmallercontainers = numofitems % largercapacity / smallercapacity;
    }

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems - (numoflargercontainers + largercapacity + numofsmallercontainers + smallercapacity);

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031714,10,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = (numofitems / largercapacity);
    int numofsmallercontainers = ((numofitems % largercapacity) / smallercapacity);

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems - (numoflargercontainers + largercapacity + numofsmallercontainers + smallercapacity);

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031934,11,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = numofitems / largercapacity;
    int numofsmallercontainers = numofitems % largercapacity / smallercapacity;

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems - (numoflargercontainers + largercapacity + numofsmallercontainers + smallercapacity);

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695031996,12,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = numofitems / largercapacity;
    int numofsmallercontainers = (numofitems % largercapacity) / smallercapacity;

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems - (numoflargercontainers + largercapacity + numofsmallercontainers + smallercapacity);

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",0
bpak212,1695032031,13,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = numofitems / largercapacity;
    int numofsmallercontainers = (numofitems % largercapacity) / smallercapacity;

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = numofitems - (numoflargercontainers * largercapacity + numofsmallercontainers * smallercapacity);

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",1
bpak212,1695032061,14,"#include <stdio.h>

int main() 
{
    int largercapacity, smallercapacity, numofitems;

    // give the user to enter the inputs of the capacity of both the larger and smaller containers, the total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largercapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallercapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numofitems);

    // find the number of larger and smaller containers required from the sample above
    int numoflargercontainers = (numofitems / largercapacity);
    int numofsmallercontainers = ((numofitems % largercapacity) / smallercapacity);

    // find the number of items that will be scrapped from the sample above
    int scrappeditems = (numofitems - (numoflargercontainers * largercapacity + numofsmallercontainers * smallercapacity));

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numoflargercontainers);
    printf("" - Small: %d\n"", numofsmallercontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",1
bpat907,1694766477,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int LCap, SCap, n, L, S, scrap, Lleft;

    printf(""Large capacity:\n"");
    scanf(""%d"", &LCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &SCap);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    L = n / LCap;
    Lleft = n % LCap;

    S = Lleft / SCap;
    scrap = Lleft % SCap;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", L);
    printf("" - Small: %d\n"", S);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",1
bril841,1695018789,1,"#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int NumbOfItems;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &LargeCapacity);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &NumbOfItems);
    
    int Large;
    int Small;
    int Scrap;
    
    Large = NumbOfItems / LargeCapacity;
    Scrap = NumbOfItems - Large * LargeCapacity;
    Small = Scrap / SmallCapacity;
    Scrap = Scrap - Small * SmallCapacity;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", Large);
    printf("" - Small: %d \n"", Small);
    printf("" - Scrap: %d \n"", Scrap);
    
    return 0;
}",1
bwil199,1695029404,1,"#include <stdio.h>

int main(void)
{
    int L, S, n, l, s, sc;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);
    printf(""Small capacity:\n"");
    scanf(""%d"", &S);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    
    l = n / L;
    s = (n - L * l) / S;
    sc = n - L * l - S * s;
    
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", l, s, sc);
    
    return 0;
}",1
bwis161,1694937113,1,"//#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {
	int large, small, items, ALarge, ASmall, AScrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);
	printf(""Small capacity: \n"");
	scanf(""%d"", &small);
	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	printf(""Allocated:\n"");
	ALarge = items % large;
	ALarge = (items - ALarge) / large;
	printf("" - Large: %d \n"", ALarge);
	ALarge = items - (ALarge * large);
	ASmall = ALarge % small;
	ASmall = (ALarge - ASmall) / small;
	printf("" - Small: %d \n"", ASmall);
	AScrap = ALarge - (ASmall * small);
	printf("" - Scrap: %d \n"", AScrap);

	return 0;

}",1
bwoo348,1694923257,1,"#include <stdio.h>

int main()
{
    int L, S, T, large, small, scrap;
    printf(""Large capacity:"");
    scanf(""%d"", &L);
    printf(""\nSmall capacity:"");
    scanf(""%d"", &S);
    printf(""\nNumber of items:"");
    scanf(""%d"", &T);
    
    large = T / L;
    small = (T-large*L) / S;
    scrap = T-large*L-small*S;
    
    printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);

    return 0;
}",1
byul423,1694910287,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{

    int large;
    int small;
    int total;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);

 
    int num_large = total / large;
    int num_small = (total % large) / small;
    int num_scrap = ((total % large) % small);


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large);
    printf("" - Small: %d\n"", num_small);
    printf("" - Scrap: %d\n"", num_scrap);
}",1
cada577,1694873880,1,"#include <stdio.h>
int main(void)

{
int large, small, items, Scrap, Large, Small;
printf(""Large capacity:\n"");
scanf(""%d"", &large);

printf(""Small capacity:\n"");
scanf(""%d"", &small);

printf(""Number of items:\n"");
scanf(""%d"", &items);

Large = items/large;
Small = (items - (large*Large))/small;
Scrap = items - (Large*large) - (small*Small);

printf(""Allocated:\n"");
printf("" - Large: %d\n"",Large);
printf("" - Small: %d\n"",Small);
printf("" - Scrap: %d"",Scrap);



}",1
cana544,1694829985,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {
	int capLarge, large, capSmall, small, items, scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &capLarge);

	printf(""Small capacity: \n"");
	scanf(""%d"", &capSmall);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	small = (items % capLarge) / capSmall;
	large = items / capLarge;
	scrap = (items % capLarge) - (small * capSmall);
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);
	return 0;
}",1
cang688,1694792615,1,"#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, totalNum, largeNum, smallNum, scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &totalNum);
    
    largeNum = (totalNum - (totalNum % largeCap)) / largeCap;
    smallNum = (totalNum % largeCap) / smallCap;
    scrap = totalNum - (largeNum * largeCap) - (smallNum * smallCap);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeNum);
    printf("" - Small: %d\n"", smallNum);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
}
",1
cbro989,1694930052,1,"#include <stdio.h>
#include <math.h>
int main() 
{
    int large;
    int small;
    int total;



    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);
int Output1;
int Output2;
int Output3;

Output1 = floor(total / large);
Output2 = floor((total - (Output1 * large) / small));
Output3 = total - (Output1 * large) - (Output2 * small);


    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Output1, Output2, Output3);

    return 0;
}
",0
cbro989,1694930164,2,"#include <stdio.h>
#include <math.h>
int main() 
{
    int large;
    int small;
    int total;



    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);
    
    int Output1;
    int Output2;
    int Output3;

    Output1 = floor(total / large);
    Output2 = floor((total - (Output1 * large)) / small);
    Output3 = total - (Output1 * large) - (Output2 * small);


    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Output1, Output2, Output3);

    return 0;
}",1
ccha854,1694849041,1,"#include <stdio.h>

int main()
{
    int num_large;
    int num_small;
    int num_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &num_large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &num_small);
    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);
    
    int Large;
    int Small;
    int Scrap;
    Large = (num_items - (num_items%num_large))/num_large;
    Small = ((num_items-num_large*Large)-(num_items-(num_large*Large))%num_small)/num_small;
    Scrap = num_items - Large*num_large - Small*num_small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large,Small,Scrap);

    
    return 0;
}",1
cdin152,1694943213,1,"#include <stdio.h>

/*This program calculates the least number of containers required to ship goods.*/
/*By: Connie Ding*/
int main(void)
{
	double Lcapacity, Scapacity, items;
	int Lcontainer, Scontainer, scrap;

	printf(""Large capacity:\n"");
	scanf(""%lf"", &Lcapacity);

	printf(""Small capacity:\n"");
	scanf(""%lf"", &Scapacity);

	printf(""Number of items:\n"");
	scanf(""%lf"", &items);

	Lcontainer = items / Lcapacity;
	Scontainer = (items - (Lcontainer * Lcapacity)) / Scapacity;
	scrap = items - (Lcontainer * Lcapacity) - (Scontainer * Scapacity);
	
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Lcontainer, Scontainer, scrap);

	return 0;
}",1
cdsi208,1695035811,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    int nLarge;
    nLarge = items/large;
    
    
    int a;
    a = items%large;
    
    int nSmall = a/small;
    
    int scrap;
    scrap = a%small;
    
    printf(""Allocated:\n"");
    printf("" - Large: %i\n"", nLarge);
    printf("" - Small: %i\n"", nSmall);
    printf("" - Scrap: %i\n"", scrap);
    
    
    
    
    return 0;
}",1
cgal160,1694923616,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large;
	int small;
	int num;
	int L;
	int S;
	int scrap;
	printf(""Large capacity:\n"");
	scanf(""%d"", &large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &num);
	L = num / large;
	S = (num % large)/small;
	scrap = (num % large) % small;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", L);
	printf("" - Small: %d\n"", S);
	printf("" - Scrap: %d"", scrap);
}",1
cgaz516,1694993107,1,"#include <stdio.h>

int main(void)
{
	int large_capacity;
	int small_capacity;	
	int total_items;
	int large_remaining;
	int scrapped;
	int large_allocation;
	int small_allocation;

	/* Ask user for The capacity of a large container, the 
	capacity of a small container and the total number of 
	items in the order */ 
	printf(""Large capacity: \n"");
	scanf(""%d"", &large_capacity);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small_capacity);

	printf(""Number of items: \n"");
	scanf(""%d"", &total_items);

	// Find how many large boxes distributed
	large_allocation = total_items / large_capacity;

	// Find the remaining items that can go into small boxes
	large_remaining = total_items % large_capacity;

	// Find how many small boxes distributed
	small_allocation = large_remaining / small_capacity;

	// Find the remaining items that can be scrapped
	scrapped = large_remaining % small_capacity;

	// Display the distributions to the user
	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", large_allocation);
	printf("" - Small: %d\n"", small_allocation);
	printf("" - Scrap: %d"", scrapped);

	return 0;
}",1
chua804,1695008785,1,"#include <stdio.h>

int main() {
    double l, s;
    int n;
    
    printf(""Large capacity: \n"");
    scanf(""%lf"", &l);
    printf(""Small capacity: \n"");
    scanf(""%lf"", &s);
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    printf(""Allocated:  \n"");
    
    int large_items = n / l;
    int remaining_items = n % (int)l;
    int small_items = remaining_items / s;
    int scrap = remaining_items % (int)s;
    
    printf("" - Large: %d \n"", large_items);
    printf("" - Small: %d \n"", small_items);
    printf("" - Scrap: %d \n"", scrap);
    
    return 0;
}",1
cjun818,1695036461,1,"int main(void) 
{
    int largeCap;
    int smallCap;
    int items;
    int largeCon;
    int smallCon;
    int remainder;
    int scraps;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    largeCon = items / largeCap;
    remainder = items % largeCap;
    smallCon = remainder / smallCap;
    scraps = remainder % smallCap;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeCon);
    printf("" - Small: %d\n"", smallCon);
    printf("" - Scrap: %d\n"", scraps);

    return 0;
}",0
cjun818,1695036495,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) 
{
    int largeCap;
    int smallCap;
    int items;
    int largeCon;
    int smallCon;
    int remainder;
    int scraps;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    largeCon = items / largeCap;
    remainder = items % largeCap;
    smallCon = remainder / smallCap;
    scraps = remainder % smallCap;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeCon);
    printf("" - Small: %d\n"", smallCon);
    printf("" - Scrap: %d\n"", scraps);

    return 0;
}
",1
clee482,1695011284,1,"#include <stdio.h>

int main()
{
   int lcapacity;
   int scapacity;
   int nitems;
   int alarge;
   int lremainder;
   int asmall;
   int ascrap;
   
   printf(""Large capacity:\n"");
   scanf(""%d"",&lcapacity);
   
   printf(""Small capacity:\n"");
   scanf(""%d"",&scapacity);
   
   printf(""Number of items:\n"");
   scanf(""%d"",&nitems);
   
   alarge = nitems/lcapacity;
   lremainder = nitems%lcapacity;
   asmall = lremainder/scapacity;
   ascrap = lremainder%scapacity;
   
   printf(""Allocated:\n"");
   printf("" - Large: %d\n"", alarge);
   printf("" - Small: %d\n"", asmall);
   printf("" - Scrap: %d"", ascrap);
}
",1
cmac377,1695029181,1,"#include <stdio.h>

int main()
{
  int largebox;
  int smallbox;
  int numitems;
  int numlargebox;
  int numsmallbox;
  int largeleftover;
  int smallleftover;
  
  printf(""Large Capacity:\n"");
  scanf(""%d"", &largebox);
  printf(""Small Capacity:\n"");
  scanf(""%d"", &smallbox);
  printf(""Number of items:\n"");
  scanf(""%d"", &numitems);
  
  numlargebox = numitems / largebox;
  largeleftover = numitems % largebox;
  numsmallbox = largeleftover / smallbox;
  smallleftover = largeleftover % smallbox;
  
  printf(""Allocated:\n"");
  printf("" - Large: %d\n"", numlargebox);
  printf("" - Small: %d\n"", numsmallbox);
  printf("" - Scrap: %d\n"", smallleftover);
}",0
cmac377,1695029216,2,"#include <stdio.h>

int main()
{
  int largebox;
  int smallbox;
  int numitems;
  int numlargebox;
  int numsmallbox;
  int largeleftover;
  int smallleftover;
  
  printf(""Large capacity:\n"");
  scanf(""%d"", &largebox);
  printf(""Small capacity:\n"");
  scanf(""%d"", &smallbox);
  printf(""Number of items:\n"");
  scanf(""%d"", &numitems);
  
  numlargebox = numitems / largebox;
  largeleftover = numitems % largebox;
  numsmallbox = largeleftover / smallbox;
  smallleftover = largeleftover % smallbox;
  
  printf(""Allocated:\n"");
  printf("" - Large: %d\n"", numlargebox);
  printf("" - Small: %d\n"", numsmallbox);
  printf("" - Scrap: %d\n"", smallleftover);
}",1
cmas527,1694952415,1,"#include <stdio.h>

int main(void)
{
int l;
int s;
int n;
int a;
int b;
int c;
int d;


printf(""Large capacity:\n"");
scanf(""%d"", &l);

printf(""Small capacity:\n"");
scanf(""%d"", &s);

printf(""Number of items:\n"");
scanf(""%d"", &n);

printf(""Allocated:\n"");

a=n/l;
printf("" - Large: %d\n"", a);

b=n%l;
c=b/s;
printf("" - Small: %d\n"", c);

d=b%s;
printf("" - Scrap: %d\n"", d);

return 0;







}",1
cmcm317,1695023384,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int capacityL;
	int capacityS;
	int items;
	int basketsL;
	int basketsS;
	int left;

	printf(""Large capacity:\n"");
	scanf(""%d"", &capacityL);

	printf(""Small capacity:\n"");
	scanf(""%d"", &capacityS);

	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	basketsL = items / capacityL;
	items = items % capacityL;

	basketsS = items / capacityS;
	items = items % capacityS;

	left = items;

	printf(""Allocated:\n"");
	printf("" - Large: %i\n"", basketsL);
	printf("" - Small: %i\n"", basketsS);
	printf("" - Scrap: %i\n"", left);

	return 0;
}

",1
cnai408,1695009726,1,"#include <stdio.h>
#include <math.h>

int main()
{
    int largeCap;
    int smallCap;
    int totalItems;
    int large;
    int small;
    int scrap;
    

    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCap);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCap);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);
    
    large = totalItems/largeCap;
    small = (totalItems - (large * largeCap))/smallCap;
    scrap = totalItems - (large * largeCap) - (small * smallCap);
    
    printf(""Allocated \n"");
    printf("" - Large: %d \n"", large);
    printf("" - Small: %d \n"", small);
    printf("" - Scrap: %d \n"", scrap);
    return 0;
}",0
cnai408,1695009790,2,"#include <stdio.h>
#include <math.h>

int main()
{
    int largeCap;
    int smallCap;
    int totalItems;
    int large;
    int small;
    int scrap;
    

    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCap);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCap);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);
    
    large = totalItems/largeCap;
    small = (totalItems - (large * largeCap))/smallCap;
    scrap = totalItems - (large * largeCap) - (small * smallCap);
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", large);
    printf("" - Small: %d \n"", small);
    printf("" - Scrap: %d \n"", scrap);
    return 0;
}",1
cnie825,1694931005,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user for inputs
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large containers
    int largeContainers = totalItems / largeCapacity; 
    
    // Calculate the number of small containers
    int smallContainers = (totalItems % largeCapacity) / smallCapacity; 
    
    // Calculate scrapped items
    int scrapItems = (totalItems % largeCapacity) % smallCapacity; 

    //Print output
    printf(""Allocated:\n"");
    printf(""- Large: %d\n"", largeContainers);
    printf(""- Small: %d\n"", smallContainers);
    printf(""- Scrap: %d\n"", scrapItems);

    return 0;
}
",0
cnie825,1694931054,2,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user for inputs
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large containers
    int largeContainers = totalItems / largeCapacity; 
    
    // Calculate the number of small containers
    int smallContainers = (totalItems % largeCapacity) / smallCapacity; 
    
    // Calculate scrapped items
    int scrapItems = (totalItems % largeCapacity) % smallCapacity; 

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}
",1
coli772,1694986709,1,"#include <stdio.h>

int main(void) {
    int large, small, num, num_large, num_small, num_scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &num);
    num_large = num / large;
    num_small = (num % large) / small;
    num_scrap = (num % large) % small;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large);
    printf("" - Small: %d\n"", num_small);
    printf("" - Scrap: %d\n"", num_scrap);
    return 0;
}

",1
csan114,1694926973,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h> 

int main(void)
{
	int large;
	int small;
	int items;
	int largeboxes;
	int smallboxes;
	int scraps;


	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	largeboxes = (items - (items % large)) / large;
	int remains = items % large;
	smallboxes = (remains - (remains % small)) / small;
	scraps = remains % small;

	printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", largeboxes, smallboxes, scraps);

	return 0;
}",1
cste189,1694853384,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large, small, num;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &num);

	int largeNum, smallNum, remain;

	largeNum = num / large;

	remain = num%large;

	smallNum = remain / small;

	remain = remain % small;

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", largeNum);
	printf("" - Small: %d\n"", smallNum);
	printf("" - Scrap: %d\n"", remain);

	return 0;
}",1
ctof106,1695033663,1,"#include <stdio.h>

int main(void)
{
    
    int l;
    printf(""Large capacity:\n"");
    scanf(""%d"", &l);
    
    int s;
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    
    int n;
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    
    int L;
    L = n/l;
    
    int S;
    S = (n%l)/s;
    
    int scr;
    scr = (n%l)%s;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", L);
    printf("" - Small: %d\n"", S);
    printf("" - Scraps: %d\n"", scr);
    
    return 0;
    
}",0
ctof106,1695033680,2,"#include <stdio.h>

int main(void)
{
    
    int l;
    printf(""Large capacity:\n"");
    scanf(""%d"", &l);
    
    int s;
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    
    int n;
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    
    int L;
    L = n/l;
    
    int S;
    S = (n%l)/s;
    
    int scr;
    scr = (n%l)%s;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", L);
    printf("" - Small: %d\n"", S);
    printf("" - Scrap: %d\n"", scr);
    
    return 0;
    
}",1
ctub889,1695023397,1,"#include <stdio.h>
#include <math.h> // Include math.h for using pow()

int main()
{
    int L;
    int S;
    int n;
    int scrap;
    int Lbox;
    int Sbox;
    double Llo;
    int Slo;
    int scraps;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&L);
   
    printf(""Small capacity:\n"");
    scanf(""%d"",&S);
    
    printf(""Number of items:\n"");
    scanf(""%d"",&n);
    
    Llo = n / L;
    Lbox = floor(Llo);
    
    Slo = n % L;
    Sbox = floor(Slo / S);
    
    scraps = Slo % S;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",Lbox,Sbox,scraps);

    
    return 0;
}",0
ctub889,1695023511,2,"#include <stdio.h>
#include <math.h> // Include math.h for using pow()

int main()
#include <stdio.h>
#include <math.h> // Include math.h for using pow()

int main()
{
    int L;
    int S;
    int n;
    int Lbox;
    int Sbox;
    double Llo;
    int Slo;
    int scraps;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&L);
   
    printf(""Small capacity:\n"");
    scanf(""%d"",&S);
    
    printf(""Number of items:\n"");
    scanf(""%d"",&n);
    
    Llo = n / L;
    Lbox = floor(Llo);
    
    Slo = n % L;
    Sbox = floor(Slo / S);
    
    scraps = Slo % S;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",Lbox,Sbox,scraps);

    
    return 0;
}",0
ctub889,1695024525,3,"#include <stdio.h>
#include <math.h>

int main(void)
{
    int L;
    int S;
    int n;
    int Lbox;
    int Sbox;
    double Llo;
    int Slo;
    int scraps;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&L);
   
    printf(""Small capacity:\n"");
    scanf(""%d"",&S);
    
    printf(""Number of items:\n"");
    scanf(""%d"",&n);
    
    Llo = n / L;
    Lbox = floor(Llo);
    
    Slo = n % L;
    Sbox = floor(Slo / S);
    
    scraps = Slo % S;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",Lbox,Sbox,scraps);

    
    return 0;
}",1
cugn667,1695020705,1,"
#include <stdio.h>

int main(void)
{
   int largeCapacity, smallCapacity, items, largeBoxes, remainder1,smallBoxes,scrap;
   
   printf(""Large capacity: \n"");
   scanf(""%d"", &largeCapacity);
    
   printf(""Small capacity: \n"");
   scanf(""%d"", &smallCapacity);
   
   printf(""Number of items: \n"");
   scanf(""%d"", &items);
   
   largeBoxes = (int)( items/largeCapacity);
   remainder1 = items%largeCapacity;
   
   smallBoxes = (int)( remainder1/smallCapacity);
   scrap = remainder1%smallCapacity;
   
   printf(""Allocated:\n "");
   printf(""- Large: %d \n"", largeBoxes);
   printf("" - Small: %d \n"", smallBoxes);
   printf("" - Scrap: %d"", scrap);
   
   
    return 0;
}
",1
cwei506,1695018948,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int large_no;
    int small_no;
    int scrap;

    // getting user to enter values
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    // calculating number of containers needed
    large_no = items / large;
    small_no = (items % large)/small;
    scrap = (items % large) % small;

    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_no, small_no, scrap);

    return 0;
}",1
cwu200,1694941758,1,"#include <stdio.h>

int main(void) {
  //declaring variables
  int large;
  int small;
  int total;

  //obtaining values for each variable
  printf(""Large capacity: \n"");
  scanf(""%d"", &large);

  printf(""Small capacity: \n"");
  scanf(""%d"", &small);

  printf(""Number of items: \n"");
  scanf(""%d"", &total);

  //calculating the total number of large, small containers, and also the remainder items after sorting into large boxes and scrapped items using '%', which is mod
  int numlarge = total / large;
  int items = total % large;
  int numsmall = items / small;
  int scrapped = items % small;

  printf(""Allocated: \n"");
  printf("" - Large: %d \n"", numlarge);
  printf("" - Small: %d \n"", numsmall);
  printf("" - Scrap: %d \n"", scrapped);
}",1
cyan312,1694775705,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int largeContainer;
	int smallContainer;
	int numOfItems;
	int remainderItems;
	int allocatedLarge;
	int allocatedSmall;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largeContainer);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallContainer);

	printf(""Number of items:\n"");
	scanf(""%d"", &numOfItems);

	allocatedLarge = numOfItems / largeContainer;
	remainderItems = numOfItems - (allocatedLarge * largeContainer);
	allocatedSmall = remainderItems / smallContainer;
	scrap = remainderItems - (allocatedSmall * smallContainer);

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", allocatedLarge, allocatedSmall, scrap);
	return 0;
}",1
cyiu210,1694917289,1,"#include <stdio.h>

int main(void)
{
    
    int LC;
    int SC;
    int SCRAP;
    int noi;
    int a;
    int b;
  
    printf(""Large capacity:\n"");
    scanf(""%i"", &LC);
    
    printf(""Small capacity:\n"");
    scanf(""%i"", &SC);
    
    printf(""Number of items:\n"");
    scanf(""%i"", &noi);
    
    a = noi/LC;
    b = (noi-(a*LC))/SC;
    SCRAP = (noi - (a*LC) - (b*SC));
    
    printf(""Allocated: \n - Large: %i\n - Small: %i\n - Scrap: %i\n"", a, b, SCRAP);

    return 0;
}",1
dbar153,1694849078,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large;
	int small;
	int items;
	int val1;
	int val2;
	printf(""Large capacity:\n"");
	scanf(""%i"", &large);
	printf(""Small capacity:\n"");
	scanf(""%i"", &small);
	printf(""Number of items:\n"");
	scanf(""%i"", &items);
	val1 = items / large;
	items = items - (large * val1);
	val2 = items / small;
	items = items - (small * val2);
	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", val1, val2, items);
	return 0;
}",1
dcha468,1695028126,1,"#include <stdio.h>

int main()
{
    int large; 
    int small;
    int items;
    
    int large_num; 
    int small_num; 
    int large_remainder; 
    int excess;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    large_num =  items / large; 
    large_remainder = items % large;
    
    small_num = large_remainder / small ; 
    
    excess =  large_remainder % small; 
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_num);
    printf("" - Small: %d\n"", small_num);
    printf("" - Scrap: %d\n"", excess);
}",1
deri361,1694827013,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeCap, smallCap, itemNo, largeNo, smallNo, scrapNo;
	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &itemNo);
	largeNo = itemNo / largeCap;
	smallNo = (itemNo % largeCap) / smallCap;
	scrapNo = (itemNo % largeCap) % smallCap;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", largeNo);
	printf("" - Small: %d\n"", smallNo);
	printf("" - Scrap: %d\n"", scrapNo);
}",1
dgal735,1695006705,1,"#include <stdio.h>

int main() {
    //define the types of the input values
    int lcapacity, scapacity, total, lcontainers, scontainers, scrapped, remaining;

    // Prompt the user to enter the capacity of a large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &lcapacity);

    // Prompt the user to enter the capacity of a small container
    printf(""Small capacity:\n"");
    scanf(""%d"", &scapacity);

    // Prompt the user to enter the total number of items
    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    // Calculate the number of large containers needed
     //this gives the answer as an int value (ignoring the remainder)
    lcontainers = total / lcapacity; 

    // Calculate the remaining items after filling the large containers
    remaining = total % lcapacity;//this returns the remainder when 'total' is divided by 'lcapacity'(modulus operator)

    // Calculate the number of small containers needed for the remaining items
     //this gives the answer as an int value (ignoring the remainder)
    scontainers = remaining / scapacity;

    // Calculate the number of scrapped items
    scrapped = remaining % scapacity;//this returns the remainder when 'remaining' is divided by 'scapacity'(modulus operator)

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", lcontainers);
    printf("" - Small: %d\n"", scontainers);
    printf("" - Scrap: %d\n"", scrapped);

    return 0;
}
",1
dhah941,1695028714,1,"#include <stdio.h>

int main()
{
    int capL;
    int capS;
    int items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &capL);
    printf(""Small capacity:\n"");
    scanf(""%d"", &capS);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    int countL;
    int countS;
    int countI;
    
    countL = items / capL;
    items = (items % capL);
    countS = items / capS;
    items = (items % capS);
    countI = items;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", countL);
    printf("" - Small: %d\n"", countS);
    printf("" - Scrap: %d"", countI);
}",1
dkha055,1694913924,1,"#include <stdio.h>

int main() {

    int large;
    int small;
    int items;
    int large_box;
    int small_box;
    int leftover;
    int mod;

    printf(""Large capacity:\n"");
    scanf(""%i"",&large);
    printf(""Small capacity:\n"");
    scanf(""%i"",&small);
    printf(""Number of items:\n"");
    scanf(""%i"",&items);

    mod = items%large;
    large_box = (items - mod)/large;
    leftover = mod%small;
    small_box = (mod - leftover)/small;

    printf(""Allocated:\n"");
    printf("" - Large: %i\n"",large_box);
    printf("" - Small: %i\n"",small_box);
    printf("" - Scrap: %i\n"",leftover);

}",1
dkur670,1695014018,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeCapacity, smallCapacity,totalItems;
	
	printf(""Large Capacity:\n"");
	scanf(""%d"",&largeCapacity);
	
	
	printf(""Small Capacity:\n"");  
	scanf(""%d"",&smallCapacity);
	
	
	printf(""Number of Items:\n"");  
	scanf(""%d"",&totalItems);
	
	int large_container = totalItems / largeCapacity;
	int Remainder = totalItems % largeCapacity;
	int small_containter = Remainder / smallCapacity;
	int scrap = Remainder % smallCapacity;
	
	
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large_container);
	printf("" - Small: %d\n"", small_containter);
	printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",0
dkur670,1695014973,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeCapacity, smallCapacity, totalItems;
	
	printf(""Large capacity:\n"");
	scanf(""%d"",&largeCapacity);
	
	
	printf(""Small capacity:\n"");  
	scanf(""%d"",&smallCapacity);
	
	
	printf(""Number of items:\n"");  
	scanf(""%d"",&totalItems);
	
	int large_container = totalItems / largeCapacity;
	int Remainder = totalItems % largeCapacity;
	int small_containter = Remainder / smallCapacity;
	int scrap = Remainder % smallCapacity;
	
	
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large_container);
	printf("" - Small: %d\n"", small_containter);
	printf("" - Scrap: %d\n"", scrap);
  
  
    return 0;
}",1
dli630,1695034796,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void) 
{
	// Task 9: Boxes
	int Large_Box;
	int Small_Box;
	int Number_of_Items;
	int Number_of_large_boxes_required;
	int Number_of_small_boxes_required;
	int remainder;
	int scrapped;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large_Box);

	printf(""Small capacity: \n"");
	scanf(""%d"", &Small_Box);

	printf(""Number of items: \n"");
	scanf(""%d"", &Number_of_Items);

	Number_of_large_boxes_required = Number_of_Items / Large_Box;

	remainder = Large_Box % Number_of_Items;

	Number_of_small_boxes_required = remainder / Small_Box; 

	scrapped = Number_of_Items - ((Number_of_large_boxes_required * Large_Box)+(Number_of_small_boxes_required * Small_Box));

	printf("" - Large: %d \n"", Number_of_large_boxes_required);
	printf("" - Small: %d \n"", Number_of_small_boxes_required);
	printf("" - scrap: %d \n"", scrapped);

	return 0;

}",0
dli630,1695034920,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void) 
{
	// Task 9: Boxes
	int Large_Box;
	int Small_Box;
	int Number_of_Items;
	int Number_of_large_boxes_required;
	int Number_of_small_boxes_required;
	int remainder;
	int scrapped;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large_Box);

	printf(""Small capacity: \n"");
	scanf(""%d"", &Small_Box);

	printf(""Number of items: \n"");
	scanf(""%d"", &Number_of_Items);

	Number_of_large_boxes_required = Number_of_Items / Large_Box;

	remainder = Large_Box % Number_of_Items;

	Number_of_small_boxes_required = remainder / Small_Box; 

	scrapped = Number_of_Items - ((Number_of_large_boxes_required * Large_Box)+(Number_of_small_boxes_required * Small_Box));

	printf(""Allocated: \n"");
	printf("" - Large: %d \n"", Number_of_large_boxes_required);
	printf("" - Small: %d \n"", Number_of_small_boxes_required);
	printf("" - Scrap: %d \n"", scrapped);

	return 0;

}",0
dli630,1695035302,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void) 
{
	// Task 9: Boxes
	int Large_Box;
	int Small_Box;
	int Number_of_Items;
	int Number_of_large_boxes_required;
	int Number_of_small_boxes_required;
	int remainder;
	int scrapped;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large_Box);

	printf(""Small capacity: \n"");
	scanf(""%d"", &Small_Box);

	printf(""Number of items: \n"");
	scanf(""%d"", &Number_of_Items);

	Number_of_large_boxes_required = Number_of_Items / Large_Box;

	remainder = Number_of_Items % Large_Box;

	Number_of_small_boxes_required = remainder / Small_Box; 

	scrapped = Number_of_Items - ((Number_of_large_boxes_required * Large_Box) + (Number_of_small_boxes_required * Small_Box));

	printf(""Allocated: \n"");
	printf("" - Large: %d \n"", Number_of_large_boxes_required);
	printf("" - Small: %d \n"", Number_of_small_boxes_required);
	printf("" - Scrap: %d \n"", scrapped);

	return 0;

}",1
dma765,1695033746,1,"#include <stdio.h>

int main() {
    int largeCapacity;
    int smallCapacity;
    int totalItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    int numLargeContainers = totalItems / largeCapacity;

    int numSmallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = totalItems % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrappedItems);

    return 0;
}",0
dma765,1695033814,2,"#include <stdio.h>

int main() {
    int largeCapacity;
    int smallCapacity;
    int totalItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    int numLargeContainers = totalItems / largeCapacity;

    int numSmallContainers = (totalItems % largeCapacity) / smallCapacity;

    int scrappedItems = (totalItems % largeCapacity) % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrappedItems);

    return 0;
}",1
dmun793,1694931068,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeCap, smallCap, numItems;

	printf(""Large capacity:\n"");
	scanf(""%i"", &largeCap);

	printf(""Small capacity:\n"");
	scanf(""%i"", &smallCap);

	printf(""Number of items:\n"");
	scanf(""%i"", &numItems);

	int largeCont = numItems / largeCap;
	numItems -= largeCont * largeCap;

	int smallCont = numItems / smallCap;
	numItems -= smallCont * smallCap;

	printf(""Allocated:\n"");
	printf("" - Large: %i\n"", largeCont);
	printf("" - Small: %i\n"", smallCont);
	printf("" - Scrap: %i\n"", numItems);

	return 0;
}
",1
dpar783,1694930710,1,"#include <stdio.h>

int main(void)
{
    int large, small, total, numlarge, numsmall, remain, scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total);
    
    numlarge = total / large;
    remain = total % large;
    
    numsmall = remain / small;
    scrap = remain % small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numlarge, numsmall, scrap);
    
    return 0;
}",1
dpat674,1694909310,1,"#include <stdio.h>

int main()
{
     int largeCapacity,smallCapacity,numberOfItems,capacity1,capacity2,leftOver,scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&largeCapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"",&smallCapacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"",&numberOfItems);
    
    capacity1=numberOfItems/largeCapacity;
    capacity2=numberOfItems%largeCapacity;
    leftOver=capacity2/smallCapacity;
    scrap=capacity2%smallCapacity;
    printf(""Allocated:\n - Large: %d \n - Small: %d \n - Scrap: %d \n"",capacity1, leftOver,scrap);

    return 0;
}
",1
dpet289,1694855632,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int number;
    int largeboxes;
    int remainder;
    int smallboxes;
    int scrap;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &number);

    largeboxes = number / large;
    remainder = number % large;
    smallboxes = remainder / small;
    scrap = remainder % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeboxes);
    printf("" - Small: %d\n"", smallboxes);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
dric234,1694848953,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int LargeNum;
    int SmallNum;
    int ScrapNum;
    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);
    LargeNum = items/large;
    SmallNum = (items%large)/small;
    ScrapNum = items - (LargeNum*large) - (SmallNum*small);
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",LargeNum,SmallNum,ScrapNum);

    return 0;
}",1
drob588,1695009347,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	// initialising variables
	int largecap;
	int smallcap;
	int itemstotal;
	int largenum;
	int smallnum;
	int scrap;

	//getting user inputs
	printf(""Large capacity: \n"");
	scanf(""%d"", &largecap);
	printf(""Small capacity: \n"");
	scanf(""%d"", &smallcap);
	printf(""Number of items: \n"");
	scanf(""%d"", &itemstotal);

	//finding total number of each box and remainder
	largenum = itemstotal / largecap;
	smallnum = (itemstotal % largecap) / smallcap;
	scrap = (itemstotal % largecap) % smallcap;

	// printing output
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", largenum);
	printf("" - Small: %d\n"", smallnum);
	printf("" - Scrap: %d"", scrap);

	return 0;
}",1
droj056,1694939596,1,"#define _CRT_SECURE_NO_WARNINGS 

#include <stdio.h>

int main(void)
{
	int large, small, number;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &number);

	int largeContainer = number / large;
	int remaining = number % large;

	int smallContainer = remaining / small;

	int scraps = remaining % small;

	printf(""Allocated:\n- Large: %d\n- Small: %d\n- Scrap: %d"", largeContainer, smallContainer, scraps);

	return 0;

}",0
droj056,1694939661,2,"#define _CRT_SECURE_NO_WARNINGS 

#include <stdio.h>

int main(void)
{
	int large, small, number;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &number);

	int largeContainer = number / large;
	int remaining = number % large;

	int smallContainer = remaining / small;

	int scraps = remaining % small;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largeContainer, smallContainer, scraps);

	return 0;

}",1
dryu303,1695032802,1,"#include <stdio.h>

int main()
{
    int a;
    int b;
    int c;
    int n;
    int l;
    int s;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &a);
    printf(""Small capacity:\n"");
    scanf(""%d"", &b);
    printf(""Number of items:  \n"");
    scanf(""%d"", &n);
    l=n/a;
    s=(n%a)/b;
    scrap=(n%a)%b;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",l);
    printf("" - Small: %d\n"",s);
    printf("" - Scrap: %d\n"",scrap);
    return 0;
    
}
",0
dryu303,1695032830,2,"#include <stdio.h>

int main()
{
    int a;
    int b;
    int n;
    int l;
    int s;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &a);
    printf(""Small capacity:\n"");
    scanf(""%d"", &b);
    printf(""Number of items:  \n"");
    scanf(""%d"", &n);
    l=n/a;
    s=(n%a)/b;
    scrap=(n%a)%b;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",l);
    printf("" - Small: %d\n"",s);
    printf("" - Scrap: %d\n"",scrap);
    return 0;
    
}
",1
dsan845,1695025705,1,"#include <stdio.h>

int main() {
    int large, small, Total;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &Total);

    int Ln = Total / large;
    int Sn = (Total % large) / small;

    int Scr = Total - (Ln * large + Sn * small);

    printf(""Large capacity:\n%d\n"", large);
    printf(""Small capacity:\n%d\n"", small);
    printf(""Number of items:\n%d\n"", Total);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Ln);
    printf("" - Small: %d\n"", Sn);
    printf("" - Scrap: %d\n"", Scr);

    return 0;
}
",0
dsan845,1695025788,2,"#include <stdio.h>

int main() {
    int large, small, Total;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &Total);

    int Ln = Total / large;
    int Sn = (Total % large) / small;

    int Scr = Total - (Ln * large + Sn * small);

    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Ln);
    printf("" - Small: %d\n"", Sn);
    printf("" - Scrap: %d\n"", Scr);

    return 0;
}
",1
dsin316,1694867849,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int items2;

    int alarge;
    int asmall;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    alarge = 0;
    asmall = 0;

    items2 = items;

    while (items2 >= large){
        items2 = items2 - large;
        alarge = alarge + 1;
    }

    while (items2 >= small){
        items2 = items2 - small;
        asmall = asmall + 1;
    }

    scrap = items2;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", alarge, asmall, scrap);
}",1
dstr542,1695029522,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>


int main(void)
{
	int large, small, noItems;
	int lAll, sAll, scAll;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"",&noItems);

	lAll = noItems / large;
	noItems = noItems % large;

	sAll = noItems / small;
	noItems = noItems % small;

	scAll = noItems;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",lAll,sAll,scAll);

	return 0;

}",1
dsut709,1695032798,1,"/*ship_containers.exe allocates items into containers of two different
sizes so that each container is completely filled and the least
number of containers is used.
Inputs:
	l: integer value representing capacity of largest container
	s: integer value representing capacity of smallest container
	n: number of items
Outputs:
	L: integer value representing number of large containers
	S: integer value representing number of small containers
	SP: intger value representing number of scrapped items

Author: Dylan Sutton
*/
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	/*Collects input values*/
	int(l);
	printf(""Large capacity:\n"");
	scanf(""%d"", &l);

	int(s);
	printf(""Small capacity:\n"");
	scanf(""%d"", &s);

	int(n);
	printf(""Number of items:\n"");
	scanf(""%d"", &n);

	printf(""Allocated:\n"");

	/*Calculates number of containers using division 
	and modulo (%) operators*/
	int(L);
	L = n / l;
	int(S);
	S = (n % l) / s;
	int(SP);
	SP = (n % l) % s;

	/*Displays values to user*/
	printf("" - Large: %d\n"", L);
	printf("" - Small: %d\n"", S);
	printf("" - Scrap: %d"", SP);

	return 0;
}",1
dtol781,1694873581,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int items;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    int largeout = items/large;
    int smallout = (items%large)/small;
    scrap = items-((largeout*large)+(smallout*small));
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeout);
    printf("" - Small: %d\n"", smallout);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
}",1
dver839,1695037073,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
/* The program calculates and displays the total number of large and small containers
that will be needed to ship the order. It also displays the number of items that will be scrapped
*/
int main(void)
{
	int Large;
	int Small;
	int Items;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large);
	printf(""Small capacity: \n"");
	scanf(""%d"", &Small);
	printf(""Numer of items: \n"");
	scanf(""%d"", &Items);

	int largeContainers = (Items / Large); 
	int smallContainers = ((Items - (largeContainers * Large)) / Small);
	int Scrap = ((Items - (largeContainers * Large)) % Small);

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", largeContainers);
	printf("" - Small: %d\n"", smallContainers);
	printf("" - Scrap: %d\n"", Scrap);
	return 0;
		
}",0
dver839,1695037231,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
/* The program calculates and displays the total number of large and small containers
that will be needed to ship the order. It also displays the number of items that will be scrapped
*/
int main(void)
{
	int Large;
	int Small;
	int Items;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large);
	printf(""Small capacity: \n"");
	scanf(""%d"", &Small);
	printf(""Number of items: \n"");
	scanf(""%d"", &Items);

	int largeContainers = (Items / Large); 
	int smallContainers = ((Items - (largeContainers * Large)) / Small);
	int Scrap = ((Items - (largeContainers * Large)) % Small);

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", largeContainers);
	printf("" - Small: %d\n"", smallContainers);
	printf("" - Scrap: %d\n"", Scrap);
	return 0;
		
}",1
dvu878,1695011215,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int lcap;
	int scap;
	int n;
	int lcon;
	int scon;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &lcap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &scap);

	printf(""Number of items:\n"");
	scanf(""%d"", &n);

	lcon = n / lcap;
	n = n % lcap;

	scon = n / scap;
	n = n % scap;

	scrap = n;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", lcon);
	printf("" - Small: %d\n"", scon);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}",1
dwar594,1695022132,1,"#include <stdio.h>

int main(void)
{
    int items, large, small, result1, result2, result3;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of itrems Allocated: \n"");
    scanf(""%d"", &items);
    
    result1 = items/large;
    
    items = items % large;
    
    result2 = items/small;
    
    result3 = items % small;
    
    printf("" - Large: %d \n"", result1);
    printf("" - Small: %d \n"", result2);
    printf("" - Scrap: %d \n"", result3);
    
    
    return 0;
}
",0
dwar594,1695022260,2,"#include <stdio.h>

int main(void)
{
    int items, large, small, result1, result2, result3;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of itrems Allocated: \n"");
    scanf(""%d"", &items);
    
    result1 = items/large;
    
    items = items % large;
    
    result2 = items/small;
    
    result3 = items % small;
    
    printf("" - Large: %d \n"", result1);
    printf("" - Small: %d \n"", result2);
    printf("" - Scrap: %d \n"", result3);
    
    
    return 0;
}

",0
dwar594,1695022346,3,"#include <stdio.h>

int main(void)
{
    int items, large, small, result1, result2, result3;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    result1 = items/large;
    
    items = items % large;
    
    result2 = items/small;
    
    result3 = items % small;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", result1);
    printf("" - Small: %d \n"", result2);
    printf("" - Scrap: %d \n"", result3);
    
    
    return 0;
}

",1
dwu617,1695012599,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
	int largeCap, smallCap, number, large, small, scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);

	printf(""Number of items:\n"");
	scanf(""%d"", &number);
	
	large = number / largeCap;
	small = (number % largeCap) / smallCap;
	scrap = number % largeCap % smallCap;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}
",1
dzha497,1694940450,1,"#include <stdio.h>

int main(void)

{
    int large;
    int small;
    int scrap;
    int input;
    int Alarge;
    int Asmall;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &input);
    
    Alarge = input/large;
    
    Asmall = (input % large)/small;
    
    scrap = input - (Alarge*large) - (Asmall*small);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Alarge);
    printf("" - Small: %d\n"", Asmall);
    printf("" - Scrap: %d\n"", scrap);
    return 0;
}
",1
ealg928,1695037891,1,"#include <stdio.h>

int main() 
{
    int large_cap, small_cap, num_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    int largecontainer = num_items / large_cap;
    int smallcontainer = 0;
    int scrapped_items = 0;
    int remaining_items = num_items % large_cap;

    if (remainingItems > 0) {
        smallcontainer = remaining_items / small_cap;
        scrapped_items = remaining_items % small_cap;
    }

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainer);
    printf("" - Small: %d\n"", smallcontainer);
    printf("" - Scrap: %d"", scrapped_items);

    return 0;
}",0
ealg928,1695038036,2,"#include <stdio.h>

int main() 
{
    int large_cap, small_cap, num_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    int large_container = num_items / large_cap;
    int small_container = 0;
    int scrapped_items = 0;
    int remaining_items = num_items % large_cap;

    if (remaining_items > 0) {
        small_container = remaining_items / small_cap;
        scrapped_items = remaining_items % small_cap;
    }

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_container);
    printf("" - Small: %d\n"", small_container);
    printf("" - Scrap: %d"", scrapped_items);

    return 0;
}",1
eara128,1695029468,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {
    // Declare variables to store user input
    int large_capacity, small_capacity, total_items;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large and small containers needed
    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;

    // Calculate the number of scrapped items
    int scrapped_items = (total_items % large_capacity) % small_capacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}




",1
ebar824,1694907244,1,"#include <stdio.h>

int main () {
    int largeCap;
    int smallCap;
    int number;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&largeCap);
    printf(""Small capacity:\n"");
    scanf(""%d"",&smallCap);
    printf(""Number of items:\n"");
    scanf(""%d"",&number);
    int largeCont = number/largeCap;
    int smallCont = (number%largeCap)/smallCap;
    int scrap = (number%largeCap)%smallCap;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",largeCont);
    printf("" - Small: %d\n"",smallCont);
    printf("" - Scrap: %d\n"",scrap);


    return 0;

}",1
echa931,1695017503,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
    int largeC, smallC, number, large, small, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeC);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallC);
    printf(""Number of items:\n"");
    scanf(""%d"", &number);

    large = number / largeC;
    small = (number % largeC) / smallC;
    scrap = (number % largeC) % smallC;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);
    return 0;
}",1
eche101,1694933971,1,"#include <stdio.h>
int main()
{
    
int a;
printf(""Large capacity:\n"");
scanf(""%d"", &a);
int d;
printf(""Small capacity:\n"");
scanf(""%d"", &d);
int n;
printf(""Number of items:\n"");
scanf(""%d"", &n);

int large = n / a;
int small = (n % a) /d;
int scrap = n - a *large - d *small;




printf(""Allocated:\n"");
printf("" - Large: %d\n"", large);
printf("" - Small: %d\n"", small);
printf("" - Scrap: %d\n"", scrap);


return 0;
}",1
eejl688,1695025060,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large_capacity;
    int small_capacity;
    int total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

  
    int num_large = total_items / large_capacity;
    int num_small = (total_items % large_capacity) / small_capacity;
    int num_scrapped = total_items - (num_large * large_capacity)
    - (num_small * small_capacity);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large);
    printf("" - Small: %d\n"", num_small);
    printf("" - Scrap: %d\n"", num_scrapped);


    return 0;
}

",1
egho902,1695020689,1,"
#include <stdio.h>

int main()

{
    int Large, Small, N, Lcont, Scont, R, Scrap;
    
    printf(""Large capacity: "");
    scanf(""%d"", &Large);
    
    printf(""Small capacity: "");
    scanf(""%d"", &Small);
    
    printf(""Number of items: "");
    scanf(""%d"", &N);
    
    Lcont = N / Large;
    R = N %Large;
    Scont = R / Small;
    Scrap = R %Small;
    
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", Lcont, Scont, Scrap);
    
    return 0;
    
}",0
egho902,1695020899,2,"#include <stdio.h>

int main()

{
    int Large, Small, N, Lcont, Scont, R, Scrap;
    
    printf(""Large capacity: "");
    scanf(""%d"", &Large);
    printf(""\nSmall capacity: "");
    scanf(""%d"", &Small);
    printf(""\nNumber of items: "");
    scanf(""%d"", &N);
    
    Lcont = N / Large;
    R = N %Large;
    Scont = R / Small;
    Scrap = R %Small;
    
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", Lcont, Scont, Scrap);
    
    return 0;
    
}
  
",0
egho902,1695020934,3,"#include <stdio.h>

int main()

{
    int Large, Small, N, Lcont, Scont, R, Scrap;
    
    printf(""Large capacity: "");
    scanf(""%d"", &Large);
    printf(""\nSmall capacity: "");
    scanf(""%d"", &Small);
    printf(""\nNumber of items: "");
    scanf(""%d"", &N);
    
    Lcont = N / Large;
    R = N %Large;
    Scont = R / Small;
    Scrap = R %Small;
    
    printf(""\nAllocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", Lcont, Scont, Scrap);
    
    return 0;
    
}
  
",1
ejeo051,1694952305,1,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main()
{
    int large, small, left_overs, scrap, items, large_containers, small_containers;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    left_overs = items % large;
    large_containers = (items - left_overs ) / large;
    scrap = left_overs % small;
    small_containers = (left_overs - scrap) / small;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap);
    
}
",1
elau447,1695007919,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);
    int L = items / large;
    int S = (items - (L * large)) / small;
    int scrap = items % (S*small + L * large);
    printf(""Allocated:\n"");
    printf(""- Large: %d\n"",L);
    printf(""- Small: %d\n"",S);
    printf(""- Scrap: %d"",scrap);
    

    return 0;
}",0
elau447,1695007937,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);
    int L = items / large;
    int S = (items - (L * large)) / small;
    int scrap = items % (S*small + L * large);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",L);
    printf("" - Small: %d\n"",S);
    printf("" - Scrap: %d"",scrap);
    

    return 0;
}",0
elau447,1695008991,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int L;
    int S;
    int scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);
    L = 0;
    S = 0;
    scrap = 0;
    if (items > 0) {
        
        L = items / large;
        S = (items - (L * large)) / small;
        scrap = items % (S*small + L * large);
    }
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",L);
    printf("" - Small: %d\n"",S);
    printf("" - Scrap: %d"",scrap);
    

    return 0;
}",1
eles952,1695032895,1,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main(void)
{
    int Large;
    int Largen;
    int Small;
    int Smallen;
    int n;
    int scrap;
    
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &Large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &Small);
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    
    Largen =  n%Large; 
    scrap = Largen%Small;
    Largen = n - Largen;
    Smallen = n - Largen;
    Largen = Largen/Large;
    Smallen = Smallen - scrap;
    Smallen = Smallen/Small;

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", Largen, Smallen, scrap);
    
    
 
   
}",1
elia955,1695036978,1,"#include <stdio.h>

int main()
{
    int l;
    int s;
    int N;
    int P;
    int S;
    int L;
    printf(""Large capacity: \n"");
    scanf(""%d"", &l);
    printf(""Small capacity: \n"");
    scanf(""%d"", &s);
    printf(""Number of items: \n"");
    scanf(""%d"", &N);
    printf(""Allocated:\n"");
    S = (N%l)/s;
    L = N/l;
    P = N - L*l - S*s;
    printf("" - Large: %d\n"", L);
    printf("" - Small: %d\n"", S);
    printf("" - Scrap: %d\n"", P);

    return 0;
}
",1
else264,1695008840,1,"#include <stdio.h>

int main() 
{
    int l;
    printf(""Large capacity:\n"");
    scanf(""%d"", &l);
    int s;
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    int n;
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    
    int newS,newL,scrap;
    
    newS=(n%l)/s;
    newL=(n-newS)/l;
    scrap=n-((newS*s)+(newL*l));
    
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", newL, newS, scrap);

    return 0;
}",1
ema340,1694954112,1,"#include <stdio.h>

int main(void)
{
    int capLarge;
    int capSmall;
    int numItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &capLarge);

    printf(""Small capacity:\n"");
    scanf(""%d"", &capSmall);

    printf(""Number of items:\n"");
    scanf(""%d"", &numItems);

    int numLarge;
    int numSmall;
    int numScrap;

    numLarge = numItems/capLarge;
    numSmall = (numItems % capLarge) / capSmall;
    numScrap = numItems - numLarge*capLarge - numSmall*capSmall;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLarge);
    printf("" - Small: %d\n"", numSmall);
    printf("" - Scrap: %d\n"", numScrap);

    return 0;
}",1
emar179,1695026803,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
	int large, largeCapacity;
	int small, smallCapacity;
	int items, leftOverItems;
	int scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	largeCapacity = items / large;
	leftOverItems = items - (largeCapacity * large);
	smallCapacity = leftOverItems / small;
	scrap = leftOverItems - (smallCapacity * small);

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", &largeCapacity);
	printf("" - Small: %d\n"", &smallCapacity);
	printf("" - Scrap: %d\n"", &scrap);

	return 0;
}",0
emar179,1695027351,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
	int large, largeCapacity;
	int small, smallCapacity;
	int items, leftOverItems;
	int scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	largeCapacity = items / large;
	leftOverItems = items - (largeCapacity * large);
	smallCapacity = leftOverItems / small;
	scrap = leftOverItems - (smallCapacity * small);

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", largeCapacity);
	printf("" - Small: %d\n"", smallCapacity);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}",1
emar189,1694902265,1,"#include <stdio.h>
int main(void)
{
	int a;
	printf(""Large capacity: \n"");
	scanf(""%d"", &a);

	int b;
	printf(""Small capacity: \n"");
	scanf(""%d"", &b);

	int c;
	printf(""Number of items: \n"");
	scanf(""%d"", &c);

	int d;
	d = c / a;
	c = c % a;

	int e;
	e = c / b;

	int f;
	f = c % b;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", d, e, f);

	return 0;
}",1
eqiu349,1694962714,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largecapacity;
	int smallcapacity;
	int noofitems;
	int leftover1;
	int leftover2;
	int large;
	int small;
	int scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &largecapacity);

	printf(""Small capacity: \n"");
	scanf(""%d"", &smallcapacity);

	printf(""Number of items: \n"");
	scanf(""%d"", &noofitems);

	leftover1 = noofitems % largecapacity;
	leftover2 = leftover1 % smallcapacity;

	large = (noofitems - leftover1) / largecapacity;
	small = (leftover1 - leftover2) / smallcapacity;
	scrap = leftover2;

	printf(""Allocated: \n"");
	printf(""- Large: %d\n"", large);
	printf(""- Small: %d\n"", small);
	printf(""- Scrap: %d\n"", scrap);
}",0
eqiu349,1694962767,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largecapacity;
	int smallcapacity;
	int noofitems;
	int leftover1;
	int leftover2;
	int large;
	int small;
	int scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &largecapacity);

	printf(""Small capacity: \n"");
	scanf(""%d"", &smallcapacity);

	printf(""Number of items: \n"");
	scanf(""%d"", &noofitems);

	leftover1 = noofitems % largecapacity;
	leftover2 = leftover1 % smallcapacity;

	large = (noofitems - leftover1) / largecapacity;
	small = (leftover1 - leftover2) / smallcapacity;
	scrap = leftover2;

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);
}",1
esia821,1695036343,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int l_cap;
    int s_cap;
    int num_items;
    int large;
    int remaining;
    int small;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &s_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    large = num_items / l_cap;
    remaining = num_items % l_cap;

    small = remaining / s_cap;
    scrap = remaining % s_cap;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d"", scrap);
    return 0;
}

",1
etri556,1695029666,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    // This program takes in the capacitiy of a large container and a small container and the total amount of items in the order
    // and creates a set of containers either of the larger or smaller size and may scrap some items if they cannot be fitted into any containers.
    // Author: Ethan Trimble.

    int L_container_cap;
    int S_container_cap;
    int items_shipped;
    int L_container_amount;
    int S_container_amount;
    int Leftover_items;
    int Scrapped_items;
    // Initialising basic inputs.

    printf(""Large capacity:\n"");
    scanf(""%d"", &L_container_cap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &S_container_cap);
    printf(""Number of items:\n"");
    scanf(""%d"", &items_shipped);
    // Collecting basic inputs.

    L_container_amount = items_shipped / L_container_cap;
    Leftover_items = items_shipped % L_container_cap;

    S_container_amount = Leftover_items / S_container_cap;
    Scrapped_items = Leftover_items % S_container_cap;
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", L_container_amount, S_container_amount, Scrapped_items);

    return 0;
}

",1
evic904,1694999838,1,"#include <stdio.h>

int main()
{
	int L;
	int S;
	int N;

	printf(""Large capacity:\n"");
	scanf(""%d"", &L);

	printf(""Small capacity:\n"");
	scanf(""%d"", &S);

	printf(""Number of items:\n"");
	scanf(""%d"", &N);

	int L_n = N / L;

	int Sm_n = (N - (L_n * L)) / S;

	int Sc_n = N - ((L_n * L) + (Sm_n * S));

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", L_n, Sm_n, Sc_n);

return 0;

}
",1
exu922,1695013888,1,"#include <stdio.h>
#include <math.h>

/*this programn is so unoriginal*/
int main(void)
{
     double L;
     double Lf;
     double Lfr;
     double S;
     double Sf;
     double Sfr;
     double n;
     double scrap;
     printf(""Large capacity:\n"");
     scanf(""%lf"", &L);
     printf(""Small capacity:\n"");
     scanf(""%lf"", &S);
     printf(""Number of items:\n"");
     scanf(""%lf"", &n);
     Lf = n/L;
     Lfr = floor(n/L);
     Sf = ((Lf - Lfr) * L)/S;
     Sfr = floor(((Lf - Lfr) * L)/S);
     scrap = ((Sf - Sfr) * S);
     printf(""Allocated:\n"");
     printf(""- Large: %.0lf\n"", Lfr);
     printf(""- Small: %.0lf\n"", Sfr);
     printf(""- Scrap: %.0lf"", scrap);
return 0;
}",0
exu922,1695013918,2,"#include <stdio.h>
#include <math.h>

/*this programn is so unoriginal*/
int main(void)
{
     double L;
     double Lf;
     double Lfr;
     double S;
     double Sf;
     double Sfr;
     double n;
     double scrap;
     printf(""Large capacity:\n"");
     scanf(""%lf"", &L);
     printf(""Small capacity:\n"");
     scanf(""%lf"", &S);
     printf(""Number of items:\n"");
     scanf(""%lf"", &n);
     Lf = n/L;
     Lfr = floor(n/L);
     Sf = ((Lf - Lfr) * L)/S;
     Sfr = floor(((Lf - Lfr) * L)/S);
     scrap = ((Sf - Sfr) * S);
     printf(""Allocated:\n"");
     printf("" - Large: %.0lf\n"", Lfr);
     printf("" - Small: %.0lf\n"", Sfr);
     printf("" - Scrap: %.0lf"", scrap);
return 0;
}",0
exu922,1695016507,3,"#include <stdio.h>
#include <math.h>

/*this programn is so unoriginal*/
int main(void)
{
     double L; /* set up variables*/
     double Lf;
     int Lfr;
     double S;
     double n;
     double scrap;
     printf(""Large capacity:\n"");
     scanf(""%lf"", &L);
     printf(""Small capacity:\n"");
     scanf(""%lf"", &S);
     printf(""Number of items:\n"");
     scanf(""%lf"", &n);
     /*do calculations*/
     Lf = n/L;
     Lfr = n/L;
     int Sfr = (n - (Lfr * L))/S;
     scrap = (n - (Lfr * L)) - (Sfr * S);
     printf(""Allocated:\n"");
     printf("" - Large: %d\n"", Lfr);
     printf("" - Small: %d\n"", Sfr);
     printf("" - Scrap: %.0lf"", scrap);
return 0;
}",0
exu922,1695016643,4,"#include <stdio.h>
#include <math.h>

/*this programn is so unoriginal*/
int main(void)
{
     double L; /* set up variables*/
     int Lfr;
     double S;
     double n;
     double scrap;
     printf(""Large capacity:\n"");
     scanf(""%lf"", &L);
     printf(""Small capacity:\n"");
     scanf(""%lf"", &S);
     printf(""Number of items:\n"");
     scanf(""%lf"", &n);
     /*do calculations*/
     Lfr = n/L;
     int Sfr = (n - (Lfr * L))/S;
     scrap = (n - (Lfr * L)) - (Sfr * S);
     printf(""Allocated:\n"");
     printf("" - Large: %d\n"", Lfr);
     printf("" - Small: %d\n"", Sfr);
     printf("" - Scrap: %.0lf"", scrap);
return 0;
}",1
eyeo346,1694919385,1,"#include <stdio.h>

int main(void)
{
   int large;
   int small;
   int items;
   int largeboxes;
   int remain; 
   int smallboxes;
   int scrap;
   
   printf(""Large capacity:\n"");
   scanf(""%d"", &large);
   
   printf(""Small capacity:\n"");
   scanf(""%d"", &small);
   
   printf(""Number of items:\n"");
   scanf(""%d"", &items);
   
   largeboxes = items/large;
   remain = items%large;
   smallboxes = remain/small;
   scrap = remain%small;
   
   printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largeboxes, smallboxes, scrap);
   
    return 0;
    
}
",1
fcoo305,1694935089,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int items;
    int largeCap;
    int smallCap;

    int remainder;
    int nL;
    int nS;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    nL = items / largeCap;
    remainder = items % largeCap;
    nS = remainder / smallCap;
    scrap = remainder % smallCap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", nL, nS, scrap);
    

}",1
fesp714,1695029087,1,"#include <stdio.h>

int main()
{
   int Large,Small,total;
   
   printf(""Large capacity:\n"");
   scanf(""%d"", &Large);
   
   printf(""Small capacity:\n"");
   scanf(""%d"", &Small);
   
   printf(""Number of items:\n"");
   scanf(""%d"", &total);
   
   int containerL = total / Large;
   
   int remaining = total % Large;
   
   int containerS = remaining / Small;
   
   int scrap = remaining % Small;
   
   printf(""Allocated:\n"");
   printf("" - Large: %d\n - Small: %d\n - Scrap: %d\n"", containerL, containerS, scrap);
   
   return 0;
}",1
fobr691,1695019282,1,"#include <stdio.h>
int main() {
    int large_capacity, small_capacity, total_items;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);
    int num_large_containers = total_items / large_capacity;
    int num_small_containers = (total_items % large_capacity) / small_capacity;
    int num_scrapped_items = total_items % small_capacity;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);
    return 0;
}",0
fobr691,1695019632,2,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int num_large_containers = total_items / large_capacity;
    int remaining_items = total_items % large_capacity;
    int num_small_containers = remaining_items / small_capacity;
    int num_scrapped_items = remaining_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);

    return 0;
}",1
fwil727,1694861854,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user to enter the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large containers and the remaining items
    int numLargeContainers = totalItems / largeCapacity;
    int remainingItems = totalItems % largeCapacity;

    // Calculate the number of small containers and scrap items
    int numSmallContainers = remainingItems / smallCapacity;
    int scrapItems = remainingItems % smallCapacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}
",1
fyan180,1695035966,1,"#include <stdio.h>

int main() 
{
  int large, small, total, largecontainers, smallcontainers, leftover;

  printf(""Large capacity: \n"");
  scanf(""%d"", &large);
  printf(""Small capacity: \n"");
  scanf(""%d"", &small);
  printf(""Number of items: \n"");
  scanf(""%d"", &total);

  largecontainers = total / large;
  smallcontainers = (total % large) / small;
  leftover = (total % large) % small;

  printf(""Allocated: \n"");
  printf("" - Large: %d\n"", largecontainers);
  printf("" - Small: %d\n"", smallcontainers);
  printf("" - Scrap: %d\n"", leftover);

  return 0;
}",1
gcha636,1695025051,1,"//
// Author : Gabriel Chapman
//

#include <stdio.h>
int main(void){

    int L, S, n, scrap, LC, SC;

    printf(""Large capacity: "");
    scanf(""%d"", &L);

    printf(""\nSmall capacity: "");
    scanf(""%d"", &S);

    printf(""\nNumber of items: "");
    scanf(""%d"", &n);

    LC = n/L;
    SC = (n%L)/S;
    scrap = (n%L)%S;

    printf(""\nAllocated: "");

    printf(""\n - Large: %d"", LC);

    printf(""\n - Small: %d"", SC);

    printf(""\n - Scrap: %d"", scrap);

    return 0;
}",1
ggao363,1694961482,1,"#include <stdio.h>
int main(void) {
    int bigbox, smallbox, unbox, items, box1, box2;



    printf(""Large capacity: \n"");
    scanf(""%d"", &box1);

    printf(""Small capacity: \n"");
    scanf(""%d"", &box2);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    bigbox = items/ box1;
    items = items % box1;

    smallbox = items / box2;
    unbox = items % box2;

    printf(""Allocated:\n ""
           ""- Large: %d\n""
           "" - Small: %d\n ""
           ""- Scrap: %d"", bigbox, smallbox, unbox);
    return 0;
}",1
gge561,1694857088,1,"
#include <stdio.h>

int main(void) {
    
    double Large;
    double Small;
    double Number;
    double LargeOut;
    double SmallOut;
    double Scrapped;
    
    printf(""Large capacity:\n"");
    scanf(""%lf"", &Large);
    
    printf(""Small capacity:\n"");
    scanf(""%lf"", &Small);
    
    printf(""Number of items:\n"");
    scanf(""%lf"", &Number);
    
    LargeOut=floor(Number/Large);
    SmallOut=floor((Number-LargeOut*Large)/Small);
    Scrapped=Number-LargeOut*Large-SmallOut*Small;
    
    printf(""Allocated:\n - Large: %.0lf\n - Small: %.0lf\n - Scrap: %.0lf\n"", LargeOut,SmallOut,Scrapped);
    

    return 0;
}",0
gge561,1694860264,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {

    double Large;
    double Small;
    double Number;
    int LargeOut;
    int SmallOut;
    int Scrapped;

    printf(""Large capacity:\n"");
    scanf(""%lf"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%lf"", &Small);

    printf(""Number of items:\n"");
    scanf(""%lf"", &Number);

    LargeOut = (Number / Large);
    SmallOut = (Number - LargeOut * Large) / Small;
    Scrapped = Number - LargeOut * Large - SmallOut * Small;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", LargeOut, SmallOut, Scrapped);


    return 0;
}",1
gjom886,1695029478,1,"#include <stdio.h>

int main() 
{
    int Larger;
    int Small;
    int items;

    int remainder;
    int Basket;
    // Initialise the following variables
    printf(""Larger capacity: \n"");
    scanf(""%d"", &Larger);
    printf(""Small capacity: \n"");
    scanf(""%d"", &Small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
   Basket = items/Larger;
    remainder = items %Larger;
    printf("" - Large: %d\n"", Larger,Basket);
   

    Basket = remainder / Small;
  printf("" - Small: %d\n"", Small,Basket);
    remainder = remainder % Small;
    
    printf("" - Scrap: %d\n"", remainder);

    return 0;
}
",0
gjom886,1695034417,2,"#include <stdio.h>

int main() 
{
    // Initialise the following variables
    int boxlarge;
    int smallerbox;
    int items;

    int left;
    int capacity;
    // Print the following code
    printf(""Larger capacity: \n"");
    scanf(""%d"", &boxlarge); //check if boxlarge is a integer
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallerbox);//check if smallerbox is a integer
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);//check if items is a integer
    
  capacity= items/boxlarge; // Find how many large boxes
    left= items %boxlarge; //stores the number of items left into variable called left
    printf("" - Large: %d\n"", capacity); //Prints the wanted output
   

    capacity = left/smallerbox;// how many small boxes
  printf("" - Small: %d\n"", capacity); //printe the wanted output
    left = left % smallerbox; // Give the leftover
    
    printf("" - Scrap: %d\n"", left); 

    return 0;
}
",0
gjom886,1695034534,3,"#include <stdio.h>

int main() 
{
    // Initialise the following variables
    int boxlarge;
    int smallerbox;
    int items;

    int left;
    int capacity;
    // Print the following code
    printf(""Large capacity: \n"");
    scanf(""%d"", &boxlarge); //check if boxlarge is a integer
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallerbox);//check if smallerbox is a integer
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);//check if items is a integer
    
    printf(""Allocated: \n"");
    
  capacity= items/boxlarge; // Find how many large boxes
    left= items %boxlarge; //stores the number of items left into variable called left
    printf("" - Large: %d\n"", capacity); //Prints the wanted output
   

    capacity = left/smallerbox;// how many small boxes
  printf("" - Small: %d\n"", capacity); //printe the wanted output
    left = left % smallerbox; // Give the leftover
    
    printf("" - Scrap: %d\n"", left); 

    return 0;
}
",1
gmoh887,1695022226,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap;
    int smallCap;
    int items;

    int large;
    int small;
    int scrap;


    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCap);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCap);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    large = items / largeCap;
    small = (items - large * largeCap) / smallCap;
    scrap = items - large*largeCap - small*smallCap;

    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", large);
    printf("" - Small: %d \n"", small);
    printf("" - Scrap: %d \n"", scrap);

    return 0;
}

",1
gpen695,1695038001,1,"#include <stdio.h>

int main(void)

{
  int largeCap, smallCap, numItem, Large, Small, Scrap;
  
  printf(""Large capacity:\n"");
  scanf(""%d"", &largeCap);
  
  
  printf(""Small capacity:\n"");
   scanf(""%d"", &smallCap);
  
   printf(""Number of items:\n"");
   scanf(""%d"", &numItem);

   Large = numItem/largeCap;
   
   Small = (numItem%largeCap)/smallCap;
   
   Scrap = ((numItem%largeCap)%smallCap);
   
   printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Large, Small, Scrap);
}",1
gren419,1695037792,1,"#include <stdio.h>
int main(void)
{
   int largeC;
   int smallC;
   int scrap;
   int n;
   int rem1;
   int large;
   int rem2;
   int small;
   
   
   printf(""Large capacity:\n"");
   scanf(""%d"",&largeC);
   printf(""Small capacity:\n"");
   scanf(""%d"",&smallC);
   printf(""Number of items:\n"");
   scanf(""%d"",&n);
   
   rem1 = n%largeC;
   large = (n-rem1)/largeC;
   
   rem2 = (n-large*largeC)%smallC;
   small = (n-large*largeC-rem2)/smallC;
   
   scrap = n-large*largeC-small*smallC;
   
   printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);
   
   
   
    
return 0;
}

",1
gvan573,1695023461,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large, small, items, largeBoxes, smallBoxes, scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	largeBoxes = (items / large);

	smallBoxes = ((items - (largeBoxes * large)) / small);

	scrap = ((items - (largeBoxes * large)) % small);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", largeBoxes);
	printf("" - Small: %d\n"", smallBoxes);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}
",1
gzho986,1694943412,1,"#include <stdio.h>

int main() 
{
    int large, small, number;

    printf (""Large capacity: \n"");
    scanf (""%d"", &large);
    
    printf (""Small capacity: \n"");
    scanf (""%d"", &small);

    printf (""Number of items: \n"");
    scanf (""%d"", &number);

    int Lcontainer = number / large;
    int Lscrap = number % large;

    int Scontainer = Lscrap / small;
    int totalScrap = Lscrap % small;

    printf (""Allocated: \n"");
    printf ("" - Large: %d \n"", Lcontainer);
    printf ("" - Small: %d \n"", Scontainer);
    printf ("" - Scrap: %d \n"", totalScrap);

    return 0;

}",1
haus879,1694836495,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int S;
	int L;
	int X;
	int C1;
	int C1r;
	int C2;
	int scrap;


	printf(""Large capacity: \n"");
	scanf(""%d"", &L);

	printf(""Small capacity: \n"");
	scanf(""%d"", &S);

	printf(""Number of items: \n"");
	scanf(""%d"", &X);

	//calculating how many fit in the large containers

	C1 = X / L;
	C1r = X % L;

	//calculating how much of the remainder its in the small container

	C2 = C1r / S;
	scrap = C1r % S;
	printf(""Allocated: \n - Large: %d \n - small: %d \n - Scrap: %d"", C1, C2, scrap);
	return 0;


}",0
haus879,1694837002,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int S;
	int L;
	int X;
	int C1;
	int C1r;
	int C2;
	int scrap;


	printf(""Large capacity: \n"");
	scanf(""%d"", &L);

	printf(""Small capacity: \n"");
	scanf(""%d"", &S);

	printf(""Number of items: \n"");
	scanf(""%d"", &X);

	//calculating how many fit in the large containers

	C1 = X / L;
	C1r = X % L;

	//calculating how much of the remainder its in the small container

	C2 = C1r / S;
	scrap = C1r % S;
	printf(""Allocated: \n - Large: %d \n - small: %d \n - Scrap: %d "", C1, C2, scrap);
	return 0;


}",0
haus879,1694933326,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int S;
	int L;
	int X;
	int C1;
	int C1r;
	int C2;
	int scrap;


	printf(""Large capacity: \n"");
	scanf(""%d"", &L);

	printf(""Small capacity: \n"");
	scanf(""%d"", &S);

	printf(""Number of items: \n"");
	scanf(""%d"", &X);

	//calculating how many fit in the large containers

	C1 = X / L;
	C1r = X % L;

	//calculating how much of the remainder its in the small container

	C2 = C1r / S;
	scrap = C1r % S;
	printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", C1, C2, scrap);
	return 0;


}",1
hbhe454,1695037574,1,"#include <stdio.h>
#include <math.h>
int main()

{
    
int l, s, t ;
printf(""Large capacity: \n"");
scanf(""%i"", &l);
printf(""Small capacity: \n"");
scanf(""%i"", &s);
printf(""Number of items: \n"");
scanf(""%i"", &t);
double a, b, c, d ;
a = floor(t/l);
b = t - a*l ;
c = floor(b/s);
d = (int)b%s ;
printf(""Allocated: \n""b);
printf("" - Large: %.0f \n"", a);
printf("" - Small: %.0f \n"", c);
printf("" - Scrap: %.0f \n"", d);
return 0;

}








    

",0
hbhe454,1695037599,2,"#include <stdio.h>
#include <math.h>
int main()

{
    
int l, s, t ;
printf(""Large capacity: \n"");
scanf(""%i"", &l);
printf(""Small capacity: \n"");
scanf(""%i"", &s);
printf(""Number of items: \n"");
scanf(""%i"", &t);
double a, b, c, d ;
a = floor(t/l);
b = t - a*l ;
c = floor(b/s);
d = (int)b%s ;
printf(""Allocated: \n"");
printf("" - Large: %.0f \n"", a);
printf("" - Small: %.0f \n"", c);
printf("" - Scrap: %.0f \n"", d);
return 0;

}








    

",1
hgou636,1694850905,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int largeboxes;
    int smallboxes;
    int scrapped;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    largeboxes = items / large;
    double remainder = items % large;
    smallboxes = (items % large) / small;
    int useditems = (largeboxes * large) + (smallboxes * small);
    scrapped = (items - useditems);
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", largeboxes);
    printf("" - Small: %d\n"", smallboxes);
    printf("" - Scrap: %d\n"", scrapped);
    return 0;
}",0
hgou636,1694851073,2,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int largeboxes;
    int smallboxes;
    int scrapped;
    int useditems;
    double leftover;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    largeboxes = items / large;
    leftover = items % large;
    smallboxes = (items % large) / small;
    useditems = (largeboxes * large) + (smallboxes * small);
    scrapped = (items - useditems);
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", largeboxes);
    printf("" - Small: %d\n"", smallboxes);
    printf("" - Scrap: %d\n"", scrapped);
    return 0;
}",0
hgou636,1694851140,3,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int largeboxes;
    int smallboxes;
    int scrapped;
    int useditems;
    double leftover;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    largeboxes = items / large;
    leftover = items % large;
    smallboxes = (leftover) / small;
    useditems = (largeboxes * large) + (smallboxes * small);
    scrapped = (items - useditems);
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", largeboxes);
    printf("" - Small: %d\n"", smallboxes);
    printf("" - Scrap: %d\n"", scrapped);
    return 0;
}",1
hhil451,1695009052,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int main(void)
{
	int large_cap;
	int small_cap;
	int total_items;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large_cap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small_cap);

	printf(""Number of items:\n"");
	scanf(""%d"", &total_items);

	int num_large_boxes = total_items / large_cap;
	int num_small_boxes = (total_items - num_large_boxes * large_cap) / small_cap;
	int scrap = total_items - num_small_boxes * small_cap - num_large_boxes * large_cap;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", num_large_boxes, num_small_boxes, scrap);
}",1
hjoo911,1695012723,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int item_number;
    int scrap;
    int large_cases;
    int small_cases;
    int large_between;
    
    printf(""Larger capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &item_number);
    
    large_cases = item_number/large;
    large_between = item_number - large_cases*large;
    small_cases = large_between/small;
    scrap = item_number - (large_cases*large) - (small_cases*small);
    
    printf(""Allocated: \n"");
    printf("" - Large: %d"", large_cases);
    printf("" - Small: %d"", small_cases);
    printf("" - Scrap: %d"", scrap);
    
    
    return 0; 
}
",0
hjoo911,1695012783,2,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int item_number;
    int scrap;
    int large_cases;
    int small_cases;
    int large_between;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &item_number);
    
    large_cases = item_number/large;
    large_between = item_number - large_cases*large;
    small_cases = large_between/small;
    scrap = item_number - (large_cases*large) - (small_cases*small);
    
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", large_cases);
    printf("" - Small: %d\n"", small_cases);
    printf("" - Scrap: %d"", scrap);
    
    
    return 0; 
}
",1
hkah523,1694940990,1,"efine _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main() {

    int large_capacity, small_capacity, num_items;

    // Ask for capacity inputs - Large & Small
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    int large_containers = 0, small_containers = 0, scrap = 0;
    // Calculate the number of large containers required
    large_containers = num_items / large_capacity;
    num_items %= large_capacity;

    // Calculate the number of small containers if there are any leftover items
    if (num_items > 0) {
        small_containers = num_items / small_capacity;
        num_items %= small_capacity;
    }

    // Calculate the number of items that get scrapped
    scrap = num_items;
    // Display the results
    printf(""Allocated:\n"");
    printf(""-Large: %d\n"", large_containers);
    printf(""-Small: %d\n"", small_containers);
    printf(""-Scrap: %d\n"", scrap);

    return 0;
}",0
hkah523,1694941635,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
/*author: Harshdeep Kahlon*/

int main() {
    int large_capacity, small_capacity, num_items;
   
    // Ask for capacity inputs - Large & Small
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    int large_containers = 0, small_containers = 0, scrap = 0;
    // Calculate the number of large containers required
    large_containers = num_items / large_capacity;
    num_items %= large_capacity;

    // Calculate the number of small containers if there are any leftover items
    if (num_items > 0) {
        small_containers = num_items / small_capacity;
        num_items %= small_capacity;
    }

    // Calculate the number of items that get scrapped
    scrap = num_items;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}



    ",1
hkim807,1694998010,1,"#include <stdio.h>

int main(void)
{
double large_capacity;
double small_capacity;
double items;
double large;
double small;
double scrap;
double large_remainder;

printf(""Large capacity: \n"");
scanf(""%lf"", &large_capacity);

printf(""Small capacity: \n"");
scanf(""%lf"", &small_capacity);

printf(""Number of items: \n"");
scanf(""%lf"", &items);

large = items / large_capacity;
large_remainder = (int)items % (int)large_capacity;

small = large_remainder / small_capacity;
scrap = large_remainder - ((int)small * small_capacity);

large = large - 1;

printf(""Allocated: \n"");
printf("" - Large: %.0f\n"", large);
printf("" - Small: %.0f \n"", small);
printf("" - Scrap: %.0f \n"", scrap);







}",0
hkim807,1694999749,2,"#include <stdio.h>

int main(void)
{
int large_capacity;
int small_capacity;
int items;
int large;
int small;
int scrap;
int large_remainder;

printf(""Large capacity: \n"");
scanf(""%d"", &large_capacity);

printf(""Small capacity: \n"");
scanf(""%d"", &small_capacity);

printf(""Number of items: \n"");
scanf(""%d"", &items);

large = items / large_capacity;
large_remainder = items % large_capacity;
small = large_remainder / small_capacity;
scrap = large_remainder - (small * small_capacity);


printf(""Allocated: \n"");
printf("" - Large: %d \n"", large);
printf("" - Small: %d \n"", small);
printf("" - Scrap: %d \n"", scrap);







}",1
hlee999,1694861407,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int capacity_large;
	int capacity_small;
	int total_items;
	int large_boxes;
	int small_items;
	int small_boxes;
	int scrap_items;
    
	printf(""Large capacity:\n"");
	scanf(""%d"", &capacity_large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &capacity_small);
	printf(""Number of items:\n"");
	scanf(""%d"", &total_items);

	large_boxes = total_items / capacity_large;
	small_items = total_items % capacity_large;
	small_boxes = small_items / capacity_small;
	scrap_items = small_items % capacity_small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large_boxes);
	printf("" - Small: %d\n"", small_boxes);
	printf("" - Scrap: %d\n"", scrap_items);

	return 0;
}",1
hleu459,1695018484,1,"#include <stdio.h>

int main(void)
{
    int largeSize, smallSize, n;
    int large, small, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeSize);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallSize);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    large = n / largeSize;
    small = (n % largeSize) / smallSize;
    scrap = n - large*largeSize - small*smallSize;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}",1
hly852,1695010541,1,"#include <stdio.h>

int main(void)
{
    int large_cap;
    int small_cap;
    int item_num;
    
    int num_large;
    int num_small;
    
    int large_excess;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &item_num);
    
    num_large = item_num/large_cap;
    large_excess = item_num%large_cap;
    num_small = large_excess/small_cap;
    scrap = large_excess%small_cap;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", num_large, num_small, scrap);

    return 0;
}",1
hma481,1694876203,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int LCap, SCap, Items, LContainers, SContainers, Scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &LCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &SCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &Items);

	LContainers = Items / LCap;
	SContainers = (Items - LContainers * LCap) / SCap;
	Scrap = (Items - LContainers * LCap) % SCap;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", LContainers, SContainers, Scrap);
	return 0;
}",1
hpan363,1695030337,1,"#include <stdio.h>

int main(void) 
{
    int largecap, smallcap, number;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcap);
    printf(""Number of items:\n"");
    scanf(""%d"", &number);

    int largebag = number / largecap;
    number = number % largecap;

    int smallbag = number / smallcap;
    number = number % smallcap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", largebag, smallbag, number);

    return 0;
}
",1
hpir641,1694946276,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large_capacity;
	int small_capacity;
	int num_of_items;
	int large_quotient;
	int small_quotient;
	int large_remainder;
	int small_remainder;

	printf(""Large capacity:\n"");
	scanf(""%i"", &large_capacity);
	printf(""Small capacity:\n"");
	scanf(""%i"", &small_capacity);
	printf(""Number of items:\n"");
	scanf(""%i"", &num_of_items);

	large_quotient = num_of_items / large_capacity;
	large_remainder = num_of_items % large_capacity;
	small_quotient = large_remainder / small_capacity;
	small_remainder = large_remainder % small_capacity;
	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i\n"", large_quotient, small_quotient, small_remainder);
	return 0;
}",1
hrob997,1695013315,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
/*calculates how many items are to be placed in large crates, small crates, and how many are left over.

Inputs: 
	- large crate capacity 
	- small create capacity
	- number of items
Outputs: 
	displays the amount of items placed in each crate and the left over/scrap

Author: Hunter Roberts
*/




int main(void)

{

	// initialise all variables
	int largecap; 
	int smallcap; 
	int items;
	int large;
	int small; 
	int itemsscrap; 


	// user input large crate capacity is stored 
	printf(""Large capacity:\n"");
	scanf(""%d"", &largecap);
	// user input smnall crate capacity is stored 
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallcap);
	// user input number of items is stored 
	printf(""Number of items:\n"");
	scanf(""%d"", &items); 

	// current number of items left 
	int currentitems;

	// calc num of large crates and small crates
	// also updating the current number of items left 
	large = items / largecap; 
	currentitems = items % largecap; 

	small = currentitems / smallcap; 
	currentitems = currentitems % smallcap; 

	// number of items left over
	itemsscrap = currentitems; 

	//display values 
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, itemsscrap);

	return 0;
}",1
hson435,1695038184,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int largenum;
    int smallleft;
    int smallnum;
    int scrap;
    int a;
    int b;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    largenum = items / large;
    smallleft = items - (large * largenum);
    smallnum = smallleft / small;
    a = largenum * large;
    b = smallnum * small;
    scrap = items - (a + b);
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", largenum, smallnum, scrap);
    
}
",1
htew916,1694937403,1,"#include <stdio.h>

/* This program prompts the user to enter three values: The capacity of a large container, a small container and the total number of items in the order */
 
int main(void) 
{
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int num_large_containers = total_items / large_capacity;

    int remaining_items = total_items % large_capacity;

    int num_small_containers = remaining_items / small_capacity;

    int scrapped_items = remaining_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",1
htyl682,1695036136,1,"#include <stdio.h>
#include <math.h>

int a;
int b;
int c;
int l;
int sm;
int sc;

int main(void)
{
printf(""Large capacity: \n"");
scanf("" %d"", &a);
printf(""Small capacity:  \n"");
scanf("" %d"", &b);
printf(""Number of items :  \n"");
scanf("" %d"", &c);
while (c>a){
    c=c-a;
    l=l+1;
}
while (c>b){
    c=c-b;
    sm=sm+1;
}
sc=c;

printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", l,sm,sc);
}",0
htyl682,1695036192,2,"#include <stdio.h>
#include <math.h>

int a;
int b;
int c;
int l;
int sm;
int sc;

int main(void)
{
printf(""Large capacity: \n"");
scanf("" %d"", &a);
printf(""Small capacity:  \n"");
scanf("" %d"", &b);
printf(""Number of items:  \n"");
scanf("" %d"", &c);
while (c>a){
    c=c-a;
    l=l+1;
}
while (c>b){
    c=c-b;
    sm=sm+1;
}
sc=c;

printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", l,sm,sc);
}",0
htyl682,1695036345,3,"#include <stdio.h>
#include <math.h>

int a;
int b;
int c;
int l;
int sm;
int sc;

int main(void)
{
printf(""Large capacity: \n"");
scanf("" %d"", &a);
printf(""Small capacity:  \n"");
scanf("" %d"", &b);
printf(""Number of items:  \n"");
scanf("" %d"", &c);
while (c>=a){
    c=c-a;
    l=l+1;
}
while (c>=b){
    c=c-b;
    sm=sm+1;
}
sc=c;

printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", l,sm,sc);
}",1
hugn924,1695030818,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int nitems;
    int scraps;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &nitems);
    
    int largeboxes = nitems / large;
    
    nitems -= largeboxes * large;
    
    int smallboxes = nitems / small;
    
    nitems -= smallboxes * small;
    
    scraps = nitems;
    
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", largeboxes, smallboxes, scraps);

    return 0;
}",1
hwin877,1694955562,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int big, small, num_items, first_left_over, left_over, large_calc, small_calc;

	printf(""Large capacity:\n"");
	scanf(""%d"", &big);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &num_items);

	first_left_over = num_items % big;
	large_calc = num_items / big;
	small_calc = first_left_over / small;
	left_over = first_left_over % small;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large_calc);
	printf("" - Small %d\n"", small_calc);
	printf("" - Scrap: %d"", left_over);
	return 0;
}",0
hwin877,1694955609,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int big, small, num_items, first_left_over, left_over, large_calc, small_calc;

	printf(""Large capacity:\n"");
	scanf(""%d"", &big);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &num_items);

	first_left_over = num_items % big;
	large_calc = num_items / big;
	small_calc = first_left_over / small;
	left_over = first_left_over % small;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large_calc);
	printf("" - Small: %d\n"", small_calc);
	printf("" - Scrap: %d"", left_over);
	return 0;
}",1
hyan713,1695008118,1,"#include <stdio.h>

int main()
{
    int big, small, item;
    int a, b, c;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &big);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &item);
    
    a = item/big;
    b = (item-a*big)/small;
    c = item-a*big-small*b;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",a ,b ,c);
    
    return 0;
}",1
hye071,1695019940,1,"/******************************************************************************

Question 9(LAB 7)

*******************************************************************************/
#include <stdio.h>

int main()
{
    
    int large_capacity;
    int small_capacity;
    int number;
    int l_container;
    int s_container;
    int scrap;
    
    int remainder1;
    
    printf(""Large capacity:"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:"");
    scanf(""%d"", &number);
    
    l_container= number/ large_capacity;
    
    remainder1= number % large_capacity;
    
    s_container= remainder1/ small_capacity;
    
    scrap= remainder1 % small_capacity;
    
    printf(""Allocated:\n"");
    
    printf("" - Large: %d\n"", l_container);
    
    printf("" - Small: %d\n"", s_container);
    
    printf("" - Scrap: %d\n"", scrap);
    
    
    
    
    
    
    

    return 0;
}

",0
hye071,1695020054,2,"/******************************************************************************

Question 9(LAB 7)

*******************************************************************************/
#include <stdio.h>

int main()
{
    
    int large_capacity;
    int small_capacity;
    int number;
    int l_container;
    int s_container;
    int scrap;
    
    int remainder1;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &number);
    
    l_container= number/ large_capacity;
    
    remainder1= number % large_capacity;
    
    s_container= remainder1/ small_capacity;
    
    scrap= remainder1 % small_capacity;
    
    printf(""Allocated:\n"");
    
    printf("" - Large: %d\n"", l_container);
    
    printf("" - Small: %d\n"", s_container);
    
    printf("" - Scrap: %d\n"", scrap);
    
    
    
    
    
    
    

    return 0;
}

",1
ibha186,1694850438,1,"#include <stdio.h>

int main(void)
{
    int large = 0;
    int small = 0;
    int items = 0;
    int scrap = 0;
    int num_large = 0;
    int num_small = 0;
    int num_scrap = 0;
    printf(""Large capacity:\n"");
    scanf(""%i"", &large);
    printf(""Small capacity:\n"");
    scanf(""%i"", &small);
    printf(""Number of items:\n"");
    scanf(""%i"", &items);
    num_large = items / large;
    num_small = (items % large) / small;
    num_scrap = items - num_large*large - num_small*small;

    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", num_large, num_small, num_scrap);
    return 0;
}",0
ibha186,1694850564,2,"#include <stdio.h>

int main(void)
{
    int large = 0;
    int small = 0;
    int items = 0;
    int num_large = 0;
    int num_small = 0;
    int num_scrap = 0;
    printf(""Large capacity:\n"");
    scanf(""%i"", &large);
    printf(""Small capacity:\n"");
    scanf(""%i"", &small);
    printf(""Number of items:\n"");
    scanf(""%i"", &items);
    num_large = items / large;
    num_small = (items - num_large*large) / small;
    num_scrap = items - num_large*large - num_small*small;

    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", num_large, num_small, num_scrap);
    return 0;
}",1
iche428,1695023778,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int c1,c2,n,large,small,remainder;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &c1);

    printf(""Small capacity:\n"");
    scanf(""%d"", &c2);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    large = n/c1;
    remainder = n%c1;
    small = remainder/c2;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, remainder%c2);

    return 0;
}",1
ihoo440,1694779980,1,"#include <stdio.h>

int main()
{
    int BigBboxSize;
    int SmallBoxSize;
    float NumItems;
    int Scrap;
    int NumBigBbox;
    int NumSmallBox;
    float rem1;
    float rem2;

    printf(""Large capacity:\n"");
    scanf(""%d"", &BigBboxSize);

    printf(""Small capacity:\n"");
    scanf(""%d"", &SmallBoxSize);

    printf(""Number of items:\n"");
    scanf(""%f"", &NumItems);

    NumBigBbox = NumItems/BigBboxSize;
    rem1 = NumItems - (NumBigBbox*BigBboxSize);

    NumSmallBox = rem1/SmallBoxSize;
    rem2 = rem1 - (NumSmallBox*SmallBoxSize);

    Scrap = rem2;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", NumBigBbox, NumSmallBox, Scrap);

}",1
ikis164,1695022300,1,"#include <stdio.h>
#include <math.h>

int main ()
{
    int largeCapacity;
    int smallCapacity;
    int noItems;
    int allocatedLarge;
    int allocatedSmall;
    int allocatedScrap;
    int leftover;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &noItems);

    allocatedLarge = floor(noItems / largeCapacity);
    leftover = noItems - (allocatedLarge * largeCapacity);

    allocatedSmall = floor(leftover / smallCapacity);

    allocatedScrap = noItems - ((allocatedLarge * largeCapacity) + (allocatedSmall * smallCapacity));

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", allocatedLarge);
    printf("" - Small: %d\n"", allocatedSmall);
    printf("" - Scrap: %d\n"", allocatedScrap);
}",1
iko203,1694852796,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    printf(""Large capacity:\n"");
    scanf(""%i"", &LargeCapacity);

    int SmallCapacity;
    printf(""Small capacity:\n"");
    scanf(""%i"", &SmallCapacity);

    int NumberOfItems;
    printf(""Number of items:\n"");
    scanf(""%i"", &NumberOfItems);

    int Large;
    Large = NumberOfItems / LargeCapacity;
    int Small;
    Small = (NumberOfItems % LargeCapacity) / SmallCapacity;
    int Scrap;
    Scrap = (NumberOfItems % LargeCapacity) % SmallCapacity;


    printf(""Allocated:\n"");
        printf("" - Large: %i\n"", Large);
        printf("" - Small: %i\n"", Small);
        printf("" - Scrap: %i\n"", Scrap);


    return 0;
}
",1
imoh000,1695017446,1,"#include <stdio.h>

int main()
{
    int Large, Small, NumberItems;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Small);
    printf(""Number of items:"");
    scanf(""%d"", &NumberItems);
   
   int NumberLarge = NumberItems / Large;
   NumberItems = NumberItems % Large;
   
   int NumberSmall = NumberItems / Small;
   
   NumberItems = NumberItems % Small;
   
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", NumberLarge); 
    printf("" - Small: %d\n"", NumberSmall); 
    printf("" - Scrap: %d\n"", NumberItems); 
    
    return 0;
}
",0
imoh000,1695017476,2,"#include <stdio.h>

int main()
{
    int Large, Small, NumberItems;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Small);
    printf(""Number of items:\n"");
    scanf(""%d"", &NumberItems);
   
   int NumberLarge = NumberItems / Large;
   NumberItems = NumberItems % Large;
   
   int NumberSmall = NumberItems / Small;
   
   NumberItems = NumberItems % Small;
   
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", NumberLarge); 
    printf("" - Small: %d\n"", NumberSmall); 
    printf("" - Scrap: %d\n"", NumberItems); 
    
    return 0;
}
",1
ixia229,1694957407,1,"#include <stdio.h>

int main(void)
{
	int Large;
	int Small;
	int Items;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &Small);

	printf(""Number of items: \n"");
	scanf(""%d"", &Items);

	//calculating number of large and small contianers
	int LargeCon, SmallCon, Scraps;
	LargeCon = Items / Large;
	SmallCon = (Items % Large) / Small;
	Scraps = Items % Small;

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", LargeCon);
	printf("" - Small: %d\n"", SmallCon);
	printf("" - Scrap: %d\n"", Scraps);
	return 0;
}",0
ixia229,1694957866,2,"#include <stdio.h>

int main(void)
{
	int Large;
	int Small;
	int Items;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &Small);

	printf(""Number of items: \n"");
	scanf(""%d"", &Items);

	//calculating number of large and small contianers
	int LargeCon, SmallCon, Scraps;
	LargeCon = Items / Large;
	SmallCon = (Items % Large) / Small;
	Scraps = (Items % Large) % Small;

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", LargeCon);
	printf("" - Small: %d\n"", SmallCon);
	printf("" - Scrap: %d\n"", Scraps);
	return 0;
}",1
ixu871,1694931733,1,"#include <stdio.h>

int main(void) 
{
  int LargeCap;
  int SmallCap;
  int NumberI;
  int LrgCont;
  int SmlCont;
  int Scrapped;
  int Remainder;
  
  printf(""Large capacity: "");
  scanf(""%d"", &LargeCap);
  
  printf(""Small capacity: "");
  scanf(""%d"", &SmallCap);
  
  printf(""Number of items: "");
  scanf(""%d"", &NumberI);
  
  LrgCont = NumberI/LargeCap; 
  
  Remainder = NumberI %LargeCap;
  
  SmlCont = Remainder/SmallCap;
  
  Scrapped = Remainder %SmallCap;
  
  printf(""Large containers needed: %d"", LrgCont);
  printf(""\nSmall containers needed: %d"", SmlCont);
  printf(""\nScrapped items: %d"", Scrapped);
  
  return(0);
}",0
ixu871,1694931881,2,"#include <stdio.h>

int main(void) 
{
  int LargeCap;
  int SmallCap;
  int NumberI;
  int LrgCont;
  int SmlCont;
  int Scrapped;
  int Remainder;
  
  printf(""Large capacity: "");
  scanf(""%d"", &LargeCap);
  
  printf(""\nSmall capacity: "");
  scanf(""%d"", &SmallCap);
  
  printf(""\nNumber of items: "");
  scanf(""%d"", &NumberI);
  
  LrgCont = NumberI/LargeCap; 
  
  Remainder = NumberI %LargeCap;
  
  SmlCont = Remainder/SmallCap;
  
  Scrapped = Remainder %SmallCap;
  
  printf(""Allocated: \n- Large: %d \n- Small: %d \n- Scrap: %d "", LrgCont, SmlCont, Scrapped);

  
  return(0);
}",0
ixu871,1694931896,3,"#include <stdio.h>

int main(void) 
{
  int LargeCap;
  int SmallCap;
  int NumberI;
  int LrgCont;
  int SmlCont;
  int Scrapped;
  int Remainder;
  
  printf(""Large capacity: "");
  scanf(""%d"", &LargeCap);
  
  printf(""\nSmall capacity: "");
  scanf(""%d"", &SmallCap);
  
  printf(""\nNumber of items: "");
  scanf(""%d"", &NumberI);
  
  LrgCont = NumberI/LargeCap; 
  
  Remainder = NumberI %LargeCap;
  
  SmlCont = Remainder/SmallCap;
  
  Scrapped = Remainder %SmallCap;
  
  printf(""\nAllocated: \n- Large: %d \n- Small: %d \n- Scrap: %d "", LrgCont, SmlCont, Scrapped);

  
  return(0);
}",0
ixu871,1694931991,4,"#include <stdio.h>

int main(void) 
{
  int LargeCap;
  int SmallCap;
  int NumberI;
  int LrgCont;
  int SmlCont;
  int Scrapped;
  int Remainder;
  
  printf(""Large capacity: "");
  scanf(""%d"", &LargeCap);
  
  printf(""\nSmall capacity: "");
  scanf(""%d"", &SmallCap);
  
  printf(""\nNumber of items: "");
  scanf(""%d"", &NumberI);
  
  LrgCont = NumberI/LargeCap; 
  
  Remainder = NumberI %LargeCap;
  
  SmlCont = Remainder/SmallCap;
  
  Scrapped = Remainder %SmallCap;
  
  printf(""\nAllocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", LrgCont, SmlCont, Scrapped);

  
  return(0);
}",1
jahn224,1694924961,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int total;
    int large_num;
    int small_num;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%i"", &large);
    printf(""Small capacity: \n"");
    scanf(""%i"", &small);
    printf(""Number of items: \n"");
    scanf(""%i"", &total);
    
    large_num = total / large;
    small_num = (total - large*large_num) / small;
    scrap = (total - large*large_num) % small;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", large_num, small_num, scrap);

    return 0;
}
",1
jbag235,1695021669,1,"#include <stdio.h>

int main() {

    int lorg, large, smol, small, scrap, items, i, sum;

    printf(""Large capacity:\n"");
    scanf(""%d"", &lorg);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smol);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = items/lorg;
    small = (items-large*lorg)/smol;
    scrap = items-large*lorg-small*smol;

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",0
jbag235,1695021694,2,"#include <stdio.h>

int main() {

    int lorg, large, smol, small, scrap, items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &lorg);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smol);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = items/lorg;
    small = (items-large*lorg)/smol;
    scrap = items-large*lorg-small*smol;

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
jbam701,1694910272,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int L;
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);

    int S;
    printf(""Small capacity:\n"");
    scanf(""%d"", &S);

    int n;
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int large;
    large = n / L;

    int small;
    small = ((n - (large * L)) / S);

    int scrap;
    scrap = n - (large * L) - (small * S);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);

	return 0;

}",1
jbam753,1695034155,1,"#include <stdio.h>

int main()
{
    //int large, small, items, BL, BS, scrap;
    
    int large, small, items, rem, scrap;
    int BL, BS;

    printf(""Large capacity: "");
    scanf(""%d"", &large);

    printf(""Small capacity: "");
    scanf(""%d"", &small);

    printf(""Number of items: "");
    scanf(""%d"", &items);
    
    // items in boxes 
    
    BL = items / large; 
    rem = items % large; 
    BS = rem / small;
    scrap = items - BL*large - BS*small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", BL, BS, scrap);
    


    return 0;
}
",0
jbam753,1695034196,2,"#include <stdio.h>

int main()
{
    //int large, small, items, BL, BS, scrap;
    
    int large, small, items, rem, scrap;
    int BL, BS;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    // items in boxes 
    
    BL = items / large; 
    rem = items % large; 
    BS = rem / small;
    scrap = items - BL*large - BS*small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", BL, BS, scrap);
    


    return 0;
}",1
jbis394,1695032391,1,"#include <stdio.h>
int main(void)
{
int L;
printf(""Large capacity:\n"");
scanf(""%d"", &L);
int S;
printf(""Small capacity:\n"");
scanf(""%d"", &S);
int N;
printf(""Number of items:\n"");
scanf(""%d"", &N);
int Large = N / L;
int Small = (N % L)/S;
int Scrap = (N % L) % S;
printf(""Allocated:\n"");
printf("" - Large: %d\n"", Large);
printf("" - Small: %d\n"", Small);
printf("" - Scrap: %d\n"", Scrap);
return 0;
}",1
jbru537,1695033925,1,"#include <stdio.h>

int main(void)
{


int L;
int L_2;
int S;
int N; 
int remainder;
int scrap;


    printf(""Large capacity:  \n"");
    scanf(""%d"", &L);
    printf(""Small capacity:  \n"");
    scanf(""%d"", &S);
    printf(""Number of items:  \n"");
    scanf(""%d"", &N);

    L_2 = floor(N / L);
    S = floor((31- L_2 * L) / S );
    scrap = (L_2 - S);

    printf (""Allocated; \n - Large: %d\n - Small: %d\n - Scrap: %d"", L_2 , S , scrap); 
}
",0
jbru537,1695034695,2,"#include <stdio.h>
#include <math.h>
int main(void)
{


int L;
int L_2;
int S;
int S_2;
int N; 
int scrap;


    printf(""Large capacity:  \n"");
    scanf(""%d"", &L);
    printf(""Small capacity:  \n"");
    scanf(""%d"", &S);
    printf(""Number of items:  \n"");
    scanf(""%d"", &N);

    L_2 = floor(N / L);
    S_2 = floor((N - L_2 * L) / S );
    scrap = (N - (L * L_2 + S_2 * S));

    printf (""Allocated; \n - Large: %d\n - Small: %d\n - Scrap: %d"", L_2 , S_2 , scrap); 
}

",0
jbru537,1695034721,3,"#include <stdio.h>
#include <math.h>
int main(void)
{


int L;
int L_2;
int S;
int S_2;
int N; 
int scrap;


    printf(""Large capacity:  \n"");
    scanf(""%d"", &L);
    printf(""Small capacity:  \n"");
    scanf(""%d"", &S);
    printf(""Number of items:  \n"");
    scanf(""%d"", &N);

    L_2 = floor(N / L);
    S_2 = floor((N - L_2 * L) / S );
    scrap = (N - (L * L_2 + S_2 * S));

    printf (""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", L_2 , S_2 , scrap); 
}

",1
jbuc296,1695033183,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large_c, small_c,item_total;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_c);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_c);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &item_total);
    
    int remainder_1, rstep_1, result_1,remainder_2,rstep_2,result_2;
    remainder_1 = item_total % large_c;
    rstep_1 = item_total - remainder_1;
    result_1 = rstep_1 / large_c;
    
    remainder_2 = remainder_1 % small_c;
    rstep_2 = remainder_1 - remainder_2;
    result_2 =  rstep_2 / small_c;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", result_1);
    printf("" - Small: %d\n"", result_2);
    printf("" - Scrap: %d"", remainder_2);
    return 0;
}
",1
jcha513,1694863681,1,"#include <stdio.h>

int main()
{
    int LC;
    int SC;
    int n;
    int Large;
    int Small;
    int Scrap;
    
    printf(""Large Capacity:"");
    scanf(""%d"", &LC);
    
    printf(""\nSmall Capacity:"");
    scanf(""%d"", &SC);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &n);
    
    Large = n/LC;
    Small = (n%LC)/SC;
    Scrap = (n - (LC*Large) - (SC*Small));
    
    printf(""\nLarge: %d"", Large);
    printf(""\nSmall: %d"", Small);
    printf(""\nScrap: %d"", Scrap);
    
    return 0;
}
",0
jcha513,1694864580,2,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main()
{
    int LC;
    int SC;
    int n;
    int Large;
    int Small;
    int Scrap;
    
    printf(""Large Capacity:"");
    scanf(""%d"", &LC);
    
    printf(""\nSmall Capacity:"");
    scanf(""%d"", &SC);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &n);
    
    Large = n/LC;
    Small = (n%LC)/SC;
    Scrap = (n - (LC*Large) - (SC*Small));
    
    printf(""\nAllocated:"")
    printf(""\n - Large: %d"", Large);
    printf(""\n - Small: %d"", Small);
    printf(""\n - Scrap: %d"", Scrap);
    
    return 0;
}
",0
jcha513,1694864630,3,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main()
{
    int LC;
    int SC;
    int n;
    int Large;
    int Small;
    int Scrap;
    
    printf(""Large Capacity:"");
    scanf(""%d"", &LC);
    
    printf(""\nSmall Capacity:"");
    scanf(""%d"", &SC);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &n);
    
    Large = n/LC;
    Small = (n%LC)/SC;
    Scrap = (n - (LC*Large) - (SC*Small));
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", Large);
    printf(""\n - Small: %d"", Small);
    printf(""\n - Scrap: %d"", Scrap);
    
    return 0;
}
",0
jcha513,1694864653,4,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main()
{
    int LC;
    int SC;
    int n;
    int Large;
    int Small;
    int Scrap;
    
    printf(""Large capacity:"");
    scanf(""%d"", &LC);
    
    printf(""\nSmall capacity:"");
    scanf(""%d"", &SC);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &n);
    
    Large = n/LC;
    Small = (n%LC)/SC;
    Scrap = (n - (LC*Large) - (SC*Small));
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", Large);
    printf(""\n - Small: %d"", Small);
    printf(""\n - Scrap: %d"", Scrap);
    
    return 0;
}
",1
jcha574,1694996317,1,"#include <stdio.h>

int main(void)
{
    int LC;
    int SC;
    int numitems;
    int LCF;
    int SCF;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &LC);
    

    printf(""Small capacity:\n"");
    scanf(""%d"", &SC);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &numitems);
    
    LCF = numitems/LC;
    SCF = (numitems - (LCF*LC))/SC;
    scrap = numitems - (LC*LCF) - (SC*SCF);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d"", LCF);
    printf(""\n - Small: %d"", SCF);
    printf(""\n - Scrap: %d"", scrap);
   
    return 0;
}",1
jcha972,1694996566,1,"#include <stdio.h>

int main () 
{
    int capL;
    int capS;
    int total;
    int nL;
    int nS;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &capL);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &capS);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &total);
    
    nL = total/capL;
    nS = (total - (nL*capL))/capS;
    scrap = total - (nL*capL) - (nS*capS); 
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", nL);
    printf("" - Small: %d \n"", nS);
    printf("" - Scrap: %d \n"", scrap);
    
    return 0;
}",1
jche456,1695023636,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, items, scrap;
    int allocatedL = 0;
    int allocatedS = 0;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);
    printf(""\nSmall capacity:\n"");
    scanf(""%d"", &smallCap);
    printf(""\nNumber of items:\n"");
    scanf(""%d"", &items);
    while (items > largeCap) {
        allocatedL = allocatedL + 1;
        items = items - largeCap;
    }
    while (items > smallCap) {
        allocatedS = allocatedS + 1;
        items = items - smallCap;
    }
    scrap = items;
    printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", allocatedL, allocatedS, scrap);
    return 0;
}
",0
jche456,1695023666,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, items, scrap;
    int allocatedL = 0;
    int allocatedS = 0;
    printf(""Large capacity:"");
    scanf(""%d"", &largeCap);
    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCap);
    printf(""\nNumber of items:"");
    scanf(""%d"", &items);
    while (items > largeCap) {
        allocatedL = allocatedL + 1;
        items = items - largeCap;
    }
    while (items > smallCap) {
        allocatedS = allocatedS + 1;
        items = items - smallCap;
    }
    scrap = items;
    printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", allocatedL, allocatedS, scrap);
    return 0;
}
",0
jche456,1695023964,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, items, scrap;
    int allocatedL = 0;
    int allocatedS = 0;
    printf(""Large capacity:"");
    scanf(""%d"", &largeCap);
    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCap);
    printf(""\nNumber of items:"");
    scanf(""%d"", &items);
    while (items >= largeCap) {
        allocatedL = allocatedL + 1;
        items = items - largeCap;
    }
    while (items >= smallCap) {
        allocatedS = allocatedS + 1;
        items = items - smallCap;
    }
    scrap = items;
    printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", allocatedL, allocatedS, scrap);
    return 0;
}
",1
jchi648,1695023667,1,"#include<stdio.h>
#include<math.h>

int main(void) {

    int lcap, scap, itemno, large, small, scrap, rem;
    printf(""Large capacity:\n"");
    scanf(""%d"", &lcap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &scap);
    printf(""Number of items:\n"");
    scanf(""%d"", &itemno);
    
    large = floor(itemno/lcap);
    rem = itemno - (large*lcap);
    small = floor(rem/scap);
    scrap = itemno - (large*lcap) - (small*scap);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
    
}",1
jchu579,1694917111,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void) {
	int L; 
	int S;
	int n;

	int scrapped;
	
	printf(""Large capacity:\n"");
	scanf(""%i"", &L);
	printf(""Small capacity:\n"");
	scanf(""%i"", &S);
	printf(""Number of items:\n"");
	scanf(""%i"", &n);

	int numOfL;
	int numOfS;
	int leftover; 

	numOfL = n / L;
	leftover = n - numOfL * L;
	numOfS = leftover / S;
	leftover = leftover - numOfS * S;

	scrapped = leftover; 

	printf(""Allocated:\n"");
	printf("" - Large: %i\n"", numOfL);
	printf("" - Small: %i\n"", numOfS);
	printf("" - Scrap: %i\n"", scrapped);
}",1
jdal353,1695037654,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, orderSize, largeBoxes, remainder1, smallBoxes, scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &orderSize);
    

    largeBoxes = orderSize / largeCapacity;
    

    remainder1 = orderSize % largeCapacity;
    

    smallBoxes = remainder1 / smallCapacity;
    

    scrap = remainder1 % smallCapacity;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", largeBoxes);
    printf("" - Small: %d\n"", smallBoxes);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0; 
}",1
jdea126,1694833361,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int size1;
    int size2;
    int items;
    int large;
    int small;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &size1);

    printf(""Small capacity:\n"");
    scanf(""%d"", &size2);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = items / size1;
    small = (items % size1) / size2;
    scrap = (items % size1) % size2;


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d"", scrap);


    return 0;
}",1
jdu853,1694922334,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    int largecap;
    int smallcap;
    int items;
    double large;
    double small;
    double scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcap);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = floor(items/largecap);
    small = (int)floor((items - large*largecap)/ smallcap);
    scrap = items - (large * largecap + small*smallcap);

    printf(""Allocated:\n - Large: %.0lf\n - Small: %.0lf\n - Scrap: %.0lf"", large, small, scrap);
    return 0;
}

",1
jear460,1694941832,1,"#include <stdio.h>

int main()
{
    int capL;
    int capS;
    int num;
    int large;
    int small;
    int scrap;
    
    printf(""enter large box capacity\n"");
    scanf(""%d"", &capL);
    printf(""enter small box capacity\n"");
    scanf(""%d"", &capS);
    printf(""enter total number of items\n"");
    scanf(""%d"", &num);
    
    large = num / capL;
    small = (num % capL) / capS;
    scrap = num % capS;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);
}",0
jear460,1694941880,2,"#include <stdio.h>

int main()
{
    int capL;
    int capS;
    int num;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &capL);
    printf(""Small capacity:\n"");
    scanf(""%d"", &capS);
    printf(""Number of items:\n"");
    scanf(""%d"", &num);
    
    large = num / capL;
    small = (num % capL) / capS;
    scrap = num % capS;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);
}",0
jear460,1694942382,3,"#include <stdio.h>

int main()
{
    int capL;
    int capS;
    int num;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &capL);
    printf(""Small capacity:\n"");
    scanf(""%d"", &capS);
    printf(""Number of items:\n"");
    scanf(""%d"", &num);
    
    large = num / capL;
    small = (num % capL) / capS;
    scrap = num - capL*large - capS*small;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);
}",1
jfen705,1695027222,1,"#include <stdio.h>
int main(void)
{
	int q;
	printf(""Large capacity:\n"");
	scanf(""%d"", &q);
	int w;
	printf(""Small capacity:\n"");
	scanf(""%d"", &w);
	int e;
	printf(""Number of items:\n"");
	scanf(""%d"", &e);
	int r;
	r = e / q;
	int t;
	t = (e - q * r) / w;
	int y;
	y = e - q * r - w * t;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", r);
	printf("" - Small: %d\n"", t);
	printf("" - Scrap: %d"", y);
	return (0);
}
",1
jfet156,1694935954,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
  double largecap;
  double smallcap;
  double totalnum;
  double large = 0;
  double small = 0;
  
  printf(""Large capacity: \n"");
  scanf(""%lf"", &largecap);
  
  printf(""Small capacity: \n"");
  scanf(""%lf"", &smallcap);
  
  printf(""Number of items: \n"");
  scanf(""%lf"", &totalnum);
  
  while (totalnum > largecap) {
      totalnum = totalnum - largecap;
      large = large + 1;
  }
  
  while (totalnum > smallcap) {
      totalnum = totalnum - smallcap;
      small = small + 1;
  }
  
  
  printf(""Allocated:\n - Large: %.0lf\n - Small: %.0lf\n - Scrap: %.0lf"", large, small, totalnum);
  
  return 0;
  
}",0
jfet156,1694936052,2,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
  double largecap;
  double smallcap;
  double totalnum;
  double large = 0;
  double small = 0;
  
  printf(""Large capacity: \n"");
  scanf(""%lf"", &largecap);
  
  printf(""Small capacity: \n"");
  scanf(""%lf"", &smallcap);
  
  printf(""Number of items: \n"");
  scanf(""%lf"", &totalnum);
  
  while (totalnum >= largecap) {
      totalnum = totalnum - largecap;
      large = large + 1;
  }
  
  while (totalnum >= smallcap) {
      totalnum = totalnum - smallcap;
      small = small + 1;
  }
  
  
  printf(""Allocated:\n - Large: %.0lf\n - Small: %.0lf\n - Scrap: %.0lf"", large, small, totalnum);
  
  return 0;
  
}",1
jgeo610,1694785087,1,"#include <stdio.h>
int main(void)
{

	int lcap;
	int scap;
	int total;
	int large;
	int small;
	int lremainder;
	int scrap;

	
	printf(""Large capacity:\n"");
	scanf(""%d"", &lcap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &scap);
	printf(""Number of items:\n"");
	scanf(""%d"", &total);

	large = total / lcap;
	lremainder = total % lcap;
	small = lremainder / scap;
	scrap = lremainder % scap;


	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d"", scrap);

	return 0;
}",1
jgre894,1695033496,1,"#include <stdio.h>

int main(void)
{

    int large_capacity, small_capacity, items, large_floored_value, small_floored_value, scrap_items;
    double large_floor_value, small_floor_value;
    printf(""Large Capacity: \n""); 
    scanf(""%d"", &large_capacity);
    
    printf(""Small Capacity: \n""); 
    scanf(""%d"", &small_capacity);   
    
    printf(""Number of Items: \n""); 
    scanf(""%d"", &items);

    large_floor_value = items/large_capacity;
    large_floored_value = (int)large_floor_value;

    small_floor_value = large_capacity/small_capacity;
    small_floored_value = (int)small_floor_value;

    //printf(""Large Capacity: %d\n"", large_floored_value);
    //printf(""Small Capacity: %d\n"", small_floored_value);

    scrap_items = items - ((large_floored_value * large_capacity) + (small_floored_value * small_capacity));
    //printf(""Scrap: %d\n"", scrap_items);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_floored_value, small_floored_value, scrap_items);


    
}",0
jgre894,1695033569,2,"#include <stdio.h>

int main(void)
{

    int large_capacity, small_capacity, items, large_floored_value, small_floored_value, scrap_items;
    double large_floor_value, small_floor_value;
    printf(""Large capacity: \n""); 
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity: \n""); 
    scanf(""%d"", &small_capacity);   
    
    printf(""Number of items: \n""); 
    scanf(""%d"", &items);

    large_floor_value = items/large_capacity;
    large_floored_value = (int)large_floor_value;

    small_floor_value = large_capacity/small_capacity;
    small_floored_value = (int)small_floor_value;

    //printf(""Large Capacity: %d\n"", large_floored_value);
    //printf(""Small Capacity: %d\n"", small_floored_value);

    scrap_items = items - ((large_floored_value * large_capacity) + (small_floored_value * small_capacity));
    //printf(""Scrap: %d\n"", scrap_items);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_floored_value, small_floored_value, scrap_items);


    
}",0
jgre894,1695033721,3,"#include <stdio.h>

int main(void)
{

    int large_capacity, small_capacity, items, large_floored_value, small_floored_value, scrap_items;
    double large_floor_value, small_floor_value;
    printf(""Large capacity: \n""); 
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity: \n""); 
    scanf(""%d"", &small_capacity);   
    
    printf(""Number of items: \n""); 
    scanf(""%d"", &items);

    large_floor_value = items/large_capacity;
    large_floored_value = (int)large_floor_value;

    small_floor_value = large_capacity/small_capacity;
    small_floored_value = (int)small_floor_value;

    //printf(""Large Capacity: %d\n"", large_floored_value);
    //printf(""Small Capacity: %d\n"", small_floored_value);

    scrap_items = items - ((large_floored_value * large_capacity) + (small_floored_value * small_capacity));
    if (scrap_items < 0)
    {
    scrap_items = 0;
    }
    
    
    //printf(""Scrap: %d\n"", scrap_items);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_floored_value, small_floored_value, scrap_items);


    
}",0
jgre894,1695034195,4,"#include <stdio.h>

int main(void)
{

    int large_capacity, small_capacity, items, large_floored_value, small_floored_value, scrap_items;
    double large_floor_value, small_floor_value;
    printf(""Large capacity: \n""); 
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity: \n""); 
    scanf(""%d"", &small_capacity);   
    
    printf(""Number of items: \n""); 
    scanf(""%d"", &items);

    large_floor_value = items/large_capacity;
    large_floored_value = (int)large_floor_value;

    small_floor_value = large_capacity/small_capacity;
    small_floored_value = (int)small_floor_value;

    //printf(""Large Capacity: %d\n"", large_floored_value);
    //printf(""Small Capacity: %d\n"", small_floored_value);

    scrap_items = items - ((large_floored_value * large_capacity) + (small_floored_value * small_capacity));
    if (scrap_items < 0)
    {
    scrap_items = 0;
    }
    if (items > 3000)
    {
        small_floored_value = 7;
    }
    
    
    //printf(""Scrap: %d\n"", scrap_items);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_floored_value, small_floored_value, scrap_items);


    
}",0
jgre894,1695034359,5,"#include <stdio.h>

int main(void)
{

    int large_capacity, small_capacity, items, large_floored_value, small_floored_value, scrap_items;
    double large_floor_value, small_floor_value;
    printf(""Large capacity: \n""); 
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity: \n""); 
    scanf(""%d"", &small_capacity);   
    
    printf(""Number of items: \n""); 
    scanf(""%d"", &items);

    large_floor_value = items/large_capacity;
    large_floored_value = (int)large_floor_value;

    small_floor_value = large_capacity/small_capacity;
    small_floored_value = (int)small_floor_value;

    //printf(""Large Capacity: %d\n"", large_floored_value);
    //printf(""Small Capacity: %d\n"", small_floored_value);

    scrap_items = items - ((large_floored_value * large_capacity) + (small_floored_value * small_capacity));
    if (scrap_items < 0)
    {
    scrap_items = 0;
    }
    if (items > 3000)
    {
        small_floored_value = 7;
    }
    if (items = 200)
    {
        small_floored_value = 0;
    }
    
    
    //printf(""Scrap: %d\n"", scrap_items);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_floored_value, small_floored_value, scrap_items);


    
}",0
jgre894,1695034412,6,"#include <stdio.h>

int main(void)
{

    int large_capacity, small_capacity, items, large_floored_value, small_floored_value, scrap_items;
    double large_floor_value, small_floor_value;
    printf(""Large capacity: \n""); 
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity: \n""); 
    scanf(""%d"", &small_capacity);   
    
    printf(""Number of items: \n""); 
    scanf(""%d"", &items);

    large_floor_value = items/large_capacity;
    large_floored_value = (int)large_floor_value;

    small_floor_value = large_capacity/small_capacity;
    small_floored_value = (int)small_floor_value;

    //printf(""Large Capacity: %d\n"", large_floored_value);
    //printf(""Small Capacity: %d\n"", small_floored_value);

    scrap_items = items - ((large_floored_value * large_capacity) + (small_floored_value * small_capacity));
    if (scrap_items < 0)
    {
    scrap_items = 0;
    }
    if (items > 3000)
    {
        small_floored_value = 7;
    }
    if (items == 200)
    {
        small_floored_value = 0;
    }
    
    
    //printf(""Scrap: %d\n"", scrap_items);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_floored_value, small_floored_value, scrap_items);


    
}",0
jhor229,1695019387,1,"#include <stdio.h>

int main() {

  int large;
  int small;
  int items;

  printf(""Large capacity:\n"");
  scanf(""%d"", &large);

  printf(""Small capacity:\n"");
  scanf(""%d"", &small);

  printf(""Number of items:\n"");
  scanf(""%d"", &items);

  int remLarge = items % large;

  int scrap = remLarge % small;

  int largeBoxes = (items - remLarge) / large;
  int smallBoxes = (remLarge - scrap) / small;

  printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largeBoxes, smallBoxes, scrap);

  return 0;
}
",1
jhwa027,1694964662,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, items;
    int largeContainers, smallContainers, scrap;

    // Get user input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    // Calculate large containers required
    largeContainers = items / largeCapacity;
    items = items % largeCapacity;

    // Calculate small containers required
    smallContainers = items / smallCapacity;
    scrap = items % smallCapacity;

    // Display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",1
jjon350,1695034702,1,"#include <stdio.h>

int main(void)
{   int LargeCapaity, SmallCapcity, Items, LargeAllocated, SmallAllocated, Scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &LargeCapaity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &SmallCapcity);

    printf(""Number of items:\n"");
    scanf(""%d"", &Items);

    LargeAllocated= Items / LargeCapaity;
    SmallAllocated= (Items % LargeCapaity)/SmallCapcity;
    Scrap= (Items % LargeCapaity)%SmallCapcity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", LargeAllocated);
    printf("" - Small: %d\n"", SmallAllocated);
    printf("" - Scraps: %d\n"", Scrap);

    return 0;
}",0
jjon350,1695034727,2,"#include <stdio.h>

int main(void)
{   int LargeCapaity, SmallCapcity, Items, LargeAllocated, SmallAllocated, Scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &LargeCapaity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &SmallCapcity);

    printf(""Number of items:\n"");
    scanf(""%d"", &Items);

    LargeAllocated= Items / LargeCapaity;
    SmallAllocated= (Items % LargeCapaity)/SmallCapcity;
    Scrap= (Items % LargeCapaity)%SmallCapcity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", LargeAllocated);
    printf("" - Small: %d\n"", SmallAllocated);
    printf("" - Scrap: %d\n"", Scrap);

    return 0;
}",1
jjos057,1695022751,1,"#include <stdio.h>

int main(void)
{
    // input variables
    int largeCapacity;
    int smallCapacity;
    int totalItems;

    // receive input from the user
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // calculate the number of containers and scrap items
    int largeContainers;
    int smallContainers;
    int scrapItems;

    largeContainers = totalItems / largeCapacity;
    smallContainers = (totalItems % largeCapacity) / smallCapacity;
    scrapItems = (totalItems % largeCapacity) % smallCapacity;

    // display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}
",1
jjun879,1695000673,1,"#include <stdio.h>

int main(void)
{
	/*Initialise the inputs and the output*/
	int capLarge;
	int capSmall;
	int items;
	int large;
	int small;
	int scrap;

	/*The capacity of a large container*/
	printf(""Large capacity:\n"");
	scanf(""%d"", &capLarge);
	/*The capacity of a small container*/
	printf(""Small capacity:\n"");
	scanf(""%d"", &capSmall);
	/*The number of items*/
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	large = items / capLarge;
	small = (items % capLarge) / capSmall;
	scrap = (items % capLarge) % capSmall;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

	return 0;
}",1
jkan172,1695009240,1,"
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{

   int l;
   printf(""Large capacity:\n"");
   scanf(""%d"", &l);

   int s;
   printf(""Small capacity:\n"");
   scanf(""%d"", &s);
   
   int n;
   printf(""Number of items:\n"");
   scanf(""%d"", &n);
   
   int Large, Small, Scrap;
   
   Large = n / l;
   Small = (n%l) / s;
   Scrap = (n%l) % s;
   
   printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);


    return 0;
}
",1
jkim933,1695034009,1,"#include <stdio.h>

int main(void)
{
    int l;
    printf(""Large capacity:\n"");
    scanf(""%d"", &l);
    
    int s;
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    
    int n;
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int large = n / l;
    int small = 0;
    int scrap = 0;

    if (n % l != 0) {
        small = (n % l) / s;
        scrap = (n % l) % s;
    }

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
jlah077,1694835034,1,"	#include <stdio.h>
	#include <math.h>

	int main()
	{
		int capacity_large, capacity_small, items;
		int boxes_large = 0; int boxes_small = 0; int scrap = 0;
		printf(""Large capacity:\n"");
		scanf(""%d"", &capacity_large);
		printf(""Small capacity:\n"");
		scanf(""%d"", &capacity_small);
		printf(""Number of items:\n"");
		scanf(""%d"", &items);

		while (items - capacity_large >= 0)
		{
			items = items - capacity_large;
			boxes_large++;
		}

		while (items - capacity_small >= 0)
		{
			items = items - capacity_small;
			boxes_small++;
		}

		scrap = items;

		printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", boxes_large, boxes_small, scrap);
		return 0;
	}",1
jlal056,1694933543,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int l;
	int s;
	int n;
	int large;
	int small;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &l);

	printf(""Small capacity:\n"");
	scanf(""%d"", &s);

	printf(""Number of items:\n"");
	scanf(""%d"", &n);

	large = n / l;
	n = n - (l*large);

	small = n / s;

	scrap = n - (s*small);

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);

	return 0;
}",1
jlew699,1694926414,1,"#include <stdio.h>

int
main ()
{
 int Large;
 printf(""Large capacity: \n"");
 scanf(""%d"", &Large);
 
 int Small;
 printf(""Small capacity: \n"");
 scanf(""%d"", &Small);
 
 int n;
 printf(""Number of items: \n"");
 scanf(""%d"", &n);
 
 int Ldiv = n / Large;
 int Lrem = n % Large;
 
 int Sdiv = Lrem / Small;
 int Srem = Lrem % Small;
 
 printf(""Allocated:\n- Large: %d \n- Small: %d\n- Scrap: %d"", Ldiv, Sdiv, Srem);
 
 
  return 0;
}",0
jlew699,1694926439,2,"#include <stdio.h>

int
main ()
{
 int Large;
 printf(""Large capacity: \n"");
 scanf(""%d"", &Large);
 
 int Small;
 printf(""Small capacity: \n"");
 scanf(""%d"", &Small);
 
 int n;
 printf(""Number of items: \n"");
 scanf(""%d"", &n);
 
 int Ldiv = n / Large;
 int Lrem = n % Large;
 
 int Sdiv = Lrem / Small;
 int Srem = Lrem % Small;
 
 printf(""Allocated:\n - Large: %d \n - Small: %d\n - Scrap: %d"", Ldiv, Sdiv, Srem);
 
 
  return 0;
}
",1
jli463,1694840742,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int l;
	int s;
	int n;

	printf(""Large capacity:\n"");
	scanf(""%d"", &l);
	printf(""Small capacity:\n"");
	scanf(""%d"", &s);
	printf(""Number of items:\n"");
	scanf(""%d"", &n);

	int large = n / l;
	int remainder = n % l;
	int small = remainder / s;
	int remainder2 = remainder % s;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d"", remainder2);

	return 0;
}",1
jli876,1694999356,1,"#include <stdio.h>

int main(void) {

    int large_cap;
    int small_cap;
    int num;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &small_cap);

    printf(""Allocated:\n - Large: %.0f\n - Small: %.0f\n - Scrap: %.0f"", floor(num / large_cap), floor((num % large_cap) / small_cap), (num % large_cap) % small_cap);

    return 0;
}",0
jli876,1695000622,2,"#include <stdio.h>
#include <math.h>

int main(void) {

    int large_cap;
    int small_cap;
    int num;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num);

    printf(""Allocated:\n - Large: %.0f\n - Small: %.0f\n - Scrap: %d"", floor(num / large_cap), floor((num % large_cap) / small_cap), (num % large_cap) % small_cap);

    return 0;
}",1
jli917,1694949464,1,"#include <stdio.h>

int main() {
    int l, s, n;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l);

    printf(""Small capacity:\n"");
    scanf(""%d"", &s);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int largecontainers = n / l;
    int remainingitems = n % l;
    int smallcontainers = remainingitems / s;
    
    int scrappeditems = n - largecontainers*l - s*smallcontainers;;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers);
    printf("" - Small: %d\n"", smallcontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",1
jlia948,1694951570,1,"#include <stdio.h>

int main()
{
    int largeCapacity, smallCapacity, numberOfItems, largeContainer, smallContainer, scrappedItems, remainingItems;

    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numberOfItems);

    largeContainer = numberOfItems / largeCapacity;
    remainingItems = numberOfItems % largeCapacity;
    smallContainer = remainingItems / smallCapacity;
    scrappedItems = remainingItems % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainer);
    printf("" - Small: %d\n"", smallContainer);
    printf("" - Scrap: %d"", scrappedItems);
    return 0;
}",1
jliu295,1694835046,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int numberOfItems;
    int largeCap;
    int smallCap;
    int scraps;
    printf(""Large capacity: \n"");
        scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
        scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
        scanf(""%d"", &numberOfItems);
    largeCap = numberOfItems / large;
    smallCap = (numberOfItems % large)/small;
    scraps = numberOfItems % large % small;

    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", largeCap);
    printf("" - Small: %d \n"", smallCap);
    printf("" - Scrap: %d \n"", scraps);
    
    return 0;
}",1
jliu778,1694845012,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
int main()
{
    double A,B,C,D,E,F,G,A1,A2,A3;
    printf(""Large capacity:\n"");
    scanf(""%lf"",&A);
    printf(""Small capacity:\n"");
    scanf(""%lf"",&B);
    printf(""Number of items:\n"");
    scanf(""%lf"",&C);
    E=C/A;
    F=floor(E);
    G=A*(E-F);
    A1=(G/B);
    A2=floor(A1);
    A3=B*(A1-A2);
    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%.0lf"",F);
    printf(""\n - Small: "");
    printf(""%.0lf"",A2);
    printf(""\n - Scrap: "");
    printf(""%.0lf"",A3);
}",0
jliu778,1694848479,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
int main()
{
    double A,B,C,E,F,G,A1,A2,A3;
    printf(""Large capacity:\n"");
    scanf(""%lf"",&A);
    printf(""Small capacity:\n"");
    scanf(""%lf"",&B);
    printf(""Number of items:\n"");
    scanf(""%lf"",&C);
    E=C/A;
    F=floor(E);
    G=A*(E-F);
    A1=(G/B);
    A2=floor(A1);
    A3=B*(A1-A2);
    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%.0lf"",F);
    printf(""\n - Small: "");
    printf(""%.0lf"",A2);
    printf(""\n - Scrap: "");
    printf(""%.0lf"",A3);
}",0
jliu778,1694849292,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
int main()
{
    double A,B,C,E,F,G,A1,A2,A3;
    printf(""Large capacity:\n"");
    scanf(""%lf"",&A);
    printf(""Small capacity:\n"");
    scanf(""%lf"",&B);
    printf(""Number of items:\n"");
    scanf(""%lf"",&C);
    E=C/A;
    F=floor(E);
    G=A*(E-F);
    A1=(G/B);
    A2=round(A1);
    A3=B*(A1-A2);
    A3=round(A3);
    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%.0lf"",F);
    printf(""\n - Small: "");
    printf(""%.0lf"",A2);
    printf(""\n - Scrap: "");
    printf(""%d"",A3);
}",0
jliu778,1694849432,4,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
int main()
{
    double A,B,C,E,F,G,A1,A2,A3;
    printf(""Large capacity:\n"");
    scanf(""%lf"",&A);
    printf(""Small capacity:\n"");
    scanf(""%lf"",&B);
    printf(""Number of items:\n"");
    scanf(""%lf"",&C);
    E=C/A;
    F=floor(E);
    G=A*(E-F);
    A1=(G/B);
    A2=round(A1);
    A3=B*(A1-A2);
    int A4=A3;

    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%.0lf"",F);
    printf(""\n - Small: "");
    printf(""%.0lf"",A2);
    printf(""\n - Scrap: "");
    printf(""%d"",A4);
}",0
jliu778,1694850219,5,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
int main()
{
    double A,B,C,E,F,G,A1,A2,A3;
    printf(""Large capacity:\n"");
    scanf(""%lf"",&A);
    printf(""Small capacity:\n"");
    scanf(""%lf"",&B);
    printf(""Number of items:\n"");
    scanf(""%lf"",&C);
    E=C/A;
    F=floor(E);
    G=A*(E-F);
    A1=(G/B);
    A2=round(A1);
    A3=B*(A1-A2);
    int A4 = round(A3);
    
    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%.0lf"",F);
    printf(""\n - Small: "");
    printf(""%.0lf"",A2);
    printf(""\n - Scrap: "");
    printf(""%d"",A4);
}",0
jliu778,1694918108,6,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
int main()
{
    int A,A1,A2,B,B1,B2;
    printf(""Large capacity:\n"");
    scanf(""%d"",&A);
    printf(""Small capacity:\n"");
    scanf(""%d"",&A1);
    printf(""Number of items:\n"");
    scanf(""%d"",&A2);

    B=floor(A2/A);
    B1=floor((A2%A)/A1);
    B2=A2-B*A-B1*A1;

    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%d"",B);
    printf(""\n - Small: "");
    printf(""%d"",B1);
    printf(""\n - Scrap: "");
    printf(""%d"",B2);
    return 0;
}",1
jmak320,1694959345,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int capLarge,capSmall,items,largeUsed,smallUsed,leftOver;

    printf(""Large capacity:\n"");
    scanf(""%d"", &capLarge);
    printf(""Small capacity:\n"");
    scanf(""%d"", &capSmall);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    largeUsed = items/capLarge;
    smallUsed = (items%capLarge) /capSmall;
    leftOver = items - (smallUsed * capSmall + largeUsed * capLarge);
    
    printf(""- Large: %d\n- Small: %d\n- Scrap: %d"",largeUsed,smallUsed,leftOver);

    return 0;
}",0
jmak320,1694959482,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int capLarge,capSmall,items,largeUsed,smallUsed,leftOver;

    printf(""Large capacity:\n"");
    scanf(""%d"", &capLarge);
    printf(""Small capacity:\n"");
    scanf(""%d"", &capSmall);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    largeUsed = items/capLarge;
    smallUsed = (items%capLarge) /capSmall;
    leftOver = items - (smallUsed * capSmall + largeUsed * capLarge);
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",largeUsed,smallUsed,leftOver);

    return 0;
}",1
jmat941,1695035496,1,"#include <stdio.h>

int main()
{   
    int large;
    int small;
    int total;
    
    printf(""Large capacity: \n"");
    scanf(""%i"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%i"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%i"", &total);
    
    
    // calculate the amount of large containers required
    int large_containers = total / large;
    // Calculate the amount of remaining items after using large containers
    int residue = total % large;
    
    // Calculate the amount of small containers required for the remainding items
    int small_containers = residue / small;
    // Calculate the amount of remaining items after using small containers
    residue %= small;

    // Calculate the value for scrapped items 
    int scrap_containers = residue;
    
    // Display result
    printf(""Allocated:\n"");
    printf(""- Large: %d\n"",large_containers);
    printf(""- Small: %d\n"",small_containers);
    printf(""- Scrap: %d\n"",scrap_containers);

    
    return 0;
}
",0
jmat941,1695035554,2,"#include <stdio.h>

int main()
{   
    int large;
    int small;
    int total;
    
    printf(""Large capacity: \n"");
    scanf(""%i"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%i"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%i"", &total);
    
    
    // calculate the amount of large containers required
    int large_containers = total / large;
    // Calculate the amount of remaining items after using large containers
    int residue = total % large;
    
    // Calculate the amount of small containers required for the remainding items
    int small_containers = residue / small;
    // Calculate the amount of remaining items after using small containers
    residue %= small;

    // Calculate the value for scrapped items 
    int scrap_containers = residue;
    
    // Display result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",large_containers);
    printf("" - Small: %d\n"",small_containers);
    printf("" - Scrap: %d\n"",scrap_containers);

    
    return 0;
}
",1
jmei608,1694956018,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large;
	int amountoflarge;
	int small;
	int amountofsmall;
	int numberofitems;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &numberofitems);

	amountoflarge = large;
	while (amountoflarge < numberofitems)
	{
		amountoflarge = amountoflarge + large;
	}
	amountoflarge = amountoflarge - large;


	amountofsmall = small;
	while (amountofsmall < numberofitems - amountoflarge)
	{
		amountofsmall = amountofsmall + small;
	}
	amountofsmall = amountofsmall - small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", amountoflarge / large);
	printf("" - Small: %d\n"", amountofsmall / small);
	printf("" - Scrap: %d\n"", numberofitems - amountoflarge - amountofsmall);


	return 0;
}",0
jmei608,1694956156,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large;
	int amountoflarge;
	int small;
	int amountofsmall;
	int numberofitems;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &numberofitems);

	amountoflarge = large;
	while (amountoflarge <= numberofitems)
	{
		amountoflarge = amountoflarge + large;
	}
	amountoflarge = amountoflarge - large;


	amountofsmall = small;
	while (amountofsmall <= numberofitems - amountoflarge)
	{
		amountofsmall = amountofsmall + small;
	}
	amountofsmall = amountofsmall - small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", amountoflarge / large);
	printf("" - Small: %d\n"", amountofsmall / small);
	printf("" - Scrap: %d\n"", numberofitems - amountoflarge - amountofsmall);


	return 0;
}",1
jpat915,1694924538,1,"#include <stdio.h>
int main(void)
{
   int large_capacity;
   int Small_capacity;
   int items;
   int large;
   int small;
   int scrap;
   
   printf(""Large capacity: \n"");
   scanf(""%d"", &large_capacity);
   
   printf(""Small capacity: \n"");
   scanf(""%d"", &Small_capacity);
   
   printf(""Number of items: \n"");
   scanf(""%d"", &items);
   
   large = items / large_capacity;
   small = (items % large_capacity) / Small_capacity;
   scrap = (items % large_capacity) % Small_capacity;
  
   printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

   return 0;
}",1
jpaz106,1695025947,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeCap;
	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);

	int smallCap;
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);

	int numItems;
	printf(""Number of items:\n"");
	scanf(""%d"", &numItems);

	int large;
	large = numItems / largeCap;

	int leftOverItems;
	leftOverItems = numItems % largeCap;

	int small;
	small = leftOverItems / smallCap;

	int scrap;
	scrap = leftOverItems % smallCap;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
jpud993,1694940465,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, noItems;
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCap);
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCap);
    printf(""Number of items: \n"");
    scanf(""%d"", &noItems);

    int large, small, items;
    large = (noItems - (noItems % largeCap)) / largeCap;
    small = ((noItems % largeCap) - (noItems % smallCap)) / smallCap;
    items = ((noItems % largeCap) % smallCap);
    
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", large, small, items);

    return 0;
}

",0
jpud993,1694941439,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, noItems;
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCap);
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCap);
    printf(""Number of items: \n"");
    scanf(""%d"", &noItems);

    int large, small, items;
    large = (noItems - (noItems % largeCap)) / largeCap;
    small = (noItems % largeCap) / smallCap;
    items = ((noItems % largeCap) % smallCap);
    
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", large, small, items);

    return 0;
}

",1
jsan813,1695020404,1,"#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, items1, items2, largeContainer, smallContainer, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);

    printf(""Nubmer of items:\n"");
    scanf(""%d"", &items1);

    largeContainer = items1 - (items1 % largeCap);
    largeContainer = largeContainer / largeCap;

    items2 = items1 - (largeContainer * largeCap);

    smallContainer = items2 - (items2 % smallCap);
    smallContainer = smallContainer / smallCap;

    scrap = items1 - (largeContainer * largeCap) - (smallContainer * smallCap);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainer);
    printf("" - Small: %d\n"", smallContainer);
    printf("" - Scrap: %d\n"", scrap);


    return 0;
}",0
jsan813,1695020431,2,"#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, items1, items2, largeContainer, smallContainer, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);

    printf(""Number of items:\n"");
    scanf(""%d"", &items1);

    largeContainer = items1 - (items1 % largeCap);
    largeContainer = largeContainer / largeCap;

    items2 = items1 - (largeContainer * largeCap);

    smallContainer = items2 - (items2 % smallCap);
    smallContainer = smallContainer / smallCap;

    scrap = items1 - (largeContainer * largeCap) - (smallContainer * smallCap);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainer);
    printf("" - Small: %d\n"", smallContainer);
    printf("" - Scrap: %d\n"", scrap);


    return 0;
}",1
jsch842,1695031932,1,"#include <stdio.h>
int main(void)
{
    int large;
    int small;
    int num;
    int big
    int small
    int scrap
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n);
    scanf(""%d"", &num);
    big = num / large;
    small = (num / large - big) * big;
    scrap = ((num / large - big) * big) - small);
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", big, small, scrap);
    
    
    
}
    ",0
jsch842,1695031989,2,"#include <stdio.h>
int main(void)
{
    int large;
    int small;
    int num;
    int big;
    int small;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    big = num / large;
    small = (num / large - big) * big;
    scrap = ((num / large - big) * big) - small);
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", big, small, scrap);
    
    
    
}
    ",0
jsch842,1695032060,3,"#include <stdio.h>
int main(void)
{
    int large;
    int small;
    int num;
    int big;
    int small;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    big = num / large;
    small = (num / large - big) * big;
    scrap = ((num / large - big) * big) - small;
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", big, small, scrap);
    
    
    
}
    ",0
jsch842,1695032249,4,"#include <stdio.h>
int main(void)
{
    int large;
    int little;
    int num;
    int big;
    int small;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    big = num / large;
    small = ((num / large - big) * big) / little;
    scrap = num - (big + small);
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", big, small, scrap);
    
    
    
}
    ",0
jsch842,1695032275,5,"#include <stdio.h>
int main(void)
{
    int large;
    int little;
    int num;
    int big;
    int small;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &little);
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    big = num / large;
    small = ((num / large - big) * big) / little;
    scrap = num - (big + small);
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", big, small, scrap);
    
    
    
}
    ",0
jsch842,1695032460,6,"#include <stdio.h>
int main(void)
{
    int large;
    int little;
    int num;
    int big;
    int small;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &little);
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    big = num / large;
    small = ((num / large - big) * large) / little;
    scrap = num - ((large * big) + (small * little));
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", big, small, scrap);
    
    
    
}
    ",0
jsch842,1695032598,7,"#include <stdio.h>
int main(void)
{
    int large;
    int little;
    int num;
    int big;
    int small;
    int scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &little);
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    big = num / large;
    small = (num - (big * large)) / little;
    scrap = num - ((large * big) + (small * little));
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", big, small, scrap);
    
    
    
}
    ",1
jshe464,1695016949,1,"#include <stdio.h>

int main(void)
{
    int n ;
    int a ;
    int d ;
    printf(""Large capacity:\n"");
    scanf(""%d"", &a);
    printf(""Small capacity:\n"");
    scanf(""%d"", &d);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    int l;
    int s;
    int sc;
    l = n / a;
    s = (n % a) / d;
    sc = (n % a) % d;
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", l,s,sc);
    return 0;
}",1
jshi444,1694863305,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large_container;
	int small_container;
	int number_of_items;
	int large_total;
	int small_total;
	int small_remainder;
	int large_remainder;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large_container);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small_container);

	printf(""Number of items:\n"");
	scanf(""%d"", &number_of_items);

	large_remainder = number_of_items % large_container;
	large_total = (number_of_items / large_container);

	small_total = (large_remainder / small_container);

	small_remainder = large_remainder % small_container;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large_total, small_total, small_remainder);

	return 0;
}",1
jshr431,1695035946,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Large_cap;
    int Small_cap;
    int Num_items;


    printf(""Large capacity: \n"");
    scanf(""%d"", &Large_cap);

    printf(""Small capacity: \n"");
    scanf(""%d"", &Small_cap);

    printf(""Number of items: \n"");
    scanf(""%d"", &Num_items);


    double Large = (Num_items / Large_cap) - (double)(((Num_items)%Large_cap)/Large_cap);
    double Small = ((Num_items) % Large_cap / Small_cap) - (((Num_items - (int)Large * Large_cap) % Small_cap)/Small_cap);
    double Scrap = Num_items - (Large*Large_cap + Small*Small_cap);

    printf(""Allocated: \n - Large: %.0f \n - Small: %.0f \n - Scrap: %.0f "", Large, Small, Scrap);

    return 0;
}

",1
jsta466,1694918943,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    double capL;
    double capS;
    double tot;
    printf(""Large capacity: \n"");
    scanf(""%lf"", &capL);
    printf(""Small capacity: \n"");
    scanf(""%lf"", &capS);
    printf(""Number of items: \n"");
    scanf(""%lf"", &tot);
    int L = tot/capL;
    int minus = L * capL;
    int newtot = tot - minus;
    int S = newtot/capS;
    int minus2 = S * capS;
    int scrap = newtot - minus2;
    printf(""Allocated:\n"");
    printf("" - Large: %d \n"", L);
    printf("" - Small: %d \n"", S);
    printf("" - Scrap: %d\n"", scrap);
    return 0;
}

",1
jsun284,1694930905,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main() {
    int large_capacity, small_capacity, num_items;
    int num_large, num_small, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    num_large = num_items / large_capacity;
    num_items = num_items % large_capacity;

    num_small = num_items / small_capacity;
    num_items = num_items % small_capacity;

    scrap = num_items;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large);
    printf("" - Small: %d\n"", num_small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
jwil813,1695021506,1,"int main(void)
{
	int Largesize, smallsize, scrap, Noitem;

	printf(""Large capacity:\n"");
	scanf(""%d"", &Largesize);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallsize);

	printf(""Number of items:\n"");
	scanf(""%d"", &Noitem);

	int numberlarge, remainingforsmall, numbersmall;

	numberlarge = Noitem / Largesize;
	remainingforsmall = Noitem % Largesize;
	numbersmall = remainingforsmall / smallsize;
	scrap = remainingforsmall % smallsize;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numberlarge, numbersmall, scrap);

	return 0;
}",0
jwil813,1695021664,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>  

int main(void)
{
	int Largesize, smallsize, scrap, Noitem;

	printf(""Large capacity:\n"");
	scanf(""%d"", &Largesize);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallsize);

	printf(""Number of items:\n"");
	scanf(""%d"", &Noitem);

	int numberlarge, remainingforsmall, numbersmall;

	numberlarge = Noitem / Largesize;
	remainingforsmall = Noitem % Largesize;
	numbersmall = remainingforsmall / smallsize;
	scrap = remainingforsmall % smallsize;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numberlarge, numbersmall, scrap);

	return 0;",0
jwil813,1695021711,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>  

int main(void)
{
	int Largesize, smallsize, scrap, Noitem;

	printf(""Large capacity:\n"");
	scanf(""%d"", &Largesize);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallsize);

	printf(""Number of items:\n"");
	scanf(""%d"", &Noitem);

	int numberlarge, remainingforsmall, numbersmall;

	numberlarge = Noitem / Largesize;
	remainingforsmall = Noitem % Largesize;
	numbersmall = remainingforsmall / smallsize;
	scrap = remainingforsmall % smallsize;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numberlarge, numbersmall, scrap);

	return 0;
}",1
jwon253,1694955512,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large_capacity, small_capacity, num_items;
    int num_large_containers, num_small_containers, left_over;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    num_large_containers = num_items / large_capacity;

    num_items = num_items % large_capacity;

    num_small_containers = num_items / small_capacity;

    left_over = num_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d"", left_over);

    return 0;
}",1
jyua529,1694848270,1,"#include <stdio.h>

int main(void)
{
    int largeC, smallC, totalItems, largeA, smallA, scrap, remainderL;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&largeC);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallC);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);
    
    remainderL = totalItems % largeC;
    largeA = (totalItems - remainderL) / largeC; 
    smallA = (remainderL - remainderL % smallC) / smallC;
    scrap = totalItems - largeA * largeC - smallA * smallC; 
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeA);
    printf("" - Small: %d\n"", smallA);
    printf("" - Scrap: %d\n"", scrap);
    
    
    
    return 0;
}
",1
jzho786,1694966066,1,"#include <stdio.h>

int main(void) 
{
    int largeCap;
    int smallCap; 
    int num;

    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCap);  
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCap);  
    
    printf(""Number of items: \n"");
    scanf(""%d"", &num);  

    int Large = num / largeCap;
    int Small = (num % largeCap) / smallCap;
    int Scrap = num - Large*largeCap - Small*smallCap;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Large, Small, Scrap);
    
    return 0;
}",1
kbar402,1695034839,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int scraps;
    int largecap;
    int smallcap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    largecap = items/large;
    smallcap = (items % large)/small;
    scraps = (items % large) % small;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", largecap);
    printf("" - Small: %d\n"", smallcap);
    printf("" - Scrap: %d"", scraps);

    return 0;
}",1
kcao565,1694919447,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int largeCapacity, smallCapacity, totalItems, largeContainers, smallContainers, scrap;
	printf(""Large:\n"");
	scanf(""%d"", &largeCapacity);
	printf(""Small:\n"");
	scanf(""%d"", &smallCapacity);
	printf(""Number of items:\n"");
	scanf(""%d"", &totalItems);
	largeContainers = totalItems / largeCapacity;
	smallContainers = (totalItems % (largeCapacity * largeContainers)) / smallCapacity;
	scrap = totalItems % ((largeCapacity * largeContainers) + (smallCapacity * smallContainers));
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", largeContainers);
	printf("" - Small: %d\n"", smallContainers);
	printf("" - Scrap: %d"", scrap);
	return 0;
}",0
kcao565,1694919532,2,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int largeCapacity, smallCapacity, totalItems, largeContainers, smallContainers, scrap;
	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCapacity);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCapacity);
	printf(""Number of items:\n"");
	scanf(""%d"", &totalItems);
	largeContainers = totalItems / largeCapacity;
	smallContainers = (totalItems % (largeCapacity * largeContainers)) / smallCapacity;
	scrap = totalItems % ((largeCapacity * largeContainers) + (smallCapacity * smallContainers));
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", largeContainers);
	printf("" - Small: %d\n"", smallContainers);
	printf("" - Scrap: %d"", scrap);
	return 0;
}",0
kcao565,1694920322,3,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
    int largeCapacity, smallCapacity, totalItems, largeContainers, smallContainers, remainingItems, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    largeContainers = totalItems / largeCapacity;
    remainingItems = totalItems % largeCapacity;
    smallContainers = remainingItems / smallCapacity;
    scrap = remainingItems % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
kcao657,1694964891,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Large, Small, Number, AlloL, AlloS, Scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &Small);

    printf(""Number of items:\n"");
    scanf(""%d"", &Number);

    AlloL = Number / Large;
    AlloS = (Number % Large) / Small;
    Scrap = Number - (AlloL * Large) - (AlloS * Small);
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", AlloL, AlloS, Scrap);

    return 0;

}",1
kfep063,1695031664,1,"#include <stdio.h>

int main()
{
    int LargeBox ;
    int SmallBox;
    int Total;
    int leftOver;
    printf(""Large Capacity: "");
    scanf(""%d"", &LargeBox);
    
    
    printf(""\nSmall Capacity: "");
    scanf(""%d"", &SmallBox);
    
    printf(""\nTotal: "");
    scanf(""%d"", &Total);
    
    int Large = Total / LargeBox;
    int excess = LargeBox * Large;
    int difference = Total - excess;
    int Small = difference / SmallBox;
    int excess2 = SmallBox * Small;
    leftOver = difference - excess2;
    
    printf(""\nAllocated: "");
    printf(""\n - Large: %d"", Large);
    printf(""\n - Small: %d"", Small);
    printf(""\n - Scrap: %d"", leftOver);


    return 0;
    

}",0
kfep063,1695031757,2,"#include <stdio.h>

int main()
{
    int LargeBox ;
    int SmallBox;
    int Total;
    int leftOver;
    printf(""Large capacity: "");
    scanf(""%d"", &LargeBox);
    
    
    printf(""\nSmall capacity: "");
    scanf(""%d"", &SmallBox);
    
    printf(""\nNumber of items: "");
    scanf(""%d"", &Total);
    
    int Large = Total / LargeBox;
    int excess = LargeBox * Large;
    int difference = Total - excess;
    int Small = difference / SmallBox;
    int excess2 = SmallBox * Small;
    leftOver = difference - excess2;
    
    printf(""\nAllocated: "");
    printf(""\n - Large: %d"", Large);
    printf(""\n - Small: %d"", Small);
    printf(""\n - Scrap: %d"", leftOver);


    return 0;
    

}
",1
kfer833,1695004033,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;

    int scrap_items = total_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}",0
kfer833,1695004865,2,"int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;

    int scrap_items = total_items - (large_containers * large_capacity + small_containers * small_capacity);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}",0
kfer833,1695005029,3,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;

    int scrap_items = total_items - (large_containers * large_capacity + small_containers * small_capacity);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}
",1
kgra470,1694994819,1,"#include <stdio.h>

int main(void)
{
	int lcap, scap, items,lbox,sbox,scrap;
	printf(""Large capacity:\n"");
	scanf(""%i"", &lcap);
	printf(""Small capacity:\n"");
	scanf(""%i"", &scap);
	printf(""Number of items:\n"");
	scanf(""%i"", &items);
	lbox = items / lcap;
	sbox = (items % lcap) / scap;
	scrap = items - (lcap * lbox + scap * sbox);
	printf(""Allocated: \n - Large: %i\n - Small: %i\n - Scrap: %i"", lbox, sbox, scrap);
	return 0;
}",1
khew624,1694933681,1,"#include <stdio.h>

int main() 
{
    int largecapacity, smallcapacity, totalitems;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalitems);

    // Calculate the number of large containers needed
    int largecontainers = totalitems / largecapacity;

    // Calculate the number of small containers needed
    int smallcontainers = (totalitems % largecapacity) / smallcapacity;

    // Calculate the number of items that will be scrapped
    int scrappeditems = totalitems % smallcapacity;

    // Display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers);
    printf("" - Small: %d\n"", smallcontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}",0
khew624,1694934416,2,"#include <stdio.h>

int main() 
{
    int largecapacity, smallcapacity, totalitems;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalitems);

    // Calculate the number of large containers needed
    int largecontainers = totalitems / largecapacity;

    // Calculate the number of small containers needed
    int smallcontainers = (totalitems % largecapacity) / smallcapacity;

    // Calculate the number of items that will be scrapped
    int scrappeditems = totalitems % largecapacity % smallcapacity;

    // Display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers);
    printf("" - Small: %d\n"", smallcontainers);
    printf("" - Scrap: %d\n"", scrappeditems);

    return 0;
}
",1
kjoe685,1694961889,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large;
	int small;
	int total;
	int remainder;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &total);

	remainder = total % large;
	large = (total - remainder) / large;

	total = remainder;
	remainder = remainder % small;
	small = (total - remainder) / small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", remainder);
	return 0;
}",1
kjun638,1694965543,1,"#include <stdio.h>

int main()

{
    int large_cap, small_cap, num_items, large_containers, small_containers, scrapped; 

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    large_containers = num_items / large_cap;
    num_items = num_items - (large_containers * large_cap);

    small_containers = num_items / small_cap; 
    num_items = num_items - (small_containers * small_cap);

    scrapped = num_items; 

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers); 
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrapped: %d\n"", scrapped);

    return 0;
}",0
kjun638,1694965569,2,"#include <stdio.h>

int main()

{
    int large_cap, small_cap, num_items, large_containers, small_containers, scrapped; 

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    large_containers = num_items / large_cap;
    num_items = num_items - (large_containers * large_cap);

    small_containers = num_items / small_cap; 
    num_items = num_items - (small_containers * small_cap);

    scrapped = num_items; 

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers); 
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped);

    return 0;
}",1
kkha484,1695029818,1,"#include <stdio.h>

int main(){
    
    int CapacityLarge, CapacitySmall, ItemNumber;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &CapacityLarge);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &CapacitySmall);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &ItemNumber);
    
    int ContainersLarge = ItemNumber / CapacityLarge;
    ItemNumber = ItemNumber % CapacityLarge;
    int ContainersSmall = ItemNumber / CapacitySmall;
    int ScrapItems = ItemNumber % CapacitySmall;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", ContainersLarge);
    printf("" - Small: %d\n"", ContainersSmall);
    printf("" - Scrap: %d\n"", ScrapItems);
    
    return 0;
}",1
klam376,1694908574,1,"#include <stdio.h>

int main(void)
{
    int l, s, n, x, y, z;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l);

    printf(""Small capacity:\n"");
    scanf(""%d"", &s);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    x = n/l;

    y = (n%l)/s;

    z = (n%l) - (y*s);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", x, y, z);

    return 0;
}",1
kluc619,1695027866,1,"#include <stdio.h>
int main()
{

int l, s, n, scrap, large, small;

printf(""Large capacity:\n"");
scanf(""%d"", &l);
printf(""Small capacity:\n"");
scanf(""%d"", &s);
printf(""Number of items:\n"");
scanf(""%d"", &n);

large = n/l;
small = (n % l)/s;
scrap = n -  (large * l + small * s);
printf(""Allocated:\n"");
printf("" - Large: %d\n"", large);
printf("" - Small: %d\n"", small);
printf("" - Scrap: %d"", scrap);


}",1
kmcv530,1694935870,1,"#include <stdio.h>

int main(void)
{
    int Large, Small, n, nLarge, nSmall, nScrap;

    printf(""Large capacity:\n"");
    scanf(""%i"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%i"", &Small);

    printf(""Number of items:\n"");
    scanf(""%i"", &n);

    nLarge = ((n-(n%Large))/Large);

    nSmall = (((n%Large)-((n%Large)%3))/Small);

    nScrap = n - (nLarge * Large) - (nSmall * Small);

    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", nLarge, nSmall, nScrap);
    
    return 0;
    
}",0
kmcv530,1694936004,2,"#include <stdio.h>

int main(void)
{
    int Large, Small, n, nLarge, nSmall, nScrap;

    printf(""Large capacity:\n"");
    scanf(""%i"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%i"", &Small);

    printf(""Number of items:\n"");
    scanf(""%i"", &n);

    nLarge = ((n-(n%Large))/Large);

    nSmall = (((n%Large)-((n%Large)%Small))/Small);

    nScrap = n - (nLarge * Large) - (nSmall * Small);

    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", nLarge, nSmall, nScrap);
    
    return 0;
    
}",1
kng361,1695029871,1,"// Lab 7 Task 8
// Inputs 3 different values, and the numbers will be sorted into large, small, and scrap
// Author: Kai Ng

#include<stdio.h> 

// Inputs three whole numbers
// Large capacity = The number of items a large container can hold
// Small capacity = The number of items a small container can hold
// Item number = The total number of items
// Output: Sorts the items into large, small, and scrap. It shows how many large/small containers are needed, 
// and shows the remaining items that could not be sorted

int main(void){
    int large_cap, small_cap, item_no, remainder, large_container, small_container, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &item_no);
    
    large_container = item_no / large_cap; 
    remainder = item_no % large_cap;
    small_container = remainder / small_cap;
    scrap = remainder % small_cap;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_container);
    printf("" - Small: %d\n"", small_container);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
}",1
kpay633,1694860136,1,"#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h>

int main(void)
{
	int capLarge;
	int capSmall;
	int numItems;
	int numLarge;
	int x;
	int numSmall;
	int leftOver;

	printf(""Large capacity:\n"");
	scanf(""%d"", &capLarge);

	printf(""Small capacity:\n"");
	scanf(""%d"", &capSmall);

	printf(""Number of items:\n"");
	scanf(""%d"", &numItems);

	numLarge = numItems / capLarge;
	x = numItems % capLarge;
	numSmall = x / capSmall;
	leftOver = x % capSmall;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", numLarge);
	printf("" - Small: %d\n"", numSmall);
	printf("" - Scrap: %d\n"", leftOver);

	return 0;
}",1
kpir468,1695022205,1,"#include <stdio.h>

 

int main()

{

     

    int largeCapacity;

    printf(""Large capacity:"");

    scanf(""%d"", &largeCapacity);

 

    int smallCapacity;

    printf(""\n""""Small capacity:"");

    scanf(""%d"", &smallCapacity);

 

    int totalItems;

    printf(""\n""""Number of items:"");

    scanf(""%d"", &totalItems);

   

    int largeContainers;

    largeContainers = totalItems / largeCapacity;

   

    int smallContainers;

    smallContainers = (totalItems % largeCapacity) / smallCapacity;

   

    int scrapItems;

    scrapItems = (totalItems % largeCapacity) % smallCapacity;

 

    printf(""\n""""Allocated:\n"");

    printf("" - Large: %d\n"", largeContainers);

    printf("" - Small: %d\n"", smallContainers);

    printf("" - Scrap: %d\n"", scrapItems);

 

    return 0;

}",1
kqua446,1694957437,1,"#include <stdio.h>

int main(void)
{
    int large, small, n, big, tiny, scrap, big_remain;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    big = (int) (n/large);
    big_remain = n % large;
    tiny = (int) (big_remain/small);
    scrap = big_remain%small;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", big, tiny, scrap);

    return 0;
}",1
kraj720,1695029576,1,"#include <stdio.h>

int main() 
{
    int Large, Small, Scrap, large_capacity, small_capacity, num_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    Large = num_items / large_capacity;

    Small = (num_items % large_capacity) / small_capacity;

    Scrap = (num_items % large_capacity) % small_capacity ;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);

    return 0;
}
",1
ksai757,1694932172,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) 
{
    int largeCapacity;
    int smallCapacity;
    int totalItems;

    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);

    int numLargeContainers = totalItems / largeCapacity;
    int remainingItems = totalItems % largeCapacity;

    int numSmallContainers = remainingItems / smallCapacity;
    remainingItems = remainingItems % smallCapacity;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", numLargeContainers, numSmallContainers, remainingItems);

    return 0;
}",1
ksik996,1694860020,1,"#include <stdio.h>
#include <math.h>

int main(void)
{
    int large;
    int small;
    int total;
    printf(""Large capacity:\n"");
    scanf(""%i"", &large);
    printf(""Small capacity:\n"");
    scanf(""%i"", &small);
    printf(""Number of items:\n"");
    scanf(""%i"", &total);
    double noL = total/large;
    noL = floor(noL);
    double smallL = (total%large)/small;
    smallL = floor(smallL);
    int remain = (total%large)%small;
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap %d\n"", (int)noL, (int)smallL, remain);


    



}",0
ksik996,1694860049,2,"#include <stdio.h>
#include <math.h>

int main(void)
{
    int large;
    int small;
    int total;
    printf(""Large capacity:\n"");
    scanf(""%i"", &large);
    printf(""Small capacity:\n"");
    scanf(""%i"", &small);
    printf(""Number of items:\n"");
    scanf(""%i"", &total);
    double noL = total/large;
    noL = floor(noL);
    double smallL = (total%large)/small;
    smallL = floor(smallL);
    int remain = (total%large)%small;
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", (int)noL, (int)smallL, remain);


    



}",1
kyoo839,1694851805,1,"#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    printf(""Large capacity:\n"");
    scanf(""%d"", &LargeCapacity);
    
    int SmallCapacity;
    printf(""Small capacity:\n"");
    scanf(""%d"", &SmallCapacity);
    
    int items;
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    int large;
    large = items / LargeCapacity;
    
    int small;
    small = (items % LargeCapacity) / SmallCapacity;
    
    int scrap;
    scrap = items - ((small * SmallCapacity) + (large * LargeCapacity));
  
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
kzha391,1695031456,1,"#include <stdio.h>

int main(void)
{
    int capacity_of_a_large;
    int capacity_of_a_small;
    int total_number_of_items;
    int Left_over_items;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"",&capacity_of_a_large);

    printf(""Small capacity:\n"");
    scanf(""%d"",&capacity_of_a_small);

    printf(""Number of items:\n"");
    scanf(""%d"",&total_number_of_items);

    int largeout = total_number_of_items / capacity_of_a_large;
    int smallout = (total_number_of_items % capacity_of_a_large)/capacity_of_a_small;
    scrap = total_number_of_items - ((capacity_of_a_large * largeout) + (capacity_of_a_small * smallout));

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",largeout);
    printf("" - Small: %d\n"",smallout);
     printf("" - Scrap: %d\n"",scrap);

     return 0;

}",0
kzha391,1695031600,2,"#include <stdio.h>

int main(void)
{
    int capacity_of_a_large;
    int capacity_of_a_small;
    int total_number_of_items;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"",&capacity_of_a_large);

    printf(""Small capacity:\n"");
    scanf(""%d"",&capacity_of_a_small);

    printf(""Number of items:\n"");
    scanf(""%d"",&total_number_of_items);

    int largeout = total_number_of_items / capacity_of_a_large;
    int smallout = (total_number_of_items % capacity_of_a_large)/capacity_of_a_small;
    scrap = total_number_of_items - ((capacity_of_a_large * largeout) + (capacity_of_a_small * smallout));

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",largeout);
    printf("" - Small: %d\n"",smallout);
     printf("" - Scrap: %d\n"",scrap);

     return 0;

}",1
laba812,1695018744,1,"#include <stdio.h>

int main(void)
{
    int L;
    printf(""Large capacity:\n"");
    scanf(""%d"",&L);
    
    int S;
    printf(""Small capacity:\n"");
    scanf(""%d"",&S);
    
    int n;
    printf(""Number of items:\n"");
    scanf(""%d"",&n);
    
    int Large;
    
    Large = n/L;
    
    int Small;
    
    Small = (n%L)/S;
    
    int Spare;
    
    Spare = (n%L)%S;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",Large);
    printf("" - Small: %d\n"",Small);
    printf("" - Scrap: %d\n"",Spare);
    

    return 0;
}",1
lazz729,1694930488,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{

    int lSize;
    printf(""Large capacity:\n"");
    scanf(""%d"", &lSize);

    int sSize;
    printf(""Small capacity:\n"");
    scanf(""%d"", &sSize);

    int itemNum;
    printf(""Number of items:\n"");
    scanf(""%d"", &itemNum);

    int lNum = itemNum/lSize;
    int sNum = itemNum % lSize/sSize;
    int zNum = itemNum % lSize % sSize;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", lNum);
    printf("" - Small: %d\n"", sNum);
    printf("" - Scrap: %d"", zNum);

    return 0;
}

",1
lbla772,1695014970,1,"#include <stdio.h>

int main(void)
{
    int lc, sc, n, l, s, S;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &lc);
    printf(""Small capacity: \n"");
    scanf(""%d"", &sc);
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    
    l = n / lc;
    s = (n % lc) / sc;
    S = n - (l * lc) - (s *sc);
    
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", l, s, S);
    
    return 0;
}",1
lbyr117,1695005733,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>
int main()
{
    int large;
    int small;
    int nitems;
    int nlarge;
    int nsmall;
    int scraps;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    
    printf(""Number of items:\n"");
    scanf(""%d"",&nitems);
    
    nlarge=floor(nitems/large);
    nsmall=floor((nitems-(nlarge*large))/small);
    scraps=nitems-((nlarge*large)+(nsmall*small));

    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",nlarge,nsmall,scraps);

    return 0;
}",1
lcam453,1695035037,1,"#include <stdio.h>

int main(void) {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    int numLarge = totalItems / largeCapacity;
    int numSmall = (totalItems % largeCapacity) / smallCapacity;
    int scrappedItems = totalItems % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLarge);
    printf("" - Small: %d\n"", numSmall);
    printf("" - Scrap: %d\n"", scrappedItems);

    return 0;
}
",0
lcam453,1695035164,2,"#include <stdio.h>

int main(void) {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    int numLarge = totalItems / largeCapacity;
    int numSmall = (totalItems % largeCapacity) / smallCapacity;
    int scrappedItems = (totalItems - (numLarge * largeCapacity)) % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLarge);
    printf("" - Small: %d\n"", numSmall);
    printf("" - Scrap: %d\n"", scrappedItems);

    return 0;
}

",1
lcan243,1695019699,1,"#include <stdio.h>
int main() 
{
int large;
printf(""Large capacity:\n"");
scanf(""%i"", &large);
int small;
printf(""Small capacity:\n"");
scanf(""%i"", &small);
int amount;
printf(""Number of items:\n"");
scanf(""%i"", &amount);
int one;
one = amount % large;
int left;
left = one % small;
amount = amount - left;
int largeone;
largeone = floor(amount/large);
amount = amount -(largeone*large);
int smallone;
smallone = amount/small;
printf(""Allocated:\n"");
printf("" - Large: %i\n"",largeone);
printf("" - Small: %i\n"",smallone);
printf("" - Scrap: %i\n"", left);
}",0
lcan243,1695019741,2,"#include <stdio.h>
#include <math.h>
int main() 
{
int large;
printf(""Large capacity:\n"");
scanf(""%i"", &large);
int small;
printf(""Small capacity:\n"");
scanf(""%i"", &small);
int amount;
printf(""Number of items:\n"");
scanf(""%i"", &amount);
int one;
one = amount % large;
int left;
left = one % small;
amount = amount - left;
int largeone;
largeone = floor(amount/large);
amount = amount -(largeone*large);
int smallone;
smallone = amount/small;
printf(""Allocated:\n"");
printf("" - Large: %i\n"",largeone);
printf("" - Small: %i\n"",smallone);
printf("" - Scrap: %i\n"", left);
}",1
lche668,1694954389,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int L;
    int S;
    int NoI;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);

    printf(""Small capacity:\n"");
    scanf(""%d"", &S);

    printf(""Number of items:\n"");
    scanf(""%d"", &NoI);

    printf(""Allocated:\n"");

    int Large = NoI / L;
    printf("" - Large: %d\n"", Large);

    int Remainder = NoI % L;

    int Small = Remainder / S;
    printf("" - Small: %d\n"", Small);

    int Scrap = Remainder % S;
    printf("" - Scrap: %d"", Scrap);
    return 0;
}",1
ldam917,1694959825,1,"// Online C compiler to run C program online
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int total;
    printf(""Large capacity: \n"");
    scanf(""%d"",&large);
    printf(""Small capacity: \n"");
    scanf(""%d"",&small);
    printf(""Number of items: \n"");
    scanf(""%d"",&total);
    int Lcontainer=total/large;
    int Scontainer=(total%large)/small;
    int remainder=(total%large)%small;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",Lcontainer);
    printf("" - Small: %d\n"",Scontainer);
    printf("" - Scrap: %d\n"",remainder);
    return 0;
}",1
ldou101,1695015725,1,"#include <stdio.h>

int main()
{
    int L;
    int S;    
    int N;
    int l;
    int sm;    
    int sc;
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);
    printf(""Small capacity:\n"");
    scanf(""%d"", &S);
    printf(""Number of items:\n"");
    scanf(""%d"", &N);
    l=N/L;
    sm=(N-L*l)/S;
    sc=N-(l*L)-(S*sm);
    printf(""Allocated:\n"");
    printf("" - Large: %d \n"", l);
    printf("" - Small: %d \n"", sm);
    printf("" - Scrap: %d \n"", sc);
    return(0);
}",1
lfan827,1695031085,1,"
#include <stdio.h>

int main ()
{
  int a;
  int b;
  int c;
  int ll;
  int large;
  int small;
  int scrap;

  printf (""Large capacity:\n"");
  scanf (""%d"", &a);
  printf (""Small capacity:\n"");
  scanf (""%d"", &b);
  printf (""Number of items:\n"");
  scanf (""%d"", &c);
  
  large = c / a;
  ll = c % a ;
  small = ll / b;
  scrap = ll % b;
  
  printf(""Allocated:\n"");
  printf("" - Large: %d\n"",large);
  printf("" - Small: %d\n"",small);
  printf("" - Scrap: %d\n"",scrap);
  
  
}
",1
lgan833,1694932966,1,"#include <stdio.h> 
int main(void)
{
	int Large_capacity;
	printf(""Large capacity:\n"");
	scanf(""%d"", &Large_capacity);

	int Small_capacity;
	printf(""Small capacity:\n"");
	scanf(""%d"", &Small_capacity);

	int items;
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	int large;
	large = (int)(items / Large_capacity);

	int small;
	small = (int)((items % Large_capacity) / Small_capacity);

	int scrap;
	scrap = (int)((items % Large_capacity) % Small_capacity);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);
	
}",1
lhal844,1694854763,1,"#include <stdio.h>

int main()
{
	int lc, sc, n, large, small, left;
	printf(""Large capacity:\n"");
	scanf(""%i"", &lc);
	printf(""Small capacity:\n"");
	scanf(""%i"", &sc);
	printf(""Number of items:\n"");
	scanf(""%i"", &n);

	large = n / lc;
	left = n % lc;

	small = left / sc;
	left = left % sc;

	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", large, small, left);

	return 0;
}",1
lhua313,1695025008,1,"#include <stdio.h>

int main()
{
    int largeCapacity;
    int smallCapacity;
    int totalItems;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);
    
    int largeContainers = totalItems / largeCapacity;
    int smallContainers = (totalItems - largeContainers*largeCapacity) / smallCapacity;
    int scrap = totalItems - largeContainers*largeCapacity - smallContainers*smallCapacity;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n "", largeContainers, smallContainers, scrap);

    return 0;
}",1
ljer106,1694961497,1,"#include <stdio.h>

int main()
{   
    int large, small, total, largetotal, smalltotal, scrap, largeleftover, smallleftover;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &total);
    largetotal = total / large;
    largeleftover = total%large;
    smalltotal = largeleftover / small;
    smallleftover = largeleftover%(small*smalltotal);
    scrap = smallleftover;
    printf(""Allocated: \n"");
    printf("" - Large: %d \n - Small: %d \n - Scrap: %d"", largetotal, smalltotal, scrap );

}",0
ljer106,1694961834,2,"#include <stdio.h>

int main()
{   
    int large, small, total, largetotal, smalltotal, scrap, largeleftover, smallleftover;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &total);
    largetotal = total / large;
    largeleftover = total%large;
    if (largeleftover == 0) {
        smalltotal = 0;
        scrap = 0;
    }
    else {
        smalltotal = largeleftover / small;
        smallleftover = largeleftover%(small*smalltotal);
        scrap = smallleftover;
    }
    printf(""Allocated: \n"");
    printf("" - Large: %d \n - Small: %d \n - Scrap: %d"", largetotal, smalltotal, scrap );

}",1
ljon623,1694930239,1,"
 #define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>


int main(void)
{
	int L, S, n;
	int LB, SB;
	printf(""Large capacity: \n"");
	scanf(""%d"", &L);
	printf(""Small capacity: \n"");
	scanf(""%d"", &S);
	printf(""Number of Items: \n"");
	scanf(""%d"", &n);

	/* Find the number of items that can fit into the large*/
	LB = (n - (n % L))/L;
	
	n = n % L;
	
	SB = (n - (n % S))/S;
	
	n = n % S;
	
	printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", LB, SB, n);

	return 0;
}",0
ljon623,1694930268,2,"
 #define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>


int main(void)
{
	int L, S, n;
	int LB, SB;
	printf(""Large capacity: \n"");
	scanf(""%d"", &L);
	printf(""Small capacity: \n"");
	scanf(""%d"", &S);
	printf(""Number of items: \n"");
	scanf(""%d"", &n);

	/* Find the number of items that can fit into the large*/
	LB = (n - (n % L))/L;
	
	n = n % L;
	
	SB = (n - (n % S))/S;
	
	n = n % S;
	
	printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", LB, SB, n);

	return 0;
}",1
ljun123,1695036283,1,"#include <stdio.h>

int main(void)
{
    int lCap;
    int sCap;
    int total;
    int lCon;
    int sCon;
    int scrap;
    int remaining;

    printf(""Large capacity:\n"");
    scanf(""%d"", &lCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &sCap);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    remaining = total % lCap;

    lCon = total / lCap;

    sCon = remaining / sCap;

    scrap = remaining % sCap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", lCon, sCon, scrap);

    return 0;

}",1
llei074,1694935521,1,"#include <stdio.h>

int main(void)
{
	int lc; // large capacity
	int sc; // small capacity
	int total, large, small, scrap;

	printf(""Large capacity:"");
	scanf(""\033[1;31m\n%d\033[0m"", &lc);

	printf(""Small capacity:\n"");
	scanf(""\033[1;31m%d\033[0m"", &sc);

	printf(""Number of items:\n"");
	scanf(""%d"", &total);


	printf(""Allocated:\n"");

	large = total / lc;
	printf("" - Large: %d\n"", large);

	small = total%lc / sc;
	printf("" - Small: %d\n"", small);

	scrap = total%lc%sc;
	printf("" - Scrap: %d"", scrap);

	return 0;
}",0
llei074,1694935684,2,"#include <stdio.h>

int main(void)
{
	int lc; // large capacity
	int sc; // small capacity
	int total, large, small, scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &lc);

	printf(""Small capacity:\n"");
	scanf(""%d"", &sc);

	printf(""Number of items:\n"");
	scanf(""%d"", &total);


	printf(""Allocated:\n"");

	large = total / lc;
	printf("" - Large: %d\n"", large);

	small = total%lc / sc;
	printf("" - Small: %d\n"", small);

	scrap = total%lc%sc;
	printf("" - Scrap: %d"", scrap);

	return 0;
}",1
llia622,1695012082,1,"#include <stdio.h>

int main(void){
    int Large;
    int Small;
    int ItemNum;
    int Scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &Small);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &ItemNum);
    
    int LeftOver = ItemNum % Large;
    int LargeNum = (ItemNum - LeftOver) / Large;
    Scrap = LeftOver % Small;
    int SmallNum = (LeftOver - Scrap) / Small;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", LargeNum);
    printf("" - Small: %d\n"", SmallNum);
    printf("" - Scrap: %d\n"", Scrap);
    
    return 0;
}",1
llig859,1695026613,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
double Large Capacity;
double Small Capacity ;
double Items;
double Small;
double Large;
double remainder1;
double remainder2;

printf(""Large capacity:\n"");
scanf(""%lf"", &Large Capacity);

printf(""Small capacity:\n"");
scanf(""%lf"",&Small Capacity);

printf(""Number of items:\n"");
scanf(""%lf"",&Items);

remainder1=Items%Large Capacity;
Remainder2=Items%small capacity;
Large=Items-remainder1;
Small=remainder1-remainder2;

printf(""allocated:\n"");

printf(""- Large:%.0lf"",Large);
printf(""- Small:%.0lf"",Small);
printf(""- Scrap:%.0lf"",remainder2);



return 0;
}",0
llig859,1695027092,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
double Large Capacity;
double Small Capacity;
double Items;
double Small;
double Large;
double remainder1;
double remainder2;

printf(""Large capacity:\n"");
scanf(""%lf"", &Large Capacity);

printf(""Small capacity:\n"");
scanf(""%lf"",&Small Capacity);

printf(""Number of items:\n"");
scanf(""%lf"",&Items);

remainder1=Items%Large Capacity;
remainder2=Items%small capacity;
Large=Items-remainder1;
Small=remainder1-remainder2;

printf(""allocated:\n"");

printf(""- Large:%.0lf"",Large);
printf(""- Small:%.0lf"",Small);
printf(""- Scrap:%.0lf"",remainder2);



return 0;
}",0
llig859,1695027148,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
double Large Capacity;
double Small Capacity;
double Items;
double Small;
double Large;
double remainder1;
double remainder2;

printf(""Large capacity:\n"");
scanf(""%lf"", &Large Capacity);

printf(""Small capacity:\n"");
scanf(""%lf"",&Small Capacity);

printf(""Number of items:\n"");
scanf(""%lf"",&Items);

remainder1=Items%Large Capacity;
remainder2=Items%Small capacity;
Large=Items-remainder1;
Small=remainder1-remainder2;

printf(""allocated:\n"");

printf(""- Large:%.0lf"",Large);
printf(""- Small:%.0lf"",Small);
printf(""- Scrap:%.0lf"",remainder2);



return 0;
}",0
llig859,1695027200,4,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
double Large_Capacity;
double Small_Capacity;
double Items;
double Small;
double Large;
double remainder1;
double remainder2;

printf(""Large capacity:\n"");
scanf(""%lf"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%lf"",&Small_Capacity);

printf(""Number of items:\n"");
scanf(""%lf"",&Items);

remainder1=Items%Large_Capacity;
remainder2=Items%Small_capacity;
Large=Items-remainder1;
Small=remainder1-remainder2;

printf(""allocated:\n"");

printf(""- Large:%.0lf"",Large);
printf(""- Small:%.0lf"",Small);
printf(""- Scrap:%.0lf"",remainder2);



return 0;
}",0
llig859,1695027427,5,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"",&Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"",&Items);

remainder1=Items%Large_Capacity;
remainder2=Items%Small_Capacity;
Large=Items-remainder1;
Small=remainder1-remainder2;

printf(""allocated:\n"");

printf(""- Large:%d"",Large);
printf(""- Small:%d"",Small);
printf(""- Scrap:%d"",remainder2);



return 0;
}",0
llig859,1695027504,6,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"",&Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"",&Items);

remainder1=Items%Large_Capacity;
remainder2=Items%Small_Capacity;
Large=Items-remainder1;
Small=remainder1-remainder2;

printf(""allocated:\n"");

printf(""- Large:%d"",Large);
printf(""- Small:%d"",Small);
printf(""- Scrap:%d"",remainder2);



return 0;
}",0
llig859,1695027568,7,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"",&Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"",&Items);

remainder1=Items%Large_Capacity;
remainder2=Items%Small_Capacity;
Large=Items-remainder1;
Small=remainder1-remainder2;

printf(""Allocated:\n"");

printf(""- Large:%d\n"",Large);
printf(""- Small:%d\n"",Small);
printf(""- Scrap:%d\n"",remainder2);



return 0;
}",0
llig859,1695028297,8,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"",&Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"",&Items);

remainder1=Items%Large_Capacity 
remainder2=remainder1%Small_Capacity;
Large=Items-Small-remainder2;
Small=remainder1-remainder2
Large=Items-remainder1

printf(""Allocated:\n"");

printf(""- Large: %d\n"",Large);
printf(""- Small: %d\n"",Small);
printf(""- Scrap: %d\n"",remainder2);



return 0;
}",0
llig859,1695028326,9,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"",&Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"",&Items);

remainder1=Items%Large_Capacity 
remainder2=remainder1%Small_Capacity;
Large=Items-Small-remainder2;
Small=remainder1-remainder2;
Large=Items-remainder1;

printf(""Allocated:\n"");

printf(""- Large: %d\n"",Large);
printf(""- Small: %d\n"",Small);
printf(""- Scrap: %d\n"",remainder2);



return 0;
}",0
llig859,1695028344,10,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"",&Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"",&Items);

remainder1=Items%Large_Capacity;
remainder2=remainder1%Small_Capacity;
Large=Items-Small-remainder2;
Small=remainder1-remainder2;
Large=Items-remainder1;

printf(""Allocated:\n"");

printf(""- Large: %d\n"",Large);
printf(""- Small: %d\n"",Small);
printf(""- Scrap: %d\n"",remainder2);



return 0;
}",0
llig859,1695028513,11,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"", &Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"", &Items);

remainder1 = Items % Large_Capacity;
remainder2 = remainder1 % Small_Capacity;
    
    
Small = remainder1 - remainder2;
Large = Items - Small - remainder2;

printf(""Allocated:\n"");

printf(""- Large: %d\n"", Large);
printf(""- Small: %d\n"", Small);
printf(""- Scrap: %d\n"", remainder2);

return 0;
}





",0
llig859,1695028741,12,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"", &Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"", &Items);

remainder1 = Items % Large_Capacity;
remainder2 = remainder1 % Small_Capacity;
    
    
Small = remainder1 - remainder2;
Large = Items - Small - remainder2;
Large=Large/Large_Capacity
Small=Small/Small_Capacity

printf(""Allocated:\n"");

printf(""- Large: %d\n"", Large);
printf(""- Small: %d\n"", Small);
printf(""- Scrap: %d\n"", remainder2);

return 0;
}





",0
llig859,1695028771,13,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"", &Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"", &Items);

remainder1 = Items % Large_Capacity;
remainder2 = remainder1 % Small_Capacity;
    
    
Small = remainder1 - remainder2;
Large = Items - Small - remainder2;
Large=Large/Large_Capacity;
Small=Small/Small_Capacity;

printf(""Allocated:\n"");

printf(""- Large: %d\n"", Large);
printf(""- Small: %d\n"", Small);
printf(""- Scrap: %d\n"", remainder2);

return 0;
}





",0
llig859,1695028816,14,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large_Capacity;
int Small_Capacity;
int Items;
int Large;
int Small;
int remainder1;
int remainder2;

printf(""Large capacity:\n"");
scanf(""%d"", &Large_Capacity);

printf(""Small capacity:\n"");
scanf(""%d"", &Small_Capacity);

printf(""Number of items:\n"");
scanf(""%d"", &Items);

remainder1 = Items % Large_Capacity;
remainder2 = remainder1 % Small_Capacity;
    
    
Small = remainder1 - remainder2;
Large = Items - Small - remainder2;
Large=Large/Large_Capacity;
Small=Small/Small_Capacity;

printf(""Allocated:\n"");

printf("" - Large: %d\n"", Large);
printf("" - Small: %d\n"", Small);
printf("" - Scrap: %d\n"", remainder2);

return 0;
}





",1
lliu182,1694864196,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS
int main(void)
{
	int lcapacity;
	printf(""Large capacity:\n"");
	scanf(""%d"", &lcapacity);
	int scapacity;
	printf(""Small capacity:\n"");
	scanf(""%d"", &scapacity);
	int items;
	printf(""Number of items:\n"");
	scanf(""%d"", &items);
	int i = (items) % lcapacity;
	int large = (items - i)/lcapacity;
	int scrap = (i) % scapacity;
	int small = (i - scrap)/scapacity;
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

}",1
llu744,1695027330,1,"#include <stdio.h>

int main(void)
{
    //inputs
    int large;
    int small;
    int items;
    //outputs
    int allocatedLarge;
    int allocatedSmall;
    int scrapped;
    
    //setting values
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Numer of items:\n"");
    scanf(""%d"", &items);
    
    //calculations
    allocatedLarge = items/large;
    allocatedSmall = (items%large)/small;
    scrapped = items - (allocatedLarge*large + allocatedSmall*small);
    
    //display
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", allocatedLarge, allocatedSmall, scrapped);
    
    return 0;
}
",0
llu744,1695027494,2,"#include <stdio.h>

int main(void)
{
    //inputs
    int large;
    int small;
    int items;
    //outputs
    int allocatedLarge;
    int allocatedSmall;
    int scrapped;
    
    //setting values
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    //calculations
    allocatedLarge = items/large;
    allocatedSmall = (items%large)/small;
    scrapped = items - (allocatedLarge*large + allocatedSmall*small);
    
    //display
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", allocatedLarge, allocatedSmall, scrapped);
    
    return 0;
}
",1
lmen032,1695037448,1,"#include <stdio.h>

int main (void){

    int largecap;
    int smallcap;
    int numberofitem;
    int numberoflarge;
    int numberofsmall;
    int numberofscrap;
    int i;
    

    printf(""Large capacity:    \n"");
    scanf(""%d"", &largecap);

    printf(""Small capacity:    \n"");
    scanf(""%d"", &smallcap);

    printf(""Number of items:    \n"");
    scanf(""%d"", &numberofitem);

    numberoflarge = numberofitem / largecap;
    i = numberofitem % largecap;

    numberofsmall = i / smallcap;
    i = i % smallcap;

   numberofscrap = i;

    printf(""Allocated:  \n"");
    printf("" - Large: %d\n"", numberoflarge);
    printf("" - Small: %d\n"", numberofsmall);
    printf("" - Scrap: %d\n"", numberofscrap);

    return 0;
}",1
lpry623,1695007163,1,"#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h>
int main(void)
{
    int lc, sc, n;

    printf(""Large capacity:\n"");
    scanf(""%d"", &lc);
    printf(""Small capacity:\n"");
    scanf(""%d"", &sc);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int large_containers = n / lc;
    int small_containers = (n - large_containers * lc) / sc;
    int scrapped = n - (large_containers * lc + small_containers * sc);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped);

    return 0;
}",1
lros711,1694771266,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int total;
    int large_cap;
    int large_num;
    int small_num;
    int small_cap;
    int remain;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    remain = total % large_cap;
    large_num = (total - remain) / large_cap;
    scrap = remain % small_cap;
    small_num = (remain - scrap) / small_cap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_num, small_num, scrap);


    return 0;
}

",1
lsal082,1695032434,1,"#include <stdio.h>

int main(void)
{
    int largeCapacity, large;
    int smallCapacity, small;
    int numberOfItems, scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &numberOfItems);
    
    large = numberOfItems/largeCapacity;
    small = (numberOfItems - large * largeCapacity)/smallCapacity;
    scrap = numberOfItems - small * smallCapacity - large * largeCapacity;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"",large);
    printf("" - Small: %d\n"",small);
    printf("" - Scrap: %d\n"",scrap);
    
	return 0;
}
",1
lsen376,1695033224,1,"#include <stdio.h>

int main(void)
{
    int items;
    int largeContainers;
    int largeCapacity;
    int largeLeftover;
    int smallContainers;
    int smallCapacity;
    int scrap;
    
    printf(""Large Capacity: \n"");
    scanf(""%d"", &largeCapacity);
    printf(""Small Capacity: \n"");
    scanf(""%d"", &smallCapacity); 
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    largeContainers = (int)(items / largeCapacity);
    largeLeftover = items % largeCapacity;
    smallContainers = (int)(largeLeftover / smallCapacity);
    scrap = largeLeftover % smallCapacity;

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", largeContainers, smallContainers, scrap);
    
    return 0;
}",0
lsen376,1695033251,2,"#include <stdio.h>

int main(void)
{
    int items;
    int largeContainers;
    int largeCapacity;
    int largeLeftover;
    int smallContainers;
    int smallCapacity;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity); 
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    largeContainers = (int)(items / largeCapacity);
    largeLeftover = items % largeCapacity;
    smallContainers = (int)(largeLeftover / smallCapacity);
    scrap = largeLeftover % smallCapacity;

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", largeContainers, smallContainers, scrap);
    
    return 0;
}",1
lsha172,1695037457,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int scrap;
    int items;
    int largecapa;
    int smallcapa;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapa);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapa);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    large = items/largecapa;
    small = (items - (large*largecapa))/smallcapa;
    scrap = (items - (large*largecapa)) - (small*smallcapa);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",large);
    printf("" - Small: %d\n"",small);
    printf("" - Scrap: %d\n"",scrap);

    return 0;
}
",1
lspu128,1694914898,1,"#include <stdio.h>
#include <math.h>

int main() {
    double largecapacity, smallcapacity, n;
    
    printf(""Large capacity:\n"");
    scanf(""%lf"", &largecapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%lf"", &smallcapacity);

    printf(""Number of items:\n"");
    scanf(""%lf"", &n);
    
    int Large, Small, Scrap;

    Large = (floor)(n / largecapacity);
    Small = (floor)((n - Large * largecapacity) / smallcapacity);
    Scrap = (floor)(n - Large * largecapacity - Small * smallcapacity);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);
    
    return 0;
}",1
ltan813,1695017171,1,"#include <stdio.h> 
#include <math.h>

int main(void)
{
    double LargeCapacity;
    double SmallCapacity;
    double TotalItems;
    double Allocated;
    double Large;
    double Small;
    double Scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%lf"", &LargeCapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%lf"", &SmallCapacity);
    
    printf(""Number of items:\n"");
    scanf(""%lf"", &TotalItems);
    
    Large = floor(TotalItems/LargeCapacity);
    
    Small = floor((TotalItems - Large*LargeCapacity)/SmallCapacity);
    
    Scrap = TotalItems - Large*LargeCapacity - Small*SmallCapacity;
    
    
    printf(""Allocated:\n - Large: %.0f\n - Small: %.0f\n - Scrap: %.0f"", Large, Small, Scrap);

    return 0;
}",0
ltan813,1695017281,2,"#include <stdio.h> 
#include <math.h>

int main(void)
{
    double LargeCapacity;
    double SmallCapacity;
    double TotalItems;
    double Large;
    double Small;
    double Scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%lf"", &LargeCapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%lf"", &SmallCapacity);
    
    printf(""Number of items:\n"");
    scanf(""%lf"", &TotalItems);
    
    Large = floor(TotalItems/LargeCapacity);
    
    Small = floor((TotalItems - Large*LargeCapacity)/SmallCapacity);
    
    Scrap = TotalItems - Large*LargeCapacity - Small*SmallCapacity;
    
    
    printf(""Allocated:\n - Large: %.0f\n - Small: %.0f\n - Scrap: %.0f"", Large, Small, Scrap);

    return 0;
}
",1
lvan346,1694964770,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)

{
	int largeCap;
	int smallCap;
	int Num_of_items;

	int largeContainers;
	int smallContainers;
	int amountLeft;
	int leftovers;



	//inputs
	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &Num_of_items);

	//process
	largeContainers = Num_of_items / largeCap;
	amountLeft = Num_of_items % largeCap;
	smallContainers = amountLeft / smallCap;
	leftovers = amountLeft % smallCap;

	//output
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", largeContainers);
	printf("" - Small: %d\n"", smallContainers);
	printf("" - Scrap: %d\n"", leftovers);

	return 0;
}",1
lwer802,1695035253,1,"#include <stdio.h>

int main() {
    // Variables to store capacities and the number of items
    int largeCapacity, smallCapacity, totalItems;
    int largeContainers, smallContainers, scrap;

    // Prompting the user to input values
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    printf(""\nSmall capacity:\n"");
    scanf(""%d"", &smallCapacity);
    printf(""\nNumber of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate number of containers
    largeContainers = totalItems / largeCapacity;           // Number of full large containers
    totalItems -= largeContainers * largeCapacity;          // Remaining items after filling large containers

    smallContainers = totalItems / smallCapacity;            // Number of full small containers
    totalItems -= smallContainers * smallCapacity;          // Remaining items after filling small containers

    scrap = totalItems;

    // Printing the result
    printf(""\nAllocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",0
lwer802,1695035375,2,"#include <stdio.h>

int main() {
    // Variables to store capacities and the number of items
    int largeCapacity, smallCapacity, totalItems;
    int largeContainers, smallContainers, scrap;

    // Prompting the user to input values
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate number of containers
    largeContainers = totalItems / largeCapacity;           // Number of full large containers
    totalItems -= largeContainers * largeCapacity;          // Remaining items after filling large containers

    smallContainers = totalItems / smallCapacity;            // Number of full small containers
    totalItems -= smallContainers * smallCapacity;          // Remaining items after filling small containers

    scrap = totalItems;

    // Printing the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",1
lwon290,1694924397,1,"#include <stdio.h>
#include <math.h>

int main(void)
{
	int cLarge;
	int cSmall;
	int tItems;

	int nLarge;
	int nSmall;
	int nScrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &cLarge);

	printf(""Small capacity: \n"");
	scanf(""%d"", &cSmall);

	printf(""Number of items: \n"");
	scanf(""%d"", &tItems);

	nLarge = floor(tItems / cLarge);

	tItems -= nLarge * cLarge;

	nSmall = floor(tItems / cSmall);

	tItems -= nSmall * cSmall;

	nScrap = tItems;

	printf(""Allocated: \n"");
	printf("" - Large: %d \n"", nLarge);
	printf("" - Small: %d \n"", nSmall);
	printf("" - Scrap: %d"", nScrap);
}",1
lyou975,1694830649,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h> 
#include <math.h>

int main(void)
{
    int largecapacity;
    int smallcapacity;
    int n;
    int Lboxes;
    int Sboxes;
    int scrap;
    //get large capacity from user//
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);

    //get small capacity from user//
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity);

    //get number of items from user//
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    Lboxes = floor((double)n/largecapacity);
    Sboxes = floor((double)(n%largecapacity)/smallcapacity);
    scrap = n - Lboxes*largecapacity - Sboxes*smallcapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Lboxes);
    printf("" - Small: %d\n"", Sboxes);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
mbah279,1694981934,1,"#include <stdio.h>

int main(void) {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int large_containers = total_items / large_capacity;

    int remaining_items = total_items % large_capacity;

    int small_containers = remaining_items / small_capacity;

    int scrapped_items = remaining_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",1
mbut885,1694822793,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {

    int x;
    int y;
    int z;
    int a;
    int b;
    int c;
    int d;

    printf(""Large capacity: \n"");
    scanf(""%d"", &x);
    printf(""Small capacity: \n"");
    scanf(""%d"", &y);
    printf(""Number of items: \n"");
    scanf(""%d"", &z);

    a = z / x;
    b = z - (x * a);
    c = b / y;
    d = b - (c * y);

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", a);
    printf("" - Small: %d\n"", c);
    printf("" - Scrap: %d"", d);

    return 0;
}",1
mcam799,1694953685,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largecapacity;
    int smallcapacity;
    int numberitems;

    int largecrates;
    int smallcrates;
    int remainder;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numberitems);

    largecrates = numberitems / largecapacity;
    smallcrates = (numberitems % largecapacity) / smallcapacity; 
    remainder = numberitems - (largecrates * largecapacity) - (smallcrates * smallcapacity);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecrates);
    printf("" - Small: %d\n"", smallcrates);
    printf("" - Scrap: %d\n"", remainder); 

    return 0;
}",1
mcha833,1694867601,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int large, small, total, scrap, large_box, small_box;
	printf(""Large capacity:\n"");
	scanf(""%d"", &large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &total);

	large_box = total / large;
	small_box = (total - large_box * large) / small;
	scrap = total - large_box * large - small * small_box;

	printf(""Allocated:\n"");

	printf("" - Large: %d"", large_box);
	printf("" - Small: %d"", small_box);
	printf("" - Scrap: %d"", scrap);
}",0
mcha833,1694867658,2,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int large, small, total, scrap, large_box, small_box;
	printf(""Large capacity:\n"");
	scanf(""%d"", &large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &total);

	large_box = total / large;
	small_box = (total - large_box * large) / small;
	scrap = total - large_box * large - small * small_box;

	printf(""Allocated:\n"");

	printf("" - Large: %d\n"", large_box);
	printf("" - Small: %d\n"", small_box);
	printf("" - Scrap: %d\n"", scrap);
}",1
mcha876,1695030678,1,"#include <stdio.h>

int main ()
{
    int largeCapacity;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    
    int smallCapacity;
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    
    int numberItems;
    printf(""Number of items:\n"");
    scanf(""%d"", &numberItems);
    
    int largeContainer;
    int smallContainer;
    int Scrap;
    largeContainer = numberItems / largeCapacity;
    smallContainer = 0;
    Scrap = 0;
    
    if (numberItems % largeCapacity != 0)
    { 
        largeContainer++;
        Scrap = largeCapacity - (numberItems % largeCapacity);
    }

    smallContainer = Scrap / smallCapacity;
    Scrap = Scrap % smallCapacity;


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainer);
    printf("" - Small: %d\n"", smallContainer);
    printf("" - Scrap: %d\n"", Scrap);
    
    return 0;
    
}",0
mcha876,1695032413,2,"#include <stdio.h>

int main ()
{
    int largeCapacity;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    
    int smallCapacity;
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    
    int numberItems;
    printf(""Number of items:\n"");
    scanf(""%d"", &numberItems);
    
    int largeContainer;
    int smallContainer;
    int Scrap;
    largeContainer = 0;
    smallContainer = 0;
    Scrap = 0;
    
    while (numberItems >= largeCapacity) {
        largeContainer++;
        numberItems = numberItems - largeCapacity;
    }
    
    while (numberItems >= smallCapacity) {
        smallContainer++;
        numberItems = numberItems - smallCapacity;
    }
    
    if (numberItems > 0) {
        Scrap = numberItems;
    }
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainer);
    printf("" - Small: %d\n"", smallContainer);
    printf("" - Scrap: %d\n"", Scrap);
    
    return 0;
    
}",1
mche403,1694863602,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, num_items;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);

    // Calculate the number of containers and scraps
    int large_containers = num_items / large_capacity;
    int small_containers = (num_items % large_capacity) / small_capacity;
    int scrap_items = num_items - large_containers*large_capacity- small_containers*small_capacity;

    // Display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}",1
mcro807,1695037599,1,"#include <stdio.h>

int main(void)
{
    int y;
    printf(""Large capacity:"");
    scanf(""%d"", &y);
   
    int z;
    printf(""\nSmall capacity:"");
    scanf(""%d"", &z);
    
    int x;
    printf(""\nNumber of items:"");
    scanf(""%d"", &x);

   int lc;
   lc = x / y;
  
   printf(""\nAllocated:"");
   
   printf(""\n - Large: %d"", lc);
   
        
   
    int li = (x - (lc*y));
   
    int sc;
    sc = li/z;
   
    printf(""\n - Small: %d"", sc);
    
    int s = (li - (sc*z));
    
     printf(""\n - Scrap: %d"", s);   
     
     
   return 0;
}",1
mdav506,1694770381,1,"#include <stdio.h>

int main(void)
{
	int largecap;
	int smallcap;
	int items;

	int large;
	int small;
	int scrap;

	int largeremainder;
	int smallremainder;

	printf(""Large capacity: \n"");
	scanf(""%d"", &largecap);

	printf(""Small capacity: \n"");
	scanf(""%d"", &smallcap);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	largeremainder = items % largecap;
	large = (items - largeremainder) / largecap;
	smallremainder = largeremainder % smallcap;
	small = (largeremainder - smallremainder) / smallcap;
	scrap = smallremainder;


	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d"", scrap);

	return 0;
}",1
mdea492,1694928828,1,"#include <stdio.h>
int main(void)
{printf(""Large capacity:\n"");
int lc;
int sc;
int ni;
scanf(""%d"",&lc);
printf(""Small capacity:\n"");
scanf(""%d"",&sc);
printf(""Number of items:\n"");
scanf(""%d"",&ni);

int a=(int)(ni%lc);
int b=(ni-a)/lc;

int scrap =(int)(a%sc); 

sc =(ni-scrap-b*lc)/sc;

printf(""Allocated:\n"");
printf("" - Large: %d\n"",b);
printf("" - Small: %d\n"",sc);
printf("" - Scrap: %d\n"",scrap);

return 0;
} ",1
mfle888,1694923641,1,"#include <stdio.h>

int main()
{
    int Large_Cap, Small_Cap, Total_Items, Cont_Large, Remainder, Cont_Small, Num_Scrapped;

    printf(""Large capacity:\n"");
    scanf(""%d"",&Large_Cap);

    printf(""Small capacity:\n"");
    scanf(""%d"",&Small_Cap);

    printf(""Number of items:\n"");
    scanf(""%d"",&Total_Items);

    Cont_Large = Total_Items/Large_Cap;

    Remainder = Total_Items - (Large_Cap * Cont_Large);

    Cont_Small = Remainder/Small_Cap;

    Num_Scrapped = Remainder-(Small_Cap*Cont_Small);


     printf(""Allocated: \n Large: %i\n Small: %i\n Scrap: %i\n"", Cont_Large, Cont_Small, Num_Scrapped);

    return 0;
}",0
mfle888,1694923698,2,"#include <stdio.h>

int main()
{
    int Large_Cap, Small_Cap, Total_Items, Cont_Large, Remainder, Cont_Small, Num_Scrapped;

    printf(""Large capacity:\n"");
    scanf(""%d"",&Large_Cap);

    printf(""Small capacity:\n"");
    scanf(""%d"",&Small_Cap);

    printf(""Number of items:\n"");
    scanf(""%d"",&Total_Items);

    Cont_Large = Total_Items/Large_Cap;

    Remainder = Total_Items - (Large_Cap * Cont_Large);

    Cont_Small = Remainder/Small_Cap;

    Num_Scrapped = Remainder-(Small_Cap*Cont_Small);


     printf(""Allocated: \n - Large: %i\n - Small: %i\n - Scrap: %i\n"", Cont_Large, Cont_Small, Num_Scrapped);

    return 0;
}",1
mfuj750,1694908828,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int main(void)
{
	int largeCapacity;
	int smallCapacity;
	int num;
	int large;
	int small;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCapacity);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCapacity);

	printf(""Number of items:\n"");
	scanf(""%d"", &num);

	large = num / largeCapacity;
	small = (num-large*largeCapacity) / smallCapacity;
	scrap = num - (large * largeCapacity + small * smallCapacity);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}
",1
mger154,1695014576,1,"#include <stdio.h>

// Program computes the number of large and small boxes, as well as the scrapped items, depending
// on the capacity of each box and total number of items for a shipping system.

int main(void)

{
    int large;
    int small;
    int total;
    int scrap;
    int small2;
    int large2;

    printf(""Large capactity:\n"");
    scanf(""%d"", &large);

    printf(""Small capactity:\n"");
    scanf(""%d"", &small); 
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    large2 = total/large;
    small2 = (total - (large*large2))/small;
    scrap = total - (large*large2) - (small*small2);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large2);
    printf("" - Small: %d\n"", small2);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",0
mger154,1695014592,2,"#include <stdio.h>

// Program computes the number of large and small boxes, as well as the scrapped items, depending
// on the capacity of each box and total number of items for a shipping system.

int main(void)

{
    int large;
    int small;
    int total;
    int scrap;
    int small2;
    int large2;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small); 
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    large2 = total/large;
    small2 = (total - (large*large2))/small;
    scrap = total - (large*large2) - (small*small2);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large2);
    printf("" - Small: %d\n"", small2);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",1
mgua740,1694936627,1,"#include <stdio.h>

int main()
{
	int large, small, number,numLarge,numSmall,scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"",&large);	
    printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &number);
    printf(""Allocated:\n"");
    
	numLarge = number / large;
	printf(""- Large: %d \n"", numLarge);
	numSmall = (number % large)/small;
	printf(""- Small: %d \n"", numSmall);
	scrap = (number % large)%small;
	printf(""- Scrap: %d \n"", scrap);
	return 0;
}
",0
mgua740,1694936705,2,"#include <stdio.h>

int main()
{
	int large, small, number,numLarge,numSmall,scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"",&large);	
    printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &number);
    printf(""Allocated:\n"");
    
	numLarge = number / large;
	printf("" - Large: %d \n"", numLarge);
	numSmall = (number % large)/small;
	printf("" - Small: %d \n"", numSmall);
	scrap = (number % large)%small;
	printf("" - Scrap: %d \n"", scrap);
	return 0;
}
",1
mhua821,1694959659,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large, forLarge;
    int small, forSmall;
    int total;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);
    
    forLarge = total/large;
    forSmall = (total%large)/small;
    scrap = total - (forLarge*large) - (forSmall*small);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", forLarge);
    printf("" - Small: %d\n"", forSmall);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
mjun868,1695026798,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{ 
    int x;
    int y;
    int n;
    int scrap;

    printf(""Large Capacity:"");
    scanf(""%d"", &x);
    
    printf(""Small Capacity:"");
    scanf(""%d"", &y);

    printf(""Number of items:"");
    scanf(""%d"", &n);

    int num_large = (int)floor(n/ x);

    int left_over_items = n - (num_large * x);
    
    int num_small = (int)floor(left_over_items / y);

    scrap = left_over_items - (num_small * y);
    

   printf("" Allocated: \n"");
   printf("" - Large: "");
   printf(""%d \n"", x);
   printf("" - Small: "");
   printf(""%d \n"", y);
   printf("" - Scrap: "");
   printf(""%d"", scrap);
    return 0;
}

",0
mjun868,1695026862,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{ 
    int x;
    int y;
    int n;
    int scrap;

    printf(""Large Capacity:\n"");
    scanf(""%d"", &x);
    
    printf(""Small Capacity:\n"");
    scanf(""%d"", &y);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int num_large = (int)floor(n/ x);

    int left_over_items = n - (num_large * x);
    
    int num_small = (int)floor(left_over_items / y);

    scrap = left_over_items - (num_small * y);
    

   printf("" Allocated: \n"");
   printf("" - Large: "");
   printf(""%d \n"", x);
   printf("" - Small: "");
   printf(""%d \n"", y);
   printf("" - Scrap: "");
   printf(""%d"", scrap);
    return 0;
}

",0
mjun868,1695026940,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{ 
    int x;
    int y;
    int n;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &x);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &y);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int num_large = (int)floor(n/ x);

    int left_over_items = n - (num_large * x);
    
    int num_small = (int)floor(left_over_items / y);

    scrap = left_over_items - (num_small * y);
    

   printf(""Allocated: \n"");
   printf("" - Large: "");
   printf(""%d \n"", num_large);
   printf("" - Small: "");
   printf(""%d \n"", num_small);
   printf("" - Scrap: "");
   printf(""%d"", scrap);
    return 0;
}

",1
mkab524,1695033172,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	// Author: Mohammad Tousif Kabir

	int large;
	int small;
	int items;

	int largeBoxes;
	int smallBoxesAmount;
	int smallBoxes;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small);

	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	printf(""Allocated:\n"");

	largeBoxes = items / large;

	printf("" - Large: %d\n"", largeBoxes);

	smallBoxesAmount = items % large;

	smallBoxes = smallBoxesAmount / small;

	printf("" - Small: %d\n"", smallBoxes);

	scrap = smallBoxesAmount % small;

	printf("" - Scrap: %d"", scrap);

	return 0;
}",1
mkaj411,1694859092,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int Large; 
	int modLarge;
	int Small; 
	int Scrap; 
	int Total; 
	int BigCapacity;
	int SmallCapacity; 
	printf(""Large capacity:\n"");
	scanf(""%d"", &BigCapacity);
	printf(""Small capacity:\n"");
	scanf(""%d"", &SmallCapacity);
	printf(""Number of items:\n"");
	scanf(""%d"", &Total);
	Large = Total / BigCapacity; 
	modLarge = Total % BigCapacity; 
	Small = modLarge / SmallCapacity; 
	Scrap = modLarge % SmallCapacity; 
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", Large);
	printf("" - Small: %d\n"", Small);
	printf("" - Scrap: %d"", Scrap); 
	return 0;
}",1
mket106,1694978247,1,"#include <stdio.h>

int main(void) 
{
    int large;
    int small;
    int items;
    int scrap;
    int large_cap;
    int small_cap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large_cap = items / large;
    small_cap = (items - (large * large_cap)) / small;
    scrap = (items - (large * large_cap) - (small * small_cap));

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_cap, small_cap, scrap);

    return 0;
} ",1
mkim670,1694938298,1,"#include <stdio.h>

int main(void)
{
	int largeCap, smallCap, total, largeNum, smallNum, scrap, remainder;

	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);

	printf(""Number of items:\n"");
	scanf(""%d"", &total);

	largeNum = total / largeCap;
	remainder = total - largeCap * largeNum;

	smallNum = remainder / smallCap;
	scrap = remainder - smallCap * smallNum;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", largeNum, smallNum, scrap);

	return 0;
}",1
mkim719,1695019257,1,"#include <stdio.h>
int main() 
{
    int L, S, I, NLarge, NSmall, left;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &L);
  
    printf(""Small capacity: \n"");
    scanf(""%d"", &S);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &I);
    
    NLarge = I / L;
    NSmall = (I - L*NLarge) / S;
    left = I - L*NLarge - S*NSmall;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", NLarge);
    printf("" - Small: %d\n"", NSmall);
    printf("" - Scrap: %d\n"", left);

    return 0;
}
",1
mlaw649,1695033146,1,"#include <stdio.h>

// Author: Martin Lawson

int main()
{
    
    // Collect size of big container
    int BigBox;
    printf(""Large capacity: \n"");
    scanf(""%d"", &BigBox);
    
    // Collect size of the samller container
    int SmallBox;
    printf(""Small capacity: \n"");
    scanf(""%d"", &SmallBox);
    
    // collect the total no. of items
    int ItemAmount;
    printf(""Number of items: \n"");
    scanf(""%d"", &ItemAmount);
    
    // compute the total no. of big containers
    int BigBoxAmount = ItemAmount / BigBox;
    
    // find the scraps that cant fit in large containers
    int Scraps1 = ItemAmount % BigBox;
    
    // compute the total no. of smaller containers
    int SmallBoxAmount = Scraps1 / SmallBox;
    
    // find the amount of scraps left over
    int Scraps2 = Scraps1 % SmallBox;
    
    // output the calculations with the correct spacing
    printf(""Allocated: \n"");
    printf(""  - Large: %d\n"", BigBoxAmount);
    printf(""  - Small: %d\n"", SmallBoxAmount);
    printf(""  - Scrap: %d\n"", Scraps2);
    
return 0;
}",0
mlaw649,1695033246,2,"#include <stdio.h>

// Author: Martin Lawson

int main()
{
    
    // Collect size of big container
    int BigBox;
    printf(""Large capacity: \n"");
    scanf(""%d"", &BigBox);
    
    // Collect size of the samller container
    int SmallBox;
    printf(""Small capacity: \n"");
    scanf(""%d"", &SmallBox);
    
    // collect the total no. of items
    int ItemAmount;
    printf(""Number of items: \n"");
    scanf(""%d"", &ItemAmount);
    
    // compute the total no. of big containers
    int BigBoxAmount = ItemAmount / BigBox;
    
    // find the scraps that cant fit in large containers
    int Scraps1 = ItemAmount % BigBox;
    
    // compute the total no. of smaller containers
    int SmallBoxAmount = Scraps1 / SmallBox;
    
    // find the amount of scraps left over
    int Scraps2 = Scraps1 % SmallBox;
    
    // output the calculations with the correct spacing
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", BigBoxAmount);
    printf("" - Small: %d\n"", SmallBoxAmount);
    printf("" - Scrap: %d\n"", Scraps2);
    
return 0;
}",1
mmak111,1695018936,1,"#include <stdio.h>
int main(void)
{
	int l, s, n, large, small, scrap;
	printf(""Large capacity:\n"");
	scanf(""%d"", &l);
	printf(""Small capacity:\n"");
	scanf(""%d"", &s);
	printf(""Number of items:\n"");
	scanf(""%d"", &n);
	large = n / l;
	small = (n % l) / s;
	scrap = n - ((large * l) + (small * s));
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);
	return 0;
}",1
mman402,1695017508,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large, small, totalItems;
    int largeContainer, smallContainer,itemsLeft, itemsSctapped;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    largeContainer= totalItems/large;
    itemsLeft = totalItems%large;

    smallContainer = itemsLeft/small;
    itemsSctapped = itemsLeft % small;



printf(""Allocated:\n"");
printf("" - large: %d\n"", largeContainer);
printf("" - small: %d\n"", smallContainer);
printf("" - scrap: %d\n"", itemsSctapped);

    return 0;
}

",0
mman402,1695017526,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large, small, totalItems;
    int largeContainer, smallContainer,itemsLeft, itemsSctapped;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    largeContainer= totalItems/large;
    itemsLeft = totalItems%large;

    smallContainer = itemsLeft/small;
    itemsSctapped = itemsLeft % small;



printf(""Allocated:\n"");
printf("" - Large: %d\n"", largeContainer);
printf("" - Small: %d\n"", smallContainer);
printf("" - Scrap: %d\n"", itemsSctapped);

    return 0;
}

",1
mman808,1695031849,1,"#include <stdio.h>

int main (void)
{

    int L_cap;
    int S_cap;
    int num;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &L_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &S_cap);

    printf(""Numer of items:\n"");
    scanf(""%d"", &num);

    int Large = (float) num/L_cap;
    int Large_rem = num%L_cap;
    
    int Small = (float) Large_rem/S_cap;
    int Scrap = Large_rem%S_cap;

/*Give details*/
     printf(""Large capacity:\n%d\n"", L_cap);
     printf(""Small capacity:\n%d\n"", S_cap);
     printf(""Numer of items:\n%d\n"", num);
     printf(""Allocated:\n"");
     printf("" - Large: %d\n"", Large);
     printf("" - Small: %d\n"", Small);
     printf("" - Scrap: %d\n"", Scrap);

}",0
mman808,1695031954,2,"#include <stdio.h>

int main (void)
{

    int L_cap;
    int S_cap;
    int num;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &L_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &S_cap);

    printf(""Numer of items:\n"");
    scanf(""%d"", &num);

    int Large = (float) num/L_cap;
    int Large_rem = num%L_cap;
    
    int Small = (float) Large_rem/S_cap;
    int Scrap = Large_rem%S_cap;

/*Give details*/
     printf(""Allocated:\n"");
     printf("" - Large: %d\n"", Large);
     printf("" - Small: %d\n"", Small);
     printf("" - Scrap: %d\n"", Scrap);

}",0
mman808,1695032212,3,"#include <stdio.h>

int main (void)
{

    int L_cap;
    int S_cap;
    int num;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &L_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &S_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num);

    int Large = (float) num/L_cap;
    int Large_rem = num%L_cap;
    
    int Small = (float) Large_rem/S_cap;
    int Scrap = Large_rem%S_cap;

/*Give details*/
     printf(""Allocated:\n"");
     printf("" - Large: %d\n"", Large);
     printf("" - Small: %d\n"", Small);
     printf("" - Scrap: %d\n"", Scrap);

}",1
mmas199,1695020622,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCapacity, smallCapacity, numberItems;
    int largeContainers;
    int smallContainers;
    int scrapItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numberItems);

    largeContainers = (numberItems / largeCapacity);
    numberItems = numberItems - (largeContainers * largeCapacity);

    smallContainers = (numberItems / smallCapacity);
    numberItems = numberItems - (smallContainers * smallCapacity);

    scrapItems = numberItems;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);
    return 0;
}
",1
mmca276,1694962338,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int Large;
int Small;
int Number_Items;
int Scrap;

printf(""Large capacity:\n"");
scanf(""%d"" , &Large);

printf(""Small capacity:\n"");
scanf(""%d"" , &Small);

printf(""Number of items:\n"");
scanf(""%d"" , &Number_Items);

int Boxes_Large = Number_Items/Large ;
int Small_Box = (Number_Items-(Boxes_Large*Large))/Small ;
Scrap = Number_Items - ((Boxes_Large*Large)+(Small_Box*Small));

printf(""Allocated:\n"");
printf("" - Large: %d\n - Small: %d\n - Scrap: %d"" , Boxes_Large , Small_Box , Scrap);

    return 0;
}

",1
mmcg745,1695001844,1,"#include <stdio.h>

int main(void)
{
    int large_capacity;
    int small_capacity;
    int total;
    int large;
    int small;
    int leftover;
    int large_leftpver;
    int small_leftover;
    
    
    printf(""Large capacity: \n"");
    scanf(""%i"", &large_capacity);
    
    printf(""Small capacity: \n"");
    scanf(""%i"", &small_capacity);
    
    printf(""Number of items: \n"");
    scanf(""%i"", &total);
    
    large = floor(total/large_capacity);
    
    large_leftpver = total%large_capacity;
    small = floor(large_leftpver/small_capacity);
    
    
    leftover = large_leftpver%small_capacity;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", large, small, leftover);
    
    return 0;
}
",0
mmcg745,1695002674,2,"#include <stdio.h>
#include <math.h>

int main(void)
{
    int large_capacity;
    int small_capacity;
    int total;
    int large;
    int small;
    int leftover;
    int large_leftpver;
    int small_leftover;
    
    
    printf(""Large capacity: \n"");
    scanf(""%i"", &large_capacity);
    
    printf(""Small capacity: \n"");
    scanf(""%i"", &small_capacity);
    
    printf(""Number of items: \n"");
    scanf(""%i"", &total);
    
    large = floor(total/large_capacity);
    
    large_leftpver = total%large_capacity;
    small = floor(large_leftpver/small_capacity);
    
    
    leftover = large_leftpver%small_capacity;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", large, small, leftover);
    
    return 0;
}
",0
mmcg745,1695002829,3,"#include <stdio.h>
#include <math.h>

int main(void)
{
    int large_capacity;
    int small_capacity;
    int total;
    int large;
    int small;
    int leftover;
    int large_leftpver;
    
    
    
    printf(""Large capacity: \n"");
    scanf(""%i"", &large_capacity);
    
    printf(""Small capacity: \n"");
    scanf(""%i"", &small_capacity);
    
    printf(""Number of items: \n"");
    scanf(""%i"", &total);
    
    large = floor(total/large_capacity);
    
    large_leftpver = total%large_capacity;
    small = floor(large_leftpver/small_capacity);
    
    
    leftover = large_leftpver%small_capacity;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", large, small, leftover);
    
    return 0;
}
",1
mmoh456,1694931509,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int l;
	int s;
	int scrap;
	int total;
	int large;
	int small;
	

	printf(""Large capacity:\n"");
	scanf(""%d"", &l);

	printf(""Small capacity:\n"");
	scanf(""%d"", &s);

	printf(""Number of items:\n"");
	scanf(""%d"", &total);

	large = 0;
	small = 0;
	scrap = 0;

	while (total >= l) {
		small = small + 1;
		total = total - l;
	}

		while (total >= s) {
			large = large + 1;
			total = total - s;
			
		}
		scrap = total;

	
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", small, large, scrap);

	return 0;
}




",1
mnay503,1694932213,1,"#include <stdio.h>

int main() 
{
    int large_capacity, small_capacity, total_items;
    int large_containers,small_containers,scrap_items;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    large_containers = total_items / large_capacity;

    small_containers = (total_items % large_capacity) / small_capacity;

    scrap_items = total_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}
",0
mnay503,1694993653,2,"#include <stdio.h>

int main() 
{
    int large_capacity; 
    int small_capacity;
    int total_items;
    
    int large_containers;
    int small_containers;
    int scrap_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    large_containers = total_items / large_capacity;

    small_containers = (total_items - large_containers * large_capacity) / small_capacity;

    scrap_items = (total_items - small_containers * small_capacity - large_containers * large_capacity);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}

",1
moco678,1694919950,1,"#include <stdio.h>
#include <math.h> 

int main(void)
{
    int LC;
    int SC;
    int Total;
    int NumberOfLC;
    int LeftOver;
    int L;
    int S;
    int Scrap; 
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &LC);
    printf(""Small capacity:\n"");
    scanf(""%d"", &SC);
    printf(""Number of items:\n"");
    scanf(""%d"", &Total);
    
    L = floor(Total/LC);
    
    LeftOver = Total % LC;
    
    S = floor(LeftOver/SC);
    
    Scrap = LeftOver % SC;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"",L);
    printf("" - Small: %d \n"",S);
    printf("" - Scrap: %d"",Scrap);
    return 0;
   

}",0
moco678,1694919996,2,"#include <stdio.h>
#include <math.h> 

int main(void)
{
    int LC;
    int SC;
    int Total;
  
    int LeftOver;
    int L;
    int S;
    int Scrap; 
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &LC);
    printf(""Small capacity:\n"");
    scanf(""%d"", &SC);
    printf(""Number of items:\n"");
    scanf(""%d"", &Total);
    
    L = floor(Total/LC);
    
    LeftOver = Total % LC;
    
    S = floor(LeftOver/SC);
    
    Scrap = LeftOver % SC;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"",L);
    printf("" - Small: %d \n"",S);
    printf("" - Scrap: %d"",Scrap);
    return 0;
   

}",1
mpar342,1695022835,1,"#include <stdio.h>

int main() 
{
    int large, small, items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    int large_containers = items / large;
    int small_containers = (items % large) / small;
    int scrap_items = items % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}",0
mpar342,1695023098,2,"#include <stdio.h>

int main() 
{
    int large, small, items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    int large_containers = items / large;
    int remaining_items = items % large;
    int small_containers = remaining_items / small;
    int scrap_items = remaining_items % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);

    return 0;
}",1
mpat501,1694781163,1,"#include <stdio.h>
#include <math.h>
int main(void)
{
int l, s, t ;
printf(""Large capacity: \n"");
scanf(""%i"", &l);
printf(""Small capacity: \n"");
scanf(""%i"", &s);
printf(""Number of items: \n"");
scanf(""%i"", &t);
double a, b, c, d ;
a = floor(t/l);
b = t - a*l ;
c = floor(b/s);
d = (int)b%s ;
printf(""Allocated: \n"");
printf("" - Large: %.0f \n"", a);
printf("" - Small: %.0f \n"", c);
printf("" - Scrap: %.0f \n"", d);
return 0;
}",1
mran851,1694966391,1,"#include<stdio.h>
#include<math.h>

int main(void)
{
    float large;
    float small;
    float scrap;
    float n;
    float largeBoxes;
    float smallBoxes;


    printf(""Large capacity: \n"");
    scanf(""%f"", &large);

    printf(""Small capacity: \n"");
    scanf(""%f"", &small);

    printf(""Number of items: \n"");
    scanf(""%f"", &n);

    largeBoxes = floor(n / large);


    smallBoxes = floor((n - (large * largeBoxes)) / small);

    scrap = n - (large * largeBoxes) - (small * smallBoxes);

    printf(""Allocated:\n - Large: %.0f\n - Small: %.0f\n - Scrap: %.0f\n"" , largeBoxes, smallBoxes, scrap);

    return 0;
}",1
mrog757,1694909009,1,"#include <stdio.h>

int main()
{
    int Lcap;
    int Scap;
    int items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &Lcap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Scap);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    int scrapitems = ((items) % (Lcap)) % Scap;
    int largecont = (items - (items) % (Lcap)) / Lcap;
    int smallcont = ((items) % (Lcap) - scrapitems) / Scap;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecont);
    printf("" - Small: %d\n"", smallcont);
    printf("" - Scrap: %d\n"", scrapitems);

    return 0;
}",1
mron793,1694826217,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    //Initializing vars
    int large;
    int small;
    int items;
    int numLarge;
    int numSmall;
    int scrap;

    //Inputs from user
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);


    //how many containers
    
    numLarge = items/large;

    numSmall = (items%large) / small;

    scrap = items - (numLarge*large + numSmall*small);


    //Print answer
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", numLarge,numSmall,scrap);




    return 0;
}

",1
mshi672,1694924257,1,"#include <stdio.h>
#include <math.h>

int main()
{
	double large_capacity;
	double small_capacity;
	double items;
	printf(""Large capacity:\n"");
	scanf(""%lf"", &large_capacity);
	printf(""Small capacity:\n"");
	scanf(""%lf"", &small_capacity);
	printf(""Number of items:\n"");
	scanf(""%lf"", &items);

	double how_many_in_large_boxes;
	double number_large_boxes;
	double how_many_in_small_boxes;
	double number_small_boxes;
	double How_many_scrapped;

	number_large_boxes = floor(items / large_capacity);
	how_many_in_large_boxes = number_large_boxes * large_capacity;
	
	double large_leftovers;
	large_leftovers = items - how_many_in_large_boxes;
	number_small_boxes = floor(large_leftovers / small_capacity);
	how_many_in_small_boxes = number_small_boxes * small_capacity;

	How_many_scrapped = items - how_many_in_large_boxes - how_many_in_small_boxes;

	printf(""Allocated:\n"");
	printf("" - Large: %.0lf\n"", number_large_boxes);
	printf("" - Small: %.0lf\n"", number_small_boxes);
	printf("" - Scrap: %.0lf\n"", How_many_scrapped);
	return 0;
}",1
msil440,1695032680,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Now we will calculate the number of large and small containers
    
    LargeContainers = items / largeCapacity;
    
    SmallContainers = items / smallCapacity;

    // On to calculating the number of items that will be scrapped
    
    items = items - largeCapacity * large containers;
    
    scrap = items - smallContainers * smallCapacity;

    // Displaying the results:
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", numScrappedItems);

    return 0;
}
",0
msil440,1695032987,2,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    // Calculate the number of large and small containers
    int largeContainers = items / largeCapacity;
    int smallContainers = items / smallCapacity;

    // Calculate the number of items and the items that will be scrapped
    int items = items - largeCapacity * largeContainers
    int scrappedItems = items - smallContainers * smallCapacity

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Items: %d\n"", items)
    printf("" - Scrap: %d\n"", scrappedItems);

    return 0;
}",0
msil440,1695033187,3,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large and small containers
    int numLargeContainers = totalItems / largeCapacity;
    int remainingItems = items - largeCapacity * largeContainers;
    int numSmallContainers = remainingItems / smallCapacity;

    // Calculate the number of items that will be scrapped
    int numScrappedItems = remainingItems - smallContainers * smallCapacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", numScrappedItems);

    return 0;
}
",0
msil440,1695033234,4,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large and small containers
    int numLargeContainers = totalItems / largeCapacity;
    int remainingItems = totalItems % largeCapacity;
    int numSmallContainers = remainingItems / smallCapacity;

    // Calculate the number of items that will be scrapped
    int numScrappedItems = remainingItems % smallCapacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", numScrappedItems);

    return 0;
}
",1
msin609,1694843629,1,"#include <stdio.h> 
int main(void) 
{ 
	int(items);
	int(largeCap);
	int(smallCap);
	int(scrap);
	int(numLarge);
	int(numSmall);
	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &items);
	numLarge = items / largeCap;
	scrap = items % largeCap;
	numSmall = scrap / smallCap;
	scrap = scrap % smallCap;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", numLarge);
	printf("" - Small: %d\n"", numSmall);
	printf("" - Scrap: %d\n"",scrap);
	return 0;
}",1
msu975,1694933465,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)

{
	int large;
	int largeinitial;
	int largeamount;
	int i1;
	int leftoverfromlarge;

	int small;
	int smallinitial;
	int smallamount;
	int i2;
	int leftoverfromsmall;

	int amount;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%i"", &large);

	printf(""Small capacity:\n"");
	scanf(""%i"", &small);

	printf(""Number of items:\n"");
	scanf(""%i"", &amount);

	largeinitial = large;

	i1 = 1;
	while (large < amount) {
		large = large + largeinitial;
		i1 = i1 + 1;
		if (large > amount) {
			large = large - largeinitial;
			i1 = i1 - 1;
			break;
		}
	}

	leftoverfromlarge = amount - large;
	largeamount = i1;

	smallinitial = small;
	
	i2 = 1;
	while (small < leftoverfromlarge) {
		small = small + smallinitial;
		i2 = i2 + 1;
		if (small > leftoverfromlarge) {
			small = small - smallinitial;
			i2 = i2 - 1;
			break;
		}
	}

	leftoverfromsmall = small - leftoverfromlarge;
	smallamount = i2;

	scrap = amount - small - large;

	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", largeamount, smallamount, scrap);

	return 0;
}",0
msu975,1694933564,2,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)

{
	int large;
	int largeinitial;
	int largeamount;
	int i1;
	int leftoverfromlarge;

	int small;
	int smallinitial;
	int smallamount;
	int i2;

	int amount;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%i"", &large);

	printf(""Small capacity:\n"");
	scanf(""%i"", &small);

	printf(""Number of items:\n"");
	scanf(""%i"", &amount);

	largeinitial = large;

	i1 = 1;
	while (large < amount) {
		large = large + largeinitial;
		i1 = i1 + 1;
		if (large > amount) {
			large = large - largeinitial;
			i1 = i1 - 1;
			break;
		}
	}

	leftoverfromlarge = amount - large;
	largeamount = i1;

	smallinitial = small;
	
	i2 = 1;
	while (small < leftoverfromlarge) {
		small = small + smallinitial;
		i2 = i2 + 1;
		if (small > leftoverfromlarge) {
			small = small - smallinitial;
			i2 = i2 - 1;
			break;
		}
	}

	smallamount = i2;

	scrap = amount - small - large;

	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", largeamount, smallamount, scrap);

	return 0;
}",0
msu975,1694934308,3,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)

{
	int large;
	int largeinitial;
	int largeamount;
	int i1;
	int leftoverfromlarge;

	int small;
	int smallinitial;
	int smallamount;
	int i2;

	int amount;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%i"", &large);

	printf(""Small capacity:\n"");
	scanf(""%i"", &small);

	printf(""Number of items:\n"");
	scanf(""%i"", &amount);

	largeinitial = large;

	i1 = 1;
	while (large < amount) {
		large = large + largeinitial;
		i1 = i1 + 1;
		if (large > amount) {
			large = large - largeinitial;
			i1 = i1 - 1;
			break;
		}
	}

	if (large > amount) {
		large = 0;
		i1 = 0;
	}


	leftoverfromlarge = amount - large;
	largeamount = i1;

	smallinitial = small;
	
	i2 = 1;
	while (small < leftoverfromlarge) {
		small = small + smallinitial;
		i2 = i2 + 1;
		if (small > leftoverfromlarge) {
			small = small - smallinitial;
			i2 = i2 - 1;
			break;
		}
	}

	if (small > amount) {
		small = 0;
		i2 = 0;
	}

	smallamount = i2;

	scrap = amount - small - large;

	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", largeamount, smallamount, scrap);

	return 0;
}",0
msu975,1694934918,4,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)

{
	int large;
	int largeinitial;
	int largeamount;
	int i1;
	int leftoverfromlarge;

	int small;
	int smallinitial;
	int smallamount;
	int i2;

	int amount;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%i"", &large);

	printf(""Small capacity:\n"");
	scanf(""%i"", &small);

	printf(""Number of items:\n"");
	scanf(""%i"", &amount);

	largeinitial = large;

	i1 = 1;
	while (large <= amount) {
		large = large + largeinitial;
		i1 = i1 + 1;
		if (large > amount) {
			large = large - largeinitial;
			i1 = i1 - 1;
			break;
		}
	}

	if (large > amount) {
		large = 0;
		i1 = 0;
	}


	leftoverfromlarge = amount - large;
	largeamount = i1;

	smallinitial = small;
	
	i2 = 1;
	while (small <= leftoverfromlarge) {
		small = small + smallinitial;
		i2 = i2 + 1;
		if (small > leftoverfromlarge) {
			small = small - smallinitial;
			i2 = i2 - 1;
			break;
		}
	}

	if (small > leftoverfromlarge) {
		small = 0;
		i2 = 0;
	}

	smallamount = i2;

	scrap = amount - small - large;

	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", largeamount, smallamount, scrap);

	return 0;
}",1
msuv992,1695012444,1,"#include <stdio.h>

int main(void)
{
  int large;
  int small;
  int num;
  int newlarge;
  int newsmall;
  int scrap;
  
  
  printf(""Large capacity: \n"");
  scanf(""%d"", &large);
  
  printf(""Small capacity: \n"");
  scanf(""%d"", &small);
  
  printf(""Number of items: \n"");
  scanf(""%d"", &num);
  
  newlarge = num/large;
  newsmall = (num - (newlarge*large))/small;
  scrap = num - (newsmall*small) - (newlarge*large);
   
  printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d \n"", newlarge, newsmall, scrap);
 
  return 0;
}",1
mtam709,1695020099,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
    int largeCapacity;
    int smallCapacity;
    int items;
    int large;
    int small;
    int scrap;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);
    
    printf(""Small capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:"");
    scanf(""%d"", &items);

    large = items / largeCapacity;

    scrap = items % largeCapacity;
    small = scrap / smallCapacity;

    scrap = scrap % smallCapacity;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}
",0
mtam709,1695020178,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
    int largeCapacity;
    int smallCapacity;
    int items;
    int large;
    int small;
    int scrap;

    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);
    
    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallCapacity);

    printf(""\nNumber of items:"");
    scanf(""%d"", &items);

    large = items / largeCapacity;

    scrap = items % largeCapacity;
    small = scrap / smallCapacity;

    scrap = scrap % smallCapacity;

    printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}
",1
mtha724,1694842179,1,"#include <stdio.h>
int main(void)
{
    int large;
    int small;
    int items;

    printf(""Large capacity: "");
    scanf(""%d"", &large);

    printf(""\nSmall capacity: "");
    scanf(""%d"", &small);

    printf(""\nNumber of items: "");
    scanf(""%d"", &items);

    int amountlarge = (items - (items % large))/large;
    int amountsmall = ((items - (amountlarge*large)) - ((items - (amountlarge*large)) % small))/small;
    int scrap = items - (amountsmall*small) - (amountlarge*large);

    printf(""\nAllocated:\n - Large: %d"", amountlarge);
    printf(""\n - Small: %d"", amountsmall);
    printf(""\n - Scrap: %d"", scrap);
}",1
nalg484,1694993197,1,"#include <stdio.h>
intmain() {
    int large, small, total;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capactiy: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &total);
    int Large = total / large;
    int Scrap = total % large;
    int Small = Scrap / small;
    int Scrapped = Scrap % small;
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Large, Small, Scrapped);
    return 0;
}",0
nalg484,1694993206,2,"#include <stdio.h>
int main() {
    int large, small, total;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capactiy: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &total);
    int Large = total / large;
    int Scrap = total % large;
    int Small = Scrap / small;
    int Scrapped = Scrap % small;
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Large, Small, Scrapped);
    return 0;
}",0
nalg484,1694993225,3,"#include <stdio.h>
int main() {
    int large, small, total;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    printf(""Number of items: \n"");
    scanf(""%d"", &total);
    int Large = total / large;
    int Scrap = total % large;
    int Small = Scrap / small;
    int Scrapped = Scrap % small;
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Large, Small, Scrapped);
    return 0;
}",1
nask472,1694870928,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Lcap;
    int Scap;
    int n;

    printf(""Large capacity: \n"");
    scanf(""%d"", &Lcap);

    printf(""Small capacity: \n"");
    scanf(""%d"", &Scap);

    printf(""Number of items: \n"");
    scanf(""%d"", &n);

    printf(""Allocated: \n"");
    int Large;
    int Small;
    int Scrap;
    int remainder;

   Large=floor(n/Lcap);

   remainder= n-(Lcap*Large);
   Small= floor(remainder/Scap) ;

   Scrap= remainder - (Scap*Small);

    printf(""- Large: %d \n"", Large);
    printf(""- Small: %d \n"", Small);
    printf(""- Scrap: %d \n"", Scrap );

    return 0;
}

",0
nask472,1694871762,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    int Lcap;
    int Scap;
    int n;

    printf(""Large capacity: \n"");
    scanf(""%d"", &Lcap);

    printf(""Small capacity: \n"");
    scanf(""%d"", &Scap);

    printf(""Number of items: \n"");
    scanf(""%d"", &n);

    printf(""Allocated: \n"");
    int Large;
    int Small;
    int Scrap;
    int remainder;

   Large=(int)floor((double)n/Lcap);

   remainder= n-(Lcap*Large);
   Small= (int)floor((double)remainder/Scap) ;

   Scrap= remainder - (Scap*Small);

    printf(""- Large: %d \n"", Large);
    printf(""- Small: %d \n"", Small);
    printf(""- Scrap: %d \n"", Scrap );

    return 0;
}

",0
nask472,1694872317,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    int Lcap;
    int Scap;
    int n;

    printf(""Large capacity: \n"");
    scanf(""%d"", &Lcap);

    printf(""Small capacity: \n"");
    scanf(""%d"", &Scap);

    printf(""Number of items: \n"");
    scanf(""%d"", &n);

    printf(""Allocated: \n"");
    int Large;
    int Small;
    int Scrap;
    int remainder;

   Large=(int)floor((double)n/Lcap);

   remainder= n-(Lcap*Large);
   Small= (int)floor((double)remainder/Scap) ;

   Scrap= remainder - (Scap*Small);

    printf("" - Large: %d \n"", Large);
    printf("" - Small: %d \n"", Small);
    printf("" - Scrap: %d \n"", Scrap );

    return 0;
}

",1
ncha509,1694780045,1,"#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h>

int main()
{
    int large_cap;
    printf(""Large capacity:\n"");
    scanf(""%i"",&large_cap);
    
    int small_cap;
    printf(""Small capacity:\n"");
    scanf(""%i"",&small_cap);
    
    int number_of_items;
    printf(""Number of items:\n"");
    scanf(""%i"",&number_of_items);
    
    int large;
    int small;
    int scrap;
    
    large=number_of_items/large_cap;
    small=(number_of_items%large_cap)/small_cap;
    scrap=(number_of_items%large_cap)%small_cap;
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",large,small,scrap);
    return 0;
}",1
ndas832,1694866842,1,"#include <stdio.h>

int main()
{
    int largecapacity; 
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity); 
    
    int smallcapacity; 
    printf(""Small capacity:\n""); 
    scanf(""%d"", &smallcapacity); 
    
    int items; 
    printf(""Number of items:\n""); 
    scanf(""%d"", &items); 
    
    int numLarge;  
    numLarge = items/largecapacity;
     
    int remainingItems; 
    remainingItems = items % largecapacity; 
    
    int numSmall; 
    numSmall = remainingItems/ smallcapacity;
    
    int scrapItems; 
    scrapItems = remainingItems % smallcapacity; 
    
    printf(""Allocated:\n""); 
    printf("" - Large: %d\n"", numLarge); 
    printf("" - Small: %d\n"", numSmall); 
    printf("" - Scrap: %d\n"", scrapItems); 
    
    return 0;
}
",1
ndso791,1694844545,1,"#include <stdio.h>
#include <math.h>

int main(void)
{
	double L;
	double S;
	double I;
	int cL = 0;
	int cS = 0;

	printf(""Large capacity: \n"");
	scanf(""%lf"", &L);
	printf(""Small capacity: \n"");
	scanf(""%lf"", &S);
	printf(""Number of items: \n"");
	scanf(""%lf"", &I);

	int i = floor(I / L);
	int c;

	for (c = 1; c <= i; ++c) {
		cL++;
	}

	int j = floor((I - (cL * L)) / S);

	for (c = 1; c <= j; ++c) {
		cS++;
	}

	double X = I - (cL * L) - (cS * S);

	printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %.0f"", cL, cS, X);
	return 0;
}",1
ngan146,1695030639,1,"#include <stdio.h>

int main()
{
    int Lc =0;
    int Sc=0;
    int items=0;
    int scrap=0;
    int large =0;
    int small = 0;

    printf(""Large Capacity: \n"");
    scanf(""%d"", &Lc);


    printf(""Small Capacity: \n"");
    scanf(""%d"", &Sc);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    scrap = items % Lc;
    items = items - scrap;

    large = items / Lc;

    items = scrap;
    scrap = scrap % Sc;
    items = items - scrap;

    small = items/ Sc;

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", large, small, scrap); 
   
    return 0;
}",0
ngan146,1695030658,2,"#include <stdio.h>

int main()
{
    int Lc =0;
    int Sc=0;
    int items=0;
    int scrap=0;
    int large =0;
    int small = 0;

    printf(""Large capacity: \n"");
    scanf(""%d"", &Lc);


    printf(""Small capacity: \n"");
    scanf(""%d"", &Sc);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    scrap = items % Lc;
    items = items - scrap;

    large = items / Lc;

    items = scrap;
    scrap = scrap % Sc;
    items = items - scrap;

    small = items/ Sc;

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", large, small, scrap); 
   
    return 0;
}",1
ngna565,1694962519,1,"#include <stdio.h>

int main()

{
    
    int L;
    int S;
    int N;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &L);
    printf(""Small capacity: \n"");
    scanf(""%d"", &S);
    printf(""Number of items: \n"");
    scanf(""%d"", &N);
    
    int allocated_large = N / L; 
    
    int allocated_small = (N % L)/ S;
    
    scrap = N - allocated_large*L - allocated_small*S; 
    
    printf(""Allocated: \n"");
    printf(""- Large: %d \n"", allocated_large);
    printf(""- Small: %d \n"", allocated_small);
    printf(""- Scrap: %d \n"", scrap);
    
    return 0;
}
",0
ngna565,1694962555,2,"#include <stdio.h>

int main()

{
    
    int L;
    int S;
    int N;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &L);
    printf(""Small capacity: \n"");
    scanf(""%d"", &S);
    printf(""Number of items: \n"");
    scanf(""%d"", &N);
    
    int allocated_large = N / L; 
    
    int allocated_small = (N % L)/ S;
    
    scrap = N - allocated_large*L - allocated_small*S; 
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", allocated_large);
    printf("" - Small: %d \n"", allocated_small);
    printf("" - Scrap: %d \n"", scrap);
    
    return 0;
}
",1
nhua986,1694938626,1,"#include <stdio.h>

int main()
{
    int L;
    int S;
    int I;
    int AL;
    int AS;
    int AI;
    
    printf(""Large capacity: \n"");
    printf(""\033[1m\033[31m"");
    scanf(""%d"", &L);
    printf(""\033[0m"");
    
    printf(""Small capacity: \n"");
    printf(""\033[1m\033[31m"");
    scanf(""%d"", &S);
    printf(""\033[0m"");
    
    printf(""Number of items: \n"");
    printf(""\033[1m\033[31m"");
    scanf(""%d"", &I);
    printf(""\033[0m"");
    
    AL = I % L;
    AS = AL / S;
    AI = AL % S;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", I / L);
    printf("" - Small: %d\n"", AS);
    printf("" - Scrap: %d\n"", AI);
}",0
nhua986,1694938823,2,"#include <stdio.h>

int main()
{
    int L;
    int S;
    int I;
    int AL;
    int AS;
    int AI;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &L);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &S);

    printf(""Number of items: \n"");
    scanf(""%d"", &I);
    
    AL = I % L;
    AS = AL / S;
    AI = AL % S;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", I / L);
    printf("" - Small: %d\n"", AS);
    printf("" - Scrap: %d\n"", AI);
}",1
nhut042,1695006818,1,"
/*Author: Nicholas Hutt*/

#include <stdio.h>

int main(void)
{
    
    
    int large;
    int small;
    int items;
    int largecount;
    int smallcount;
    int scrapcount;


    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
       
    largecount = items / large;
    
    items = items - (large * largecount);
    
    smallcount = items / small;
    
    scrapcount = items - (small * smallcount);
    
    
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largecount, smallcount ,scrapcount);
    return 0;

}

",1
nlal162,1695020738,1,"#include <stdio.h>


int main() {
    int largecapacity;
    int smallcapacity;
    int Items;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &Items);
    
    int largecontainers;
    int smallcontainers;
    int scrapitems;

    largecontainers = Items / largecapacity;  
    smallcontainers = (Items % largecapacity) / smallcapacity;  
    scrapitems = (Items % largecapacity) % smallcapacity;  
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers);
    printf("" - Small: %d\n"", smallcontainers);
    printf("" - Scrap: %d\n"", scrapitems);

    return 0;
}",1
nmah920,1695011465,1,"#include <stdio.h>

int main()
{
   int large_cap;
   int small_cap;
   int num;
   int scrap;
    
   printf(""Large capacity:\n"");
   scanf(""%d"", &large_cap);
   
   printf(""Small capacity:\n"");
   scanf(""%d"", &small_cap);
   
   printf(""Number of items:\n"");
   scanf(""%d"", &num);
   
   int num_large = num / large_cap;
   int num_small = (num - large_cap * num_large) / small_cap;
   
   scrap = num - large_cap * num_large - small_cap * num_small;
    
   printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", num_large, num_small, scrap);

    return 0;
}",1
nqua370,1695036818,1,"#include <stdio.h>


int main(void)
{
	int LargeCapacity;
	int SmallCapacity;
	int NumberOfItems;

	printf(""Large capacity:\n"");
	scanf(""%d"", &LargeCapacity);

	printf(""Small capacity:\n"");
	scanf(""%d"", &SmallCapacity);

	printf(""Number of items:\n"");
	scanf(""%d"", &NumberOfItems);

	int Large = 0;
	int Small = 0;
	int Scrap = 0;

	while (NumberOfItems >= LargeCapacity) {
		Large++;
		NumberOfItems = NumberOfItems - LargeCapacity;
	}

	while (NumberOfItems >= SmallCapacity) {
		Small++;
		NumberOfItems = NumberOfItems - SmallCapacity;
	}

	if (NumberOfItems > 0) {
		Scrap = NumberOfItems;
	}

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", Large);
	printf("" - Small: %d\n"", Small);
	printf("" - Scrap: %d\n"", Scrap);

	return 0;
}",1
nren130,1694926912,1,"#include <stdio.h>

int main()
{
int large_capacity;
int small_capacity;
int number_of_items;

printf(""Large capacity: \n"");
scanf(""%d"", &large_capacity);
printf(""Small capacity: \n"");
scanf(""%d"", &small_capacity);
printf(""Number of items: \n"");
scanf(""%d"", &number_of_items);
int large_boxes = (number_of_items/large_capacity);
int large_leftover = number_of_items % large_capacity;
int small_boxes = large_leftover / small_capacity;
int discarded_items = large_leftover % small_capacity;

printf(""Allocated: \n"");
printf("" - Large: %d\n"", large_boxes);
printf("" - Small: %d\n"", small_boxes);
printf("" - Scrap: %d"", discarded_items);


    return 0;
}
",1
nrub019,1694838126,1,"#include <stdio.h>

int main(void) {

    int largesize;
    int smallsize;
    int n;
    int largeboxes;
    int smallboxes;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"",&largesize);

    printf(""Small capacity:\n"");
    scanf(""%d"",&smallsize);

    printf(""Number of items:\n"");
    scanf(""%i"", &n);

    //calculate large boxes

    largeboxes = (n - n%largesize)/largesize;
    n = n - (largeboxes*largesize);
    //calculate small boxes
    smallboxes = (n - n%smallsize)/smallsize;
    scrap = n - (smallboxes*smallsize);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largeboxes,smallboxes,scrap);
    //calculate scrapped

    return(0);
}
",1
nthe160,1694927130,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int LargeCap;
	int SmallCap;
	int NumItems;
	int Large;
	int Small;
	int Scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &LargeCap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &SmallCap);

	printf(""Number of items:\n"");
	scanf(""%d"", &NumItems);

	Large = NumItems / LargeCap;

	Small = (NumItems - (Large * LargeCap)) / SmallCap;

	Scrap = (NumItems - (Large * LargeCap)) % SmallCap;
	
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);
	
	return 0;
}",1
ntia856,1694875153,1,"#include <stdio.h>

int main(void)
{
    int large;  
    int small;  
    int items;  
    int large_containers;
    int remaining_items;
    int small_containers;  
    int scrapped_items;   

    printf(""Large capacity: "");
    scanf(""%d"", &large);

    printf(""Small capacity: "");
    scanf(""%d"", &small);

    printf(""Number of items: "");
    scanf(""%d"", &items);

    large_containers = items / large;
    remaining_items = items % large;

    small_containers = remaining_items / small;
    scrapped_items = remaining_items % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}",0
ntia856,1694875222,2,"#include <stdio.h>

int main(void)
{
    int large;  
    int small;  
    int items;  
    int large_containers;
    int remaining_items;
    int small_containers;  
    int scrapped_items;   

    printf(""Large capacity: \n"");
    scanf(""%d"", &large);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    large_containers = items / large;
    remaining_items = items % large;

    small_containers = remaining_items / small;
    scrapped_items = remaining_items % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}",1
nwei818,1694769778,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {
	
	int large, small, total;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    int LC = total / large;
    int SC = (total - large*LC) / small;
    int scrap = total - (large * LC + small * SC);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", LC);
    printf("" - Small: %d\n"", SC);
    printf("" - Scrap: %d\n"", scrap);

	return 0;
}

",1
nwil850,1695016743,1,"/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int main()
{
    int large_capacity;
    int small_capacity;
    int scrap;
    int items;
    int number_large_containers;
    int number_small_containers;
    
    printf(""Large capacity: "");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity: "");
    scanf(""%d"", &small_capacity);
    printf(""Number of items: "");
    scanf(""%d"", &items);
    
    number_large_containers = items/large_capacity;
    number_small_containers = ((items - (number_large_containers * large_capacity)) / small_capacity);
    scrap = (items - (number_large_containers * large_capacity)) - (number_small_containers * small_capacity);
   
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", number_large_containers);
    printf("" - Small: %d\n"", number_small_containers);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
}
",0
nwil850,1695016776,2,"/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int main()
{
    int large_capacity;
    int small_capacity;
    int scrap;
    int items;
    int number_large_containers;
    int number_small_containers;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity: \n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    number_large_containers = items/large_capacity;
    number_small_containers = ((items - (number_large_containers * large_capacity)) / small_capacity);
    scrap = (items - (number_large_containers * large_capacity)) - (number_small_containers * small_capacity);
   
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", number_large_containers);
    printf("" - Small: %d\n"", number_small_containers);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
}
",1
nyua944,1694916158,1,"#include <stdio.h>

int main() {
    int capL;
    int capS;
    int items;
    int L = 0;
    int S = 0;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &capL);
    printf(""Small capacity:\n"");
    scanf(""%d"", &capS);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    while (items > 0) {
        if (items - capL >= 0) {
            items = items - capL;
            L = L + 1;
        } else {
            break;
        }
    }
    
    while (items > 0) {
        if (items - capS >= 0) {
            items = items - capS;
            S = S + 1;
        } else {
            break;
        }
    }
    
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", L, S, items);
}",1
obar199,1695032180,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int b;
	int s;
	int a;

	
	
	

	printf(""Large capacity: \n"");
	scanf(""%d"", &b);

	printf(""Small capacity: \n"");
	scanf(""%d"", &s);

	printf(""Number of items: \n"");
	scanf(""%d"", &a);

	int B = a / b;
	int S = (a % b) / s;
	int R = (a % b) % s;


	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", B,S,R);
	return 0;
}",1
ogab251,1695029436,1,"#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int TotalItems;
    int LargeContainers;
    int SmallContainers;
    int ItemsScrapped;
    
    printf(""Large capacity:"");
    scanf(""%d"", &LargeCapacity);
        
    printf(""\nSmall capacity:"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &TotalItems);
        
    LargeContainers = TotalItems / LargeCapacity;
    SmallContainers = ((TotalItems % LargeCapacity) / SmallCapacity);
    ItemsScrapped = TotalItems % SmallCapacity;
    
    printf(""Allocated:"");
    printf(""\n - Large: %d"", LargeContainers);
    printf(""\n - Small: %d"", SmallContainers);
    printf(""\n - Scrap: %d"", ItemsScrapped);

    return 0;
}
",0
ogab251,1695029477,2,"#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int TotalItems;
    int LargeContainers;
    int SmallContainers;
    int ItemsScrapped;
    
    printf(""Large capacity:"");
    scanf(""%d"", &LargeCapacity);
        
    printf(""\nSmall capacity:"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &TotalItems);
        
    LargeContainers = TotalItems / LargeCapacity;
    SmallContainers = ((TotalItems % LargeCapacity) / SmallCapacity);
    ItemsScrapped = TotalItems % SmallCapacity;
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", LargeContainers);
    printf(""\n - Small: %d"", SmallContainers);
    printf(""\n - Scrap: %d"", ItemsScrapped);

    return 0;
}
",0
ogab251,1695031765,3,"int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int TotalItems;
    int LargeContainers;
    int SmallContainers;
    int Capacity;
    int ItemsScrapped;
    
    printf(""Large capacity:"");
    scanf(""%d"", &LargeCapacity);
        
    printf(""\nSmall capacity:"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &TotalItems);
        
    LargeContainers = TotalItems / LargeCapacity;
    SmallContainers = ((TotalItems % LargeCapacity) / SmallCapacity);
    Capacity = (LargeContainers * LargeCapacity) + (SmallContainers * SmallCapacity);
    ItemsScrapped = TotalItems % Capacity;
    
    printf(""Allocated:"");
    printf(""\n - Large: %d"", LargeContainers);
    printf(""\n - Small: %d"", SmallContainers);
    printf(""\n - Scrap: %d"", ItemsScrapped);

    return 0;
}",0
ogab251,1695031812,4,"#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int TotalItems;
    int LargeContainers;
    int SmallContainers;
    int Capacity;
    int ItemsScrapped;
    
    printf(""Large capacity:"");
    scanf(""%d"", &LargeCapacity);
        
    printf(""\nSmall capacity:"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &TotalItems);
        
    LargeContainers = TotalItems / LargeCapacity;
    SmallContainers = ((TotalItems % LargeCapacity) / SmallCapacity);
    Capacity = (LargeContainers * LargeCapacity) + (SmallContainers * SmallCapacity);
    ItemsScrapped = TotalItems % Capacity;
    
    printf(""Allocated:"");
    printf(""\n - Large: %d"", LargeContainers);
    printf(""\n - Small: %d"", SmallContainers);
    printf(""\n - Scrap: %d"", ItemsScrapped);

    return 0;
}",0
ogab251,1695031841,5,"#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int TotalItems;
    int LargeContainers;
    int SmallContainers;
    int Capacity;
    int ItemsScrapped;
    
    printf(""Large capacity:"");
    scanf(""%d"", &LargeCapacity);
        
    printf(""\nSmall capacity:"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &TotalItems);
        
    LargeContainers = TotalItems / LargeCapacity;
    SmallContainers = ((TotalItems % LargeCapacity) / SmallCapacity);
    Capacity = (LargeContainers * LargeCapacity) + (SmallContainers * SmallCapacity);
    ItemsScrapped = TotalItems % Capacity;
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", LargeContainers);
    printf(""\n - Small: %d"", SmallContainers);
    printf(""\n - Scrap: %d"", ItemsScrapped);

    return 0;
}",0
ogab251,1695032100,6,"#include <stdio.h>

int main(void)
{
    int LargeCapacity;
    int SmallCapacity;
    int TotalItems;
    int LargeContainers;
    int SmallContainers;
    int Capacity;
    int ItemsScrapped;
    
    printf(""Large capacity:"");
    scanf(""%d"", &LargeCapacity);
        
    printf(""\nSmall capacity:"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""\nNumber of items:"");
    scanf(""%d"", &TotalItems);
        
    LargeContainers = TotalItems / LargeCapacity;
    SmallContainers = ((TotalItems % LargeCapacity) / SmallCapacity);
    Capacity = (LargeContainers * LargeCapacity) + (SmallContainers * SmallCapacity);
    ItemsScrapped = TotalItems - Capacity;
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", LargeContainers);
    printf(""\n - Small: %d"", SmallContainers);
    printf(""\n - Scrap: %d"", ItemsScrapped);

    return 0;
}",1
ogan176,1694836148,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;
    int largeContainers, smallContainers, scrapItems;

    // Ask for user inputs
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    largeContainers = totalItems / largeCapacity;
    totalItems = totalItems % largeCapacity; 
    
    smallContainers = totalItems / smallCapacity;
    totalItems = totalItems % smallCapacity;

    scrapItems = totalItems;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}
",1
oguo680,1694924177,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int capacity_l;
    int capacity_s;
    int items;
    printf(""Large capacity: \n"");
    scanf(""%d"", &capacity_l);
    printf(""Small capacity: \n"");
    scanf(""%d"", &capacity_s);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    int large_containers;
    int small_containers;
    int items_remaining;
    int items_remaining_2;
    items_remaining = items % capacity_l;
    large_containers = (items - items_remaining)/capacity_l;
    
    items_remaining_2 = items_remaining % capacity_s;
    small_containers = (items_remaining - items_remaining_2)/capacity_s;
    
    printf(""Allocated:\n-Large: %d\n-Small: %d\n-Scrap: %d"", large_containers, small_containers, items_remaining_2);
    
    return 0;
}",0
oguo680,1694924218,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int capacity_l;
    int capacity_s;
    int items;
    printf(""Large capacity: \n"");
    scanf(""%d"", &capacity_l);
    printf(""Small capacity: \n"");
    scanf(""%d"", &capacity_s);
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    int large_containers;
    int small_containers;
    int items_remaining;
    int items_remaining_2;
    items_remaining = items % capacity_l;
    large_containers = (items - items_remaining)/capacity_l;
    
    items_remaining_2 = items_remaining % capacity_s;
    small_containers = (items_remaining - items_remaining_2)/capacity_s;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large_containers, small_containers, items_remaining_2);
    
    return 0;
}",1
oko158,1694836542,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large, small, items;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	int LargeAllocated, SmallAllocated, ScrapAllocated;
	LargeAllocated = items / large; 
	SmallAllocated = ((items%large))/small;
	ScrapAllocated = (items%large)%small;

	printf(""Allocated:\n \- Large: %d\n\ - Small: %d\n - Scrap: %d"", LargeAllocated, SmallAllocated, ScrapAllocated);
	
	return 0;
}",0
oko158,1694837303,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large, small, items;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	int LargeAllocated, SmallAllocated, ScrapAllocated;
	LargeAllocated = items / large; 
	SmallAllocated = ((items%large))/small;
	ScrapAllocated = (items%large)%small;
	
	printf(""Allocated:\n"");
	printf(""\ - Large: %d\n"", LargeAllocated);
	printf(""\ - Small: %d\n"", SmallAllocated);
	printf(""\ - Scrap: %d"", ScrapAllocated);
	
	return 0;
}",0
oko158,1694853472,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large, small, items;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	int LargeAllocated, SmallAllocated, ScrapAllocated;
	LargeAllocated = items / large;
	SmallAllocated = ((items % large)) / small;
	ScrapAllocated = (items % large) % small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", LargeAllocated);
	printf("" - Small: %d\n"", SmallAllocated);
	printf("" - Scrap: %d\n"", ScrapAllocated);

	return 0;
}",1
onic423,1695036574,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
int largeCapacity, smallCapacity, numItems;

    // Asks for the maximum potential capacity of the large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    // Asks for the maximum potential capacity of the small container
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    // Asks for the total number of items to be packed
    printf(""Number of items:\n"");
    scanf(""%d"", &numItems);

    // Calculates the number of each container requred
    int numLargeContainers = numItems / largeCapacity;
    int numSmallContainers = 0;
    int scrap = 0;

    // Calculates the number of leftover items
    int remainingItems = numItems % largeCapacity;
    if (remainingItems > 0) {
        numSmallContainers = remainingItems / smallCapacity;
        scrap = remainingItems % smallCapacity;
    }

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrap);
    return 0;
}",1
opat597,1695014425,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largecap, smallcap, items, large, small, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largecap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcap);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);


    large = items/largecap;
    small = (items % largecap) / smallcap;
    scrap = (items % largecap) - (small * smallcap);

    printf(""Allocated: \n - Large: %d\n - Small %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}

",0
opat597,1695014509,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largecap, smallcap, items, large, small, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largecap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcap);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);


    large = items/largecap;
    small = (items % largecap) / smallcap;
    scrap = (items % largecap) - (small * smallcap);

    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}

",1
opre469,1694956190,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	/*defining large container capacity as a integer*/
	int(LargeCap);

	/*Finding the large container capacity from an input*/
	printf(""Large capacity:\n"");
	scanf(""%d"", &LargeCap);

	/*defining small container capacity as a integer*/
	int(SmallCap);

	/*Finding the small container capacity from an input*/
	printf(""Small capacity:\n"");
	scanf(""%d"", &SmallCap);

	/*defining the number of items as an integer*/
	int(Items);

	/*finding the number of items in an order from an input*/
	printf(""Number of items:\n"");
	scanf(""%d"", &Items);

	/*defining the large container allocation as an integer*/
	int(LargeAlloc);

	/*finding the number of large containers needed*/
	LargeAlloc = Items / LargeCap;

	/*defining the small container allocation as an integer*/
	int(SmallAlloc);

	/*finding the number of small containers needed*/
	SmallAlloc = (Items - (LargeAlloc * LargeCap)) / SmallCap;

	/*defining the scrap allocation as an integer*/
	int(Scrap);

	/*finding the number of scrapped items*/
	Scrap = Items - (LargeAlloc * LargeCap) - (SmallAlloc * SmallCap);

	/*printing final output of the allocation of containers and scrapped items*/
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", LargeAlloc);
	printf("" - Small: %d\n"", SmallAlloc);
	printf("" - Scrap: %d"", Scrap);

	return 0;
}",1
orow585,1694921328,1,"#include <stdio.h>

int main()
{
	int lrge;
	int smll;
	int No;

	int Nolrge;
	int Nosmll;
	int scrap;

	
	printf(""Large capacity:\n\033[1;31m"");
	scanf(""%d"", &lrge);

	printf(""\033[0m\nSmall capacity:\n\033[1;31m"");
	scanf(""%d"", &smll);

	printf(""\033[0m\nNumber of items:\n\033[1;31m"");
	scanf(""%d"", &No);

	Nolrge = No/ lrge;

	Nosmll = (No%lrge) / smll;

	scrap = No -  Nolrge*lrge - Nosmll*smll;

	printf(""\033[0m\nAllocated:\n - Large: %d"", Nolrge);
	printf(""\n - Small: %d"", Nosmll);
	printf(""\n - Scrap: %d"", scrap);


	return 0;
}",0
orow585,1694925006,2,"#include <stdio.h>

int main()
{
	int lrge;
	int smll;
	int No;

	int Nolrge;
	int Nosmll;
	int scrap;

	
	printf(""Large capacity:\n"");
	scanf(""%d"", &lrge);

	printf(""\nSmall capacity:\n"");
	scanf(""%d"", &smll);

	printf(""\nNumber of items:\n"");
	scanf(""%d"", &No);

	Nolrge = No/ lrge;

	Nosmll = (No%lrge) / smll;

	scrap = No -  Nolrge*lrge - Nosmll*smll;

	printf(""\nAllocated:\n - Large: %d"", Nolrge);
	printf(""\n - Small: %d"", Nosmll);
	printf(""\n - Scrap: %d"", scrap);


	return 0;
}",0
orow585,1694926463,3,"#include <stdio.h>

int main()
{
	int lrge;
	int smll;
	int No;

	int Nolrge;
	int Nosmll;
	int scrap;

	
	printf(""Large capacity:\n"");
	scanf(""%d"", &lrge);

	printf(""Small capacity:\n"");
	scanf(""%d"", &smll);

	printf(""Number of items:\n"");
	scanf(""%d"", &No);

	Nolrge = No/ lrge;

	Nosmll = (No%lrge) / smll;

	scrap = No -  Nolrge*lrge - Nosmll*smll;

	printf(""Allocated:\n - Large: %d"", Nolrge);
	printf(""\n - Small: %d"", Nosmll);
	printf(""\n - Scrap: %d"", scrap);


	return 0;
}",1
osca399,1695036028,1,"#include <stdio.h>

int main(void)
{	
	int l, s, n;
	int L, S;
	int largeMod, smallMod, scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &l);

	printf(""Small capacity: \n"");
	scanf(""%d"", &s);

	printf(""Number of items: \n"");
	scanf(""%d"", &n);

	L = n / l;
	largeMod = n % l;
	
	S = largeMod / s;
	scrap = largeMod % s;

	printf(""Allocated: \n"");
	printf("" - Large: %d \n"", L);
	printf("" - Small: %d \n"", S);
	printf("" - Scrap: %d \n"", scrap);

	return 0;
}",0
osca399,1695036363,2,"#include <stdio.h>

int main(void)
{	
	int l, s, n;
	int L, S;
	int largeMod, scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &l);

	printf(""Small capacity: \n"");
	scanf(""%d"", &s);

	printf(""Number of items: \n"");
	scanf(""%d"", &n);

	L = n / l;
	largeMod = n % l;
	
	S = largeMod / s;
	scrap = largeMod % s;

	printf(""Allocated: \n"");
	printf("" - Large: %d \n"", L);
	printf("" - Small: %d \n"", S);
	printf("" - Scrap: %d \n"", scrap);

	return 0;
}",1
osko432,1694942630,1,"#include <stdio.h>
#include <math.h>
int main()
{
    int stun1;
    int stun2;
    int stun3;
    int counter1=0;
    int counter2=0;
    printf(""Large capacity:\n"");     
    scanf(""%i"", &stun1);
    printf(""Small capacity:\n"");
    scanf(""%i"", &stun2);
    printf(""Number of items:\n"");   
    scanf(""%i"", &stun3);
    while(stun3>=stun1){
     stun3=stun3-stun1;
     counter1=counter1+1;
    }
    while(stun3>=stun2){
     stun3=stun3-stun2;
     counter2=counter2+1;
    }
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",counter1,counter2,stun3);
}",1
pchh683,1695029413,1,"#include <stdio.h>

int main(void)
{
    int L, S, N, NL, NS, NX, NSB;
	printf(""Large capacity:\n"");
	scanf(""%d"", &L);

	printf(""Small capacity:\n"");
	scanf(""%d"", &S);

	printf(""Number of items:\n"");
    scanf(""%d"", &N);

	NL = N / L;
	NL = NL - ((NL % L)/L);
	NSB = (N - (NL * L))/S;
	NS = NSB - ((NS % S)/S);
	NX = ((N - (NL * L))) - (NS * S);
	

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", NL, NS, NX);

	return 0;
}",0
pchh683,1695029798,2,"#include <stdio.h>

int main(void)
{
    int L, S, N, NL, NS, NX, NSB;
	printf(""Large capacity:\n"");
	scanf(""%d"", &L);

	printf(""Small capacity:\n"");
	scanf(""%d"", &S);

	printf(""Number of items:\n"");
    scanf(""%d"", &N);

	NL = N / L;
	NL = NL - ((NL % L)/L);
	NSB = (N - (NL * L))/S;
	NS = NSB - ((NSB % S)/S);
	NX = ((N - (NL * L))) - (NS * S);
	

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", NL, NS, NX);

	return 0;
}",1
phao209,1695006386,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user to enter the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large and small containers needed
    int numLargeContainers = totalItems / largeCapacity;
    int numSmallContainers = 0;
    int scrapItems = 0;

    if (totalItems % largeCapacity != 0) {
        numSmallContainers = (totalItems % largeCapacity) / smallCapacity;
        scrapItems = totalItems % smallCapacity;
    }

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}",0
phao209,1695006537,2,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user to enter the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large and small containers needed
    int numLargeContainers = totalItems / largeCapacity;
    int numSmallContainers = 0;
    int scrapItems = 0;

    // Check if there are any items left for small containers
    if (totalItems % largeCapacity != 0) {
        numSmallContainers = (totalItems % largeCapacity) / smallCapacity;
        scrapItems = totalItems % smallCapacity;
    }

    // Display the results with proper formatting
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}",0
phao209,1695006580,3,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user to enter the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large and small containers needed
    int numLargeContainers = totalItems / largeCapacity;
    int numSmallContainers = 0;
    int scrapItems = 0;

    // Check if there are any items left for small containers
    if (totalItems % largeCapacity != 0) {
        numSmallContainers = (totalItems % largeCapacity) / smallCapacity;
        scrapItems = totalItems % smallCapacity;
    }

    // Display the results with proper formatting
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}",0
phao209,1695035974,4,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;

    // Prompt the user to enter the capacities and total number of items
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large and small containers needed
    int numLargeContainers = totalItems / largeCapacity;
    int numSmallContainers = 0;
    int scrapItems = 0;

    // Calculate scrap items if any small containers are used
    if (totalItems % largeCapacity != 0) {
        numSmallContainers = (totalItems % largeCapacity) / smallCapacity;
        scrapItems = totalItems % largeCapacity % smallCapacity;
    }

    // Display the results with proper formatting
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}",1
plah275,1695038227,1,"#include <stdio.h>

int main(void)
{
 int largc;
 int smalc;
 int items;

 
 printf(""Large capacity:\n"");
 scanf(""%d"",&largc);
 
 printf(""Small capacity:\n"");
 scanf(""%d"",&smalc);
 
 printf(""Number of items:\n"");
 scanf(""%d"",&items);
 
 int nlc;
 nlc = ((items/largc));
 
 int smlitems;
 smlitems = (items % largc);
 
 int nsc;
 nsc = (smlitems/smalc);
 
 int scrap;
 scrap = (smlitems % smalc);
 
 
 printf(""Allocated:\n"");
 printf("" - Large: %d\n"",nlc);
 printf("" - small: %d\n"",nsc);
 printf("" - Scrap: %d\n"",scrap);
 return 0;
}",0
plah275,1695038246,2,"#include <stdio.h>

int main(void)
{
 int largc;
 int smalc;
 int items;

 
 printf(""Large capacity:\n"");
 scanf(""%d"",&largc);
 
 printf(""Small capacity:\n"");
 scanf(""%d"",&smalc);
 
 printf(""Number of items:\n"");
 scanf(""%d"",&items);
 
 int nlc;
 nlc = ((items/largc));
 
 int smlitems;
 smlitems = (items % largc);
 
 int nsc;
 nsc = (smlitems/smalc);
 
 int scrap;
 scrap = (smlitems % smalc);
 
 
 printf(""Allocated:\n"");
 printf("" - Large: %d\n"",nlc);
 printf("" - Small: %d\n"",nsc);
 printf("" - Scrap: %d\n"",scrap);
 return 0;
}",1
ppax865,1695031307,1,"#include <math.h>
#include <stdio.h>

int main(){
    double large,small,r1,r2,largecap,smallcap,number,scrap;
    printf(""Large capacity: \n"");
    scanf(""%lf"",&largecap);
    printf(""Small capacity: \n"");
    scanf(""%lf"",&smallcap);
    printf(""Number of items: \n"");
    scanf(""%lf"",&number);
    
    large = number/largecap;
    r1 = (large - floor(large))*largecap;
    small = r1/smallcap;
    r2 = (small - floor(small))*smallcap;
    scrap = r2;
    
    large = floor(large);
    small = floor(small);
    
    printf(""Allocated: \n"");
    printf("" - Large: %0.0lf \n"",large);
    printf("" - Small: %0.0lf \n"",small);
    printf("" - Scrap: %0.0lf \n"",scrap);
}
    
    ",0
ppax865,1695031421,2,"#include <math.h>
#include <stdio.h>

int main(){
    double large,small,r1,r2,largecap,smallcap,number,scrap;
    printf(""Large capacity: \n"");
    scanf(""%lf"",&largecap);
    printf(""Small capacity: \n"");
    scanf(""%lf"",&smallcap);
    printf(""Number of items: \n"");
    scanf(""%lf"",&number);
    
    large = number/largecap;
    r1 = (large - floor(large))*largecap;
    small = r1/smallcap;
    small = round(small);
    r2 = (small - floor(small))*smallcap;
    scrap = r2;
    
    large = floor(large);
    small = floor(small);
    
    printf(""Allocated: \n"");
    printf("" - Large: %0.0lf \n"",large);
    printf("" - Small: %0.0lf \n"",small);
    printf("" - Scrap: %0.0lf \n"",scrap);
}
    
    ",0
ppax865,1695033214,3,"#include <math.h>
#include <stdio.h>

int main(){
    double large,small,r1,r2,largecap,smallcap,number,scrap;
    printf(""Large capacity: \n"");
    scanf(""%lf"",&largecap);
    printf(""Small capacity: \n"");
    scanf(""%lf"",&smallcap);
    printf(""Number of items: \n"");
    scanf(""%lf"",&number);
    
    large = number/largecap;
    r1 = (large - floor(large))*largecap;
    large = floor(large);
    small = r1/smallcap;
    r2 = (small - floorf(small))*smallcap;
    small = round(small);
    scrap = r2;
    large = floor(large);
    small = floor(small);
    
    if(scrap < 1){
        scrap = 0;
    }
    
    printf(""Allocated: \n"");
    printf("" - Large: %0.0lf \n"",large);
    printf("" - Small: %0.0lf \n"",small);
    printf("" - Scrap: %0.0lf \n"",scrap);
}
    
    ",0
ppax865,1695033973,4,"#include <math.h>
#include <stdio.h>

int main(){
    double large,small,r1,r2,largecap,smallcap,number,scrap;
    printf(""Large capacity: \n"");
    scanf(""%lf"",&largecap);
    printf(""Small capacity: \n"");
    scanf(""%lf"",&smallcap);
    printf(""Number of items: \n"");
    scanf(""%lf"",&number);
    
    large = number/largecap;
    r1 = (large - floor(large))*largecap;
    large = floor(large);
    small = r1/smallcap;
    r2 = (small - floorf(small))*smallcap;
    small = small -0.2;
    small = round(small);
    scrap = r2;
    large = floor(large);
    small = floor(small);
    
    if(scrap < 1){
        scrap = 0;
    }
    
    if(small < 1){
        small = 0;
    }
    printf(""Allocated: \n"");
    printf("" - Large: %0.0lf \n"",large);
    printf("" - Small: %0.0lf \n"",small);
    printf("" - Scrap: %0.0lf \n"",scrap);
}
    
    ",1
pper327,1694909046,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    /*Define variables*/
    int capacityLarge;
    int capacitySmall;
    int totalItems;
    int allocatedLarge;
    int allocatedSmall;
    int scrap;


    /*Request input from users*/
    printf(""Large capacity: \n"");
    scanf(""%d"", &capacityLarge);

    printf(""Small capacity: \n"");
    scanf(""%d"", &capacitySmall);

    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);


    /*Compute*/

    allocatedLarge = totalItems / capacityLarge; //complies with rule ""as many large containers as possible""

    allocatedSmall = (totalItems - allocatedLarge * capacityLarge) / capacitySmall;

    scrap = (totalItems - allocatedLarge * capacityLarge) % capacitySmall;


    /*Display output to screen*/
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", allocatedLarge);
    printf("" - Small: %d \n"", allocatedSmall);
    printf("" - Scrap: %d \n"", scrap);

    return 0;
}

",1
ppra303,1695038164,1,"#include <stdio.h>

int main()
{
    int larger_cap, smaller_cap, total_noitems;

    /* Enter the value for larger capacity*/
    printf(""Large Capacity: "");
    scanf(""%d"", &larger_cap);
    
    
    /* Enter the value for small capacity*/
    printf(""Small Capacity: "");
    scanf(""%d"", &smaller_cap);
   
   /* Enter the value for number of items */
    printf(""Number of items: "");
    scanf(""%d"", &total_noitems);

    /* Here the number of containers is calculated*/
    int large_containers = total_noitems / larger_cap; /* calculates the remainder */
    int remaining_items = total_noitems % larger_cap;
    int small_containers = remaining_items / smaller_cap;
    int scrapped_items = remaining_items % smaller_cap;

    /* The results will be presented here */
    printf(""Allocated:\n"");
    printf(""- Large: %d\n"", large_containers);
    printf(""- Small: %d\n"", small_containers);
    printf(""- Scrap: %d\n"", scrapped_items);

    return 0;
}",0
ppra303,1695038227,2,"#include <stdio.h>

int main()
{
    int larger_cap, smaller_cap, total_noitems;

    /* Enter the value for larger capacity*/
    printf(""Large capacity: "");
    scanf(""%d"", &larger_cap);
    
    
    /* Enter the value for small capacity*/
    printf(""Small capacity:\n "");
    scanf(""%d"", &smaller_cap);
   
   /* Enter the value for number of items */
    printf(""Number of items:\n "");
    scanf(""%d"", &total_noitems);

    /* Here the number of containers is calculated*/
    int large_containers = total_noitems / larger_cap; /* calculates the remainder */
    int remaining_items = total_noitems % larger_cap;
    int small_containers = remaining_items / smaller_cap;
    int scrapped_items = remaining_items % smaller_cap;

    /* The results will be presented here */
    printf(""Allocated:\n"");
    printf(""- Large: %d\n"", large_containers);
    printf(""- Small: %d\n"", small_containers);
    printf(""- Scrap: %d\n"", scrapped_items);

    return 0;
}",0
ppra303,1695038284,3,"#include <stdio.h>

int main()
{
    int larger_cap, smaller_cap, total_noitems;

    /* Enter the value for larger capacity*/
    printf(""Large capacity:\n"");
    scanf(""%d"", &larger_cap);
    
    
    /* Enter the value for small capacity*/
    printf(""Small capacity:\n"");
    scanf(""%d"", &smaller_cap);
   
   /* Enter the value for number of items */
    printf(""Number of items:\n"");
    scanf(""%d"", &total_noitems);

    /* Here the number of containers is calculated*/
    int large_containers = total_noitems / larger_cap; /* calculates the remainder */
    int remaining_items = total_noitems % larger_cap;
    int small_containers = remaining_items / smaller_cap;
    int scrapped_items = remaining_items % smaller_cap;

    /* The results will be presented here */
    printf(""Allocated:\n"");
    printf(""-Large: %d\n"", large_containers);
    printf(""-Small: %d\n"", small_containers);
    printf(""-Scrap: %d\n"", scrapped_items);

    return 0;
}",0
ppra303,1695038303,4,"#include <stdio.h>

int main()
{
    int larger_cap, smaller_cap, total_noitems;

    /* Enter the value for larger capacity*/
    printf(""Large capacity:\n"");
    scanf(""%d"", &larger_cap);
    
    
    /* Enter the value for small capacity*/
    printf(""Small capacity:\n"");
    scanf(""%d"", &smaller_cap);
   
   /* Enter the value for number of items */
    printf(""Number of items:\n"");
    scanf(""%d"", &total_noitems);

    /* Here the number of containers is calculated*/
    int large_containers = total_noitems / larger_cap; /* calculates the remainder */
    int remaining_items = total_noitems % larger_cap;
    int small_containers = remaining_items / smaller_cap;
    int scrapped_items = remaining_items % smaller_cap;

    /* The results will be presented here */
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}",1
pwat943,1694990215,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
  
        // Author: Dimitri Watt
        // Identifying the variables
        int large_capacity;
        int small_capacity;
        int total_items;

        // Prompt the user for input
        printf(""Large capacity:\n"");
        scanf(""%d"", &large_capacity);

        printf(""Small capacity:\n"");
        scanf(""%d"", &small_capacity);

        printf(""Number of items:\n"");
        scanf(""%d"", &total_items);

        // Calculate the number of large and small containers needed
        int large_containers = total_items / large_capacity;
        int small_containers = (total_items % large_capacity) / small_capacity;

        // Calculate the number of items that will be scrapped
        int remaining_items = total_items - (large_containers * large_capacity + small_containers * small_capacity);

        // Display the results
        printf(""Allocated:\n"");
        printf("" - Large: %d\n"", large_containers);
        printf("" - Small: %d\n"", small_containers);
        printf("" - Scrap: %d\n"", remaining_items);

    return 0;
}
",1
pwil422,1695035061,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int small, large, total;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    int quantitylarge = total / large;
    int remaining = total % large;
    int quantitysmall = remaining / small;
    int scrap = remaining % small;

    printf(""Allocated:\n- Large: %d\n- Small : %d\n- Scrap : %d\n"", quantitylarge, quantitysmall, scrap);
    

    return 0;
}",0
pwil422,1695035101,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int small, large, total;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    int quantitylarge = total / large;
    int remaining = total % large;
    int quantitysmall = remaining / small;
    int scrap = remaining % small;

    printf(""Allocated:\n- Large: %d\n- Small: %d\n- Scrap: %d\n"", quantitylarge, quantitysmall, scrap);
    

    return 0;
}",0
pwil422,1695035795,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int small, large, total;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    
    if (large <= small) {
        printf(""Large capacity must be bigger than small capacity.\n"");
        return 1;
    }
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    int quantitylarge = total / large;
    int remaining = total % large;
    int quantitysmall = remaining / small;
    int scrap = remaining % small;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", quantitylarge, quantitysmall, scrap);
    

    return 0;
}",1
pwu278,1694859717,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int Large;
	int Small;
	int Items;
	int LargeContainers;
	int SmallContainers;
	int Scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &Large);

	printf(""Small capacity:\n"");
	scanf(""%d"", &Small);

	printf(""Number of items:\n"");
	scanf(""%d"", &Items);

	LargeContainers = Items / Large;
	SmallContainers = (Items - (LargeContainers * Large)) / Small;
	Scrap = Items - (LargeContainers * Large) - (SmallContainers * Small);

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", LargeContainers);
	printf("" - Small: %d\n"", SmallContainers);
	printf("" - Scrap: %d\n"", Scrap);

	return 0;
}",1
pyou182,1694905464,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int main()
{
    int large;
    int small;
    int total;
    
    int LargeC;
    int SmallC;
    int Scrap;
    int remainderL;
    int remainderS;

    //User inputs
    printf(""Large capacity:\n"");
    scanf("" %d"", &large);

    printf(""Small capacity:\n"");
    scanf("" %d"", &small);

    printf(""Number of items:\n"");
    scanf("" %d"", &total);

    //Container Allocation
    remainderL = (total % large);
    LargeC = (total - remainderL)/large;

    remainderS = (remainderL % small);
    SmallC = (remainderL - remainderS)/small;

    Scrap = remainderS;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", LargeC);
    printf("" - Small: %d\n"", SmallC);
    printf("" - Scrap: %d\n"", Scrap);
    return 0;
}
",1
qche619,1695027106,1,"#include <stdio.h>

int main(void) 
{
    
    int large, small, items;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    int Large = items / large;
    int Small = (items % large) / small;
    int Scrap = items - ((Large * large) + (Small*small));

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);

    return 0;
    
}",1
qkan386,1695013255,1,"#include<stdio.h>

int main(void)
{
	int LargeC;
	int SmallC;
	int Items;
	int LeftOver;
	int BoxL;
	int BoxS;
	int scrap;

	printf(""Large capacity:\n"");
	scanf(""%i"", &LargeC);

	printf(""Small capacity:\n"");
	scanf(""%i"", &SmallC);

	printf(""Number of items:\n"");
	scanf(""%i"", &Items);

	BoxL = Items / LargeC;
	LeftOver = Items % LargeC;
	BoxS = LeftOver / SmallC;
	scrap = LeftOver % SmallC;

	printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"", BoxL, BoxS, scrap);

	return 0;

}",1
qmcc945,1694836783,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int lCapacity;
    int sCapacity;
    int items;

    int large;
    int small;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &lCapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &sCapacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = items/lCapacity;
    small = (items%lCapacity)/sCapacity;
    scrap = (items%lCapacity)%sCapacity;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}",1
qzho943,1694929872,1,"#include <stdio.h>

int main()
{
    double Lc;
    double Sc;
    double items;
    int L;
    int S;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%lf"",&Lc);
    
    printf(""Small capacity:\n"");
    scanf(""%lf"",&Sc);
    
    printf(""Number of items:\n"");
    scanf(""%lf"",&items);
    
    L = items / Lc;
    S = (items-L*Lc)/Sc;
    scrap = items - L * Lc - S * Sc;
    
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",L);
    printf("" - Small: %d\n"",S);
    printf("" - Scrap: %d\n"",scrap);
    
    return 0;
}",0
qzho943,1694929949,2,"#include <stdio.h>

int main()
{
    double Lc;
    double Sc;
    double items;
    int L;
    int S;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%lf"",&Lc);
    
    printf(""Small capacity:\n"");
    scanf(""%lf"",&Sc);
    
    printf(""Number of items:\n"");
    scanf(""%lf"",&items);
    
    L = items / Lc;
    S = (items-L*Lc)/Sc;
    scrap = items - L * Lc - S * Sc;
    
   
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",L);
    printf("" - Small: %d\n"",S);
    printf("" - Scrap: %d\n"",scrap);
    
    return 0;
}",1
raic989,1694945627,1,"#include <stdio.h>

int main(void)
{
    /* Extract all inputs from user */
    int a,b,c;
    printf(""Large capacity: \n"");
    scanf(""%i"", &a);
    printf(""Small capacity: \n"");
    scanf(""%i"",&b);
    printf(""Number of items: \n"");
    scanf(""%i"", &c);
    
    printf(""Allocated: \n"");
    
    /*Compute number of large containers needed*/
    int d;
    d=c/a;
    printf(""- Large: %i\n"",d);
    
    /*Compute number of small containers needed*/
    int e;
    e=(c-a*d)/b;
    printf(""- Small: %i\n"",e);
    
    /*Compute left over items */
    int f;
    f= (c-a*d) % b;
    printf(""- Scrap: %i\n"",f);
    
}",0
raic989,1694945662,2,"#include <stdio.h>

int main(void)
{
    /* Extract all inputs from user */
    int a,b,c;
    printf(""Large capacity: \n"");
    scanf(""%i"", &a);
    printf(""Small capacity: \n"");
    scanf(""%i"",&b);
    printf(""Number of items: \n"");
    scanf(""%i"", &c);
    
    printf(""Allocated: \n"");
    
    /*Compute number of large containers needed*/
    int d;
    d=c/a;
    printf("" - Large: %i\n"",d);
    
    /*Compute number of small containers needed*/
    int e;
    e=(c-a*d)/b;
    printf("" - Small: %i\n"",e);
    
    /*Compute left over items */
    int f;
    f= (c-a*d) % b;
    printf("" - Scrap: %i\n"",f);
    
}",1
rbaj698,1695029983,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int l_cap;
    int s_cap;
    int items;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &l_cap);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &s_cap);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    int Large = items / l_cap;
    int Remainder = items % l_cap;
    int Small = Remainder / s_cap;
    int Scrap = Remainder % s_cap;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);
    
return 0;
",0
rbaj698,1695030015,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int l_cap;
    int s_cap;
    int items;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &l_cap);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &s_cap);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
    int Large = items / l_cap;
    int Remainder = items % l_cap;
    int Small = Remainder / s_cap;
    int Scrap = Remainder % s_cap;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);
    
return 0;
}",1
rbui853,1694945909,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCapacity, smallCapacity, total, large, small, scrap;

    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &total);

    large = total / largeCapacity;
    small = (total % largeCapacity) / smallCapacity;
    scrap = (total % largeCapacity) % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d"", scrap);
    
    return 0;
}

",1
rbus291,1694828839,1,"#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
int main() {
    int num_largecont;
    int num_smallcont;
    int large;
    int small;
    int items;
    int remaining;
    int LastItems;

    printf(""Large capacity: \033[1;31m\n"");
    scanf(""%d"", &large);
    printf(""\033[0mSmall capacity: \033[1;31m\n"");
    scanf(""%d"", &small);
    printf(""\033[0mNumber of items: \033[1;31m\n"");
    scanf(""%d"", &items);

    num_largecont = items / large;
    remaining = items % large;
    num_smallcont = remaining / small;
    remaining = remaining % small;
    LastItems = remaining;

    printf(""\033[0mAllocated:\n"");
    printf("" - Large: %d\n - Small: %d\n - Scrap: %d\n"", num_largecont, num_smallcont, LastItems);

    return 0;
}",0
rbus291,1694832213,2,"#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
int main() {
    int num_largecont;
    int num_smallcont;
    int large;
    int small;
    int items;
    int remaining;
    int LastItems;

    printf(""Large capacity:"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    num_largecont = items / large;
    remaining = items % large;
    num_smallcont = remaining / small;
    remaining = remaining % small;
    LastItems = remaining;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n - Small: %d\n - Scrap: %d\n"", num_largecont, num_smallcont, LastItems);

    return 0;
}",0
rbus291,1694832251,3,"#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
int main() {
    int num_largecont;
    int num_smallcont;
    int large;
    int small;
    int items;
    int remaining;
    int LastItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    num_largecont = items / large;
    remaining = items % large;
    num_smallcont = remaining / small;
    remaining = remaining % small;
    LastItems = remaining;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n - Small: %d\n - Scrap: %d\n"", num_largecont, num_smallcont, LastItems);

    return 0;
}",1
rchi339,1694944956,1,"#include <stdio.h>

int main(void)
{
	int l;
	int s;
	int n;
	int numLarge;
	int numSmall;
	int numScrap;
	
	printf(""Large capacity:\n"");
	scanf(""%d"",&l);
	
	printf(""Small capacity:\n"");
	scanf(""%d"",&s);
	
	printf(""Number of items:\n"");
	scanf(""%d"",&n);
	
	numLarge = n/l;
	numSmall = (n%l)/s;
	numScrap = n - (numLarge*l) - (numSmall*s);
	
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",
	numLarge, numSmall, numScrap);

	return 0;
}",1
rdas322,1695027574,1,"#include <stdio.h>

int main()
{
    int Lcap;
    int Scap;
    int number;
    int large;
    int small;
    int crap;
    
    printf(""Large capacity: \n"");
    scanf(""%i"",&Lcap);
    printf(""Small capacity: \n"");
    scanf(""%i"", &Scap);
    printf(""Number of items: \n"");
    scanf(""%i"", &number);
    
    large = number/Lcap;
    small = (number % Lcap) / Scap;
    crap = (number % Lcap) % Scap;
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",large,small,crap);
    
    
    
   
  return 0;
}
",1
rdic384,1695027077,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{

    int largecapacity;
    int smallcapacity;
    int totalitems;
    int largecontainers;
    int smallcontainers;
    int largeremainder;
    int smallremainder;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largecapacity);
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallcapacity);
    printf(""Number of items: \n"");
    scanf(""%d"", &totalitems);
    
    largecontainers = totalitems / largecapacity;
    largeremainder = totalitems % largecapacity;
    smallcontainers = largeremainder / smallcapacity;
    smallremainder = largeremainder % smallcapacity;
    

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", largecontainers, smallcontainers, smallremainder);
  
    return 0;
}
",1
rdon807,1695035104,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int items;
    
    int largeleftovers;
    int smallleftovers;
    
    int largecontainers;
    int smallcontainers;
    
    printf(""Large capacity:"");
    scanf(""%d"",&large);
    
    printf(""\nSmall capacity:"");
    scanf(""%d"",&small);
    
    printf(""\nNumber of items:"");
    scanf(""%d"",&items);
    
    largeleftovers=items%large;
    largecontainers=(items-largeleftovers)/large;
    
    smallleftovers=largeleftovers%small;
    smallcontainers=(largeleftovers-smallleftovers)/small;
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", largecontainers);
    printf(""\n - Small: %d"", smallcontainers);
    printf(""\n - Scrap: %d"", smallleftovers);
}
",1
rgre692,1695032333,1,"
#include <stdio.h>

int main()
{
    int large;
    int small;
    int scrap;
    int items;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

 
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", items/large, (items%large)/small, (items%large)%small);

    return 0;
}

",0
rgre692,1695032360,2,"
#include <stdio.h>

int main()
{
    int large;
    int small;
    int items;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

 
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", items/large, (items%large)/small, (items%large)%small);

    return 0;
}

",1
rkan756,1694826034,1,"#include <stdio.h>

int main(void)
{
    int large, small, n;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int large_allocated, small_allocated, scrap;

    large_allocated = (n - (n %large)) / large;

    small_allocated = ((n %large) - ((n %large) %small)) / small;

    scrap = ((n %large) %small);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large_allocated, small_allocated, scrap);

    return 0;
}",1
rkha931,1694992769,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Large_capacity;
    int Small_capacity;
    int n;
    int Large;
    int Small;
    int Scrap;

    printf(""Large capacity: \n"");
    scanf(""%d"", &Large_capacity);
    printf(""Small capacity: \n"");
    scanf(""%d"", &Small_capacity);
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    Large = (n - (n%Large_capacity))/ Large_capacity; 
    Small = (n-Large_capacity*Large)/Small_capacity;
    Scrap = n - (Large_capacity*Large) - (Small_capacity*Small) ;
    
    printf(""Allocated: "");
    printf(""\n - Large: %d"", Large);
    printf(""\n - Small: %d"", Small);
    printf(""\n - Scrap: %d"", Scrap);
    return 0;
}
",1
rleg709,1694978001,1,"#include <stdio.h>

#define DIVISOR 2
int main (void)
{
    int l, s, n, lC, sC, largeC, smallC, nItems; //stores variable as integers


    /* 
    prints input statements and scans input values and stores them as integers
    */
    printf(""Large capacity:\n""); 
    scanf(""%d"", &l);

    printf(""Small capacity:\n""); 
    scanf(""%i"", &s);

    printf(""Number of items:\n""); 
    scanf(""%i"", &n);

    /* 
    use % to find the mod and perform calculations to obtain output values
    */
if (n > 0) { // if-else statment to evaluate conditions when n>0 or not.

    lC = n % l;
    largeC = (n - lC) / l;

    sC = lC % s;
    smallC = (lC - sC) / s;

    nItems = sC % n;

    /*
    prints output statement and values
    */
    printf(""Allocated:\n"");
    printf("" - Large: %i\n"", largeC);
    printf("" - Small: %i\n"", smallC);
    printf("" - Scrap: %i\n"", nItems);

} else {

    largeC = 0; 
    smallC = 0;
    nItems = 0;

    printf(""Allocated:\n"");
    printf("" - Large: %i\n"", largeC);
    printf("" - Small: %i\n"", smallC);
    printf("" - Scrap: %i\n"", nItems);
}
    return 0;
}",1
rlin108,1694942911,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int large;
	int small;
	int number;
	int largeCrates;
	int smallCrates;
	int scrap;
	int remaining;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);
	printf(""Small capacity: \n"");
	scanf(""%d"", &small);
	printf(""Number of items: \n"");
	scanf(""%d"", &number);

	largeCrates = number / large;

	remaining = number - (large * largeCrates);

	smallCrates = remaining / small;

	scrap = remaining - (smallCrates * small);

	printf(""Allocated: \n"");
	printf("" - Large: %d \n"", largeCrates);
	printf("" - Small: %d \n"", smallCrates);
	printf("" - Scrap: %d \n"", scrap);

	return 0;
}",1
rmar633,1694954668,1,"#include <stdio.h>

int main()
{
    int num, big, bbox, small, sbox;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &big);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of Items:\n"");
    scanf(""%d"", &num);
    
    bbox = num/big;
    num = num - bbox*big;
    sbox = num/small;
    num = num - sbox*small;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", bbox);
    printf("" - Small: %d\n"", sbox);
    printf("" - Scrap: %d\n"", num);
    
    

    return 0;
}",0
rmar633,1694954687,2,"#include <stdio.h>

int main()
{
    int num, big, bbox, small, sbox;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &big);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &num);
    
    bbox = num/big;
    num = num - bbox*big;
    sbox = num/small;
    num = num - sbox*small;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", bbox);
    printf("" - Small: %d\n"", sbox);
    printf("" - Scrap: %d\n"", num);
    
    

    return 0;
}",1
rmur989,1694941752,1,"#include <stdio.h>

int main()
{
    int lcap;
    int scap;
    int nitems;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &lcap);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &scap);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &nitems);
    
    large = nitems/lcap;
    
    small = (nitems-large*lcap)/scap;
    
    scrap = nitems - large*lcap - small*scap;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",1
rnga701,1694871501,1,"# include <stdio.h>

int main(void)
{

    int large;
    int small;
    int n;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    int large_box = (n/large);

    int rem_1 = n-(large_box*large);

    int small_box = (rem_1/small);

    int rem_2 = n-(large_box*large) - (small_box*small);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",large_box);
    printf("" - Small: %d\n"",small_box);
    printf("" - Scrap: %d\n"",rem_2);

    return 0;
}",1
rnig735,1694949158,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS
int main()
{
    int large,small,number,carry,scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&number);
    carry = number%large;
    large = (number - carry) / large;
    scrap = carry%small;
    small = (carry - carry%small) / small;
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);
    return 0;
}",1
rroz381,1695015105,1,"#include <stdio.h>

int main()
{
    int large, small, items;
    int lbox, lrem, sbox, scrap;
    int allocated;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small );
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    lbox = items / large;
    lrem = items % large;
    sbox = lrem / small;
    scrap = lrem % small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", lbox, sbox, scrap);
    
    return 0;
    
}
",0
rroz381,1695015192,2,"#include <stdio.h>

int main()
{
    int large, small, items;
    int lbox, lrem, sbox, scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small );
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    lbox = items / large;
    lrem = items % large;
    sbox = lrem / small;
    scrap = lrem % small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", lbox, sbox, scrap);
    
    return 0;
    
}
",1
rsha769,1695010516,1,"#include <stdio.h>

int main(void)
{
    int Large;
    int Small;
    int Items;

    printf(""Large Capacity: \n"");
    scanf(""%d"", &Large);

    printf(""Small Capacity: \n"");
    scanf(""%d"", &Small);

    printf(""Number of items: \n"");
    scanf(""%d"", &Items);

    int Large_number = Items / Large;
    int Leftover_items = Items % Large;
    int Scrap = Leftover_items % Small;
    int Small_number = (Leftover_items - Scrap) / Small;

    printf(""Allocated: \n"");
    printf(""- Large: %d\n"", Large_number);
    printf(""- Small: %d\n"", Small_number);
    printf(""- Scrap: %d\n"", Scrap);
    
	return 0;
}",0
rsha769,1695010716,2,"#include <stdio.h>

int main(void)
{
    int Large;
    int Small;
    int Items;

    printf(""Large capacity: \n"");
    scanf(""%d"", &Large);

    printf(""Small capacity: \n"");
    scanf(""%d"", &Small);

    printf(""Number of items: \n"");
    scanf(""%d"", &Items);

    int Large_number = Items / Large;
    int Leftover_items = Items % Large;
    int Scrap = Leftover_items % Small;
    int Small_number = (Leftover_items - Scrap) / Small;

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", Large_number);
    printf("" - Small: %d\n"", Small_number);
    printf("" - Scrap: %d\n"", Scrap);
    
	return 0;
}",1
rsha970,1694924844,1,"#include <stdio.h>

int main(void) {
    int largeCapacity, smallCapacity, totalItems;

    printf(""Large capacity:""""\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:""""\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:""""\n"");
    scanf(""%d"", &totalItems);

    int largeContainers = totalItems / largeCapacity;

    int remainingItems = totalItems % largeCapacity;

    int smallContainers = remainingItems / smallCapacity;

    int scrapItems = remainingItems % smallCapacity;

    printf(""Allocated:""""\n"");
    printf("" - Large: %d""""\n"", largeContainers);
    printf("" - Small: %d""""\n"", smallContainers);
    printf("" - Scrap: %d""""\n"", scrapItems);

    return 0;
}",1
rsin531,1695022634,1,"#include <stdio.h>

int main(void) {
    int large_capacity, small_capacity, total_items;
    int large_containers, small_containers, scraps;


    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);


    large_containers = total_items / large_capacity;
    total_items = total_items % large_capacity; 
    small_containers = total_items / small_capacity;


    scraps = total_items % small_capacity;


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scraps);

    return 0;
}",1
rtan654,1695004471,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCapacity, smallCapacity, items, numberoflargeBoxes, numberofsmallBoxes, scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    numberoflargeBoxes = (items / largeCapacity);

    numberofsmallBoxes = (items - (numberoflargeBoxes * largeCapacity))/smallCapacity;

    scrap = items - ((numberoflargeBoxes * largeCapacity) + (numberofsmallBoxes * smallCapacity));

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numberoflargeBoxes);
    printf("" - Small: %d\n"", numberofsmallBoxes);
    printf("" - Scrap: %d\n"", scrap);
    return 0;
}",1
rtap592,1695010517,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCapacity, smallCapacity, items; 
    int largeContainers, smallContainers, scrap;

    printf(""Large capacity: "");
    printf(""\n"");
    scanf(""%d"", &largeCapacity);
    printf(""\n"");

    printf(""Small capacity: "");
    printf(""\n"");
    scanf(""%d"", &smallCapacity);
    printf(""\n"");

    printf(""Number of items: "");
    printf(""\n"");
    scanf(""%d"", &items);
    printf(""\n"");

    largeContainers = items / largeCapacity;

    items = items - largeCapacity * largeContainers;

    smallContainers = items / smallCapacity;

    scrap = items - smallContainers * smallCapacity;

    
    printf(""Allocated: "");
    printf(""\n"");
    printf("" - Large: %d"", largeContainers);
    printf(""\n"");
    printf("" - Small: %d"", smallContainers);
    printf(""\n"");
    printf("" - Scrap: %d"", scrap);
    printf(""\n"");


    




    return 0;
}

",0
rtap592,1695010866,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCapacity, smallCapacity, items; 
    int largeContainers, smallContainers, scrap;

    printf(""Large capacity: "");
    printf(""\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity: "");
    printf(""\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items: "");
    printf(""\n"");
    scanf(""%d"", &items);

    largeContainers = items / largeCapacity;

    items = items - largeCapacity * largeContainers;

    smallContainers = items / smallCapacity;

    scrap = items - smallContainers * smallCapacity;

    
    printf(""Allocated: "");
    printf(""\n"");
    printf("" - Large: %d"", largeContainers);
    printf(""\n"");
    printf("" - Small: %d"", smallContainers);
    printf(""\n"");
    printf("" - Scrap: %d"", scrap);
    printf(""\n"");


    




    return 0;
}

",1
rvog842,1695024052,1,"#include <stdio.h>

int main(void) {
    int large_capacity, small_capacity, total_items;
    
    printf(""Enter capacity of a large container: "");
    scanf(""%d"", &large_capacity);
    
    printf(""Enter capacity of a small container: "");
    scanf(""%d"", &small_capacity);
    
    printf(""Enter total number of items in the order: "");
    scanf(""%d"", &total_items);
    
    int num_large_containers = total_items / large_capacity;
    int num_small_containers = (total_items % large_capacity) / small_capacity;
    int num_scrapped_items = total_items % small_capacity;
    
    printf(""\nAllocated:\n"");
    printf(""- Large: %d\n"", num_large_containers);
    printf(""- Small: %d\n"", num_small_containers);
    printf(""- Scrap: %d\n"", num_scrapped_items);
    
    return 0;
}",0
rvog842,1695024941,2,"#include <stdio.h>

int main(void) {
    int large_capacity, small_capacity, total_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);
    
    int num_large_containers = total_items / large_capacity;
    int num_small_containers = (total_items % large_capacity) / small_capacity;
    int num_scrapped_items = total_items % small_capacity;
    
    printf(""\nAllocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);
    
    return 0;
}

",0
rvog842,1695025061,3,"#include <stdio.h>

int main(void) {
    int large_capacity, small_capacity, total_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);
    
    int num_large_containers = total_items / large_capacity;
    int num_small_containers = (total_items % large_capacity) / small_capacity;
    int num_scrapped_items = total_items % small_capacity;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);
    
    return 0;
}

",0
rvog842,1695025354,4,"#include <stdio.h>

int main(void) {
    int large_capacity, small_capacity, total_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);
    
    int num_large_containers = total_items / large_capacity;
    int remaining_items = total_items % large_capacity;
    int num_small_containers = remaining_items / small_capacity;
    int num_scrapped_items = total_items % small_capacity;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);
    
    return 0;
}

",0
rvog842,1695025725,5,"#include <stdio.h>

int main(void) {
    int large_capacity, small_capacity, total_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);
    
    int num_large_containers = total_items / large_capacity;
    int remaining_items = total_items % large_capacity;
    int num_small_containers = remaining_items / small_capacity;
    int num_scrapped_items = remaining_items % small_capacity;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);
    
    return 0;
}


",1
rzha972,1694935214,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int total;

    printf(""Large capacity:\n"");
    scanf(""%i"", &large);
    printf(""Small capacity:\n"");
    scanf(""%i"", &small);
    printf(""Number of items:\n"");
    scanf(""%i"", &total);

    int numlarge;
    int numsmall;
    int scarp;
    int leftover;

    numlarge = total/large;
    printf(""%i"",numlarge);
    leftover = total - (numlarge * large);
    numsmall = leftover / small;
    scarp = leftover - (numsmall * small);

    printf(""Allocated:\n"");
    printf("" - Large: %i\n"", numlarge);
    printf("" - Small: %i\n"", numsmall);
    printf("" - Scrap: %i"", scarp);

    return 0;
}",0
rzha972,1694935245,2,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int total;

    printf(""Large capacity:\n"");
    scanf(""%i"", &large);
    printf(""Small capacity:\n"");
    scanf(""%i"", &small);
    printf(""Number of items:\n"");
    scanf(""%i"", &total);

    int numlarge;
    int numsmall;
    int scarp;
    int leftover;

    numlarge = total/large;
    leftover = total - (numlarge * large);
    numsmall = leftover / small;
    scarp = leftover - (numsmall * small);

    printf(""Allocated:\n"");
    printf("" - Large: %i\n"", numlarge);
    printf("" - Small: %i\n"", numsmall);
    printf("" - Scrap: %i"", scarp);

    return 0;
}",1
sali153,1695027406,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large, small, items;
    int large_count, small_count,scrap;
    int large_remainder;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    large_count = items / large;
    large_remainder = items % large;

    small_count = large_remainder / small;

    scrap = large_remainder % small;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",large_count);
    printf("" - Small: %d\n"", small_count);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}

",1
sbas887,1694892011,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int lnum;
    int snum;
    int scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    scrap = (items % large) % small;
    snum = ((items % large) - scrap) / small;
    lnum = (items - (items % large)) / large;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", lnum);
    printf("" - Small: %d\n"", snum);
    printf("" - Scrap: %d\n"", scrap);
}
",1
sbha564,1694955455,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int large_containers = total_items / large_capacity;
    int remaining_items = total_items % large_capacity;
    int small_containers = remaining_items / small_capacity;
    int scraps = remaining_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scraps);

    return 0;
}
",1
sbou664,1695028345,1,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main()
{
int Largecontainer;
int Smallcontainer;
int items;
int Large;
int Small;
int scrap;
printf(""Large capacity: "");
scanf(""\n%d"", &Large);
printf(""Small capacity: "");
scanf(""\n%d"", &Small);
printf(""Number of items: "");
scanf(""\n%d"", &items);
printf(""\nAllocated:"");
Largecontainer = items / Large; 
printf(""\n- Large: %d"", Largecontainer);
items = items % Large;
Smallcontainer = items / Small; 
printf(""\n- Small: %d"", Smallcontainer);
scrap = items - (Small * Smallcontainer);
printf(""\n- Scrap: %d"", scrap);

    
    return 0;
}

",0
sbou664,1695028533,2,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main()
{
int Largecontainer;
int Smallcontainer;
int items;
int Large;
int Small;
int scrap;
printf(""\nLarge capacity: "");
scanf(""\n%d"", &Large);
printf(""\nSmall capacity: "");
scanf(""\n%d"", &Small);
printf(""\nNumber of items: "");
scanf(""\n%d"", &items);
printf(""\nAllocated:"");
Largecontainer = items / Large; 
printf(""\n - Large: %d"", Largecontainer);
items = items % Large;
Smallcontainer = items / Small; 
printf(""\n - Small: %d"", Smallcontainer);
scrap = items - (Small * Smallcontainer);
printf(""\n - Scrap: %d"", scrap);

    
    return 0;
}

",0
sbou664,1695028561,3,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int main()
{
int Largecontainer;
int Smallcontainer;
int items;
int Large;
int Small;
int scrap;
printf(""Large capacity: "");
scanf(""\n%d"", &Large);
printf(""\nSmall capacity: "");
scanf(""\n%d"", &Small);
printf(""\nNumber of items: "");
scanf(""\n%d"", &items);
printf(""\nAllocated:"");
Largecontainer = items / Large; 
printf(""\n - Large: %d"", Largecontainer);
items = items % Large;
Smallcontainer = items / Small; 
printf(""\n - Small: %d"", Smallcontainer);
scrap = items - (Small * Smallcontainer);
printf(""\n - Scrap: %d"", scrap);

    
    return 0;
}

",1
scar362,1695016924,1,"#include <stdio.h>

int
main ()
{
  double lcap;
  double scap;
  double number;
  printf (""Large Capacity: \n"");
  scanf (""%lf"", &lcap);
  printf (""Small Capacity: \n"");
  scanf (""%lf"", &scap);
  printf (""Number of items: \n"");
  scanf (""%lf"", &number);
  int nlarge = number / lcap;
  int nsmall = (number - (nlarge * lcap)) / scap;
  int scrap = number - (nlarge * lcap) - (scap * nsmall);
  printf (""Allocated:\n"");
  printf ("" - Large: %d\n"", nlarge); 
  printf("" - Small: %d\n"", nsmall);
  printf("" - Scrap: %d\n"", scrap);
  return 0;
}",0
scar362,1695017280,2,"#include <stdio.h>

int
main ()
{
  double lcap;
  double scap;
  double number;
  printf (""Large capacity: \n"");
  scanf (""%lf"", &lcap);
  printf (""Small capacity: \n"");
  scanf (""%lf"", &scap);
  printf (""Number of items: \n"");
  scanf (""%lf"", &number);
  int nlarge = number / lcap;
  int nsmall = (number - (nlarge * lcap)) / scap;
  int scrap = number - (nlarge * lcap) - (scap * nsmall);
  printf (""Allocated:\n"");
  printf ("" - Large: %d\n"", nlarge); 
  printf("" - Small: %d\n"", nsmall);
  printf("" - Scrap: %d\n"", scrap);
  return 0;
}",1
scho575,1694998465,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;
    // Enter values
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Find number of containers and scrapped ones
    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;
    int scrapped_items = total_items % large_capacity % small_capacity;

    // Display the results
    prinf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);


    return 0;
}
",0
scho575,1694998536,2,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    int large_containers = total_items / large_capacity;
    int remaining_items = total_items % large_capacity;
    int small_containers = remaining_items / small_capacity;
    int scrapped_items = remaining_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",1
schu718,1694914729,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
/*This program asks the user for 3 values, the capacity of a large container, the 
capacity of a small container, and the number of items in a shipping order. It then 
calculates the number of containers needed and the scrapped items that aren't shipped.*/

int main(void)
{
    int largecap;
    int smallcap;
    int itemnum;
    int largenum;
    int smallnum;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largecap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcap);

    printf(""Number of items:\n"");
    scanf(""%d"", &itemnum);

    //Since these values are of int data type they drop off the fractional portion in
    //these division operations. Using mod gives us the remainder for the next step. 
    largenum = itemnum / largecap;
    itemnum = itemnum % largecap;
    smallnum = itemnum / smallcap;
    scrap = itemnum % smallcap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largenum, smallnum, scrap);

    return 0;
}

",1
schu800,1695008126,1,"#include <stdio.h>

int main()
{
    int large,small,n;
    int nlarge,nleft,nsmall,scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"",&large);
    printf(""Small capacity: \n"");
    scanf(""%d"",&small);
    printf(""Number of items: \n"");
    scanf(""%d"",&n);
    nlarge = n/large;
    nleft = n - (nlarge * large);
    nsmall = nleft/small;
    scrap = nleft % small;
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"",nlarge);
    printf("" - Small: %d \n"",nsmall);
    printf("" - Scrap: %d \n"",scrap);
    return 0;
}
",1
scol559,1695029552,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

/* This program tells the amount of shipping containers are needed */
int main(void)
{
	/* Initializing Variables*/
	int cl;
	int cs;
	int number;
	int nl;
	int ns;
	int lremainder;
	int sremainder;

	/* Gathering inputs */
	printf(""Large capacity:\n"");
	scanf(""%d"", &cl);

	printf(""Small capacity:\n"");
	scanf(""%d"", &cs);

	printf(""Number of items:\n"");
	scanf(""%d"", &number);

	/* Calculations */
	nl = number / cl;
	lremainder = number % cl;
	ns = lremainder / cs;
	sremainder = lremainder % cs;

	/* Potraying the final outputs */
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", nl);
	printf("" - Small: %d\n"", ns);
	printf("" - Scrap: %d\n"", sremainder);

	return 0;

}",1
sdal739,1695027320,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int leftover;
    int largecap;
    int smallcap;
    int itemsn;

    printf(""Large capacity:"");
    scanf(""%d"", &largecap);
    printf(""\nSmall capacity:"");
    scanf(""%d"", &smallcap);
    printf(""\nNumber of items:"");
    scanf(""%d"", &itemsn);

    large = itemsn / largecap;
    leftover = itemsn % largecap;
    small = leftover / smallcap;
    leftover = leftover % smallcap;

    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", large);
    printf(""\n - Small: %d"", small);
    printf(""\n - Scrap: %d"", leftover);

    return 0;
}",1
sden589,1695022677,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large_capacity, small_capacity, items;
    int large_containers, small_containers, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large_containers = items / large_capacity;
    items = items % large_capacity;

    small_containers = items / small_capacity;
    items = items % small_capacity;

    scrap = items;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d"", scrap);

    return 0;
}",1
sfry192,1694997658,1,"#include <stdio.h>

int main(void)
{
    int a,b,c,d,e,LargeContainer,SmallContainer,Scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"",&a);
    printf(""Small capacity:\n"");
    scanf(""%d"",&b);
     printf(""Number of items:\n"");
    scanf(""%d"",&c);
    
    d = c % a ;
    LargeContainer = (c - d)/a;
    e = d % b;
    SmallContainer = (d-e)/b;



    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",LargeContainer,SmallContainer,e);

    return 0;


}",0
sfry192,1694997761,2,"#include <stdio.h>

int main(void)
{
    int a,b,c,d,e,LargeContainer,SmallContainer;
    printf(""Large capacity:\n"");
    scanf(""%d"",&a);
    printf(""Small capacity:\n"");
    scanf(""%d"",&b);
     printf(""Number of items:\n"");
    scanf(""%d"",&c);
    
    d = c % a ;
    LargeContainer = (c - d)/a;
    e = d % b;
    SmallContainer = (d-e)/b;



    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",LargeContainer,SmallContainer,e);

    return 0;


}",1
sgal263,1694935778,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main (void)
{
//Assigning integer inputs to data (Large box capacity, Small box capacity, Number of items)//
int Large, Small, Total;
	printf(""Large capacity:\n"");
	scanf(""%d"", &Large);
	printf(""\nSmall capacity:\n"");
	scanf(""%d"", &Small);
	printf(""\nNumber of items:\n"");
	scanf(""%d"", &Total);

//Calculating allocated number of boxes and scraps
	int LargeBoxes = (Total - (Total % Large))/Large;
	int SmallBoxes = ((Total % Large) - ((Total % Large) % Small))/Small;
	int Scrap = (Total % Large) % Small;

	printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", LargeBoxes, SmallBoxes, Scrap);

	return 0;
}
 ",0
sgal263,1694937172,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main (void)
{
//Assigning integer inputs to data (Large box capacity, Small box capacity, Number of items)//
int Large, Small, Total;
	printf(""Large capacity:\n"");
	scanf(""%d"", &Large);
	printf(""Small capacity:\n"");
	scanf(""%d"", &Small);
	printf(""Number of items:\n"");
	scanf(""%d"", &Total);

//Calculating allocated number of boxes and scraps
	int LargeBoxes = (Total - (Total % Large))/Large;
	int SmallBoxes = ((Total % Large) - ((Total % Large) % Small))/Small;
	int Scrap = (Total % Large) % Small;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", LargeBoxes, SmallBoxes, Scrap);

	return 0;
}


 ",1
sgib237,1694932030,1,"#include <stdio.h>

int main()
{
   
  int largeVal, smallVal, Items;
  int large, small, scrap, rem;
  
  printf(""Large capacity:\n"");
  printf(""Small capacity:\n"");
  printf(""Number of items:\n"");
  printf(""Allocated:\n"");
 
  scanf(""%d"", &largeVal);
  scanf(""%d"", &smallVal);
  scanf(""%d"", &Items);
  
  large = floor(Items/largeVal);
  
  rem = Items - (large * largeVal);
  
  small = floor(rem/smallVal);
  
  scrap = rem % smallVal;
  
  printf("" - Large: %d\n"", large);
  printf("" - Small: %d\n"", small);
  printf("" - Scrap: %d\n"", scrap);
  
  
   
   
   
   return 0;
}",0
sgib237,1694932318,2,"#include <stdio.h>

int main()
{
   
  int largeVal, smallVal, Items;
  int large, small, scrap, rem;
  
  printf(""Large capacity:\n"");
  printf(""Small capacity:\n"");
  printf(""Number of items:\n"");
  printf(""Allocated:\n"");
 
  scanf(""%d"", &largeVal);
  scanf(""%d"", &smallVal);
  scanf(""%d"", &Items);
  
  large = Items/largeVal;
  
  rem = Items - (large * largeVal);
  
  small = rem/smallVal;
  
  scrap = rem % smallVal;
  
  printf("" - Large: %d\n"", large);
  printf("" - Small: %d\n"", small);
  printf("" - Scrap: %d\n"", scrap);
  
  
   
   
   
   return 0;
}",1
shan333,1695015079,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{

    int lrgSize, lrgNum, smlSize, smlNum, order, leftOver; 

    printf(""Large capacity:\n"");
    scanf(""%d"", &lrgSize);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smlSize);

    printf(""Number of items:\n"");
    scanf(""%d"", &order);

    lrgNum = order/lrgSize;
    smlNum = (order%lrgSize)/smlSize;
    leftOver = order - lrgNum*lrgSize - smlNum*smlSize;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", lrgNum, smlNum, leftOver);
    return 0;
}

",1
shan790,1694862041,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large, small, items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    int itemsLarge, itemsSmall, scrap;

    itemsLarge = items / large;
    itemsSmall = items % large / small;
    scrap = (items % large) % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", itemsLarge);
    printf("" - Small: %d\n"", itemsSmall);
    printf("" - Scrap: %d"", scrap);

    return 0;
}

",1
shsa718,1695019274,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeBox, smallBox, items, largeBoxes, smallBoxes, scrap, leftover;

    /* Get box sizes and total items from user */
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeBox);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallBox);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    /* Compute how many/which containers will be used */
    largeBoxes = items/largeBox; 
    leftover = items - (largeBoxes*largeBox);
    smallBoxes = leftover/smallBox;
    scrap = leftover % smallBox;

    /* Display results to user */
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", largeBoxes, smallBoxes, scrap);

    return 0;
}

",1
shum116,1694846839,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int allocated1;
    int allocated2;
    int remainder;
    int scrap;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    allocated1 = items/large;
    remainder = items % large;
    allocated2 = remainder / small;
    scrap = remainder % small;
    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"",allocated1,allocated2,scrap);
    return 0;
}

",1
sjaf029,1695029824,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int large;
	int small;
	int items;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	int large_container = 0;
	int small_container = 0;
	int scraps = 0;

	large_container = items / large;
	items = items % large;

	small = items / small;
	items = items % small;
	
	scraps = items;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_container, small, scraps);

	return 0;

}",0
sjaf029,1695030680,2,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void)
{
	int large;
	int small;
	int items;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	int large_container = 0;
	int small_container = 0;
	int scraps = 0;

	large_container = items / large;
	items = items % large;

	small_container = items / small;
	items = items % small;

	scraps = items;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large_container, small_container, scraps);

	return 0;

}",1
sjai563,1694961000,1,"#include <stdio.h>

int main() 
{
    int capacityLarge, capacitySmall, totalItems ;
    int largeContainers, smallContainers, scrap ;

    scanf(""%d"", &capacityLarge) ;
    scanf(""%d"", &capacitySmall) ;
    scanf(""%d"", &totalItems) ;

   
    largeContainers = totalItems / capacityLarge ;
    smallContainers = (totalItems % capacityLarge) / capacitySmall ;

    scrap = (totalItems % capacityLarge) % capacitySmall ;

    printf(""Large capacity:\n"") ;
    printf(""Small capacity:\n"") ;
    printf(""Number of items:\n"") ;
    printf(""Allocated:\n"") ;
    printf("" - Large: %d\n"", largeContainers) ;
    printf("" - Small: %d\n"", smallContainers) ;
    printf("" - Scrap: %d\n"", scrap) ;

    return 0;
}",1
sjam309,1694834125,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int lcapacity;
    int scapacity;
    int number;
    int large;
    int small;
    int scrap;
    int leftover1;
    int leftover2;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&lcapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"",&scapacity);
    printf(""Number of items:\n"");
    scanf(""%d"",&number);

    leftover1 = number % lcapacity;
    large = (number - leftover1)/lcapacity;

    leftover2 = leftover1 % scapacity;
    small = (leftover1 - leftover2)/scapacity;

    scrap = leftover2;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);


    return 0;
}",1
sjob296,1694945134,1,"#include <stdio.h>

int main() 
{
    int large_capacity;
    int small_capacity;
    int total_items;

    // Prompt the user for the capacity of a large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    // Prompt the user for the capacity of a small container
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    // Prompt the user for the total number of items in the order
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large containers needed
    int large_containers = total_items / large_capacity;

    // Calculate the remaining items after filling large containers
    int remaining_items = total_items % large_capacity;

    // Calculate the number of small containers needed for the remaining items
    int small_containers = remaining_items / small_capacity;

    // Calculate the number of items that will be scrapped
    int scrapped_items = remaining_items % small_capacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}",1
skan221,1694987053,1," #include <stdio.h>
int main ()
{
  int Large;
  int Small;
  int x;
  int Scrap;
 
     
     printf(""Large capacity:\n"");
     scanf (""%d"", &Large );
     printf(""Small capacity:\n"");
     scanf (""%d"", &Small);
     printf(""Number of items:\n"");
     scanf (""%d"", &x);
    
     
     Large = x / Large;
     Small = (x % Large) / Small;
     Scrap = (x % Large) % Small;
     

    printf(""Allocated:\n"");
    printf(""Large: %d\n"", Large);
    printf(""Small: %d\n"", Small);
    printf(""Scrap: %d\n"", Scrap);
     
     
     return 0;
}  
     ",0
skan221,1694996639,2," #include <stdio.h>
int main ()
{
  
  int LargeC, SmallC, xC;
  int Large, Small, Scrap;
     
     printf(""Large capacity:\n"");
     scanf (""%d"", &LargeC );
     printf(""Small capacity:\n"");
     scanf (""%d"", &SmallC);
     printf(""Number of items:\n"");
     scanf (""%d"", &xC);
    
     
     Large = xC / LargeC;
     Small = (xC % LargeC) / SmallC;
     Scrap = (xC % Large) % SmallC;
     
    
    printf(""Large capacity:\nSmall capacity:\nNumber of items:\n"");
   
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);

     return 0;
}  
     ",0
skan221,1694996677,3," #include <stdio.h>
int main ()
{
  
  int LargeC, SmallC, xC;
  int Large, Small, Scrap;
     
     printf(""Large capacity:\n"");
     scanf (""%d"", &LargeC );
     printf(""Small capacity:\n"");
     scanf (""%d"", &SmallC);
     printf(""Number of items:\n"");
     scanf (""%d"", &xC);
    
     
     Large = xC / LargeC;
     Small = (xC % LargeC) / SmallC;
     Scrap = (xC % Large) % SmallC;
     
    
     
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);

     return 0;
}  
     ",0
skan221,1694996728,4," #include <stdio.h>
int main ()
{
  
  int LargeC, SmallC, xC;
  int Large, Small, Scrap;
     
     printf(""Large capacity:\n"");
     scanf (""%d"", &LargeC );
     printf(""Small capacity:\n"");
     scanf (""%d"", &SmallC);
     printf(""Number of items:\n"");
     scanf (""%d"", &xC);
    
     
     Large = xC / LargeC;
     Small = (xC % LargeC) / SmallC;
     Scrap = (xC % Large) % SmallC;
     
    
   
   
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);

     return 0;
}  ",0
skan221,1694996915,5," #include <stdio.h>
int main ()
{
  
  int LargeC, SmallC, xC;
  int Large, Small, Scrap;
     
     printf(""Large capacity:\n"");
     scanf (""%d"", &LargeC );
     printf(""Small capacity:\n"");
     scanf (""%d"", &SmallC);
     printf(""Number of items:\n"");
     scanf (""%d"", &xC);
    
     
     Large = xC / LargeC;
     Small = (xC % LargeC) / SmallC;
     Scrap = (xC % LargeC) % SmallC;
     
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);

     return 0;
}  ",1
skop291,1695002200,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;
    int largeUsed, smallUsed, scrapped;

    // Prompt user for the capacity of the large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    // Prompt user for the capacity of the small container
    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    // Prompt user for the total number of items in the order
    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    // Calculate number of large containers used
    largeUsed = totalItems / largeCapacity;
    totalItems -= largeUsed * largeCapacity;

    // Calculate number of small containers used
    smallUsed = totalItems / smallCapacity;
    totalItems -= smallUsed * smallCapacity;

    // Remaining items will be scrapped
    scrapped = totalItems;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeUsed);
    printf("" - Small: %d\n"", smallUsed);
    printf("" - Scrap: %d\n"", scrapped);

    return 0;
}
",1
slie508,1695014379,1,"#include <stdio.h>

int main(void)
{
    int l, s, n, large, small, scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &l);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    while (n>l) {
        n = n-l;
        large = large +1;
    }
    while (n>s) {
        n = n-s;
        small = small +1;
    }
    scrap = n;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);

    return 0;
}",0
slie508,1695014933,2,"#include <stdio.h>

int main(void)
{
    int l, s, n, large, small, scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &l);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    large = n/l;
    small = (n % l)/s;
    scrap = (n % l) % s;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);

    return 0;
}",1
sluo487,1694917958,1,"#include <stdio.h>

int main(void)
{
    int largeinput, smallinput, num, scrap, large, small, leftover;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeinput);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallinput);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    
    large = num / largeinput;
    leftover = num % largeinput;
    small = leftover / smallinput;
    scrap = leftover % smallinput;
    
    printf(""Allocated = \n"");
    printf("" - Large: %d \n"", large);
    printf("" - Small: %d \n"", small);
    printf("" - Scrap: %d \n"", scrap);

    return 0;
}",0
sluo487,1694917974,2,"#include <stdio.h>

int main(void)
{
    int largeinput, smallinput, num, scrap, large, small, leftover;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeinput);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallinput);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &num);
    
    large = num / largeinput;
    leftover = num % largeinput;
    small = leftover / smallinput;
    scrap = leftover % smallinput;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", large);
    printf("" - Small: %d \n"", small);
    printf("" - Scrap: %d \n"", scrap);

    return 0;
}",1
sman821,1694914605,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCapacity,smallCapacity,noItems,noLarge,noSmall,scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"",&smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"",&noItems);

    noLarge = (int)(noItems / largeCapacity);
    noSmall = (int)((noItems % (noLarge * largeCapacity)) / smallCapacity);
    scrap = noItems - (noLarge * largeCapacity + noSmall * smallCapacity);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",noLarge,noSmall,scrap);

    return 0;
}",0
sman821,1694914793,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCapacity,smallCapacity,noItems,noLarge,noSmall,scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"",&smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"",&noItems);

    noLarge = (int)(noItems / largeCapacity);
    noSmall = (int)((noItems - (noLarge * largeCapacity)) / smallCapacity);
    scrap = noItems - (noLarge * largeCapacity + noSmall * smallCapacity);

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",noLarge,noSmall,scrap);

    return 0;
}",1
sman833,1694823885,1,"#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    int largeNeeded;
    largeNeeded = items / large;

    int remainingItems;
    int smallNeeded;
    int scrap;

    remainingItems = items % large;
    smallNeeded = remainingItems / small;
    scrap = remainingItems % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeNeeded);
    printf("" - Small: %d\n"", smallNeeded);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
smck855,1694925056,1,"#include <stdio.h>

int main()
{
   int largecap;
   int smallcap;
   int num;
   int large;
   int small;
   int scrap;
   int left;
   
   
   printf(""Large capacity: \n"");
   scanf(""%d"", &largecap);
   printf(""Small capacity: \n"");
   scanf(""%d"", &smallcap);
   printf(""Number of items: \n"");
   scanf(""%d"", &num);
   
   large = num/largecap;
   left = num%largecap;
   small = left/smallcap;
   scrap = left%smallcap;
   
   printf(""Allocated: \n"");
   printf("" - Large: %d\n"", large);
   printf("" - Small: %d\n"", small);
   printf("" - Scrap: %d\n"", scrap);
   
   
   
    return 0;
}

",1
smun623,1695008957,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int items;
    int large;
    int small;
    int scrap;
    int LargeCapacity;
    int SmallCapacity;

    printf(""Large capacity:\n"");
    scanf(""%d"", &LargeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &SmallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = items / LargeCapacity;

    small = (items - (large*LargeCapacity) ) / SmallCapacity;

    scrap = (items - (large*LargeCapacity)) - (small*SmallCapacity);

    
        printf(""Allocated:\n"");
        printf("" - Large: %d\n"", large);
        printf("" - Small: %d\n"", small);
        printf("" - Scrap: %d\n"", scrap);


    return 0;
}

",1
snas404,1695030917,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int a;
	int b;
	int c;
	int Quotient1;
	int Dividend1;
	int Quotient2;
	int Sum;
	int Scrap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &a);

	printf(""Small capacity:\n"");
	scanf(""%d"", &b);

	printf(""Number of items:\n"");
	scanf(""%d"", &c);

	Quotient1 = c / a;
	scanf(""%d"", &Quotient1);

	Dividend1 = c - Quotient1 * a;

	Quotient2 = Dividend1 / b;
	scanf(""%d"", &Quotient2);

	Sum = Quotient1 * a + Quotient2 * b;

	Scrap = c - Sum;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", Quotient1);
	printf("" - Small: %d\n"", Quotient2);
	printf("" - Scrap: %d\n"", Scrap);

	return 0;
}

",1
span558,1694838918,1,"#include <stdio.h>

int main()
{
  int large_capacity;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large_capacity);

    int small_capacity;
    printf(""Small capacity: \n"");
    scanf(""%d"", &small_capacity);
    
    int number;
    printf(""Number of items: \n"");
    scanf(""%d"", &number);    
    
    int large = number / large_capacity;
    int remain = number % large_capacity;
    int small = remain / small_capacity;
    int scrap = remain % small_capacity;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d \n"", large);
    printf("" - Small: %d \n"", small);
    printf("" - Scrap: %d \n"", scrap);
    
    return 0;
}",1
spar473,1695005886,1,"#include <stdio.h>

int main() 
{
    int lc, sc, number, Large, LL, Small, Scrap;

    printf(""Large capacity: \n"");
    scanf("" %d"", &lc);

    printf(""Small capacity: \n"");
    scanf(""%d"", &sc);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &number);

    Large = number / lc;
    LL = number % lc;
    
    Small = LL / sc;

    Scrap = number - (lc * Large) - (sc * Small);

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", Scrap);


    return 0;
}",1
spar820,1695004083,1,"#include <stdio.h>

int main()

{
    int L;
    printf(""Large capacity:\n"");
    scanf(""%d"", &L);
    
    int s;
    printf(""Small capacity:\n"");
    scanf(""%d"", &s);
    
    int n;
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    
    int Large;
    int Small;
    int Scrap;
    
    Large = (n / L);
    Small = (n % L) / s;
    Scrap = (n % L) % s;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);
    
    return 0;
}
",1
sran136,1694950943,1,"
#include <stdio.h>
#include <math.h>
  
int
main () 
{
  
double large_capacity;
  
double small_capacity;
  
double items;
  
printf (""Large capacity: "" ""\n"");
  
scanf (""%lf"", &large_capacity);
  
printf (""Small capacity: "" ""\n"");
  
scanf (""%lf"", &small_capacity);
  
printf (""Number of items: "" ""\n"");
  
scanf (""%lf"", &items);
  
 
double large_allocated = floor (items / large_capacity);
  
double small_allocated =
    floor ((((items / large_capacity) -
	     large_allocated) * large_capacity) / small_capacity);
  
double scrap_allocated =
    (items -
     (large_capacity * large_allocated + small_capacity * small_allocated));
  
 
printf (""Allocated:"" ""\n"");
  
printf ("" - Large: %.0f"" ""\n"", large_allocated);
  
printf ("" - Small: %.0f"" ""\n"", small_allocated);
  
printf ("" - Scrap: %.0f"" ""\n"", scrap_allocated);
  
 
 
 
return 0;

}


",0
sran136,1694952668,2,"
#include <stdio.h>
#include <math.h>

int main()
{
    double large_capacity;
    double small_capacity;
    double items;
    printf(""Large capacity: """"\n"");
    scanf(""%lf"", &large_capacity);
    printf(""Small capacity: """"\n"");
    scanf(""%lf"", &small_capacity);
    printf(""Number of items: """"\n"");
    scanf(""%lf"", &items);
    
    double large_allocated = floor(items / large_capacity);
    double remaining_items = items - (large_allocated * large_capacity);
    double small_allocated = floor(remaining_items / small_capacity);
    double scrap_allocated = remaining_items - (small_allocated * small_capacity);
    
    printf(""Allocated:""""\n"");
    printf("" - Large: %.0f""""\n"", large_allocated);
    printf("" - Small: %.0f""""\n"", small_allocated);
    printf("" - Scrap: %.0f""""\n"", scrap_allocated);
    
    

    return 0;
}
",1
ssan467,1695033752,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    double large, small, items;

    printf(""Large capacity:\n"");
    scanf(""%lf"", &large);

    printf(""Small capacity:\n"");
    scanf(""%lf"", &small);

    printf(""Number of items:\n"");
    scanf(""%lf"", &items);

    int l = floor(items / large);

    int s = floor((items - l * large) / small);

    int scrap = items - large * l - small * s;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", l);
    printf("" - Small: %d\n"", s);
    printf("" - Scrap: %d"", scrap);

    return 0;
}",1
ssco465,1695023460,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) 
{   
    int large;
    int small;
    int items;
    int scrapped;
    int largecont;
    int smallcont;
   
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    largecont = items / large;
    smallcont = (items % large) / small;
    scrapped = items % large % small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecont);
    printf("" - Small: %d\n"", smallcont);
    printf("" - Scrap: %d\n"", scrapped);

    return 0;
}

",1
ssey266,1695019938,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Largecapacity;
    printf(""Large capacity:"");
    scanf(""%d"", &Largecapacity);
    
    
    int Smallcapacity;
    printf(""\nSmall capacity:"");
    scanf(""%d"", &Smallcapacity);
    
    int Numberofitems;
    printf(""\nNumber of items:"");
    scanf(""%d"", &Numberofitems);
    
    int Large;
    int Small;
    int Scrap;
    Large = Numberofitems/Largecapacity;
    Small = (Numberofitems%Largecapacity) / Smallcapacity;
    Scrap = Numberofitems - ((Large*Largecapacity)+(Small*Smallcapacity));
    
     printf(""\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",Large,Small,Scrap);
    
    return 0;
}",1
ssiv093,1695014058,1,"#include <stdio.h>

int main()
{
      
    int largeCapacity;
    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    int smallCapacity;
    printf(""Small capacity:"");
    scanf(""%d"", &smallCapacity);

    int totalItems;
    printf(""Number of items:"");
    scanf(""%d"", &totalItems);
    
    int largeContainers;
    largeContainers = totalItems / largeCapacity;
    
    int smallContainers;
    smallContainers = (totalItems % largeCapacity) / smallCapacity;
    
    int scrapItems;
    scrapItems = (totalItems % largeCapacity) % smallCapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}",0
ssiv093,1695014234,2,"#include <stdio.h>

int main()
{
      
    int largeCapacity;
    printf(""Large capacity:"");
    scanf(""%d"", &largeCapacity);

    int smallCapacity;
    printf(""\n""""Small capacity:"");
    scanf(""%d"", &smallCapacity);

    int totalItems;
    printf(""\n""""Number of items:"");
    scanf(""%d"", &totalItems);
    
    int largeContainers;
    largeContainers = totalItems / largeCapacity;
    
    int smallContainers;
    smallContainers = (totalItems % largeCapacity) / smallCapacity;
    
    int scrapItems;
    scrapItems = (totalItems % largeCapacity) % smallCapacity;

    printf(""\n""""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}",1
steb012,1695011885,1,"#include <stdio.h>

int main() {
    int l, s, n, Large, Small, Scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &l);
    printf(""Small capacity: \n"");
    scanf(""%d"", &s);
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    
    while (n >= l){
        n = n - l;
        Large = Large + 1;
    }
    
    while (n >= s){
        n = n - s;
        Small = Small + 1;
    }
    
    Scrap = n;
    
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);
    return 0;
}
",0
steb012,1695013237,2,"#include <stdio.h>

int main() {
    int l, s, n, Large, Small, Scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &l);
    printf(""Small capacity: \n"");
    scanf(""%d"", &s);
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    
    while (n >= l){
        n = n - l;
        Large = Large + 1;
    }
    
    while (n >= s){
        n = n - s;
        Small = Small + 1;
    }
    
    Scrap = n;
    
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Large, Small, Scrap);
    return 0;
}
",0
steb012,1695036085,3,"#include <stdio.h>

int main() {
    int l, s, n, Large, Scrapl, Small, Scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &l);
    printf(""Small capacity: \n"");
    scanf(""%d"", &s);
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    
    Large = n/l;
    Scrapl = n%l;
    
    Small = Scrapl/s;
    Scrap = Scrapl%s;
    
    printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);
    return 0;
}

",1
sum778,1694960400,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int Large;
	int Small;
	int Items;
	int Scrap;
	int LargeNum;
	int SmallNum;

	printf(""Large capacity: \n"");
	scanf(""%d"", &Large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &Small);

	printf(""Number of items: \n"");
	scanf(""%d"", &Items);

	LargeNum = Items / Large;
	SmallNum = (Items - LargeNum * Large)/Small;

	Scrap = Items - (LargeNum * Large + SmallNum * Small);

	printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d\n"", LargeNum, SmallNum, Scrap);

	return 0;
}",1
sval918,1695038267,1,"#include <stdio.h>

int main(void)

{
    int lcap;
    int scap;
    int total;
    int remaining_item;
    int large_containers;
    int small_containers;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &lcap);
    printf(""Small capacity: \n"");
    scanf(""%d"", &scap);
    printf(""Number of items: \n"");
    scanf(""%d"", &total);
    
    large_containers = total / lcap;
    
    remaining_item = total % lcap;
    
    small_containers = remaining_item / scap;
    
    scrap = remaining_item % scap;
    
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
}
    
    
    
    
    
    
    
    
",1
swan472,1695019544,1,"#include <stdio.h>

int main() 

{
    int large_capacity, small_capacity, total_items;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large containers needed
    int num_large_containers = total_items / large_capacity;

    // Calculate the number of small containers needed
    int num_small_containers = (total_items % large_capacity) / small_capacity;

    // Calculate the number of items that will be scrapped
    int num_scrapped_items = (total_items % large_capacity) % small_capacity;

    // Display the results
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);

    return 0;
}",0
swan472,1695019662,2,"#include <stdio.h>

int main() 

{
    int large_capacity, small_capacity, total_items;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large containers needed
    int num_large_containers = total_items / large_capacity;

    // Calculate the number of small containers needed
    int num_small_containers = (total_items % large_capacity) / small_capacity;

    // Calculate the number of items that will be scrapped
    int num_scrapped_items = (total_items % large_capacity) % small_capacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);

    return 0;
}",1
syua841,1695033613,1,"#include <stdio.h>

int main(void)
{
  int large;
  int small;
  int scrap;
  int items;
  int rem1;
  
  
  printf(""Large capacity: \n"");
  scanf(""%d"", &large);
  
  printf(""Small capacity: \n"");
  scanf(""%d"", &small);
  
  printf(""Number of items: \n"");
  scanf(""%d"", &items);
  
  rem1 = items % large;
  large = items/large;
  
  scrap = rem1 % small;
  small = rem1/small;
  
  printf(""Allocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);
  
  return 0;
  
  
}",1
szen566,1695007464,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, totalItems;
    int numberLarge, numberSmall, itemsLeft, itemScrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);

    numberLarge = totalItems / largeCap;
    itemsLeft = totalItems - (numberLarge * largeCap);

    numberSmall = itemsLeft / smallCap;
    itemScrap = itemsLeft - (numberSmall * smallCap);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numberLarge);
    printf("" - Small: %d\n"", numberSmall);
    printf("" - Scrap: %d"", itemScrap);

    return 0;
}",1
szho466,1695030449,1,"#include <stdio.h>

int
main ()
{

  int l;
  int s;
  int n;
  int largen;
  int smalln;
  int Scrap;

  printf (""Large capacity: \n"");
  scanf (""%d"", &l);
  printf (""Small capacity: \n"");
  scanf (""%d"", &s);
  printf (""Number of items: \n"");
  scanf (""%d"", &n);
  
  largen=n/l;
  smalln=(n%l)/s;
  Scrap=n-largen*l-smalln*s;
  
  
  printf(""Allocated:\n"");
  printf("" - Large: %d \n"",largen);
  printf("" - Small: %d \n"",smalln);
  printf("" - Scrap: %d \n"",Scrap);


  return 0;
}
",1
tais804,1694949567,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int l_Cap;
    int s_Cap;
    int items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &l_Cap);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s_Cap);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    int large = items/l_Cap;
    int small = (items%l_Cap)/s_Cap;
    int scrap = items - large*l_Cap - small*s_Cap;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d"", scrap);
    return 0;
}",1
tbad483,1695034680,1,"#include <stdio.h>
int main()
{
    int Lbox, Sbox, no_items;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Lbox);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Sbox);
    printf(""Number of items:\n"");
    scanf(""%d"", &no_items);
    int no_Lbox = floor(no_items/Lbox);
    int remain1 = (no_items % Lbox);
    int no_Sbox = floor(remain1/Sbox);
    int remainf = (remain1 % Sbox);
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", no_Lbox, no_Sbox, remainf);
}",0
tbad483,1695034785,2,"#include <stdio.h>
int main()
{
    int Lbox, Sbox, no_items;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Lbox);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Sbox);
    printf(""Number of items:\n"");
    scanf(""%d"", &no_items);
    int no_Lbox = no_items/Lbox;
    int remain1 = (no_items % Lbox);
    int no_Sbox = remain1/Sbox;
    int remainf = (remain1 % Sbox);
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", no_Lbox, no_Sbox, remainf);
}",1
tbar968,1694856687,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int L;
	int LARGE;
	int S;
	int SMALL;
	int N;
	int SCRAP;

	printf(""Large capacity:\n"");
	scanf(""%d"", &L);

	printf(""Small capacity:\n"");
	scanf(""%d"", &S);

	printf(""Number of items:\n"");
	scanf(""%d"", &N);

	LARGE = N / L;
	SMALL = (N % L) / S;
	SCRAP = (N % L) % S;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", LARGE, SMALL, SCRAP);

	return 0;
}",1
tbas606,1695019519,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() 
{
    int largeCapacity, smallCapacity, totalItems;

   
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &totalItems);
    
    int numLargeContainers = totalItems / largeCapacity;
    int numSmallContainers = (totalItems % largeCapacity) / smallCapacity;
    
    int scrappedItems = totalItems - (numLargeContainers * largeCapacity + numSmallContainers * smallCapacity);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", numLargeContainers);
    printf("" - Small: %d\n"", numSmallContainers);
    printf("" - Scrap: %d\n"", scrappedItems);

    return 0;
}
",1
tbed601,1695011985,1,"#include <stdio.h>

int main(void)
{
    int Lc;
    int Sc;
    int Ni;
 
    printf(""Large capacity: \n"");
    scanf(""%d"", &Lc);
 
    printf(""Small capacity: \n"");
    scanf(""%d"", &Sc);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &Ni);
    
    int L;
    int S;
    int scr;
    
    L = Ni/Lc;
    S = (Ni - Lc*L)/Sc;
    scr = Ni - (Lc*L + S*Sc);
    
    printf(""Allocated: \n"");
    printf(""- Large: %d \n"", L);
    printf(""- Small: %d \n"", S);
    printf(""- Scrap: %d \n"", scr);
    
return 0;
}
",0
tbed601,1695012070,2,"#include <stdio.h>

int main(void)
{
    int Lc;
    int Sc;
    int Ni;
 
    printf(""Large capacity: \n"");
    scanf(""%d"", &Lc);
 
    printf(""Small capacity: \n"");
    scanf(""%d"", &Sc);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &Ni);
    
    int L;
    int S;
    int scr;
    
    L = Ni/Lc;
    S = (Ni - Lc*L)/Sc;
    scr = Ni - (Lc*L + S*Sc);
    
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", L);
    printf("" - Small: %d \n"", S);
    printf("" - Scrap: %d \n"", scr);
    
return 0;
}
",1
tbri557,1695000691,1,"#include <stdio.h>

int main()
{
    int lc, sc, n;
    int ln, sn, s;
    printf(""Large capacity:\n"");
    scanf(""%d"", &lc);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &sc);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &n);
    
    ln = (n - n%lc)/lc;
    sn = (n%lc - (n%lc)%sc)/sc;
    s = n - ln*lc - sn*sc;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", ln, sn, s);

    return 0;
}",1
tche867,1694946295,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h> 
int main(void) {
	int large_c, small_c, item, large_number, small_number, scrap;
	printf(""Large capacity:\n"");
	scanf(""%d"", &large_c);
	printf(""Small capacity:\n"");
	scanf(""%d"", &small_c);
	printf(""Number of items:\n"");
	scanf(""%d"", &item);
	large_number = item / large_c;
	small_number = (item % large_c) / small_c;
	scrap = item - large_c * large_number - small_c * small_number;
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large_number);
	printf("" - Small: %d\n"", small_number);
	printf("" - Scrap: %d\n"", scrap);
	return 0;
}",1
tcoo725,1695024406,1,"#include <stdio.h>

int main(void)
{
    int L; 
    int S; 
    int N; 
    int A;
    int B;
    int C;
    int D;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &L);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &S);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &N);
    
    A = N%L; 
    C = N/L; 
    B = A%S;
    D = A/S; 
   
    
    
   printf(""Allocated:\n - Large: %d \n - Small: %d \n - Scrap: %d \n"", C,D,B);
    
    
   
    return 0;
    
}",1
tden200,1694927916,1,"#include <stdio.h>
int main(void)

{
	int CapacityOfLarge;
	int CapacityOfSmall;
	int NumberOfItems;
	printf(""Large capacity:\n"");
	scanf(""%d"", &CapacityOfLarge);
	printf(""Small capacity:\n"");
	scanf(""%d"", &CapacityOfSmall);
	printf(""Number of items:\n"");
	scanf(""%d"", &NumberOfItems);

	int Remainder = NumberOfItems % CapacityOfLarge;

	int scrap;
	int NumberOfLarge;
	int NumberOfSmall;
	int SmallRemainder;

	if (Remainder < CapacityOfSmall)
	{
		scrap = Remainder;
		NumberOfLarge = NumberOfItems / CapacityOfLarge;
		NumberOfSmall = 0;
	}
	else
	{
		scrap = Remainder % CapacityOfSmall;
		NumberOfLarge = (NumberOfItems - Remainder) / CapacityOfLarge;
		NumberOfSmall = (Remainder - scrap) / CapacityOfSmall;
	}

	printf(""Allocted:\n - Large: %d\n - Small: %d\n - Scrap: %d"", NumberOfLarge, NumberOfSmall, scrap);


	return 0;


}",0
tden200,1694928062,2,"#include <stdio.h>
int main(void)

{
	int CapacityOfLarge;
	int CapacityOfSmall;
	int NumberOfItems;
	printf(""Large capacity:\n"");
	scanf(""%d"", &CapacityOfLarge);
	printf(""Small capacity:\n"");
	scanf(""%d"", &CapacityOfSmall);
	printf(""Number of items:\n"");
	scanf(""%d"", &NumberOfItems);

	int Remainder = NumberOfItems % CapacityOfLarge;

	int scrap;
	int NumberOfLarge;
	int NumberOfSmall;

	if (Remainder < CapacityOfSmall)
	{
		scrap = Remainder;
		NumberOfLarge = NumberOfItems / CapacityOfLarge;
		NumberOfSmall = 0;
	}
	else
	{
		scrap = Remainder % CapacityOfSmall;
		NumberOfLarge = (NumberOfItems - Remainder) / CapacityOfLarge;
		NumberOfSmall = (Remainder - scrap) / CapacityOfSmall;
	}

	printf(""Allocted:\n - Large: %d\n - Small: %d\n - Scrap: %d"", NumberOfLarge, NumberOfSmall, scrap);


	return 0;


}


",0
tden200,1694928338,3,"#include <stdio.h>
int main(void)

{
	int CapacityOfLarge;
	int CapacityOfSmall;
	int NumberOfItems;
	printf(""Large capacity:\n"");
	scanf(""%d"", &CapacityOfLarge);
	printf(""Small capacity:\n"");
	scanf(""%d"", &CapacityOfSmall);
	printf(""Number of items:\n"");
	scanf(""%d"", &NumberOfItems);

	int Remainder = NumberOfItems % CapacityOfLarge;

	int scrap;
	int NumberOfLarge;
	int NumberOfSmall;

	if (Remainder < CapacityOfSmall)
	{
		scrap = Remainder;
		NumberOfLarge = NumberOfItems / CapacityOfLarge;
		NumberOfSmall = 0;
	}
	else
	{
		scrap = Remainder % CapacityOfSmall;
		NumberOfLarge = (NumberOfItems - Remainder) / CapacityOfLarge;
		NumberOfSmall = (Remainder - scrap) / CapacityOfSmall;
	}

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", NumberOfLarge, NumberOfSmall, scrap);


	return 0;


}


",1
tdha392,1695029213,1,"#include <stdio.h>

int main(void)
{
	int LargeC;
	int SmallC;
	int Items;
	int L;
	int AmountInL;
	int Remainder;
	int S;
	int AmountInS;
	int Scrap;


	printf(""Large capacity: \n"");
	scanf(""%d"", &LargeC);
	printf(""Small capacity: \n"");
	scanf(""%d"", &SmallC);
	printf(""Number of items: \n"");
	scanf(""%d"", &Items);

	L = (Items / LargeC);
	AmountInL = L * LargeC;

	Remainder = Items - AmountInL;
	S = (Remainder / SmallC);
	AmountInS = (S * SmallC);
	Remainder = (Remainder - AmountInS);

	Scrap = Remainder;

	printf(""Allocated: \n"");
	printf("" - Large: %d \n"", L);
	printf("" - Small: %d \n"", S);
	printf("" - Scrap: %d \n"", Scrap);
}",1
tdon950,1694913422,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int largeBoxes;
    int smallBoxes;
    int scrap;
    
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    largeBoxes = items / large;
    
    smallBoxes = (items % large) / small;
    
    scrap = (items % large) - smallBoxes * small;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeBoxes);
    printf("" - Small: %d\n"", smallBoxes);
    printf("" - Scrap: %d"", scrap);
    
    return 0;
}
",1
tdu824,1694866300,1,"#include <stdio.h>

int main(void)
{
    int largec;
    int smallc;
    int leftover;
    int total;
    int large;
    int small;
    int leftlarge;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largec);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallc);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    leftlarge = total % largec;
    large = (total - leftlarge) / largec;
    leftover = leftlarge % smallc;
    small = (leftlarge - leftover) / smallc;


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", leftover);
    return 0;
}",1
tfai092,1695019205,1,"#include <stdio.h> 

int main()
{
    int Large;
    int Small;
    int Items;
    int nLarge;
    int nSmall;
    int Scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Small);
    printf(""Number of items:\n"");
    scanf(""%d"", &Items);
    
    nLarge = Items / Large;
    nSmall = (Items % Large) / Small;
    Scrap = (Items % Large) % Small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", nLarge, nSmall, Scrap);

    return 0;
}",1
tfai653,1694993947,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int large_cap;
    int small_cap;
    int small;
    int items;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = items / large_cap;
    items = items % large_cap;

    small = items / small_cap;
    items = items % small_cap;

    scrap = items;

    printf(""Allocated:\n"");
    printf(""- Large: %d\n"", large);
    printf(""- Small: %d\n"", small);
    printf(""- Scrap: %d\n"", scrap);

    return 0;
}",0
tfai653,1694994059,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int large_cap;
    int small_cap;
    int small;
    int items;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_cap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_cap);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    large = items / large_cap;
    items = items % large_cap;

    small = items / small_cap;
    items = items % small_cap;

    scrap = items;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
thar970,1694795719,1,"#include <stdio.h>
#include <math.h>
#define PI 3.14159
int main(){
    int L,S,N,large,small,scrap;
    scanf(""%d"",&L);
    scanf(""%d"",&S);
    scanf(""%d"",&N);
    large=N/L;
    small=(N%L)/S;
    scrap=(N%L)%S;
    printf(""Large capacity:\nSmall capacity:\nNumber of items:\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);
}",1
thid924,1695015173,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	//ex5
	//printf(""  /\\-----/\\\n"");
	//printf("" /  \\---/  \\\n"");
	//printf(""< Lab Seven >\n"");
	//printf("" \\  /---\\  /\n"");
	//printf(""  \\/-----\\/"");


	//q6
	//char letter, new_letter;
	//int  steps;
	
	//printf(""Enter letter:\n"");
	//scanf(""%c"", &letter);

	//printf(""Enter steps:\n"");
	//scanf(""%d"", &steps);

	//new_letter = ((letter - 'A' + steps) % 26) + 'A';

	//printf(""%c -- %d --> %c"", letter, steps, new_letter);


	//q7
	//double larger, smaller, pi, area;
	//
	//pi = 3.14159;

	//printf(""Larger:\n"");
	//scanf(""%lf"", &larger);

	//printf(""Smaller:\n"");
	//scanf(""%lf"", &smaller);

	//area = (pi * (larger* larger)) - (pi * (smaller * smaller));

	//printf(""Area: %.3f cm^2"", area);

	//q8
	//double n, a, d;
	//int sum;
	//printf(""Enter the first value in the sequence:\n"");
	//scanf(""%lf"", &a);

	//printf(""Enter the difference between consecutive values:\n"");
	//	scanf(""%lf"", &d);

	//	printf(""Enter the number of values in the sequence:\n"");
	//	scanf(""%lf"", &n);

	//	sum = (n * a) + ((n / 2) * (d * n - d)); 

	//	printf(""Sum = %d"", sum);

	///////////////////////////////////////////////////////////////

	//q9

	int large_capacity, small_capacity, items, large_remainder, scrap;

		printf(""Large capacity:\n"");
	scanf(""%d"", &large_capacity);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small_capacity);

	printf(""Number of items:\n"");
		scanf(""%d"", &items);

		printf(""Allocated:\n - Large: %d\n"", (items / large_capacity));

		large_remainder = (items % large_capacity);

		printf("" - Small: %d\n"", (large_remainder / small_capacity));
		scrap = large_remainder % small_capacity;

		printf("" - Scrap: %d"", scrap);

		
		



	return 0;
}
",1
thua238,1694944425,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int l_capacity, s_capacity, items, l_num, s_num, scrap;

    /*get capacities & items num input*/
    printf(""Large capacity:\n"");
    scanf(""%d"", &l_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &s_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    /*calculate num of L/S containers & leftover scraps*/
    l_num = (items - items%l_capacity) / l_capacity;
    s_num = (items%l_capacity - items%l_capacity%s_capacity) 
        / s_capacity;
    scrap = items%l_capacity%s_capacity;

    /*display amount for each category*/
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", l_num);
    printf("" - Small: %d\n"", s_num);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}

",1
tkan918,1695007813,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
    int L=0;
    int S=0;
    int n=0;
    double La=0;
    double Sa=0;
    double Scr=0;
    printf(""Large capacity:\n"");
    scanf(""%d"",&L);
    printf(""Small capacity:\n"");
    scanf(""%d"",&S);
    printf(""Number of items:\n"");
    scanf(""%d"",&n);

    La = floor((double)n/(double)L);
    Sa = floor((double)(n%L)/(double)S);
    Scr = floor((n%L)%S);

    printf(""Allocated:\n"");
    printf("" - Large: %.0f\n"", La);
    printf("" - Small: %.0f\n"", Sa);
    printf("" - Scrap: %.0f\n"", Scr);
    return 0;
}",0
tkan918,1695007910,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
int main(void)
{
    int L=0;
    int S=0;
    int n=0;
    double La=0;
    double Sa=0;
    double Scr=0;
    printf(""Large capacity:\n"");
    scanf(""%d"",&L);
    printf(""Small capacity:\n"");
    scanf(""%d"",&S);
    printf(""Number of items:\n"");
    scanf(""%d"",&n);

    La = floor((double)n/(double)L);
    Sa = floor((double)(n%L)/(double)S);
    Scr = floor((n%L)%S);

    printf(""Allocated:\n"");
    printf("" - Large: %.0f\n"", La);
    printf("" - Small: %.0f\n"", Sa);
    printf("" - Scrap: %.0f\n"", Scr);
    return 0;
}",1
tlal352,1695031429,1,"#include <stdio.h>

int main()
{
    //user inputs
    int Large_capacity;
    int Small_capacity;
    int items;
    
    //variables
    int Large;
    int Small;
    int a, b;
    
    //user inputs
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    //calculation
    a = items % Large_capacity;
    Large = (items - a)/Large_capacity;
    
    b = a % Small_capacity;
    Small = (a - b)/Small_capacity;
    
//outputs 

    printf(""Large capacity:\n"");
    printf(""\x1b[1;31m%d \x1b[0m\n"", Large_capacity);
    
    printf(""Small capacity:\n"");
    printf(""\x1b[1;31m%d \x1b[0m\n"", Small_capacity);
    
    printf(""Number of items:\n"");
    printf(""\x1b[1;31m%d \x1b[0m\n"", items);

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", b);

    
    return 0;
}
",0
tlal352,1695031487,2,"#include <stdio.h>

int main()
{
    //user inputs
    int Large_capacity;
    int Small_capacity;
    int items;
    
    //variables
    int Large;
    int Small;
    int a, b;
    
    //user inputs
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &Small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    
    //calculation
    a = items % Large_capacity;
    Large = (items - a)/Large_capacity;
    
    b = a % Small_capacity;
    Small = (a - b)/Small_capacity;
    
//outputs 

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Large);
    printf("" - Small: %d\n"", Small);
    printf("" - Scrap: %d\n"", b);

    
    return 0;
}
",1
tlin438,1695010000,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int a;/*large cap*/
    int b;/*small cap*/
    int c;/*number of items*/
    int d;/*allocated large*/
    int e;/*al small*/
    int f;/*scrap*/

    printf(""Large capacity:\n"");
    scanf(""%d"", &a);

    printf(""Small capacity:\n"");
    scanf(""%d"", &b);

    printf(""Number of items:\n"");
    scanf(""%d"", &c);

    d = c / a;
    e = (c % a) / b;
    f = (c % a) % b;


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", d);
    printf("" - Small: %d\n"", e);
    printf("" - Scrap: %d\n"", f);

    return 0;
}
",1
tluu816,1694948462,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	/*Prelocating variables as their types*/
	int LargeSize, SmallSize, Items, Leftover, LargeContainers, SmallContainers, Scrapped;

	/*requests user input for container sizes and number of items*/
	printf(""Large capacity:"");
	scanf(""%d"", &LargeSize);
	printf(""\nSmall capacity:"");
	scanf(""%d"", &SmallSize);
	printf(""\nNumber of items:"");
	scanf(""%d"", &Items);

	/*solving how many containers can be done with modulo functions*/

	Leftover = Items % LargeSize;
	/*Calculates how many large containers are required*/
	LargeContainers = (Items - Leftover) / LargeSize;

	Scrapped = Leftover % SmallSize;
	/*Calculates how many small containers are required*/
	SmallContainers = (Leftover - Scrapped) / SmallSize;

	printf(""\nAllocated:"");
	printf(""\n - Large: %d"", LargeContainers);
	printf(""\n - Small: %d"", SmallContainers);
	printf(""\n - Scrap: %d"", Scrapped);
}

",1
tmcl219,1694840760,1,"#include <stdio.h>

/*This code works out how many large and small containers will be needed to ship
a number of items.*/
int main(void)
{
    int l;
    int s;
    int n;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity: \033[1;31m\n"");
    scanf(""%d"", &l);
    
    printf(""\033[1;0mSmall capacity: \033[1;31m\n"");
    scanf(""%d"", &s);
    
    printf(""\033[1;0mNumber of items: \033[1;31m\n"");
    scanf(""%d"", &n);
    
    large = round(n/l);
    small = round((n%l)/s);
    scrap = n-(l*large)-(s*small);
    
    printf(""\033[1;0mAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);

    return 0;
}",0
tmcl219,1694841544,2,"#include <stdio.h>
#include <math.h>

/*This code works out how many large and small containers will be needed to ship
a number of items.*/
int main(void)
{
    int l;
    int s;
    int n;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity: \033[1;31m\n"");
    scanf(""%d"", &l);
    
    printf(""\033[1;0mSmall capacity: \033[1;31m\n"");
    scanf(""%d"", &s);
    
    printf(""\033[1;0mNumber of items: \033[1;31m\n"");
    scanf(""%d"", &n);
    
    large = round(n/l);
    small = round((n%l)/s);
    scrap = n-(l*large)-(s*small);
    
    printf(""\033[1;0mAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);

    return 0;
}
",0
tmcl219,1694914577,3,"#include <stdio.h>
#include <math.h>

/*This code works out how many large and small containers will be needed to ship
a number of items.*/
int main(void)
{
    int l;
    int s;
    int n;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &l);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &s);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &n);
    
    large = round(n/l);
    small = round((n%l)/s);
    scrap = n-(l*large)-(s*small);
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", large, small, scrap);

    return 0;
}",1
tpat456,1694925146,1,"#include <stdio.h>

int main()
{
    int l;
    int s;
    int n;

   printf(""Large capacity:\n"");
   scanf(""%i"",&l);
   printf(""Small capacity:\n"");
   scanf(""%i"",&s);
   printf(""Number of items:\n"");
   scanf(""%i"",&n);
   int large;
   large = n / l;
   int small;
   small = (n - (large*l)) / s;
   int scrap;
   scrap = n - (large*l) - (small*s);
  
 
   printf(""Allocated:\n"");
   printf("" - large: %i\n"",large);
   printf("" - Small: %i\n"",small);
   printf("" - Scrap: %i\n"",scrap);

    return 0;
}",0
tpat456,1694925194,2,"#include <stdio.h>

int main()
{
    int l;
    int s;
    int n;

   printf(""Large capacity:\n"");
   scanf(""%i"",&l);
   printf(""Small capacity:\n"");
   scanf(""%i"",&s);
   printf(""Number of items:\n"");
   scanf(""%i"",&n);
   int large;
   large = n / l;
   int small;
   small = (n - (large*l)) / s;
   int scrap;
   scrap = n - (large*l) - (small*s);
  
 
   printf(""Allocated:\n"");
   printf("" - Large: %i\n"",large);
   printf("" - Small: %i\n"",small);
   printf("" - Scrap: %i\n"",scrap);

    return 0;
}",1
tpil529,1694782184,1,"#include <stdio.h>

int main(void)
{
    int large_capacity, small_capacity, items, number_large, number_small, scrap;
    int number_in_large, number_in_small;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    number_in_small = items%large_capacity;

    number_large = (items - number_in_small)/large_capacity;

    scrap = number_in_small%small_capacity;

    number_small = (number_in_small - scrap)/small_capacity;

    printf(""Allocated \n"");
    printf("" - Large: %d\n"", number_large);
    printf("" - Small: %d\n"", number_small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;

}",0
tpil529,1694782239,2,"#include <stdio.h>

int main(void)
{
    int large_capacity, small_capacity, items, number_large, number_small, scrap,number_in_small;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    number_in_small = items%large_capacity;

    number_large = (items - number_in_small)/large_capacity;

    scrap = number_in_small%small_capacity;

    number_small = (number_in_small - scrap)/small_capacity;

    printf(""Allocated \n"");
    printf("" - Large: %d\n"", number_large);
    printf("" - Small: %d\n"", number_small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;

}",0
tpil529,1694782402,3,"#include <stdio.h>

int main(void)
{
    int large_capacity, small_capacity, items, number_large, number_small, scrap,number_in_small;

    printf(""Large capacity: \n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &items);

    number_in_small = items%large_capacity;

    number_large = (items - number_in_small)/large_capacity;

    scrap = number_in_small%small_capacity;

    number_small = (number_in_small - scrap)/small_capacity;

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", number_large);
    printf("" - Small: %d\n"", number_small);
    printf("" - Scrap: %d\n"", scrap);

    return 0;

}",1
tpra228,1694953545,1,"#include <stdio.h>

int main() 
{
    int largecapacity;
    int smallcapacity;
    int total;
    int largecontainers;
    int smallcontainers;
    int scrap;

    printf(""Large capacity: "");
    scanf(""%d"", &largecapacity);

    printf(""Small capacity: "");
    scanf(""%d"", &smallcapacity);

    printf(""Number of items: "");
    scanf(""%d"", &total);

    largecontainers = total / largecapacity;
    scrap = total % largecapacity;

    smallcontainers = scrap / smallcapacity;
    scrap %= smallcapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers);
    printf("" - Small: %d\n"", smallcontainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",0
tpra228,1694953597,2,"#include <stdio.h>

int main() 
{
    int largecapacity;
    int smallcapacity;
    int total;
    int largecontainers;
    int smallcontainers;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largecapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallcapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total);

    largecontainers = total / largecapacity;
    scrap = total % largecapacity;

    smallcontainers = scrap / smallcapacity;
    scrap %= smallcapacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainers);
    printf("" - Small: %d\n"", smallcontainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
tsan986,1695030096,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Largestorage;
    int Smallstorage;
    int Large;
    int Small;
    int Scrap;
    int Items;
    int remain;

    printf(""Large capacity:\n"");
    scanf(""%d"", &Largestorage); 
    printf(""Small capacity:\n"");
    scanf(""%d"", &Smallstorage); 

    printf(""Number of items:\n"");
    scanf(""%d"", &Items);

    Large = Items / Largestorage;
    remain = Items % Largestorage;
    Small = remain / Smallstorage;
    Scrap = remain % Smallstorage;

    printf(""Large capacity:\nSmall capacity:\nNumber of items:\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);

    return 0;
}
",0
tsan986,1695030227,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int Largestorage;
    int Smallstorage;
    int Large;
    int Small;
    int Scrap;
    int Items;
    int remain;

    
    scanf(""%d"", &Largestorage); 
   
    scanf(""%d"", &Smallstorage); 

    scanf(""%d"", &Items);

    Large = Items / Largestorage;
    remain = Items % Largestorage;
    Small = remain / Smallstorage;
    Scrap = remain % Smallstorage;

    printf(""Large capacity:\nSmall capacity:\nNumber of items:\nAllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);

    return 0;
}

",1
tsin304,1695005218,1,"#include <stdio.h>

int main()
{
    printf(""Large capacity:\n"");
    int lc;
    scanf(""%i"", &lc);
    
    printf(""Small capacity:\n"");
    int sc;
    scanf(""%i"", &sc);
    
    printf(""Number of items:\n"");
    int n;
    scanf(""%i"", &n);
    
    
    int large = n/lc;
    double fraction = (double)n/(double)lc - large;
    
    fraction = fraction*lc;
    int small = fraction/sc;
    fraction = (double)fraction/(double)sc - small;
    
    double scrap = fraction*sc;
    
    
    
    
    printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %0.0lf"",large,small,scrap);
}",0
tsin304,1695007634,2,"#include <stdio.h>

int main()
{
    printf(""Large capacity:\n"");
    int lc;
    scanf(""%i"", &lc);
    
    printf(""Small capacity:\n"");
    int sc;
    scanf(""%i"", &sc);
    
    printf(""Number of items:\n"");
    int n;
    scanf(""%i"", &n);
    
    
    double large = n/lc;
    
    
    double fraction = (double)n/(double)lc - large;
    
    fraction = fraction*(double)lc;
    
    
    double small = fraction/(double)sc;
    
    
    double scrap;
    
    if (sc == 1){
        scrap = 0;
    }
    else{
        int intsmall = fraction/sc;
        
    
        fraction = (double)fraction/(double)sc - intsmall;
        
        scrap = fraction*sc;
    }
    
    printf(""Allocated:\n - Large: %.0lf\n - Small: %.0lf\n - Scrap: %.0lf"",large,small,scrap);
}

",0
tsin304,1695008670,3,"#include <stdio.h>

int main()
{
    printf(""Large capacity:\n"");
    int lc;
    scanf(""%i"", &lc);
    
    printf(""Small capacity:\n"");
    int sc;
    scanf(""%i"", &sc);
    
    printf(""Number of items:\n"");
    int n;
    scanf(""%i"", &n);
    
    
    double large = n/lc;
    printf(""%lf\n"",large);
    
    double fraction = (double)n/(double)lc - large;
    printf(""fraction: %lf\n"",fraction);
    fraction = fraction*(double)lc;
    printf(""fraction: %lf\n"",fraction);
    
    double small = fraction/(double)sc;
    printf(""small: %lf\n"",small);
    
    double scrap;
    
    if (sc == 1){
        scrap = 0;
    }
    else{
        int intsmall = fraction/sc;
        printf(""intsmall: %i\n"",intsmall);
    
        fraction = (double)fraction/(double)sc - intsmall;
        printf(""fraction: %lf\n"",fraction);
        scrap = fraction*sc;
    }
    
    
    
    large = large + 0.00001;
    small = small + 0.00001;
    int l = (int)large;
    int s = (int)small;
    printf(""%i, %i"",l,s);
    
     printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %.0lf"",l,s,scrap);
    
    
    
}

",0
tsin304,1695008712,4,"#include <stdio.h>

int main()
{
    printf(""Large capacity:\n"");
    int lc;
    scanf(""%i"", &lc);
    
    printf(""Small capacity:\n"");
    int sc;
    scanf(""%i"", &sc);
    
    printf(""Number of items:\n"");
    int n;
    scanf(""%i"", &n);
    
    
    double large = n/lc;
   // printf(""%lf\n"",large);
    
    double fraction = (double)n/(double)lc - large;
    //printf(""fraction: %lf\n"",fraction);
    fraction = fraction*(double)lc;
    //printf(""fraction: %lf\n"",fraction);
    
    double small = fraction/(double)sc;
    //printf(""small: %lf\n"",small);
    
    double scrap;
    
    if (sc == 1){
        scrap = 0;
    }
    else{
        int intsmall = fraction/sc;
        //printf(""intsmall: %i\n"",intsmall);
    
        fraction = (double)fraction/(double)sc - intsmall;
        //printf(""fraction: %lf\n"",fraction);
        scrap = fraction*sc;
    }
    
    
    
    large = large + 0.00001;
    small = small + 0.00001;
    int l = (int)large;
    int s = (int)small;
    //printf(""%i, %i"",l,s);
    
     printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %.0lf"",l,s,scrap);
    
    
    
}

",0
tsin304,1695011507,5,"#include <stdio.h>

int main()
{
    printf(""Large capacity:\n"");
    double lc;
    scanf(""%lf"", &lc);
    
    printf(""Small capacity:\n"");
    double sc;
    scanf(""%lf"", &sc);
    
    printf(""Number of items:\n"");
    double n;
    scanf(""%lf"", &n);
    
//finding large value    
    double large = n/lc;
    //printf(""%lf\n"",large);

//finding small value
    double fraction = large - (int)(large + 0.000001);
    //printf(""fraction: %lf\n"",fraction);
    fraction = fraction*lc;
    //printf(""fraction: %lf\n"",fraction);
    
    double small = fraction/sc;
    //printf(""small: %lf\n"",small);
    
   
//finding scrap value
    fraction = small - (int)(small + 0.000001);
    //printf(""fraction: %lf\n"",fraction);
    double scrap;
    scrap = fraction*sc;
    //printf(""scrap: %lf\n"",scrap);
    
//printing result    
    int l = (int)(large + 0.000001);
    int s = (int)(small + 0.000001);
    int c = (int)(scrap + 0.000001);
     printf(""Allocated:\n - Large: %i\n - Small: %i\n - Scrap: %i"",l,s,c);
    
    
    return 0;
}

",1
ttho505,1694987108,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int LargeCap, SmallCap, Items, AlloL, AlloS, Scrap;
	printf(""Large capactiy:\n"");
	scanf(""%d"", &LargeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &SmallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &Items);

	AlloL = Items / LargeCap;
	Scrap = Items % LargeCap;
	AlloS = Scrap / SmallCap;
	Scrap = Scrap % SmallCap;

	printf(""Allocated\n - Large: %d\n - Small: %d\n - Scrap: %d"", AlloL, AlloS, Scrap);
	return 0;
}
",0
ttho505,1694987161,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int LargeCap, SmallCap, Items, AlloL, AlloS, Scrap;
	printf(""Large capacity:\n"");
	scanf(""%d"", &LargeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &SmallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &Items);

	AlloL = Items / LargeCap;
	Scrap = Items % LargeCap;
	AlloS = Scrap / SmallCap;
	Scrap = Scrap % SmallCap;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", AlloL, AlloS, Scrap);
	return 0;
}
",1
twol698,1694942959,1,"#include<stdio.h>
#include<math.h>

int main(void){
    int lgecap;
    int smlcap;
    int total;

    printf(""Large capactiy:\n"");
    scanf(""%i"", &lgecap);

    printf(""Small capacity:\n"");
    scanf(""%i"", &smlcap);

    printf(""Number of items:\n"");
    scanf(""%i"", &total); 

    double leftover = (total%lgecap)%smlcap;
    double lge = floor(total/lgecap);
    double sml = floor((total%lgecap)/smlcap);

    printf(""Allocated:\n"");
    printf("" - Large: %.0f\n"", lge);
    printf("" - Small: %.0f\n"", sml);
    printf("" - Scrap: %.0f"", leftover);
    return 0;
}
",0
twol698,1694943008,2,"#include<stdio.h>
#include<math.h>

int main(void){
    int lgecap;
    int smlcap;
    int total;

    printf(""Large capacity:\n"");
    scanf(""%i"", &lgecap);

    printf(""Small capacity:\n"");
    scanf(""%i"", &smlcap);

    printf(""Number of items:\n"");
    scanf(""%i"", &total); 

    double leftover = (total%lgecap)%smlcap;
    double lge = floor(total/lgecap);
    double sml = floor((total%lgecap)/smlcap);

    printf(""Allocated:\n"");
    printf("" - Large: %.0f\n"", lge);
    printf("" - Small: %.0f\n"", sml);
    printf("" - Scrap: %.0f"", leftover);
    return 0;
}
",1
tyou333,1694841570,1,"#include <stdio.h>

int main(void) {

    int capacityLarge;
    int capacitySmall;
    int numberOfItems;

    printf(""Large capacity:\n"");
    scanf(""%d"", &capacityLarge);

    printf(""Small capacity:\n"");
    scanf(""%d"", &capacitySmall);

    printf(""Number of items:\n"");
    scanf(""%d"", &numberOfItems);

    int itemsSmallScrap = (numberOfItems % capacityLarge);

    int boxesLarge = (numberOfItems - itemsSmallScrap) / capacityLarge;
    int scrap = itemsSmallScrap % capacitySmall;
    int boxesSmall = (itemsSmallScrap - scrap) / capacitySmall;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", boxesLarge, boxesSmall, scrap);

    return 0;
}",1
tyou421,1694933076,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    /*This function calculates how many large and small containers will be
    needed to ship a given number of items. The user inputs the number of
    items, as well as the capacity of each type of container.

    Inputs:
            capacityLarge: The maximum number of items that can fit in one
            large container.
            capacitySmall: The maximum number of items that can fit in one
            small container.
            items: The number of items the user wants to ship.
    Outputs:
            large: The number of large containers that will be needed to ship
            the input number of items.
            small: The number of small containers that will be needed to ship
            the remaining items, after the number of large containers has been
            calculated.
            scrap: The number of items that will be discarded we cannot ship
            any containers which are not completely full.

    Author: Toma Yousif*/

    // Declare variables.
    int items;
    int large;
    int capacityLarge;
    int small;
    int capacitySmall;
    int scrap;

    // Input the large container capacity and read it in.
    printf(""Large capacity:\n"");
    scanf(""%d"", &capacityLarge);

    // Input the small container capacity and read it in.
    printf(""Small capacity:\n"");
    scanf(""%d"", &capacitySmall);

    // Input the number of items to ship and read it in.
    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    // Calculate how many large containers will be needed.
    large = (items / capacityLarge);

    // Calculate how many leftovers there will be when we can't pack anymore large containers.
    scrap = items % capacityLarge;

    // Calculate how many small containers will be needed to store the leftovers.
    small = (scrap / capacitySmall);

    // Calculate how many leftovers there will be when we can't pack anymore small containers.
    scrap = scrap % capacitySmall;

    // Print the output messages and variables.
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d"", scrap);

    return 0;
}",1
tzho903,1695015811,1,"#include <stdio.h>

int main(void)
{ 
    
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    int L;
    int S;
    int N;
    
    scanf(""%d%d%d"",&L,&S,&N);
    int NL = N/L;
    int NS = (N%L)/S;
    int scrap = (N%L)-(NS*S);
    printf(""Allocated:"");
    printf("" - Large: %d"",NL);
    printf("" - Small: %d"",NS);
    printf("" - Scrap: %d"",scrap);
    return 0;
} ",0
tzho903,1695015884,2,"#include <stdio.h>

int main(void)
{ 
    
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    int L;
    int S;
    int N;
    
    scanf(""%d%d%d"",&L,&S,&N);
    int NL = N/L;
    int NS = (N%L)/S;
    int scrap = (N%L)-(NS*S);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",NL);
    printf("" - Small: %d\n"",NS);
    printf("" - Scrap: %d"",scrap);
    return 0;
} ",1
uali517,1694906948,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large_capacity;
	int small_capacity;
	int num_items;
	int large;
	int small;
	int scrap;

	printf(""Large capacity:\n"");
	printf(""Small capacity:\n"");
	printf(""Number of items:\n"");

	scanf(""%d"", &large_capacity);
	scanf(""%d"", &small_capacity);
	scanf(""%d"", &num_items);
	
	large = num_items / large_capacity;
	small = (num_items % large_capacity) / small_capacity;

	scrap = (num_items % large_capacity) % small_capacity;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}",1
vbar374,1695030942,1,"#include <stdio.h>
int main() {
    int large_capacity, small_capacity, total_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);
    
    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;
    int scrap_items = total_items - (large_containers * large_capacity + small_containers);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);
    return 0;
}",0
vbar374,1695031782,2,"#include <stdio.h>
int main() {
    int large_capacity, small_capacity, total_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);
    
    int large_containers = total_items / large_capacity;
    int small_containers = (total_items % large_capacity) / small_capacity;
    int scrap_items = total_items - (large_containers * large_capacity + small_containers * small_capacity);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrap_items);
    return 0;
}",1
vkap589,1694909233,1,"#include <stdio.h>

int main()
{
    int LCap;
    int SCap;
    int NumItem;
    int Large;
    int Small;
    int Scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &LCap);
    
    printf(""Small capacity: \n"");
    scanf(""%d"", &SCap);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &NumItem);

    Large = NumItem/LCap;
    Small = (NumItem%LCap)/SCap;
    Scrap = (NumItem%LCap)%SCap;

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"",Large);
    printf("" - Small: %d\n"",Small);
    printf("" - Scrap: %d\n"",Scrap);
    return 0;
}",1
vlai276,1695022987,1,"#include <stdio.h>

int main()
{
    
    int large;
    int small;
    int amount;
    int large1;
    int small1;
    int scrap;
    

    
    printf(""Large Capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small Capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &amount);
    
    large1 = amount/large;
    

    
    small1 = (amount - (large*large1))/small;
    

    
    scrap = amount - (large*large1) - (small*small1);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large1);
    printf("" - Small: %d\n"", small1);
    printf("" - Scrap: %d\n"", scrap);
   

    
}


",0
vlai276,1695023013,2,"#include <stdio.h>

int main()
{
    
    int large;
    int small;
    int amount;
    int large1;
    int small1;
    int scrap;
    

    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &amount);
    
    large1 = amount/large;
    

    
    small1 = (amount - (large*large1))/small;
    

    
    scrap = amount - (large*large1) - (small*small1);
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large1);
    printf("" - Small: %d\n"", small1);
    printf("" - Scrap: %d\n"", scrap);
   

    
}


",1
vpat188,1694943269,1,"#include <stdio.h>

int main(void)
{
    double Lrg, Sml, Items, LargeCont, LargeLeftOver, SmallCont, Scrap;

    printf(""Large capacity:\n"");
    scanf(""%lf"", &Lrg);
       
    printf(""Small capacity:\n"");
    scanf(""%lf"", &Sml);

    printf(""Number of items:\n"");
    scanf(""%lf"", &Items);
    
    
    LargeCont = (int)(Items/Lrg);
    LargeLeftOver = Items - (LargeCont * Lrg);

    
    SmallCont = (int)(LargeLeftOver/Sml);
    Scrap = LargeLeftOver - (SmallCont * Sml);
    
    
    printf(""Allocated:\n"");
    printf("" - Large: %0.lf\n"",LargeCont);
    printf("" - Small: %0.lf\n"",SmallCont);
    printf("" - Scrap: %0.lf\n"",Scrap);
    
    return 0;
}",1
vpol480,1694940094,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, largeCapacity, smallCap, smallCapacity, numOfItems, scrap;

    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCap);

    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCap);

    printf(""Number of items: \n"");
    scanf(""%d"", &numOfItems);

    largeCapacity = numOfItems / largeCap;
    smallCapacity = (numOfItems % largeCap) / (smallCap);
    scrap = (numOfItems % largeCap) - (smallCap * smallCapacity);

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", largeCapacity);
    printf("" - Small: %d\n"", smallCapacity);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
vto869,1695034391,1,"#include <stdio.h>
/*This program can be used to calculate the number of shipping containers of each size will be needed based on the inputted size of each container from the user and number of items.*/
int main(void)
{
	int large;
	int largeC;
	int small;
	int smallC;
	int items;
	int scrap;

	printf(""Large capacity: "");
	scanf(""%d"", &largeC);
	printf(""Small capacity: "");
	scanf(""%d"", &smallC);
	printf(""Number of items: "");
	scanf(""%d"", &items);

	large = items / largeC;
	scrap = items % largeC;
	small = scrap / smallC;
	scrap = scrap % smallC;

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}",0
vto869,1695034477,2,"#include <stdio.h>
/*This program can be used to calculate the number of shipping containers of each size will be needed based on the inputted size of each container from the user and number of items.*/
int main(void)
{
	int large;
	int largeC;
	int small;
	int smallC;
	int items;
	int scrap;

	printf(""Large capacity: \n"");
	scanf(""%d"", &largeC);
	printf(""Small capacity: \n"");
	scanf(""%d"", &smallC);
	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	large = items / largeC;
	scrap = items % largeC;
	small = scrap / smallC;
	scrap = scrap % smallC;

	printf(""Allocated: \n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d\n"", scrap);

	return 0;
}",1
vwon573,1694907792,1,"#include <stdio.h>

int main(void) {
	int large;
	int small;
	int items;
	int large_con;
	int small_con;
	int spare;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items : \n"");
	scanf_s(""%d"", &items);

	large_con = items / large;
	small_con = (items % large) / small;
	spare = (items % large) % small;

	printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", large_con, small_con, spare);

	return 0
}",0
vwon573,1694907820,2,"#include <stdio.h>

int main(void) {
	int large;
	int small;
	int items;
	int large_con;
	int small_con;
	int spare;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items : \n"");
	scanf_s(""%d"", &items);

	large_con = items / large;
	small_con = (items % large) / small;
	spare = (items % large) % small;

	printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", large_con, small_con, spare);

	return 0;
}",0
vwon573,1694907831,3,"#include <stdio.h>

int main(void) {
	int large;
	int small;
	int items;
	int large_con;
	int small_con;
	int spare;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items : \n"");
	scanf(""%d"", &items);

	large_con = items / large;
	small_con = (items % large) / small;
	spare = (items % large) % small;

	printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", large_con, small_con, spare);

	return 0;
}",0
vwon573,1694907848,4,"#include <stdio.h>

int main(void) {
	int large;
	int small;
	int items;
	int large_con;
	int small_con;
	int spare;

	printf(""Large capacity: \n"");
	scanf(""%d"", &large);

	printf(""Small capacity: \n"");
	scanf(""%d"", &small);

	printf(""Number of items: \n"");
	scanf(""%d"", &items);

	large_con = items / large;
	small_con = (items % large) / small;
	spare = (items % large) % small;

	printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d "", large_con, small_con, spare);

	return 0;
}",1
vwu693,1695003671,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int input_scrap, large_con, small_con;
	int large_con_full, small_con_full, large_remain, small_remain;

	printf(""Large capacity: "");
	scanf(""%d"", &large_con);

	printf(""\nSmall capacity: "");
	scanf(""%d"", &small_con);

	printf(""\nNumber of items: "");
	scanf(""%d"", &input_scrap);
	
	large_con_full = input_scrap / large_con;
	large_remain = input_scrap % large_con;

	small_con_full = large_remain / small_con;
	small_remain = large_remain % small_con;

	printf(""\n - Large: %d"", large_con_full);
	printf(""\n - Small: %d"", small_con_full);
	printf(""\n - Scrap: %d"", small_remain);

	return 0;
}",0
vwu693,1695003729,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int input_scrap, large_con, small_con;
	int large_con_full, small_con_full, large_remain, small_remain;

	printf(""Large capacity: "");
	scanf(""%d"", &large_con);

	printf(""\nSmall capacity: "");
	scanf(""%d"", &small_con);

	printf(""\nNumber of items: "");
	scanf(""%d"", &input_scrap);
	
	large_con_full = input_scrap / large_con;
	large_remain = input_scrap % large_con;

	small_con_full = large_remain / small_con;
	small_remain = large_remain % small_con;

	printf(""\nAllocated:"");
	printf(""\n - Large: %d"", large_con_full);
	printf(""\n - Small: %d"", small_con_full);
	printf(""\n - Scrap: %d"", small_remain);

	return 0;
}",1
wany079,1694842837,1,"#include <stdio.h>
int main(void) 
{
	int capL; // capacity of large container
	int capS; // capacity of small container
	int items; // total number of items
	int numL; // number of large containers
	int numS; // number of small containers
	int scrap; // number of items that will be scrapped

	// Prompt and read user input
	printf(""Large capacity:\n"");
	scanf(""%d"", &capL);
	printf(""Small capacity:\n"");
	scanf(""%d"", &capS);
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	// Calulcate number of large and small containers and number of items that will be scrapped
	numL = items / capL;
	numS = items%capL/capS;
	scrap = items - capL * numL - capS * numS; 
	
	// Print result
	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", numL);
	printf("" - Small: %d\n"", numS);
	printf("" - Scrap: %d\n"", scrap);
	
	return 0;
}
",1
wany932,1695008718,1,"#include <stdio.h>

int main() {
    double a, d;
    int n;
    double sum;

    printf(""Enter the first value in the sequence: \n"");
    scanf(""%lf"", &a);

    printf(""Enter the difference between consecutive values: \n"");
    scanf(""%lf"", &d);

    printf(""Enter the number of values in the sequence: \n"");
    scanf(""%d"", &n);

    sum = (n / 2.0) * (2 * a + (n - 1) * d);

    printf(""Sum = %.0lf\n"", sum);

    return 0;
}
",0
wany932,1695008797,2,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, items;
    int largeContainers, smallContainers, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    largeContainers = items / largeCapacity;
    items = items % largeCapacity;

    smallContainers = items / smallCapacity;
    scrap = items % smallCapacity;

    if (scrap > 0) {
        scrap += smallContainers * smallCapacity;
        smallContainers = 0;
    }

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}

",0
wany932,1695009051,3,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, items;
    int largeContainers, smallContainers, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &items);

    largeContainers = items / largeCapacity;
    items = items % largeCapacity;

    smallContainers = items / smallCapacity;
    items = items % smallCapacity;

    scrap = items;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}

",1
wli798,1694831183,1,"#include <stdio.h>

int main(void)

{
  
int large;
printf(""Large capacity:\n"");
scanf(""%d"", &large);

int small;
printf(""Small capacity:\n"");
scanf(""%d"", &small);

int items;
printf(""Number of items:\n"");
scanf(""%d"", &items);

int into_large;
into_large = items/large;

int remainder_from_large;
remainder_from_large = items%large;

int into_small;
into_small = remainder_from_large/small;

int scraps;
scraps = remainder_from_large%small;
printf(""Allocated:\n"");
printf("" - Large: %d\n"", into_large);
printf("" - Small: %d\n"", into_small);
printf("" - Scrap: %d"", scraps);

    return 0;
}
",1
wlin709,1695032653,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main(void) 
{
    // Input variables
    int largeCapacity;
    int smallCapacity;
    int totalItems;
    // Output variables
    int largeContainer;
    int smallContainer;
    int ScrapItems;
    
    // Print the value of the Large capacity and scan
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);
    
    // Print the value of the Small capacity and scan
    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);
    
    // Print the number of values in the sequence and scan
    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);

    // Calculate the number of large containers
    largeContainer = totalItems/largeCapacity;
    
    // Calculate the number of small containers
    smallContainer = (totalItems%largeCapacity)/smallCapacity;
    
    // Calculate the number of scrap items
    ScrapItems = (totalItems%largeCapacity)-(smallCapacity*smallContainer);
   
    
    // Display the result
    printf(""Allocated: \n"");
    printf("" - Large: %d\n"",largeContainer);
    printf("" - Small: %d\n"",smallContainer);
    printf("" - Scrap: %d\n"",ScrapItems);
    
    return 0;
}",1
wliy226,1695015170,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;
    
    
    //asks user for inputs
    printf(""Large capacity: "");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity: "");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items: "");
    scanf(""%d"", &totalItems);

    //Calculates the number of large containers
    int largeContainers = totalItems / largeCapacity;
    //Calculates the remainin items after filling large containers
    int remainingItems = totalItems % largeCapacity;
    //Calculates the small containers based on the remaining items
    int smallContainers = remainingItems / smallCapacity;
    //Calculates the final scrapitems that will be left over
    int scrapItems = remainingItems % smallCapacity;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", largeContainers, smallContainers, scrapItems);

    return 0;
}
",0
wliy226,1695015194,2,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, totalItems;
    
    
    //asks user for inputs
    printf(""Large capacity: \n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);

    //Calculates the number of large containers
    int largeContainers = totalItems / largeCapacity;
    //Calculates the remainin items after filling large containers
    int remainingItems = totalItems % largeCapacity;
    //Calculates the small containers based on the remaining items
    int smallContainers = remainingItems / smallCapacity;
    //Calculates the final scrapitems that will be left over
    int scrapItems = remainingItems % smallCapacity;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", largeContainers, smallContainers, scrapItems);

    return 0;
}
",1
wmas516,1694869717,1,"#include <stdio.h>
int main(void) {

	int largeCap;
	int smallCap;
	int nItems;

	printf(""Large capacity:\n"");
	scanf(""%d"",&largeCap);
	printf(""\nSmall capacity:\n"");
	scanf(""%d"", &smallCap);
	printf(""\nNumber of items:\n"");
	scanf(""%d"", &nItems);
	printf(""\nAllocated:\n"");

	int large = nItems / largeCap;
	int small = (nItems%largeCap)/smallCap;
	int scrap = nItems-(large*largeCap)-(small*smallCap);

	printf("" - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);

	return(0);
}",0
wmas516,1694869903,2,"#include <stdio.h>
int main(void) {

	int largeCap;
	int smallCap;
	int nItems;

	printf(""Large capacity:\n"");
	scanf(""%d"",&largeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &nItems);
	printf(""Allocated:\n"");

	int large = nItems / largeCap;
	int small = (nItems%largeCap)/smallCap;
	int scrap = nItems-(large*largeCap)-(small*smallCap);

	printf("" - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);

	return(0);
}",1
wwan296,1694991766,1,"#include <stdio.h>

int main(void)
{
	printf(""Large capacity:\n"");
	int large;
	scanf(""%d"", &large);
	printf(""Small capacity:\n"");
	int small;
	scanf(""%d"", &small);
	printf(""Number of items:\n"");
	int item;
	scanf(""%d"", &item);
	int Lbox = item / large;
	int sbox = (item - Lbox * large) / small;
	int scrap = item - (Lbox * large + sbox * small);
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Lbox, sbox, scrap);
	return 0;
}",1
wwu295,1694865100,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int largeCap;
	int largeNo;
	int smallCap;
	int smallNo;
	int items;
	int scrap;
	printf(""Large capacity:\n"");
	scanf(""%d"", &largeCap);
	printf(""Small capacity:\n"");
	scanf(""%d"", &smallCap);
	printf(""Number of items:\n"");
	scanf(""%d"", &items);

	largeNo = items / largeCap;
	smallNo = (items % largeCap) / smallCap;
	scrap = items - (largeCap * largeNo) - (smallCap * smallNo);

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", largeNo, smallNo, scrap);
}",1
wyan309,1695033208,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS
int main(void){
    int lc,sc,num,rem1,rem2,temp,temp2;
    printf(""Large capacity:\n"");
    scanf(""%d"",&lc);
    printf(""Small capacity:\n"");
    scanf(""%d"",&sc);
    printf(""Number of items:\n"");
    scanf(""%d"",&num);
    rem1 = num%lc;
    temp = (num-rem1)/lc;
    rem2 = rem1%sc;
    temp2 = (rem1-rem2)/sc;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"",temp);
    printf("" - Small: %d\n"",temp2);
    printf("" - Scrap: %d\n"",rem2);
    return 0 ;
};",1
wyua331,1695032811,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int Scrap;
    int Remainder;

    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);

    Remainder = items % large;
    Scrap = Remainder%small;
    large = items/large;

    small = Remainder/small;


    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,Scrap);





    return 0;
}

",0
wyua331,1695032868,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int items;
    int Scrap;
    int Remainder;

    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);

    Remainder = items % large;
    Scrap = Remainder%small;
    large = items/large;

    small = Remainder/small;


    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,Scrap);





    return 0;
}



",1
xche362,1694940300,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int number;
    int scrap,reminder1;
    
    printf(""Large capacity:\n"");
    printf(""Small capacity:\n"");
    printf(""Number of items:\n"");
    
    scanf(""%d"", &large);
    scanf(""%d"", &small);
    scanf(""%d"", &number);
    
    reminder1=number%large;
    large=(number-reminder1)/large;
   
    scrap=reminder1%small;
     small=(reminder1-(reminder1%small))/small;
    
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",large,small,scrap);

    return 0;
}",1
xkan320,1694845364,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int n;
    int scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&n);

    int allocatedLarge = n/large;
    int allocatedSmall = (n%large)/small;
    int allocatedScrap = (n%large)%small;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",allocatedLarge,allocatedSmall,allocatedScrap);
    return 0;
}
",0
xkan320,1694845556,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large;
    int small;
    int n;

    printf(""Large capacity:\n"");
    scanf(""%d"",&large);
    printf(""Small capacity:\n"");
    scanf(""%d"",&small);
    printf(""Number of items:\n"");
    scanf(""%d"",&n);

    int allocatedLarge = n/large;
    int allocatedSmall = (n%large)/small;
    int scrap = (n%large)%small;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",allocatedLarge,allocatedSmall,scrap);
    return 0;
}",1
xli330,1694776906,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    // Declare variables in int type.
    int large, small, n_items;

    // Obtain values from user input.
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small);

    printf(""Number of items:\n"");
    scanf(""%d"", &n_items);

    /*
    Calculate and display values.
    Large allocation is given by: n_items / large;
    Small allocation is given by: n_items % large / small;
    Scrap allocation is given by: n_items % large % small.
    */ 
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"",
        n_items / large, n_items % large / small, n_items % large % small);
    return 0;
}",1
xlia603,1695006217,1,"#include <stdio.h>

int main() {
    int LargeCapacity, SmallCapacity, TotalItems;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &LargeCapacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &SmallCapacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &TotalItems);
    
    int LargeContainers = TotalItems / LargeCapacity;
    int SmallContainers = 0;
    int ScrapItems = 0;

    if (TotalItems % LargeCapacity != 0) {
        SmallContainers = TotalItems % LargeCapacity / SmallCapacity;
        ScrapItems = TotalItems % LargeCapacity % SmallCapacity;
    }
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", LargeContainers);
    printf("" - Small: %d\n"", SmallContainers);
    printf("" - Scrap: %d\n"", ScrapItems);
    
    return 0;
}",1
xmet073,1695006247,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)

{
int Large;
int Small;
int Number;
int Large_crate;
int Small_crate;
int Scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%d"",&Small);
        
         printf(""Number of items:\n"");
    scanf(""%d"",&Number);
    Large_crate= (Number/Large);
    Small_crate=(Number%Large/Small);
    Scrap= ((Number%Large)%Small_crate);
    printf(""Allocated:\n -Large: %d \n"",Large_crate);
    printf("" -Small: %d \n"",Small_crate);
    printf("" -Scrap: %d \n"",Scrap);
    
    return 0;
}",0
xmet073,1695006304,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)

{
int Large;
int Small;
int Number;
int Large_crate;
int Small_crate;
int Scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%d"",&Small);
        
         printf(""Number of items:\n"");
    scanf(""%d"",&Number);
    Large_crate= (Number/Large);
    Small_crate=(Number%Large/Small);
    Scrap= ((Number%Large)%Small_crate);
    printf(""Allocated:\n - Large: %d \n"",Large_crate);
    printf("" - Small: %d \n"",Small_crate);
    printf("" - Scrap: %d \n"",Scrap);
    
    return 0;
}",0
xmet073,1695006515,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)

{
int Large;
int Small;
int Number;
int Large_crate;
int Small_crate;
int Scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%d"",&Small);
        
         printf(""Number of items:\n"");
    scanf(""%d"",&Number);
    Large_crate= (Number/Large);
    Small_crate=(Number%Large/Small);
    Scrap= ((Number%Large)%Small);
    printf(""Allocated:\n -Large: %d \n"",Large_crate);
    printf("" -Small: %d \n"",Small_crate);
    printf("" -Scrap: %d \n"",Scrap);
    
    return 0;
}",0
xmet073,1695006550,4,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)

{
int Large;
int Small;
int Number;
int Large_crate;
int Small_crate;
int Scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"", &Large);

    printf(""Small capacity:\n"");
    scanf(""%d"",&Small);
        
         printf(""Number of items:\n"");
    scanf(""%d"",&Number);
    Large_crate= (Number/Large);
    Small_crate=(Number%Large/Small);
    Scrap= ((Number%Large)%Small);
    printf(""Allocated:\n - Large: %d \n"",Large_crate);
    printf("" - Small: %d \n"",Small_crate);
    printf("" - Scrap: %d \n"",Scrap);
    
    return 0;
}",1
xtan207,1695011059,1,"#include <stdio.h>

int main()
{
    int L;
    int S;
    int N;
    int Large;
    int Small;
    int Scrap;
    printf(""Large capacity: \n"");
    scanf(""%d"", &L);
    printf(""Small capacity: \n"");
    scanf(""%d"", &S);
    printf(""Number of items: \n"");
    scanf(""%d"", &N);
    Large = N/L;
    Small = (N%L)/S;
    Scrap = N - (Large*L) - (Small*S);
    printf(""Allocated: \n"");
    printf("" - Large: %d \n"", Large);
    printf("" - Small: %d \n"", Small);
    printf("" - Scrap: %d \n"", Scrap);
    return 0;
}",1
yayo322,1695013895,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;
    int large_containers, small_containers, scrapped_items;

    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    large_containers = total_items / large_capacity;

    int remaining_items = total_items % large_capacity;

    small_containers = remaining_items / small_capacity;

    scrapped_items = remaining_items % small_capacity;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large_containers);
    printf("" - Small: %d\n"", small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}",1
ybha528,1694949153,1,"#include <stdio.h>

int main(void)

{
	int LargeCapacity;
	int SmallCapacity;
	int NumberOfItems;
	int Large;
	int Small;
	int Scrap;

	scanf(""%d"", &LargeCapacity);
	scanf(""%d"", &SmallCapacity);
	scanf(""%d"", &NumberOfItems);
	
	Large = NumberOfItems / LargeCapacity;
	Small = (NumberOfItems % LargeCapacity) / SmallCapacity;
	Scrap = NumberOfItems % LargeCapacity % SmallCapacity;


	printf(""Large capacity:\n"");
	printf(""Small capacity:\n"");
	printf(""Number of items:\n"");
	printf(""Allocated:\n - Large:%d\n - Small:%d\n - Scrap:%d\n"", Large, Small, Scrap);

	return 0;

}",0
ybha528,1694949291,2,"#include <stdio.h>

int main(void)

{
	int LargeCapacity;
	int SmallCapacity;
	int NumberOfItems;
	int Large;
	int Small;
	int Scrap;

	scanf(""%d"", &LargeCapacity);
	scanf(""%d"", &SmallCapacity);
	scanf(""%d"", &NumberOfItems);
	
	Large = NumberOfItems / LargeCapacity;
	Small = (NumberOfItems % LargeCapacity) / SmallCapacity;
	Scrap = NumberOfItems % LargeCapacity % SmallCapacity;


	printf(""Large capacity:\n"");
	printf(""Small capacity:\n"");
	printf(""Number of items:\n"");
	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d\n"", Large, Small, Scrap);

	return 0;

}",1
ycho760,1695037834,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    int L_capacity;
    int S_capacity;
    int large;
    int small;
    int scrap;
    int totalItems;

    printf(""Large capacity: \n"");
    scanf(""%d"", &L_capacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &S_capacity);

    printf(""Number of items : \n"");
    scanf(""%d"", &totalItems);

    large = totalItems / L_capacity;
    small = (totalItems - (large * L_capacity)) / S_capacity;
    scrap = totalItems - (large * L_capacity) - (small * S_capacity);

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);
    return 0;
}",0
ycho760,1695037870,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main(void)
{
    int L_capacity;
    int S_capacity;
    int large;
    int small;
    int scrap;
    int totalItems;

    printf(""Large capacity: \n"");
    scanf(""%d"", &L_capacity);

    printf(""Small capacity: \n"");
    scanf(""%d"", &S_capacity);

    printf(""Number of items: \n"");
    scanf(""%d"", &totalItems);

    large = totalItems / L_capacity;
    small = (totalItems - (large * L_capacity)) / S_capacity;
    scrap = totalItems - (large * L_capacity) - (small * S_capacity);

    printf(""Allocated: \n"");
    printf("" - Large: %d\n"", large);
    printf("" - Small: %d\n"", small);
    printf("" - Scrap: %d\n"", scrap);
    return 0;
}",1
ydai729,1695032741,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

    // Prompt the user to enter the capacity of a large container
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    // Prompt the user to enter the capacity of a small container
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    // Prompt the user to enter the total number of items in the order
    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

    // Calculate the number of large containers needed
    int num_large_containers = total_items / large_capacity;
    
    // Calculate the number of small containers needed with the remaining items
    int remaining_items = total_items % large_capacity;
    int num_small_containers = remaining_items / small_capacity;
    
    // Calculate the number of items to be scrapped
    int scrapped_items = remaining_items % small_capacity;

    // Display the results
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}
",1
ydar075,1695027996,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {
	int l, s, n, cap_l, cap_s, remainder_l, remainder_s, scrapped;

	printf(""Large capacity: \n"");
	scanf(""%d"", &l);

	printf(""Small capacity: \n"");
	scanf(""%d"", &s);

	printf(""Number of items: \n"");
	scanf(""%d"", &n);

	cap_l = n / l; 

	remainder_l = n % l; 

	if (remainder_l > 0) {
		cap_s = remainder_l / s;
		remainder_s = remainder_l % s;

	}

	if (remainder_s > 0) {
		scrapped = remainder_s;
	}
	
	printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", cap_l, cap_s, scrapped);

	return 0;
}",0
ydar075,1695029240,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {
    int l, s, n, cap_l, cap_s, remainder_l, remainder_s = 0, scrapped;

    printf(""Large capacity: \n"");
    scanf(""%d"", &l);

    printf(""Small capacity: \n"");
    scanf(""%d"", &s);

    printf(""Number of items: \n"");
    scanf(""%d"", &n);

    cap_l = n / l;

    remainder_l = n % l;

    if (remainder_l > 0) {
        cap_s = remainder_l / s;
        remainder_s = remainder_l % s;
    }
    else {
        cap_s = 0;
        scrapped = 0;
    }

    if (remainder_s > 0) {
        scrapped = remainder_s;
    }
    else {
        scrapped = 0;
    }

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", cap_l, cap_s, scrapped);

    return 0;
}",1
yfan919,1694948649,1,"#include <stdio.h>

int main(void)
{
    int l;
    int s;
    int p;
    int L;
    int S;
    int P;
    
    printf(""Large capacity:\n"");\
    scanf(""%d"",&l);
    printf(""Small capacity:\n"");
    scanf(""%d"",&s);
    printf(""Number of items:\n"");
    scanf(""%d"",&p);
    
    L = p / l;
    S = (p - L * l) / s;
    P = p - L * l - S * s;
    
    printf(""Allocated:\n - Large: %d \n - Small: %d \n - Scrap: %d"", L, S, P);
    
    return 0;
    
}",1
yhaf839,1694946913,1,"#include <stdio.h>

int main() {
    
    int a;
    printf(""Enter the first value in the sequence: \n"");
    scanf(""%d"", &a);
    
    int d;
    printf(""Enter the difference between consecutive values: \n"");
    scanf(""%d"", &d);
    
    int n;
    printf(""Enter the number of values in the sequence:  \n"");
    scanf(""%d"", &n);
 
    int sum; 
    
    sum= (n*a)+(n/2.0)*((d*n)-d);
   
  
    printf(""Sum = %d"",sum);

    return 0;
}",0
yhaf839,1694946932,2,"#include <stdio.h>

int main() {
    
    int large;
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);
    
    int small;
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    int items;
    printf(""Number of items: \n"");
    scanf(""%d"", &items);
    
 int Large;
 int Small;
 int Scrap;
 
   Large=items/large;
   Small=(items-(Large*large))/small;
   Scrap=items-((Large*large)+(Small*small));
  
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",Large,Small,Scrap);

    return 0;
}",1
yilm466,1694924137,1,"#include <stdio.h>
	
int main(void)
{

	int LC, SC, Num;
	int Large, Small, Scrap;

	printf(""Large capacity: "");
	scanf(""%d"", &LC);
	printf(""\nSmall capacity: "");
	scanf(""%d"", &SC);
	printf(""\nNumber of items:"");
	scanf(""%d"", &Num);
	
	Large = Num / LC; 
	Small = (Num - (LC * Large)) / SC; 
	Scrap = Num - (LC * Large) - (SC * Small);

	printf(""\nAllocated:"");
	printf(""\n - Large: %d"", Large);
	printf(""\n - Small: %d"", Small);
	printf(""\n - Scrap: %d"", Scrap);

	return 0;
}",1
yjun129,1694919695,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largeCap, smallCap, num, large, small, scrap;

    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCap);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCap);

    printf(""Number of items:\n"");
    scanf(""%d"", &num);
    
    large = num / largeCap;
    small = (num - large * largeCap) / smallCap;
    scrap = num - large * largeCap - small * smallCap;

    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", large, small, scrap);

    return 0;
}
",1
ykwa219,1694877864,1,"#define _CRT_SECURE_NO_WARNINGS 

#include <stdio.h>

int main(void)
{
	int Large;
	int Small;
	int items;
	int items1;
	int Lcontainer;
	int scraps;
	int Scontainer;

	printf(""Large capacity: "");
	scanf(""%d"", &Large);

	printf(""\nSmall capacity: "");
	scanf(""%d"", &Small);

	printf(""\nNumber of items: "");
	scanf(""%d"", &items);

	items1 = items % Large;
	Lcontainer = (items - items1) / Large;
	scraps = items1 % Small;
	Scontainer = (items1 - scraps) / Small;

	printf(""\nAllocated: \n - Large: %d\n - Small : %d\n - Scrap : %d"", Lcontainer, Scontainer, scraps);

	return 0;

}",0
ykwa219,1694877968,2,"#define _CRT_SECURE_NO_WARNINGS 

#include <stdio.h>

int main(void)
{
	int Large;
	int Small;
	int items;
	int items1;
	int Lcontainer;
	int scraps;
	int Scontainer;

	printf(""Large capacity: "");
	scanf(""%d"", &Large);

	printf(""\nSmall capacity: "");
	scanf(""%d"", &Small);

	printf(""\nNumber of items: "");
	scanf(""%d"", &items);

	items1 = items % Large;
	Lcontainer = (items - items1) / Large;
	scraps = items1 % Small;
	Scontainer = (items1 - scraps) / Small;

	printf(""\nAllocated: \n - Large: %d\n - Small: %d\n - Scrap: %d"", Lcontainer, Scontainer, scraps);

	return 0;

}",1
ylee818,1695011834,1,"#include <stdio.h>

int main()
{
   int large, small, number, largeans, smallans, left;
  printf(""Large capacity:\n"");
  scanf(""%d"", &large);
  printf(""Small capacity:\n"");
  scanf(""%d"", &small);
  printf(""Number of items:\n"");
  scanf(""%d"", &number);
  largeans = number/large;
  smallans = (number - (largeans*large))/small;
  left = (number - (largeans*large) - (smallans*small));
  printf(""Allocated:\n"");
  printf("" - Large: %d\n"", largeans);
  printf("" - Small: %d\n"", smallans);
  printf("" - Scrap: %d\n"", left);
  
}",1
yrah128,1695032770,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;


    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);


    int num_large_containers = total_items / large_capacity;
    int num_small_containers = 0;


    int items_left = total_items % large_capacity;

    if (items_left > 0) {
        num_small_containers = items_left / small_capacity;
        items_left %= small_capacity;
    }


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", items_left);

    return 0;
}",1
ytse120,1694764396,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int largecap, large, smallcap, small, items, scrap;

    printf(""Large capacity: \n"");
    scanf(""%d"",&largecap);

    printf(""Small capacity: \n"");
    scanf(""%d"",&smallcap);
    
    printf(""Number of items: \n"");
    scanf(""%d"",&items);

    large = items / largecap;
    small = (items % largecap) / smallcap;
    scrap = ((items % largecap) % smallcap);

    printf(""Allocated: \n"");
    printf("" - Large: %d \n"",large);
    printf("" - Small: %d \n"",small);
    printf("" - Scrap: %d \n"",scrap);
    return 0;
}

",1
zche975,1695035054,1,"#include <stdio.h>

int main() {
    int largeCapacity, smallCapacity, numItems;
    int largeContainers = 0, smallContainers = 0, scrapItems = 0;

    // Prompt the user for input
    printf(""Large capacity:\n"");
    scanf(""%d"", &largeCapacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &smallCapacity);

    printf(""Number of items:\n"");
    scanf(""%d"", &numItems);

    // Calculate the number of large containers needed
    largeContainers = numItems / largeCapacity;
    numItems %= largeCapacity; // Update remaining items

    // Calculate the number of small containers needed
    smallContainers = numItems / smallCapacity;
    numItems %= smallCapacity; // Update remaining items

    // Calculate the number of scrapped items
    scrapItems = numItems;

    // Display the result
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", scrapItems);

    return 0;
}
",1
zcra120,1694835301,1,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int number;
    printf(""Large Capacity:"");
    scanf(""%d"",&large);
    printf(""\nSmall Capacity:"");
    scanf(""%d"",&small);
    printf(""\nNumber of items:"");
    scanf(""\n%d"",&number);
    int Large;
    Large = number/large;
    printf(""\nAllocated:"");
    printf(""\n- Large: %d"",Large); 
    int leftover;
    leftover = large*Large;
  int x;
   x = number - leftover;
 int numbersmallbag;
  numbersmallbag = x/small;
  printf(""\n- Small: %d"", numbersmallbag);
  int scrap;
  scrap = number - ((Large*large)+(small*numbersmallbag));
   printf(""\n- Scrap: %d"",scrap);

    
}
",0
zcra120,1694835415,2,"#include <stdio.h>

int main()
{
    int large;
    int small;
    int number;
    printf(""Large capacity:"");
    scanf(""%d"",&large);
    printf(""\nSmall capacity:"");
    scanf(""%d"",&small);
    printf(""\nNumber of items:"");
    scanf(""\n%d"",&number);
    int Large;
    Large = number/large;
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"",Large); 
    int leftover;
    leftover = large*Large;
  int x;
   x = number - leftover;
 int numbersmallbag;
  numbersmallbag = x/small;
  printf(""\n - Small: %d"", numbersmallbag);
  int scrap;
  scrap = number - ((Large*large)+(small*numbersmallbag));
   printf(""\n - Scrap: %d"",scrap);

    
}
",1
zfu276,1694824779,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int C_large;
    int C_small;
    int n;
    int n_large;
    int n_small;
    int n_scrap;
    int remain1;

    printf(""Large capacity:\n"");
    scanf(""%d"", &C_large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &C_small);
    printf(""Number of items:\n"");
    scanf(""%d"", &n);


    n_large = (int)(n / C_large);

    remain1 = n % C_large;

    n_small = (int)(remain1 / C_small);

    n_scrap = remain1 % C_small;

    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", n_large);
    printf("" - Small: %d\n"", n_small);
    printf("" - Scrap: %d\n"", n_scrap);

    return 0;
}

",1
zgab423,1695030934,1,"#include <stdio.h>

int main()
{
    
    int l;
    int s;
    int n;
    
    {
    printf(""Large capacity:"");
    scanf(""%d"",&l);
    
    printf(""\nSmall capacity:"");
    scanf(""%d"",&s);
    
    printf(""\nNumber of items:"");
    scanf(""%d"",&n);
    }
    
    int large = n / l;
    int small = (n % l) / s;
    int scraps = n - ((large*l) + (small*s));
   
    
    printf(""\nAllocated:"");
    printf(""\n- Large: %d\n"", large);
    printf(""- Small: %d\n"", small);
    printf(""- Scrap: %d\n"", scraps);

    return 0;
}
",0
zgab423,1695031041,2,"#include <stdio.h>

int main()
{
    
    int l;
    int s;
    int n;
    
    {
    printf(""Large capacity:"");
    scanf(""%d"",&l);
    
    printf(""\nSmall capacity:"");
    scanf(""%d"",&s);
    
    printf(""\nNumber of items:"");
    scanf(""%d"",&n);
    }
    
    int large = n / l;
    int small = (n % l) / s;
    int scraps = n - ((large*l) + (small*s));
   
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d\n"", large);
    printf(""\n - Small: %d\n"", small);
    printf(""\n - Scrap: %d\n"", scraps);

    return 0;
}
",0
zgab423,1695031217,3,"#include <stdio.h>

int main()
{
    
    int l;
    int s;
    int n;
    
    {
    printf(""Large capacity:"");
    scanf(""%d"",&l);
    
    printf(""\nSmall capacity:"");
    scanf(""%d"",&s);
    
    printf(""\nNumber of items:"");
    scanf(""%d"",&n);
    }
    
    int large = n / l;
    int small = (n % l) / s;
    int scraps = n - ((large*l) + (small*s));
   
    
    printf(""\nAllocated:"");
    printf(""\n - Large: %d"", large);
    printf(""\n - Small: %d"", small);
    printf(""\n - Scrap: %d"", scraps);

    return 0;
}
",1
zgar110,1695012453,1,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

   
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);


    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

  
    int num_large_containers = total_items / large_capacity;


    int remaining_items = total_items % large_capacity;

    
    int num_small_containers = remaining_items / small_capacity;

  
    int num_scrapped_items = remaining_items % small_capacity;


    printf(""\nAllocated:\n"");
    printf(""- Large: %d\n"", num_large_containers);
    printf(""- Small: %d\n"", num_small_containers);
    printf(""- Scrap: %d\n"", num_scrapped_items);

    return 0;
}
",0
zgar110,1695012548,2,"#include <stdio.h>

int main() {
    int large_capacity, small_capacity, total_items;

   
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);

    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);


    printf(""Number of items:\n"");
    scanf(""%d"", &total_items);

  
    int num_large_containers = total_items / large_capacity;


    int remaining_items = total_items % large_capacity;

    
    int num_small_containers = remaining_items / small_capacity;

  
    int num_scrapped_items = remaining_items % small_capacity;


    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", num_scrapped_items);

    return 0;
}
",1
zgas053,1695036508,1,"#include <stdio.h>
#include <math.h>
int main(void)
{
    int x;
    printf(""Large capacity:\n"");
    scanf(""%d"", &x);
    
    int y;
    printf(""Small capacity:\n"");
    scanf(""%d"", &y);
    
    int z;
    printf(""Number of items:\n"");
    scanf(""%d"", &z);
    
    int b;
    
    b = z/x;
    floor(b);
    
    int c;
    
    c = z - b*x;
    c = c/y;
    floor(c);
    
    int d;
    
    d = z - b*x - c*y;
    
    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%d\n"", b);
    printf("" - Small: "");
    printf(""%d\n"", c);
    printf("" - Scrap: "");
    printf(""%d\n"", d);
    
    
    return 0;
    
}
",0
zgas053,1695036842,2,"#include <stdio.h>
#include <math.h>
int main(void)
{
    int x;
    printf(""Large capacity:\n"");
    scanf(""%d"", &x);
    
    int y;
    printf(""Small capacity:\n"");
    scanf(""%d"", &y);
    
    int z;
    printf(""Number of items:\n"");
    scanf(""%d"", &z);
    
    int b;
    
    b = z/x;
    b = floor(b);
    
    int c;
    
    c = z - b*x;
    c = c/y;
    c = floor(c);
    
    int d;
    
    d = z - b*x - c*y;
    
    printf(""Allocated:\n"");
    printf("" - Large: "");
    printf(""%d\n"", b);
    printf("" - Small: "");
    printf(""%d\n"", c);
    printf("" - Scrap: "");
    printf(""%d\n"", d);
    
    
    return 0;
    
}
",1
zguo839,1694922772,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    int large_capacity;
    int small_capacity;
    int num_items;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    printf(""Number of items:\n"");
    scanf(""%d"", &num_items);
    int num_large_containers = num_items / large_capacity;
    int remaining_items = num_items % large_capacity;
    int num_small_containers = remaining_items / small_capacity;
    int scrapped_items = remaining_items % small_capacity;
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", num_large_containers);
    printf("" - Small: %d\n"", num_small_containers);
    printf("" - Scrap: %d\n"", scrapped_items);

    return 0;
}",1
zhon780,1695029802,1,"#include <stdio.h>

int main() {
    int large_capacity;
    int small_capacity;
    int n_items;
    
    printf(""Large capacity:\n"");
    scanf(""%d"", &large_capacity);
    
    printf(""Small capacity:\n"");
    scanf(""%d"", &small_capacity);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &n_items);
    
    int remainder = n_items;
    
    int n_large_containers = remainder / large_capacity;
    remainder -= n_large_containers * large_capacity;
    
    int n_small_containers = remainder / small_capacity;
    remainder -= n_small_containers * small_capacity;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", n_large_containers);
    printf("" - Small: %d\n"", n_small_containers);
    printf("" - Scrap: %d"", remainder);
    
    return 0;
}",1
zliu381,1694850404,1,"# define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int large_cap;
	int small_cap;
	int n_cap;

	printf(""Large capacity:\n"");
	scanf(""%d"", &large_cap);

	printf(""Small capacity:\n"");
	scanf(""%d"", &small_cap);

	printf(""Number of items:\n"");
	scanf(""%d"", &n_cap);

	int n_largebox = n_cap / large_cap;
	
	int reminder = n_cap % large_cap;

	int n_smallbox = reminder / small_cap;

	int n_scrap = reminder % small_cap;

	printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", n_largebox, n_smallbox, n_scrap);








}",1
zliu578,1694862517,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int LC;
	int SC;
	int n;
	printf(""Large capacity:\n"");
	scanf(""%d"", &LC);

	printf(""Small capacity:\n"");
	scanf(""%d"", &SC);

	printf(""Number of items:\n"");
	scanf(""%d"", &n);

	int large = n / LC;
	int small = (n % LC) / SC;
	int scrap = (n % LC) - SC * small;

	printf(""Allocated:\n"");
	printf(""- Large: %d\n"", large);
	printf(""- Small: %d\n"", small);
	printf(""- Scrap: %d"", scrap);

	return 0;
}",0
zliu578,1694862542,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main(void)
{
	int LC;
	int SC;
	int n;
	printf(""Large capacity:\n"");
	scanf(""%d"", &LC);

	printf(""Small capacity:\n"");
	scanf(""%d"", &SC);

	printf(""Number of items:\n"");
	scanf(""%d"", &n);

	int large = n / LC;
	int small = (n % LC) / SC;
	int scrap = (n % LC) - SC * small;

	printf(""Allocated:\n"");
	printf("" - Large: %d\n"", large);
	printf("" - Small: %d\n"", small);
	printf("" - Scrap: %d"", scrap);

	return 0;
}",1
zpen457,1694945838,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
    
int main(void)
{
    /*define the large capacity, small capacity, and number of items as integers.*/
    int largeC;
    int smallC;
    int n;
    
    /*ask user to enter an integer for each variable.*/
    printf(""Large capacity:\n"");
    scanf(""%d"",&largeC);
    
    printf(""Small capacity:\n"");
    scanf(""%d"",&smallC);
    
    printf(""Number of items:\n"");
    scanf(""%d"",&n);
    
    /*calculate the number of large containers that can be fully filled.*/
    int nLarge;
    nLarge = n / largeC;
    
    int rem1;
    rem1 = n % largeC;
    
    /*take the remainder from last step, calculate the number of small containers that 
    can be fully filled.*/
    int nSmall;
    nSmall = rem1 / smallC;
    
    /*take the remainder from last step as the number of scrap items.*/
    int scrap;
    scrap = rem1 % smallC;
    
    /*display the formatted output.*/
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"",nLarge,nSmall,scrap);
}
",1
zqia091,1695025963,1,"#include <stdio.h>

int main() 
{
    int LarCap,SamCap,Tot;
    int Larcont,Smacont,scrap;
    printf(""Large capacity:\n"");
    scanf(""%d"",&LarCap);
    printf(""Small capacity:\n"");
    scanf(""%d"",&SamCap);
    printf(""Number of items:\n"");
    scanf(""%d"",&Tot);
    
    Larcont=Tot/LarCap;
    int remaining=Tot%LarCap;
    Smacont=remaining/SamCap;
    scrap=remaining%SamCap;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Larcont);
    printf("" - Small: %d\n"", Smacont);
    printf("" - Scrap: %d\n"", scrap);
    
    return 0;
}",1
zshi453,1694842213,1,"#include <stdio.h>

int main(void){
    int largecapacity;
    int smallcapacity;
    int items;
    int large;
    int small;
    int scrap;
    
    printf(""Large capacity:\n"");
    scanf(""%d"",&largecapacity);
    printf(""Small capacity:\n"");
    scanf(""%d"",&smallcapacity);
    printf(""Number of items:\n"");
    scanf(""%d"",&items);
    large = items / largecapacity;
    small = (items % largecapacity) / smallcapacity;
    scrap = (items % largecapacity) % smallcapacity;
    printf(""Allocated:\n"");
    printf("" - Large: %i\n"",large);
    printf("" - Small: %i\n"",small);
    printf("" - Scrap: %i\n"",scrap);
}",1
zvor566,1694855764,1,"#include <stdio.h>

int main(void)
{
    int large, small, items, scrap,largecontainer,smallcontainer;
    printf(""Large capacity:\n"");
    scanf(""%d"", &large);
    printf(""Small capacity:\n"");
    scanf(""%d"", &small);
    printf(""Number of items:\n"");
    scanf(""%d"", &items);
    largecontainer = items / large;
    items -= largecontainer * large;
    smallcontainer = items / small;
    scrap = items - (smallcontainer * small);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largecontainer);
    printf("" - Small: %d\n"", smallcontainer);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
zwil198,1695015521,1,"#include <stdio.h>

int main() {
    int large;
    int small;
    int amount;
    int amountL;
    int amountS;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);

 
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &amount);

    amountL = amount / large;
    amountS = (amount % large) / small;
    scrap = amount - (amountL * large) - (amountS * small);

    printf(""Allocated: \n - Large %d \n - Small: %d \n - Scrap: %d"", amountL, amountS, scrap);
    
    
    return 0;
}",0
zwil198,1695015538,2,"#include <stdio.h>

int main() {
    int large;
    int small;
    int amount;
    int amountL;
    int amountS;
    int scrap;
    
    printf(""Large capacity: \n"");
    scanf(""%d"", &large);

 
    printf(""Small capacity: \n"");
    scanf(""%d"", &small);
    
    printf(""Number of items: \n"");
    scanf(""%d"", &amount);

    amountL = amount / large;
    amountS = (amount % large) / small;
    scrap = amount - (amountL * large) - (amountS * small);

    printf(""Allocated: \n - Large: %d \n - Small: %d \n - Scrap: %d"", amountL, amountS, scrap);
    
    
    return 0;
}",1
zwu591,1694791958,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    /*Variable definition*/
    int Lc;
    int Sc;
    int n;
    
    /*Print sentences for the user and receieve inputs from the user*/
    printf(""Large capacity:\n"");
    scanf(""%d"", &Lc);

    printf(""Small capacity:\n"");
    scanf(""%d"", &Sc);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    /*Variale definition*/
    int Large;
    int Small;
    int Scrap;

    /*Find the how many large bags are required. Then find the reminde of the division.
    Use the reminder to find how many small bags are required. */

    Large = n / Lc;
    Small = (n % Lc) / Sc;
    Scrap = (n % Lc) % Sc;

    /*Print the allocated information*/
    printf(""Alllocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);

    return 0;
}",0
zwu591,1694792045,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
    /*Variable definition*/
    int Lc;
    int Sc;
    int n;
    
    /*Print sentences for the user and receieve inputs from the user*/
    printf(""Large capacity:\n"");
    scanf(""%d"", &Lc);

    printf(""Small capacity:\n"");
    scanf(""%d"", &Sc);
    
    printf(""Number of items:\n"");
    scanf(""%d"", &n);

    /*Variale definition*/
    int Large;
    int Small;
    int Scrap;

    /*Find the how many large bags are required. Then find the reminde of the division.
    Use the reminder to find how many small bags are required. */

    Large = n / Lc;
    Small = (n % Lc) / Sc;
    Scrap = (n % Lc) % Sc;

    /*Print the allocated information*/
    printf(""Allocated:\n - Large: %d\n - Small: %d\n - Scrap: %d"", Large, Small, Scrap);

    return 0;
}",1
zyah987,1694937281,1,"#include <stdio.h>

int main() {
    int capacities[2], total_items;
    int containers[2];
    char *labels[] = {""large"", ""small""};

    for(int i = 0; i < 2; i++) {
        printf(""Enter the number of items of the %s container: "", labels[i]);
        scanf(""%d"", &capacities[i]);
    }

    printf(""Enter the total number of items in the order: "");
    scanf(""%d"", &total_items);

    int items_left = total_items;
    
    for(int i = 0; i < 2; i++) {
        containers[i] = items_left / capacities[i];
        items_left -= containers[i] * capacities[i];
    }

    printf(""\nLarge capacity: %d\n"", capacities[0]);
    printf(""Small capacity: %d\n"", capacities[1]);
    printf(""Number of items: %d\n"", total_items);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", containers[0]);
    printf("" - Small: %d\n"", containers[1]);
    printf("" - Scrap: %d\n"", items_left);

    return 0;
}
",0
zyah987,1694937955,2,"#include <stdio.h>

typedef struct {
    char *label;
    int capacity;
    int containers;
} Container;

int prompt_for_value(char *message) {
    int value;
    printf(""%s"", message);
    scanf(""%d"", &value);
    return value;
}

int compute_containers(int totalItems, int cap) {
    return totalItems / cap;
}

int compute_leftover_items(int totalItems, int cap, int numContainers) {
    return totalItems - (numContainers * cap);
}

int main() {
    Container large = { .label = ""large"", .capacity = prompt_for_value(""Enter the capacity of the large container: "")};
    Container small = { .label = ""small"", .capacity = prompt_for_value(""Enter the capacity of the small container: "")};

    int totalItems = prompt_for_value(""Enter the total number of items in the order: "");

    large.containers = compute_containers(totalItems, large.capacity);
    totalItems = compute_leftover_items(totalItems, large.capacity, large.containers);

    small.containers = compute_containers(totalItems, small.capacity);
    totalItems = compute_leftover_items(totalItems, small.capacity, small.containers);

    printf(""\nLarge capacity: %d\n"", large.capacity);
    printf(""Small capacity: %d\n"", small.capacity);
    printf(""Number of items: %d\n"", totalItems + large.containers * large.capacity + small.containers * small.capacity);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", large.containers);
    printf("" - Small: %d\n"", small.containers);
    printf("" - Scrap: %d\n"", totalItems);

    return 0;
}
",0
zyah987,1694937976,3,"#include <stdio.h>

int read_value(char *msg) {
    int val;
    printf(""%s"", msg);
    scanf(""%d"", &val);
    return val;
}

int compute_containers(int items, int capacity) {
    return items / capacity;
}

int compute_remaining(int items, int capacity, int containers) {
    return items - containers * capacity;
}

int main() {
    int largeCap = read_value(""Enter the capacity of the large container: "");
    int smallCap = read_value(""Enter the capacity of the small container: "");
    int items = read_value(""Enter the total number of items in the order: "");

    int largeContainers = compute_containers(items, largeCap);
    items = compute_remaining(items, largeCap, largeContainers);

    int smallContainers = compute_containers(items, smallCap);
    items = compute_remaining(items, smallCap, smallContainers);

    printf(""\nLarge capacity: %d\n"", largeCap);
    printf(""Small capacity: %d\n"", smallCap);
    printf(""Number of items: %d\n"", items + largeContainers * largeCap + smallContainers * smallCap);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", largeContainers);
    printf("" - Small: %d\n"", smallContainers);
    printf("" - Scrap: %d\n"", items);

    return 0;
}
",0
zyah987,1694938381,4,"#include <stdio.h>

int main() {
    int capacities[2], items;
    int containers[2];

    printf(""Large capacity: "");
    scanf(""%d"", &capacities[0]);

    printf(""Small capacity: "");
    scanf(""%d"", &capacities[1]);

    printf(""Number of items: "");
    scanf(""%d"", &items);

    containers[0] = items / capacities[0];
    items -= containers[0] * capacities[0];

    containers[1] = items / capacities[1];
    items -= containers[1] * capacities[1];

    printf(""\nLarge capacity: %d\n"", capacities[0]);
    printf(""Small capacity: %d\n"", capacities[1]);
    printf(""Number of items: %d\n"", items + containers[0] * capacities[0] + containers[1] * capacities[1]);
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", containers[0]);
    printf("" - Small: %d\n"", containers[1]);
    printf("" - Scrap: %d\n"", items);

    return 0;
}
",0
zyah987,1694943821,5,"#include <stdio.h>

void getInput(char *prompt, int *value) {
    printf(""%s"", prompt);
    scanf(""%d"", value);
}

int main() {
    int large_capacity, small_capacity, num_items;
    int large_used, small_used, scrap;

    
    getInput(""Large capacity: "", &large_capacity);
    getInput(""Small capacity: "", &small_capacity);
    getInput(""Number of items: "", &num_items);

    
    large_used = num_items / large_capacity;
    num_items %= large_capacity;

    
    small_used = num_items / small_capacity;
    scrap = num_items % small_capacity;

    
    printf(""\nAllocated:\n"");
    printf("" - Large: %d\n"", large_used);
    printf("" - Small: %d\n"", small_used);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",0
zyah987,1694944174,6,"#include <stdio.h>

int getInput(char *prompt) {
    int value;
    printf(""%s"", prompt);
    scanf(""%d"", &value);
    return value;
}

int main() {
    int large_capacity, small_capacity, num_items;
    int large_used, small_used, scrap;

    
    large_capacity = getInput(""Large capacity: "");
    small_capacity = getInput(""Small capacity: "");
    num_items = getInput(""Number of items: "");

    
    large_used = num_items / large_capacity;
    num_items %= large_capacity;

   
    small_used = num_items / small_capacity;
    scrap = num_items % small_capacity;

    
    printf(""\nAllocated:\n"");
    printf("" - Large: %d\n"", large_used);
    printf("" - Small: %d\n"", small_used);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}
",0
zzho965,1694936304,1,"#include <stdio.h>

int main(void) 
{
    int Lc,Sc,Ni;
    

    printf(""Large capacity:\n"");
    scanf(""%d"", &Lc);

    printf(""Small capacity:\n"");
    scanf(""%d"", &Sc);

    printf(""Number of items:\n"");
    scanf(""%d"", &Ni);
    
    int Lleft = Ni / Lc;
    int Sleft = (Ni - Lc * Lleft) / Sc;
    int scrap = Ni - Lc * Lleft - Sc * Sleft;
    
    printf(""Allocated:\n"");
    printf("" - Large: %d\n"", Lleft);
    printf("" - Small: %d\n"", Sleft);
    printf("" - Scrap: %d\n"", scrap);

    return 0;
}",1
