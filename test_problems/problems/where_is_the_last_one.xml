<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 308211  -->
  <question type="coderunner">
    <name>
      <text>Where is the last one</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p>Write a function called <b>LastIndexOf</b>() which is passed three inputs: a value to search for, an array of integers in which to search and the number of elements in the array. The function prototype declaration will look like the following:<br><br><pre>&nbsp;&nbsp; &nbsp;int LastIndexOf(int search, int values[], int numValues)</pre>This function should return the <em>index position</em> of the <em>last </em>occurrence (i.e. the rightmost occurrence) of the value being searched for. If the value being searched for does not exist in the array, then the function should return -1.<br><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <coderunnertype>c_function</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>0, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <globalextra></globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[int LastIndexOf(int search, int values[], int numValues) { 
    int pos = -1; 
    int i; 
    for (i = 0; i < numValues; i++) { 
        if (values[i] == search) { 
            pos = i; 
        } 
    } 
    return pos; 
}
]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <templateparamslang>twig</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald></templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>1</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values[5] = {1,2,0,2,1}; 
int pos = LastIndexOf(2, values, 5); 
printf("%d", pos);]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>3</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values1[5] = {1,2,0,2,1}; 
printf("%d", LastIndexOf(0, values1, 5));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>2</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values2[5] = {1,2,0,2,1}; 
printf("%d", LastIndexOf(3, values2, 5));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>-1</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values3[7] = {7,6,5,4,3,2,1}; 
printf("%d", LastIndexOf(7, values3, 7));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>0</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values4[6] = {10,2,3,3,3,2}; 
printf("%d", LastIndexOf(3, values4, 6));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>4</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values4[7] = {1,1,1,1,1,1,1}; 
printf("%d", LastIndexOf(7, values4, 7));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>-1</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values5[7] = {1,1,1,1,1,1,1}; 
printf("%d", LastIndexOf(1, values5, 7));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>6</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values6[6] = {2,1,1,1,1,2}; 
printf("%d", LastIndexOf(2, values6, 6));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>5
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values7[6] = {2,1,3,1,1,2}; 
printf("%d", LastIndexOf(3, values7, 6));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>2
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values4[7] = {1,10,1,1,10,1,1}; 
printf("%d", LastIndexOf(10, values4, 7));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>4
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[int values4[7] = {1,10,1,1,100,1,1}; 
printf("%d", LastIndexOf(10, values4, 7));]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>1</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

</quiz>