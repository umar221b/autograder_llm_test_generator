upi,time,try,answer,rawfraction
aahk798,1697160757,1,"int OneLetterDifference(char *word1, char *word2){
    int i;
    int count = 0;
        for(i=0; i<5;i++){
if (word1[i]!=word2[i]){ 
                count++;
        }  
    }
    if(count==1){
        return 1;
    }
    else return 0;
}",1
aakm278,1697433452,1,"int OneLetterDifference(char word1[], char word2[])
{
	int i;
	int count = 0;
	for (i = 0; i <= 5; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count = 1)
	{
		return 1;
	}
	return 0;

}",0
aakm278,1697433492,2,"int OneLetterDifference(char word1[], char word2[])
{
	int i;
	int count = 0;
	for (i = 0; i <= 5; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1)
	{
		return 1;
	}
	return 0;

}",0
aakm278,1697433738,3,"int OneLetterDifference(char word1[], char word2[])
{
	int i;
	int count = 0;
	for (i = 0; i <= 5; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1)
	{
		return 1;
	}
	else 
	{
		return 0;
	}

}",0
aakm278,1697433808,4,"int OneLetterDifference(char *word1, char *word2
{
	int i;
	int count = 0;
	for (i = 0; i <= 5; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1)
	{
		return 1;
	}
	else 
	{
		return 0;
	}

}",0
aakm278,1697433812,5,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	for (i = 0; i <= 5; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1)
	{
		return 1;
	}
	else 
	{
		return 0;
	}

}",0
aana675,1697335433,1,"#include <stdio.h>

#define WORD_LENGTH 5  

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;  
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        
        if (word1[i] != word2[i]) {
            differences++;  
        }

        
        if (differences > 1) {
            return 0;  
        }
    }

    
    return (differences == 1);
}
",1
aaza463,1696816307,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;

	for(int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] == word2[i]){
			count++;
		}
	}

	if (count == (WORD_LENGTH - 1)){
		return 1;
	} 
	else {
		return 0;
	}

}",1
aazh582,1697448771,1,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {  // WORD_LENGTH - 1 because the last character is a null terminator
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    if (differences == 1) {
        return 1;  // True: Exactly one character difference
    }
    return 0;  // False: More or less than one character difference",0
aazh582,1697448799,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {  // WORD_LENGTH - 1 because the last character is null terminator
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    if (differences == 1) {
        return 1;  // True: Exactly one character difference
    }
    return 0;  // False: More or less than one character difference
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character"");
    } else {
        printf(""The words do not differ by just one character"");
    }

    return 0;
}
",0
aazh582,1697448832,3,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {  // WORD_LENGTH - 1 because the last character is null terminator
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    if (differences == 1) {
        return 1;  // True: Exactly one character difference
    }
    return 0;  // False: More or less than one character difference
}
",1
abha257,1697265488,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, count = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
abro522,1696812708,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }
    return differences == 1;
}",1
acam267,1696998550,1,"int OneLetterDifference(char *word1, char *word2) {
    int size = strlen(word1);
    int difference = 0;
    for(int i = 0; i < size; i++) {
        if(word1[i] != word2[i]) {
            difference++;
        }
    }
    if (difference == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
ache725,1697197316,1,"int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0;
            }
        }
    }

    return differenceCount == 1;
}",1
achi359,1697318411,1," int OneLetterDifference(char *word1, char *word2) {
    int count = 0; 
    for (int i = 0; i < 5; i++){
        if (word1[i] == word2[i]){
            count ++;
        }
        i++;
    }
     
     if (count == 3){
         return 1;
     }else{ 
         return 0;
     }
}
",0
achi359,1697319143,2,"int OneLetterDifference(char *word1, char *word2){
    
   
    int count = 0; 
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count ++;
        }
    }
  
     if (count == 3){
         return 1;
     }else{ 
         return 0;
     }
}
",1
acoc261,1696893444,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int length = strlen(word1);
    int count = 0;
    for(i = 0;i < length; i++){
        if(word1[i] != word2[i]){
        count = count + 1;
        }
    }
    if (count == 1){
        return 1;
    }
    return 0;
}",1
adav221,1697346772,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++; 
        }
        
        if (diffCount > 1) {
            return 0; 
        }
    }

    return diffCount == 1; 
}",1
adey750,1697425364,1,"int OneLetterDifference(char *word1, char *word2){
     
     int i = 0;
     int count = 0;
     
     while (word1[i] != '\0'){
         
         while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } 
}

}",0
adey750,1697425731,2,"int OneLetterDifference(char *word1, char *word2) {
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
adey750,1697425745,3,"int OneLetterDifference(char *word1, char *word2) {
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } 
}",0
adey750,1697425771,4,"int OneLetterDifference(char *word1, char *word2) {
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } 
",0
adey750,1697425780,5,"int OneLetterDifference(char *word1, char *word2) {
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } 
}",0
adey750,1697425812,6,"int OneLetterDifference(char *word1, char *word2) {
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
adey750,1697430269,7,"int OneLetterDifference(char *word1, char *word2) {
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } 
}",0
adey750,1697450731,8,"int OneLetterDifference(char *word1, char *word2) {
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;

            if (count > 1) {
                return 0;
            }
        }

        i++;
    }

    if (count == 1) {
        return 1;
    } else { 
        
        return 0;
    } 
}",1
afal438,1696829037,1,"#include <stdio.h>
#define _NO_CRT_SECURE_WARNINGS
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int z = 0;
	for (i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] != word2[i])
		{
			z++;
		}
		else
		{
			z = z;
		}
	}

	if (z == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}

}",1
afit324,1697337795,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int count = 0;

    if (strlen(word1) == strlen(word2)) {
        while (word2[i] != '\0') {
            if (word1[i] == word2[i]) {
                count++;
            }
            
            i++;;
        }
        if (count == strlen(word1) - 1) {
            return 1;
        } else {
            return 0;
        }
    } else {
        return 0;
    }

}",1
agan859,1697246334,1,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int count = 0;
	
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]){
			count++;
		}
	}

	if (count > 1) {
		return 0;
	} else {
		return 1;
	}
}",0
agan859,1697246398,2,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int count = 0;
	
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]){
			count++;
		}
	}

	if (count == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
agay279,1697074368,1,"int OneLetterDifference(char *word1, char *word2)
{
     int counter=0; 

    for (int i=0;i<4;i++){
        if (word1[i]!=word2[i]){
            counter++;
        }
    }

    if (counter==1){
        return 1;

    }
    return 0;
}
",1
agou682,1697424261,1,"int OneLetterDifference(char *word1, char *word2)
{
    int DiffCount = 0;
    
    if (strlen(word1) != strlen(word2)) {
        return 0; 
    }

    for (int i = 0; word1[i] != '\0'; i++) {
        if (word1[i] != word2[i]) {
            DiffCount++;
            if (DiffCount > 1) {
                return 0; 
            }
        }
    }

    return DiffCount ==1; 
    // Return true if exactly one letter is different.
}
",1
ahac139,1697039347,1,"int OneLetterDifference(char *word1, char *word2)
{

    int difference = 0;

    for (int i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i])
        {
            difference++;
        }        
    }
    

    if (difference == 0)
    {
        return 0;
    } else if (difference == 1)
    {
        return 1;
    } 

    return 0;

}",1
ahac223,1697446972,1,"int OneLetterDifference(char *word1, char *word2)
{
    int length = 4;
    int i = 0;
    int similar = 0; 
    
    while(i < 5){
        if(word1[i] == word2[i]){
            similar += 1;
        }
        i++;
        
    }
    if(similar == 4){
        return 1;
    } else{
        return 0;
    }
}
",0
ahac223,1697446994,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int similar = 0; 
    
    while(i < 5){
        if(word1[i] == word2[i]){
            similar += 1;
        }
        i++;
        
    }
    if(similar == 4){
        return 1;
    } else{
        return 0;
    }
}
",1
ahai431,1696996636,1,"int OneLetterDifference(char* word1, char* word2)
{
	FILE *fp;
	fp = fopen(""wordlist.txt"", ""r"");
	
	if (fp == NULL) {
	    printf(""Could not open file."");
	    exit(EXIT_FAILURE);
    }

	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i])
			count++;
	}

	if (count = 1) {
		return 1;
	}
	else {
		return 0;
	}

	fclose(fp);
	
}",0
ahai431,1696996662,2,"int OneLetterDifference(char* word1, char* word2)
{
	FILE *fp;
	fp = fopen(""wordlist.txt"", ""r"");
	
	if (fp == NULL) {
	    printf(""Could not open file."");
	    exit(EXIT_FAILURE);
    }

	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i])
			count++;
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

	fclose(fp);
	
}",0
ahai431,1696996712,3,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i])
			count++;
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

	fclose(fp);
	
}",0
ahai431,1696996721,4,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i])
			count++;
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
	
}",1
ahas673,1696812431,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int count;
    for (int i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    if (count == 1){
        return 1;
    }else{
        return 0;
    }
}",0
ahas673,1696812864,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    int i = 0;
    while (i < WORD_LENGTH){
        if (word1[i] != word2[i]){
            count++;
        }
        i++;
    }
    
    if (count == 1){
        return 1;
    }else{
        return 0;
    }
}
",1
ahij206,1697430976,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;

            if (differenceCount > 1)
                return 0;
        }
    }

    return (differenceCount == 1);
}",1
ahua579,1696907412,1,"int OneLetterDifference(char* word1, char* word2) {
	int differences = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			differences++;
		}
	}
	if (differences > 1) {
		return 0;
	}
	return 1;
}",0
ahua579,1696907526,2,"int OneLetterDifference(char* word1, char* word2) {
	int differences = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			differences++;
		}
	}
	if (differences == 1) {
		return 1;
	}
	return 0;
}",1
ahus071,1697442410,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;

	for (int i = 0; i < 4; i++)
	{
		if(word1[i] != word2[i])
		{
			count++;
		}
	}
	
	if (count == 1)
	{
		return 1;
	}
	else {
		return 0;
	}
}",1
ajam744,1696996026,1," int OneLetterDifference(char *word1, char *word2)
 {
    int i;
    int n = 0;
    
    for (i = 0; i < 5; i++) 
    {
        if (word1[i] != word2[i])
        {
            n++;
        }
        
    }
    
    if (n == 1)
    {
        return 1;
    }
    
    return 0;
 }",1
ajeo563,1696984628,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;

	for (int i = 0; i < 4; i++) {
		
		if (word1[i] != word2[i]) {

			count++;

		}

		if (count > 1) {
			
			return 0;
		}
	}
	
	return 1;
}",0
ajeo563,1696984812,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;

	for (int i = 0; i < 4; i++) {
		
		if (word1[i] != word2[i]) {

			count++;

		}

		if (count > 1) {
			
			return 0;
		}
	}
	
	if (word1 == word2) {
		return 0;
	}

	return 1;
}",0
ajeo563,1696985232,3,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;


	for (int i = 0; i < 4; i++) {
		
		if (word1[i] != word2[i]) {

			count++;

			if (count > 1) {
				return 0;
			}

		}

	}

	if (count == 0) {
		return 0;
	}
	
	if (count == 1) {
		return 1;
	}
	",0
ajeo563,1696985436,4,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;


	for (int i = 0; i < 4; i++) {
		
		if (word1[i] != word2[i]) {

			count++;

		}
		
		if (count > 1) {
			return 0;
		}

	}

	if (count == 0) {
		return 0;
	}
	
	if (count == 1) {
		return 1;
	}
	
}",0
ajeo563,1696985504,5,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;


	for (int i = 0; i < 4; i++) {
		
		if (word1[i] != word2[i]) {

			count++;

		}
		
		if (count > 1) {
			return 0;
		}

	}

	if (count == 0) {
		return 0;
	}
	
	return 1;
	
}",1
ajhz010,1697001189,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i, count;
    count = 0;
    for (i = 0; i < (WORD_LENGTH - 1); i++) {
            if (word1[i] != word2[i]) {
                count = count + 1;
            }
    }
    
    if (count == 1) {
        return 1;
    }
        else {
            return 0;
        }
}",1
ajhz011,1696835159,1,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {

	int i = 0, count = 0;

	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			count++;
		}
		i++;
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
ajhz216,1697239337,1,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int count = 0;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]){
			count = count + 1;
		}
	}
	if (count > 1) {
		return 0;
	}

	if (count <= 1) {
		return 1;
	}
}",0
ajhz216,1697239788,2,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int count = 0;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]){
			count = count + 1;
		}
	}

	if (count != 1) {
		return 0;
	}

	if (count == 1) {
		return 1;
	}
}
",0
ajhz216,1697240792,3,"iint OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int count = 0;
	int i = 0;

	while (word1[i] != '\0') {
		if (word1[i] != word2[i]){
			count = count + 1;
		}
		i++;
	}

	if (count != 1) {
		return 0;
	}

	if (count == 1) {
		return 1;
	}
}
",0
ajhz216,1697253500,4,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int count = 0;

	for (int i = 0; i < 5; i++){
	    if (word1[i] != word2[i]){
	        count = count + 1;
	    }
	}

	if (count != 1) {
		return 0;
	}

	if (count == 1) {
		return 1;
	}
}
",0
ajhz216,1697344164,5,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int count = 0;

	for (int i = 0; i < WORD_LENGTH; i++){
	    if (word1[i] != word2[i]){
	        count = count + 1;
	    }
	}

	if (count != 1) {
		return 0;
	}
	else {
		return 1;
	}
}
",1
ajhz318,1696985425,1,"int OneLetterDifference(char *word1, char *word2) {
    int i;
    int identical = 0;

    for (i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            identical += 1;
        }
        else {

        }
    }
    if (identical == 1) {
        return true;
    }
    else {
        return false;
    }
}",1
ajhz444,1697255345,1,"int OneLetterDifference(char* word1, char* word2) {
	int difference = 0;
	for (int i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
ajhz488,1697428874,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count, i;
	count = 0;
	for (i=0; i<5; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count == 2) {
				return 0;
			}
		}
	}
	// You should correctly complete this function defintion
	return 1;
}",0
ajhz488,1697428946,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count, i;
	count = 0;
	for (i=0; i<5; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count == 2) {
				return 0;
			}
		}
	}
	if (word1 != word2) {
		return 1;
	} else {
		return 0;
	}
}",0
ajhz488,1697429278,3,"int OneLetterDifference(char *word1, char *word2)
{
	int count, i;
	count = 0;
	for (i=0; i<5; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count == 2) {
				return 0;
			}
		}
	}
	if (!strcmp(word1, word2)) {
		return 0;
	} else {
		return 1;
	}
}",1
ajin489,1696994509,1,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    if (count == 1){
        return 1;
    } else {
        return 0;
    }
}",1
ajoh511,1696972439,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {

    int len = strlen(word1);
    int track = 0;
    int i;

    for (i = 0; i < len; i++) {
        if (word1[i] == word2[i]) {
            track++;
        }
    }

    if (track == len -1) {
        return 1;
    }

    return 0;
}",1
akam256,1697448027,1,"#include <stdio.h>
int OneLetterDifference(char *gg, char *ff) {
int WARD = 0;
for (int i = 0; i < WORD_LENGTH - 1; i++) {
if (gg[i] != ff[i]) {
WARD++;
if (WARD > 1) {
return 0; 
}
}
}
return WARD == 1; 
}",1
aker238,1697094661,1,"int OneLetterDifference(char *word1, char *word2){
    int t = 0;
    for (int i=0; i<WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            t++;
        }
    }
    if (t==1){
        return 1;
    }else
    return 0;
}",1
akin699,1697367984,1,"int OneLetterDifference(char *word1, char *word2) {
	int result;
	result = 0;
	if ((word1[0] != word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) {
		result = 1;
	}
	else if ((word1[0] == word2[0]) && (word1[1] != word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) {
		result = 1;
	}
	else if ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] != word2[2]) && (word1[3] == word2[3])) {
		result = 1;
	}
	else if ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] != word2[3])) {
		result = 1;
	}
	return result;
}",1
akmu146,1697278898,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;
    
    for(int i = 0; i < 5 - 1; i++) {
        if(word1[i] != word2[i]) {
            diffCount++;
            if(diffCount > 1) {
                return 0;
            }
        }
    }
    
    return (diffCount == 1);
}",1
akod059,1696993937,1,"int OneLetterDifference(char *word1, char *word2)
{
	int sameLetters = 0;
	for (int i = 0; i < 4; i++)
	{
		if (word1[i] == word2[i])
		{
			sameLetters++;
		}
	}

	if (sameLetters == 3)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
akri368,1697448421,1,"int OneLetterDifference(char* word1, char* word2)
{
    int i;
    int diff = 0;
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diff++;

        }
        if (diff > 1) {
            return 0;
        }
    }
    return diff == 1;
}",1
akwo440,1697333303,1," int OneLetterDifference(char *word1, char *word2)
{
    int out = strcmp(word1, word2);
    return out;
}
",0
akwo440,1697334999,2," int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int diffCount = 0; 

    for (i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            diffCount++;
        } 
        if (diffCount >= 2){
            return 0;
        }
    }
    if (diffCount == 1){
        return 1;
    }
}",0
akwo440,1697336128,3,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int diffCount = 0; 

    for (i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            diffCount++;
        } 
        if (diffCount >= 2){
            return 0;
        }
    }
    if (diffCount == 1){
        return 1;
    }
    return 0;
}",1
ali867,1697357419,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) 
{
    int differences = 0;

    for (int i = 0; i < 4; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            differences++;
        }
    }

    return (differences == 1);
}",1
alum086,1696843082,1,"#include <stdbool.h>

bool OneLetterDifference(char *word1, char *word2) {
    int differences = 0;  // Initialize a counter for differences
    
    // Compare characters in both words
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            
            // If more than one difference is found, return false
            if (differences > 1) {
                return false;
            }
        }
    }
    
    // Return true if exactly one difference is found, otherwise false
    return differences == 1;
}
",1
amac853,1697337984,1,"int OneLetterDifference(char *word1, char *word2)
{
    int same = 0;
    int i;
    
	for(i = 0; i < WORD_LENGTH;i++)
	{
	    if (word1[i] == word2[i])
	    {
	        same += 1;
	    }
	}
	
	return (same == 4);
}",1
amag544,1697416730,1,"#include <stdio.h>


int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    int length = strlen(word1);

    for (int i = 0; i < length; i++) {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1 || difference == 0) {
                return 0; 
            }
        }
    }

    return difference == 1;
}",1
amah664,1697004481,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int count = 0; 

    while(i < 5) {
        if (word1[i] != word2[i]){
            count++;
        }
        i++;
    }    

    if(count == 1) {
        return 1; 
    } else {
        return 0; 
    }
}
",1
amal783,1696817460,1,"int OneLetterDifference(char* word1, char* word2) {
	int difference = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	return (difference == 1);
}",1
amar516,1697236862,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)

int length;
int x;
int y = 0;

length = strlen(word1);

for(x = 0; x < length; x++){
	if(word1[x] != word2[x] ){
	y = y + 1;
}

if(y <= 1){
	return 1;
	} else {
	return 0;
	}
}",0
amar516,1697236994,2,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {

int length;
int x;
int y = 0;

length = strlen(word1);

for(x = 0; x < length; x++){
	if(word1[x] != word2[x] ){
	y = y + 1;
}

if(y <= 1){
	return 1;
	} else {
	return 0;
	}
}",0
amar516,1697237165,3,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {

int length;
int x;
int y = 0;

length = strlen(word1);

for(x = 0; x < length; x++){
	if(word1[x] != word2[x] ){
	y = y + 1;
	}
}

if(y <= 1){
	return 1;
	}

return 0;
}",0
amar516,1697237277,4,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {

int length;
int x;
int y = 0;

length = strlen(word1);

for(x = 0; x < length; x++){
	if(word1[x] != word2[x] ){
	y = y + 1;
	}
}

if(y == 1){
	return 1;
	}

return 0;
}",1
amar704,1697237608,1,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    
    for (int i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            difference ++;
        }
    }
    
    if (difference == 1){
        return 1;
        
    } else {
        return 0;
    }
    
}",1
amar768,1697419992,1,"int OneLetterDifference(char *word1, char *word2) {


    int differenceCount = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0;
            }
        }
    }

    int returnValue;

    if (differenceCount == 1) {
        returnValue = 1;
    } else { 
        returnValue = 0;
    }

    return returnValue; 
}",1
amat407,1697320074,1,"int OneLetterDifference(char *word1, char *word2)
{
  int i=0;
  int count=0;
  int diff=0;
  while (word1[i] != '\0') {
        if (word1[i]==word2[i]) {
           count++;
        } else {
         diff++;
        }
   i++;
  }

        if (count==3 && diff==1) {
           return 1;
        } else {
          return 0;
        }
  

}",1
amcm539,1697179340,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion

/*Create a while loop to check each element of the string. The loop adds to vaariable 'count'
the number of elements that are exactly the same in each word.*/
int i=0;
int count =0;

while (i < WORD_LENGTH-1){

	if (word1[i] == word2[i]){
		count++;
	}
	i++;
}

/*Now if count is 1, then there is exactly one letter differentiating these 2 words*/
if(count ==1){
	return 1;
}

return 0;
}",0
amcm539,1697186423,2,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion

/*Create a while loop to check each element of the string. The loop adds to vaariable 'count'
the number of elements that are exactly the same in each word.*/
int i=0;
int count =0;

while (i < WORD_LENGTH){

	if (word1[i] != word2[i]){
		count++;
	}
	i++;
}

/*Now if count is 1, then there is exactly one letter differentiating these 2 words*/
if(count ==1){
	return 1;
}

return 0;
}",1
amhk647,1696895561,1,"int OneLetterDifference(char* word1, char* word2) {
	int count = 0; // keeps track of how many letters differ
	
	for (int i = 0; i < 4; i++) { // go through letters of words
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) { // return true only if one letter is found
		return 1;
	}
	else {
		return 0; // otherwise return false
	}
}",1
amok249,1696814805,1,"int OneLetterDifference(char *word1, char *word2) {
    int i, count;
    count = 0;
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    } else 
        return 0;
}",1
amur986,1697362467,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int counter;
	counter = 0;
	for (i = 0;i <= WORD_LENGTH - 1;i++) {
		int a; int b;
		a = word1[i];
		b = word2[i];
		
		if (a!=b) {
			counter++;
		}
	}
	if (counter == 1) {
		return 1;
	}
	else
	{
		return 0;
	}
	// You should correctly complete this function defintion
	return word1[0] == word2[0];
}",1
anig922,1697359567,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *term1, char *term2){
    int a;
 
    int compare = 0;
    
    for (a = 0; a <= strlen(term1)-1; a=a+1){
        
     if (term1[a]!=term2[a]){
         
         compare=compare + 1;
     }
    }
    
    if (compare == 1){
        return 1;
    }
    else{
        return 0;
    }
        
}




",1
aosm976,1697437033,1,"int OneLetterDifference(char *word1, char *word2) {

    int difference = 0;

    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            difference++;
        }
        
    }

    return difference == 1;
}",1
apan786,1697359854,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differ = 0; 
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differ++; 
        }
        
        if (differ > 1) {
            return 0;  
        }
    }
    
    return differ == 1; 
}",1
apat750,1696922796,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2){
    int i=0;
    int len= strlen(word1);
    int count= 0;
    
    for(i=0; i < WORD_LENGTH-1; i++) {
        if (word1[i] != word2[i]){
            count++;
            if (count > 1)
            return 0;
            
    }
    }
    return 1;
    
    
}",0
apat750,1696922859,2,"
#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2){
    int i=0;
    int count= 0;
    
    for(i=0; i < WORD_LENGTH-1; i++) {
        if (word1[i] != word2[i]){
            count++;
            if (count > 1)
            return 0;
            
    }
    }
    return 1;
    
    
}",0
apat750,1696923083,3,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2){
    int i=0;
    int count= 0;
    
    for(i=0; i < WORD_LENGTH-1; i++) {
        if (word1[i] != word2[i]){
            count++;
            if (count > 1)
            return 0;
            
    }
    }
    return count ==1;
    
    
}",1
apat824,1697262312,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{ 
    int count = 0;
    
    for (int i = 0 ; i < WORD_LENGTH; i++) {
        if (word1[i] == word2[i]) { 
        count ++ ;
        }
    }
    
    if (count == 4){
        return 1;
    } else {
        return 0;
    }
}
    ",1
apen181,1697336299,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2){
    int i;
 
    int cmp;
    for (i = 0; i < 4; i++){
     if (word1[i]!=word2[i]){
         cmp+=1;
     }
    }
    if (cmp == 1){
        return 1;
    }
    else {
        return 0;
    }
}
",0
apen181,1697336505,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2){
    int i;
 
    int cmp;
    for (i = 0; i < 4; i++){
     if (word1[i]!=word2[i]){
         cmp+=1;
     }
    }
    if (cmp == 1){
        return 1;
    }

        return 0;
}
",0
apen181,1697336919,3,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2){
    int i;
 
    int cmp = 0;
    for (i = 0; i < strlen(word1); i++){
     if (word1[i]!=word2[i]){
         cmp+=1;
     }
    }
    if (cmp == 1){
        return 1;
    }

        return 0;
}
",1
apre444,1697442245,1,"#include <stdio.h>
/*The function OneLetterDifference takes two words of length 4 as inputs and compares
the two strings. If there is just 1 differing character between the two words, the function
returns true/1.
Author: Amy Prebble*/
int OneLetterDifference(char *word1, char *word2) {
    int diffinder=0;
/*Word length is 4*/
    for(int i=0; i<4 - 1; i++) {
        if(word1[i] != word2[i]) {
            diffinder++;
        }
    }
    /*Returning true when differing character is found
    or a false when not found.*/
    if (diffinder == 1) {
        return 1;
    }else {
        return 0;
    }
}",0
apre444,1697450393,2,"#include <stdio.h>
/*The function OneLetterDifference takes two words of length 4 as inputs and compares
the two strings. If there is just 1 differing character between the two words, the function
returns true/1.
Author: Amy Prebble*/
int OneLetterDifference(char *word1, char *word2) {
    int diffinder=0;
/*Word length is 4*/
int i=0;
while(i<4) {
        if(word1[i] != word2[i]) {
            diffinder++;
        }  
        i++;
    }
    /*Returning true when differing character is found
    or a false when not found.*/
    if (diffinder == 1) {
        return 1;
    }else {
        return 0;
    }
}",1
apur448,1697006895,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i, sameLetters;

    sameLetters = 0;

    for (i = 0; i<= 3; i++) {
        if (word1[i] == word2[i]) {
            sameLetters++;
        }
    }

    if (sameLetters == 3) {
        return word1[0] == word2[0];
    }

    return 0;
}",0
apur448,1697007140,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i, sameLetters;

    sameLetters = 0;

    for (i = 0; i<= 3; i++) {
        if (word1[i] == word2[i]) {
            sameLetters++;
        }
    }

    if (sameLetters == 3) {
        return 1;
    }

    return 0;
}",1
aqu284,1697254193,1,"int OneLetterDifference(char* word1, char* word2) {
	int i = 0;
	int count = 0;
	while (i < WORD_LENGTH) {
		if (word1[i] == word2[i]){
			count++;
		}
	i++;
	}
	if (count == 3) {
		return 1;
	}
	else {
		return 0;
	}

}",0
aqu284,1697254224,2,"int OneLetterDifference(char* word1, char* word2) {
	int i = 0;
	int count = 0;
	while (i < WORD_LENGTH) {
		if (word1[i] == word2[i]){
			count++;
		}
	i++;
	}
	if (count == 3) {
		return 0;
	}
	else {
		return 1;
	}

}",0
aqu284,1697255532,3,"int OneLetterDifference(char* word1, char* word2) {
	int i = 0;
	int count = 0;
	while (i < WORD_LENGTH-1) {
		if (word1[i] != word2[i]){
			count++;
		}
	i++;
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
arah160,1697362006,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            count++;
        }
        if (count==2) { return 0; }
    }
    if (count ==0) { return 0; }
    return 1;
}",1
arus530,1696991054,1,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    int i = 0;

    while (count < 2 && i < 4){
        if (word1[i] != word2[i]){
            count++;
        }
        i++;
    }

    if (count == 1){
        return 1;
    }

    return 0;
}",1
aryu462,1697435961,1,"#include <stdio.h> 

#define WORD_LENGTH 5 

int OneLetterDifference(char* word1, char* word2) {
int difference = 1; 

for (int i = 0; i < WORD_LENGTH - 1; i++) 
{
if (word1[i] != word2[i]) {
difference++; 
if (difference > 1) { 
return 0; 
}
}
}
return difference == 1; 
}",0
aryu462,1697436040,2,"#include <stdio.h> 

#define WORD_LENGTH 5 

int OneLetterDifference(char* word1, char* word2) {
int difference = 0; 

for (int i = 0; i < WORD_LENGTH - 1; i++) 
{
if (word1[i] != word2[i]) {
difference++; 
if (difference > 1) { 
return 0; 
}
}
}
return difference == 1; 
}",1
asaa285,1697444979,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount = diffCount + 1; 
            if (diffCount > 1) {
                return 0;  
            }
        }
    }

    return diffCount == 1; 
}",1
asah845,1697317113,1,"int OneLetterDifference(word1, word2)
{

int true;
int false;
int i;

true = 1;
false = 0;

for (i = 0; i < WORD_LENGTH; i++){
	if (word1[i] != word2[i]){
		return false;
		break;
	}
}
	return true;
}",0
asah845,1697317503,2,"nt OneLetterDifference(char word1[], char word2[])
{

int true = 1;
int false = 0;
int i;

for(i = 0; i < WORD_LENGTH; i++){
	if (word1[i] != word2[i]){
		return false;
	}
}
}
	return true;
}",0
asah845,1697317536,3,"int OneLetterDifference(char word1[], char word2[])
{

int true = 1;
int false = 0;
int i;

for(i = 0; i < WORD_LENGTH; i++){
	if (word1[i] != word2[i]){
		return false;
	}
}
}
	return true;
}",0
asah845,1697317551,4,"int OneLetterDifference(char word1[], char word2[])
{

int i;

for(i = 0; i < WORD_LENGTH; i++){
	if (word1[i] != word2[i]){
		return 0;
	}
}
}
	return 1;
}",0
asah845,1697317624,5,"int OneLetterDifference(char word1[], char word2[])
{

int i;

for(i = 0; i < WORD_LENGTH; i++){
	if (word1[i] != word2[i]){
		(return 0);
	}
}
}
	(return 1);
}",0
asah845,1697317695,6,"#define WORD_LENGTH 10

int OneLetterDifference(char word1[], char word2[]) {
    int i;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            return 0;
        }
    }

    return 1;
}
",0
asah845,1697317708,7,"
int OneLetterDifference(char word1[], char word2[]) {
    int i;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            return 0;
        }
    }

    return 1;
}
",0
asah845,1697317743,8,"
int OneLetterDifference(char word1[], char word2[]) {
    int i;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            return 1;
        }
    }

    return 0;
}
",0
asah845,1697317855,9,"
int OneLetterDifference(char word1[], char word2[]) {
    int i;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            return 1;
        }
    }

}
",0
asah845,1697317870,10,"
int OneLetterDifference(char word1[], char word2[]) {
    int i;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            return 1;
        }
    }
    return 0;
}
",0
asah845,1697413102,11,"
int OneLetterDifference(char word1[], char word2[]) {
    int i;
    int counter = 0;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] == word2[i]) {
            counter++;
        }
    }
    if (counter == 1){
        return 1
    }else {
    return 0;
    }
}
",0
asah845,1697413111,12,"
int OneLetterDifference(char word1[], char word2[]) {
    int i;
    int counter = 0;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] == word2[i]) {
            counter++;
        }
    }
    if (counter == 1){
        return 1;
    }else {
    return 0;
    }
}
",0
asah845,1697413126,13,"
int OneLetterDifference(char word1[], char word2[]) {
    int i;
    int counter = 0;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            counter++;
        }
    }
    if (counter == 1){
        return 1;
    }else {
    return 0;
    }
}
",1
ashe298,1697328465,1,"int OneLetterDifference(char *word1, char *word2)
{
    int character = 0;
    for (int i = 0; i < 4; i++){
        if(word1[i] != word2[i]){
            character++;
            if (character = 1){
                return 1;
            }
            else{
            return 0;
            }
        }
    }
}",0
ashe298,1697328497,2,"int OneLetterDifference(char *word1, char *word2)
{
    int character = 0;
    for (int i = 0; i < 4; i++){
        if(word1[i] != word2[i]){
            character++;
            if (character == 1){
                return 1;
            }
            else{
            return 0;
            }
        }
    }
}",0
ashe298,1697328679,3,"int OneLetterDifference(char *word1, char *word2)
{
    int character = 0;
    for (int i = 0; i < 4; i++){
        if(word1[i] != word2[i]){
            character++;
            if (character > 1){
                return 0;
            }
        }
    }
    return (character == 1);
}",1
ashi565,1697101309,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0; // Initialize a counter for differing characters

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++; // Increment the counter if characters differ
            if (diffCount > 1) {
                return 0; // If more than one character differs, return false (0)
            }
        }
    }

    return diffCount == 1 ? 1 : 0; // Return true (1) if exactly one character differs, else return false (0)
}


",1
asim819,1696991190,1,"int OneLetterDifference(char* word1, char* word2)
{
	int diffchars = 0;

	for (int i = 0; i < 4; i++) {

		if (word1[i] != word2[i]) {
			diffchars++;
		}

	}

	if (diffchars == 1) {
		return 1;
	}
	return 0;
}",1
aski294,1697364756,1,"#include <stdio.h>
#define WORD_LENGTH 4

int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	int i = 0;
	int OneDif = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		OneDif = 1;
	}
		
	return OneDif;
}",0
aski294,1697364781,2,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	int i = 0;
	int OneDif = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		OneDif = 1;
	}
		
	return OneDif;
}",1
atay777,1696972229,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count=0;
	for (i = 0; i < 4; i++)
	{
		if (word1[i]!=word2[i])
		{
			count++;
		}
		
	}
	
	if (count==1)
	{
		return 1;
	}
	return 0;
}",1
atee059,1697368808,1,"int OneLetterDifference(char *word1, char *word2)
{
	
	int count;

	for (int i = 0; i < WORD_LENGTH-1; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}

	if (count == 3) {
		return (1 == 1);
	}
	else {
		return (1 == 9);
	}

}",0
atee059,1697368957,2,"int OneLetterDifference(char *word1, char *word2)
{
	
	int count = 0;

	for (int i = 0; i < WORD_LENGTH-1; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}

	if (count == 3) {
		return (1 == 1);
	}
	else {
		return (1 == 9);
	}

}",1
atho643,1697108968,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i, j;
    int count = 0;

    for (i = 0; i < 5; i++) {
        for (j = 0; j < 5; j++) {
            if(word1[i] == word2[j]) {
                count++;
            }
        }
    }
    
    if(count==3) {
        return 1;
    }
    else {
        return 0;
    }

}",0
atho643,1697150337,2,"int OneLetterDifference(char *word1, char *word2)
{
     int i, j;
    int count = 0;

    for (i = 0; i < 5; i++) {
            if(word1[i] == word2[i]) {
                count++;
            }
    }
    
    if(count==3) {
        return (word1[0] == word2[0]);
    }
    else {
        return 0;
    }
}
",0
atho643,1697150369,3,"int OneLetterDifference(char *word1, char *word2)
{
     int i;
     int count = 0;

    for (i = 0; i < 5; i++) {
            if(word1[i] == word2[i]) {
                count++;
            }
    }
    
    if(count==3) {
        return (word1[0] == word2[0]);
    }
    else {
        return 0;
    }
}
",0
atho643,1697183083,4,"int OneLetterDifference(char *word1, char *word2)
{
     int i;
     int count = 0;

    for (i = 0; i < WORD_LENGTH; i++) {
            if(word1[i] != word2[i]) {
                count++;
            }
    }
    
    return(count==1);
}
",1
athu157,1696829351,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count += 1;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
atup175,1697451862,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int differences = 0;
    char *p1 = word1, *p2 = word2;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++, p1++, p2++){
        if (*p1 != *p2){
            differences++;
            
            if (differences > 1){
                return 0;
            }
        }
    }
    
    return differences == 1;
    
}",1
avan381,1697257988,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int sum, i;
    int counter = 0;
    
 for (int i = 0; i < 4; i++){
     
     sum = word1[i] - word2[i];
     
     if (sum != 0){
         counter += 1;
     }
     
     if (counter > 1){
         return 0;
     }
     
 }
 
     if (counter == 0){
     return 0;
     }
 
 return 1;
}",0
avan381,1697258123,2,"int OneLetterDifference(char *word1, char *word2) 
{
    int sum;
    int counter = 0;
    
 for (int i = 0; i < 4; i++){
     
     sum = word1[i] - word2[i];
     
     if (sum != 0){
         counter += 1;
     }
     
     if (counter > 1){
         return 0;
     }
     
 }
 
     if (counter == 0){
     return 0;
     }
 
 return 1;
}",1
awal599,1697343625,1,"int OneLetterDifference(char *word1, char *word2){
    int i=0;
    int count=0;
    int length;
    length = strlen(word1);
    for(i=0;i<length;i++) 
    {
        if (word1[i] != word2[i])
        {
        count++;
        }
    }
    if (count != 1){
    return 0;
    }
    else 
    {
    return 1;
}
}",1
awar747,1697413663,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;  // Int the differences counter to 0

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;  // If characters at the same position differ, increment the differences count
        }
    }

    return differences == 1;
}",1
awil907,1697149503,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    int i;

    for (i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            difference += 1;
        }
    }

    if (difference == 1){
        return 1;
    }
    else {
        return 0;
    }
}",1
awri757,1697252350,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, count;
	int valid = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		valid = 1;
	}

	return valid;
}",0
awri757,1697252882,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	int valid = 0;

	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		valid = 1;
	}

	return valid;
}",1
ayan607,1697251442,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;

	while (word1[i] != '\0'){
		if (word1[i] != word2[i]){
			count++;
		}
		i++;

		if (count == 2){
			return 0;
		}
	}
	return 1;
}",0
ayan607,1697251588,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;

	while (word1[i] != '\0'){
		if (word1[i] != word2[i]){
			count++;
		}
		i++;

		if (count == 2){
			return 0;
		}
	}

	if (count == 0){
		return 0;
	}	
	return 1;
}",1
ayou303,1697165695,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5
int OneLetterDifference(char* word1, char* word2) {

	int diff = 0;
	int i=0;
	while (word1[i] != '\0') {
		
		if (word1[i] != word2[i]) {
			diff++;
			
		}
		i++;
	}
	if (diff == 1) {
		return 1;
	}
	else
		return 0;
}
",1
ayou533,1697353101,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;
            if (diffCount > 1) {
                return 0;
            }
        }
    }
    
    return (diffCount == 1) ? 1 : 0;
}",1
ayua214,1697245875,1,"#include <stdio.h>
#include <stdbool.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1)  // More than one difference, return false
                return 0;
        }
    }
    
    return differences == 1;  // Return true only if there's exactly one difference
}",1
bate521,1697447328,1,"int OneLetterDifference(char *word1, char *word2) {
    int char_diff = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            char_diff++;
            if (char_diff > 1) {
                return 0;
            }
        }
    }
    return char_diff == 1;
}",1
bcar662,1697255503,1,"int OneLetterDifference(char* word1, char* word2)
{
	if (word1[0] != word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] == word2[3]) {
		return 1;
	}
	else if (word1[0] == word2[0] && word1[1] != word2[1] && word1[2] == word2[2] && word1[3] == word2[3]) {
		return 1;
	}
	else if (word1[0] == word2[0] && word1[1] == word2[1] && word1[2] != word2[2] && word1[3] == word2[3]) {
		return 1;
	}
	else if (word1[0] == word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] != word2[3]) {
		return 1;
	}
	else {
		return 0;
	}
}",1
bcha389,1696922175,1,"int OneLetterDifference(char *word1, char *word2)
{
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			return 0;
		}
	}
	
	return 1;
}",0
bcha389,1696922348,2,"int OneLetterDifference(char *word1, char *word2)
{
	int n = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			n++;
		}
	}
	
	if (n == 3) {
		return 1;
	}
	else {
		return 0;
	}
}",1
bcha726,1697417113,1,"int OneLetterDifference(char word1[], char word2[]){

    int numDiffLetters = 0;
    int i = 0;

    while (word1[i] != '\0')
    {
        if (word1[i] == word2[i])
            numDiffLetters++;

        i++;
    }
    
    if (numDiffLetters == 1) {
        return 1;
    } else {
        return 0;
    }
    

}",0
bcha726,1697417335,2,"int OneLetterDifference(char word1[], char word2[]){

    int numDiffLetters = 0;
    int i = 0;

    while (word1[i] != '\0')
    {
        if (word1[i] != word2[i]) {
            numDiffLetters++;
        }

        i++;
    }

    if (numDiffLetters == 1) {
        return 1;
    } else {
        return 0;
    }
    

}",1
bcos422,1697173530,1,"int OneLetterDifference(char* word1, char* word2) {
	int count = 0;
	int i;
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",1
bcru157,1697409623,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, diff = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diff = diff + 1;
		}
	}

	if (diff == 1) {
		return 1;
	}
	else {
		return 0;
	}


	return word1[0] == word2[0];
}",1
besk864,1697158471,1," int OneLetterDifference(char word1[], char word2[]){
    int count = 0;
    for (int i = 0; i < 4; i++){
        
        if (word1[i] != word2[i]){
            count++;
        }
        
        
    }
    
    if (count == 1){
        return 1;
    } else{
        return 0;
    }
    }",1
bfis965,1697020076,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int count;
	int i;
	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	if (count == 3) {
		return 1;
	}
	return 0;
}",0
bfis965,1697020378,2,"int OneLetterDifference(char* word1, char* word2)
{

	int count = 0;
	int i;
	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	if (count == 3) {
		return 1;
	}
	return 0;
}",1
bfla774,1696975071,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int numdiff = 0;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			numdiff = numdiff + 1;
		}

	}
	if (numdiff > 1) {
		return 0;
	}
	else {
		return 1;
	}
	",0
bfla774,1696976413,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int numdiff = 0;
	
	
	for (i = 0; i < 5 ; i++) {
		if (word1[i] != word2[i]) {
			numdiff = numdiff + 1;
		}

	}
	if (numdiff > 1) {
		return 0;
	}
	else {
		return 1;
	}
}
	",0
bfla774,1696976597,3,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int numdiff = 0;
	
	
	for (i = 0; i < 5 ; i++) {
		if (word1[i] != word2[i]) {
			numdiff = numdiff + 1;
		}

	}
	if (numdiff == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
bgib630,1697074965,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] == word2[i])
        {
            count++;
        }
    }
    
    if (count == 3)
    {
        return 1;
    }
    
    return 0;
}",1
bgru726,1697113298,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	// You should correctly complete this function defintion
	if (count == 3) {
		return 1;
	}
	else {
		return 0;
	}
}",1
bguo360,1696810364,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
	}
	return diff == 1;
}",1
bhua898,1696812856,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference == 1) {
		return 1;
	} else {
		return 0;
	}
	return word1[0] == word2[0];
}",1
bjin223,1697337349,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX_WORDS 2500
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int count=0;
    while (word1[i] != '\0'){
        if (word1[i] != word2[i]) {
            count++;
        }
        i++;
    }
    
    if (count==1) {
        return 1;
    }else{
	// You should correctly complete this function defintion
	return word1[0] == word2[0];
    }
}",0
bjin223,1697337536,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX_WORDS 2500
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int count=0;
    while (word1[i] != '\0'){
        if (word1[i] != word2[i]) {
            count++;
        }
        i++;
    }
    
    if (count==1) {
        return 1;
    }
}",0
bjin223,1697337603,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX_WORDS 2500
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int count=0;
    while (word1[i] != '\0'){
        if (word1[i] != word2[i]) {
            count++;
        }
        i++;
    }
    
    if (count==1) {
        return 1;
    }
    return word1[0] == word2[0];
}",0
bjin223,1697337853,4,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX_WORDS 2500
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int count=0;
    while (word1[i] != '\0'){
        if (word1[i] != word2[i]) {
            count++;
        }
        i++;
    }
    
    if (count==1) {
        return 1;
    }
}",0
bjin223,1697338157,5,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX_WORDS 2500
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int count=0;
    while (word1[i] != '\0' && i<4){
        if (word1[i] != word2[i]) {
            count++;
        }
        i++;
    }
    
    if (count==1) {
        return 1;
    }
}",0
bjin223,1697338563,6,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX_WORDS 2500
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int count=0;
    while (word1[i] != '\0'&& i<4){
        if (word1[i] != word2[i]) {
            count++;
        }
        i++;
    }
    
    
    
    return (count == 1);
}",1
bjon836,1696830154,1,"int OneLetterDifference(char *word1, char *word2)
{
	difference = strcmp(word1, word2);
	if (differecne == 1) {
		return 1;
	} else {
		return 0;
	}
}",0
bjon836,1696830226,2,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = strcmp(word1, word2);
	if (differecne != 1) {
		return 0;
	}
	return 1;
}",0
bjon836,1696830249,3,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = strcmp(word1, word2);
	if (difference != 1) {
		return 0;
	}
	return 1;
}",0
bjon836,1696830834,4,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = strcmp(word1, word2);
	if (difference != 1) {
		return 1;
	}
	return 0;
}",0
bjon836,1696830980,5,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            difference++
            if (difference > 1) {
                return 0;
            }
        }
    }
    return 1;
}",0
bjon836,1696830990,6,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1) {
                return 0;
            }
        }
    }
    return 1;
}",0
bjon836,1696831031,7,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1 || difference == 0) {
                return 0;
            }
        }
    }
    return 1;
}",0
bjon836,1696831239,8,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1 || difference == 0) {
                return 0;
            }
        }
    }
    return (difference == 1);
}",1
bkho028,1696903663,1,"int OneLetterDifference(char *word1, char *word2)
{
	int total_match = 0;
	for (int i = 0; i < numWords ; i++) {
			if (word1[i] != word2[i]) {
				 total_match ++;
			}
	}
	if (total_match == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
bkho028,1696904095,2,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	int total_match = 0;
	for (int i = 0; i < WORD_LENGTH ; i++) {
			if (word1[i] != word2[i]) {
				 total_match ++;
			}
	}
	if (total_match == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
blar030,1696977730,1,"
#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5
#include <stdbool.h>


  int OneLetterDifference(char *word1, char *word2)
{
    //sum up the total of differences for the characters. If sum is less than 3 then words are different, if equal to or more than 3 then they are 'equal'
    int i=0;
    int sum=0;
    
    while(i<5){
        if(word1[i] == word2[i]){
             sum += 1;
        }
        i++;
    }
    
    if(sum == 4){
        return true;
    }
    
    else{
        return false;
    }
}",1
bli482,1697157012,1,"#define WORD_LENGTH 5
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
	int i, p;

	p = 0;

	for (i = 0; i < (WORD_LENGTH - 1); i++) {
		if (word1[i] != word2[i]) {
			p++;
		}
	}

	if (p == 1) {
		return 1;
	}

	return 0;
}",1
bli775,1697034424,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;

    for (int i = 0; i < wordLen - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;
        }
    }

    return diffCount == 1;
}

",0
bli775,1697034448,2,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;
        }
    }

    return diffCount == 1;
}

",1
bli775,1697254291,3,"int OneLetterDifference(char *word1, char *word2) {
    int countDiff = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            countDiff++;
        }
    }

    return countDiff == 1;
}

",1
blin888,1697237917,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	for (i = 0; i < WORD_LENGTH; i++) {
		if word1[i] != word2[i] {
			i++;
		}
	}
	
	
}",0
blin888,1697238387,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int difference;

	for (i = 0; i < WORD_LENGTH; i++) {
		if word1[i] != word2[i] {
			difference++;
		}
		if (difference > 1) {
			return 0;
		}
		else difference = 1;
	}
	
	
}",0
blin888,1697239132,3,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int difference;

	for (i = 0; i < WORD_LENGTH; i++) {
		if word1[i] != word2[i] {
			difference++;
		}
		if (difference > 1) {
			return 0;
		}
	}
	if (difference == 1) {
		return 1;
	} else {
		return 0;
	}
}",0
blin888,1697239225,4,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int difference;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
		if (difference > 1) {
			return 0;
		}
	}
	if (difference == 1) {
		return 1;
	} else {
		return 0;
	}
}",0
blin888,1697239955,5,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int difference;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		if (difference > 1) {
			return 0;
			}
		}
	}
	return difference == 1;
}",0
blin888,1697240669,6,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int difference;
	int position;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
			position = i
		if (difference > 1) {
			return 0;
			}
		}
	}
	return (difference == 1 && position != -1);
}",0
blin888,1697240684,7,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int difference;
	int position;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
			position = i;
		if (difference > 1) {
			return 0;
			}
		}
	}
	return (difference == 1 && position != -1);
}",0
blin888,1697240768,8,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int difference;
	difference = 0;
	int position;
	position = -1;


	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
			position = i
		if (difference > 1) {
			return 0;
			}
		}
	}
	return (difference == 1 && position != -1);
}",0
blin888,1697240778,9,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int difference;
	difference = 0;
	int position;
	position = -1;


	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
			position = i;
		if (difference > 1) {
			return 0;
			}
		}
	}
	return (difference == 1 && position != -1);
}",1
bmac148,1697105785,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 2) {
		return 0;
	}
	else {
		return 1;
	}
		
}",0
bmac148,1697105944,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count != 1) {
		return 0;
	}
	else {
		return 1;
	}
		
}",1
bora417,1696991210,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0; // counter for letters that are different
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count = count + 1; 
		}
	}
	if (count == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
bpak212,1697442469,1,"#include <stdio.h>
#include <stdbool.h>

int OneLetterDifference(char *word1, char *word2) 
{
    int diffwordcount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) {
            diffwordcount++;
            if diffwordcount > 1) 
            {
                return false;
            }
        }
    }
    return diffwordcount == 1;
}",0
bpak212,1697442488,2,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int diffwordcount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) {
            diffwordcount++;
            if diffwordcount > 1) 
            {
                return false;
            }
        }
    }
    return diffwordcount == 1;
}",0
bpak212,1697442608,3,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int diffwordcount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) {
            diffwordcount++;
            if (diffwordcount > 1)
            {
                return false; 
            }
        }
    }

    return diffwordcount == 1; 
}",1
bpak212,1697442629,4,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int diffwordcount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            diffwordcount++;
            if (diffwordcount > 1)
            {
                return false; 
            }
        }
    }

    return diffwordcount == 1; 
}",1
bpat907,1697159864,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
bril841,1697408415,1,"int OneLetterDifference(char *word1, char *word2)
{
    int counter;
    
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            counter = counter++
        }
        
    }
    
    return counter;
}",0
bril841,1697408577,2,"int OneLetterDifference(char *word1, char *word2)
{
    int counter;
    
    for (int i = 0; i < 5; i++)
    {
        if (word1[i] != word2[i])
        {
            counter++
        }
        
    }
    
    if (counter == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
bril841,1697408586,3,"int OneLetterDifference(char *word1, char *word2)
{
    int counter;
    
    for (int i = 0; i < 5; i++)
    {
        if (word1[i] != word2[i])
        {
            counter++;
        }
        
    }
    
    if (counter == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
bril841,1697408652,4,"int OneLetterDifference(char *word1, char *word2)
{
    int counter = 0;
    
    for (int i = 0; i < 5; i++)
    {
        if (word1[i] != word2[i])
        {
            counter++;
        }
        
    }
    
    if (counter == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",1
bsil719,1696910256,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 4; i++){
	    if (word1[i] != word2[i]){
	        count++;
	        if(count > 1){
	            return 0;
	        }
	        
	    }
	    
	}
	return 1;
}",0
bsil719,1696910412,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 4; i++){
	    if (word1[i] != word2[i]){
	        count++;
	        if(count > 1){
	            return 0;
	        }
	        
	    }
	    
	}
	if (count == 1){
	    return 1;
	}
	else{
	    return 0;
	}
	
}",1
bvau704,1696893942,1,"int OneLetterDifference(char *word1, char *word2)
{
	int length = strlen(word1);
	int diff = 0;
	int validity;
	
	printf(""%d"", length);

	for (int i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
	}

	if (diff == 1) {
		validity = 1;
	}
	else {
		validity = 0;
	}
	return validity;
}",0
bvau704,1696893958,2,"int OneLetterDifference(char *word1, char *word2)
{
	int length = strlen(word1);
	int diff = 0;
	int validity;

	for (int i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
	}

	if (diff == 1) {
		validity = 1;
	}
	else {
		validity = 0;
	}
	return validity;
}",1
bwil199,1697444782,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 5; i++) {
        if (word1(i) != word2(i)) {
            count = count + 1;
        }
        
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",0
bwil199,1697444846,2,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 5; i++) {
        if (*word1(i) != *word2(i)) {
            count = count + 1;
        }
        
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",0
bwil199,1697445123,3,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count = count + 1;
        }
        
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
bwis161,1696908949,1,"int OneLetterDifference(char* word1, char* word2)
{
	char i;
	int count = 0;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count > 1) {
		return 0;
	}

	return 1;
}",0
bwis161,1696908985,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count > 1) {
		return 0;
	}

	return 1;
}",0
bwis161,1696909085,3,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
    if (count != 1) {
	return 0;
    }

	return 1;
}",1
bwoo348,1697424395,1,"int OneLetterDifference(char *word1, char *word2) {
    int c = 0;
    for (int i=0;i<4;i++){
        if (word1[i] != word2[i]){
            c++;
        }
    }
    if (c == 1){
        return 1;
    } else {
        return 0;
    }
}",1
byiu331,1696886976,1,"int OneLetterDifference(char *word1, char *word2)
{
	//declare and initialise iteration variable and the number of mismatched characters
	int i = 0, mismatch = 0;

		//Loop that continues to end of the string, counting how many times the two words mismatch
		while (word1[i] != '\0') {
			if (word1[i] != word2[i]) {
				mismatch++;
			}
			i++;
		}
	//returns either logical 1 if mismatch ==1 and logical 0 if mismatch is any other value
	return mismatch == 1;
}",1
byul423,1697161263,1,"int OneLetterDifference(char *word1, char *word2) {
	int i, j, sum = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			sum++;
		}
	}
	if (sum == 3) {
		return 1;
	}
	else {
		return 0;
	}
}",0
byul423,1697161280,2,"int OneLetterDifference(char *word1, char *word2) {
	int i, sum = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			sum++;
		}
	}
	if (sum == 3) {
		return 1;
	}
	else {
		return 0;
	}
}",1
cada577,1697102491,1,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char* word1, char* word2)

{
    int i = 0, count = 0;

    while (word1[i] != '\0' && word2[i] != '\0') {

        if (word1[i] == word2[i]) {
            count++;
        }
        i++;
    }

    if (count == 3) {
        return 1;
    }

    return 0;
}",1
cana544,1697071211,1,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int count = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
cang688,1697371682,1,"int OneLetterDifference(char* word1, char* word2)
{
	int differenceNum = 0;
	for (int i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			differenceNum++;
		}
	}
	if (differenceNum == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
cbee072,1696974971,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int Counter = 0;
    char LOne, LTwo;
    
    
    for (i = 0; i < WORD_LENGTH; i++) {
        
        LOne = word1[i];
        LTwo = word2[i];
        
        if (LOne != LTwo) {
            Counter = Counter + 1;
        }
    }
    
    if (Counter == 1) {
        return 1;
    }
    else {
        return 0;
    }
}

",1
cben375,1697064790,1,"int OneLetterDifference(char *word1, char *word2) {
    int different = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            different++;
        }
    }

    return different == 1;
}",1
cbro223,1696815271,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
	// You should correctly complete this function defintion
	for (int i = 0; i < WORD_LENGTH; i++ ) {
		if(word1[i] != word2[i]) {
			difference++;
		}	
		
	}
	return (difference == 1);
}",1
cbro435,1696935694,1,"#define _CRT_SECURE_NO_WARNINGS
#define MAX_WORDS 2500
#define WORD_LENGTH 5
#include <stdio.h>
char wordList[MAX_WORDS][WORD_LENGTH];
int numWords;
int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;;
	while(i<4){
	    if(word1[i]==word2[i]){
	            i++;
	    }
	    
	    else{
	    int j = i;
	    while (j<4){
	    if(word1[j+1]!=word2[j+1]){
	        return 0;
	    }
	    j++;
	}
	return 1;
	}
	}
	
}
",0
cbro435,1696981409,2,"#define _CRT_SECURE_NO_WARNINGS
#define WORD_LENGTH 5
#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;
		while(i<WORD_LENGTH-1){
	    if(word1[i]!=word2[i]){
	        count++;
	    if(count>1){
	        return 0;
	    }
	    }
	    i++;
		}
		return (count==1);
}

int main(void)
{
    char word1[WORD_LENGTH] = ""sbly"";
char word2[WORD_LENGTH] = ""ably"";

if (OneLetterDifference(word1, word2)) {
   printf(""The words differ by just one character"");
} else {
   printf(""The words do not differ by just one character"");
}
}",0
cbro435,1696981457,3,"#define _CRT_SECURE_NO_WARNINGS
#define WORD_LENGTH 5
#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;
		while(i<WORD_LENGTH-1){
	    if(word1[i]!=word2[i]){
	        count++;
	    if(count>1){
	        return 0;
	    }
	    }
	    i++;
		}
		return (count==1);
}

",1
cbro989,1696828744,1,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
while (*word1 != '\0' && *word2 != '\0') {
    int Ascii1 = (int)(*word1); 
    int Ascii2 = (int)(*word2);
    if (Ascii1 != Ascii2) {
        count = count + 1;
    }
    word1++; 
    word2++; 
}

if (count < 1){
    return 0;
}
else{	
	return word1[0] == word2[0];
}
}",0
cbro989,1696829724,2,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
while (*word1 != '\0' && *word2 != '\0') {
    int Ascii1 = (int)(*word1); 
    int Ascii2 = (int)(*word2);
    if (Ascii1 != Ascii2) {
        count = count + 1;
    }
    word1++; 
    word2++; 
}

if (count == 1 || count == 0){
	return word1[0] == word2[0];
}
if (count > 1){
    return 0;
}
}",0
cbro989,1696829817,3,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
while (*word1 != '\0' && *word2 != '\0') {
    int Ascii1 = (int)(*word1); 
    int Ascii2 = (int)(*word2);
    if (Ascii1 != Ascii2) {
        count = count + 1;
    }
    word1++; 
    word2++; 
}

if (count == 1 || count == 0){
	return word1[0] == word2[0];
}
if (count > 1){
    return 0;
}
return 0;
}",0
cbro989,1696829990,4,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
while (*word1 != '\0' && *word2 != '\0') {
    int Ascii1 = (int)(*word1); 
    int Ascii2 = (int)(*word2);
    if (Ascii1 != Ascii2) {
        count = count + 1;
    }
    word1++; 
    word2++; 
}

if (count == 1){
	return word1[0] == word2[0];
}
if (count > 1  || count == 0)){
    return 0;
}
return 0;
}",0
cbro989,1696830000,5,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
while (*word1 != '\0' && *word2 != '\0') {
    int Ascii1 = (int)(*word1); 
    int Ascii2 = (int)(*word2);
    if (Ascii1 != Ascii2) {
        count = count + 1;
    }
    word1++; 
    word2++; 
}

if (count == 1){
	return word1[0] == word2[0];
}
if (count > 1  || count == 0){
    return 0;
}
return 0;
}",1
cbur703,1697075485,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int diff=0;
    
    for (i=0; i < WORD_LENGTH; i++) {
       if (word1[i] != word2[i]) {
           diff += 1;
           
           if (diff == 1) {
               return word1[0] == word2[0];
               
           }
           
       }
        
    }
    return 0;
    
}",0
cbur703,1697076332,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i, diff=0;
    
    for (i=0; i < WORD_LENGTH; i++) {
       if (word1[i] != word2[i]) {
           diff += 1;
           }
       }
       if (diff == 1) {
           return 1;
    }
    return 0;
}",1
ccha663,1697008855,1,"int OneLetterDifference(const char *word1, const char *word2) {
    int differenceCount = 0;

    int len1 = strlen(word1);
    int len2 = strlen(word2);

    if (len1 != len2) {
        return 0; 
    }

    
    for (int i = 0; i < len1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++; 
        }
        if (differenceCount > 1) {
            return 0; 
        }
    }

    return differenceCount == 1; 
}",1
ccha854,1697245425,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int i = 0;
    while (word1[i] != '\0') {
        i++;
    }
    
    int j;
    int k = 0;
    for (j=0; j<i; j++) {
        if (word1[j] != word2[j]) {
            k++;
        }
    }
    
    if (k == 1) {
        return 1;
    }

return 0;

}",1
cche441,1696891766,1,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            diff++;
            if (diff > 1)
            {
                return 0;
            }
        }
    }
    return 1;
}",0
cche441,1696891898,2,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            diff++;
        }
    }
    if (diff != 1)
    {
        return 0;
    }
    else
    {return 1;}
}",1
cche873,1697277975,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
		
	}
	if (count == 3) {
		return 1;
	} else {
	    return 0;
	}
}",1
cdel568,1696966314,1,"int OneLetterDifference(char *word1, char *word2)
{
	int valid = 0;
	int i = 0;
	int max = 4;

	for (i = 0; i < max; i++) {
		if (word1[i] != word2[i]) {
			valid++;
		}
	}

	if (valid > 1) {
		return 0;
	} else {
		return 1;
	}
}",0
cdel568,1696966657,2,"int OneLetterDifference(char *word1, char *word2)
{
	int valid = 0;
	int i = 0;
	int max = 4;

	for (i = 0; i < max; i++) {
		if (word1[i] != word2[i]) {
			valid++;
		}
	}
    
	if (valid != 1) {
		return 0;
	} else {
		return 1;
	}
}",1
cdin152,1697364165,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, j;
	int diff_letter = 0;
	int outcome = 0;

	for (i = 0, j = 0; i < 4; i++, j++) {
		if (word1[i] != word2[j]) {
			diff_letter++;
		}
	}
	if (diff_letter == 1) {
		outcome = 1;
	}

	return outcome;
}",1
cdin268,1696926583,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int i;
    int total = 0;
    
    for (i=0; i<WORD_LENGTH-1; i++) {
        if (word1[i] == word2[i]) {
            total +=1;
        }
    }
    
    if (total == 4 || total == 3) {
        return 1;
    } else {
        return 0;
    }
}",0
cdin268,1696926647,2,"int OneLetterDifference(char *word1, char *word2) {
    
    int i;
    int total = 0;
    
    for (i=0; i<WORD_LENGTH-1; i++) {
        if (word1[i] == word2[i]) {
            total +=1;
        }
    }
    
    if (total == 3) {
        return 1;
    } else {
        return 0;
    }
}",1
cdsi208,1697421469,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (*(word1 + i) != *(word2 + i)) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
cgal160,1697261842,1,"int OneLetterDifference(char* word1, char* word2) {
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	if (count == 3) {
		return 1;
	}
	else {
		return 0;
	}
}",1
cgaz516,1696986835,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	// You should correctly complete this function defintion
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count = count + 1;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
chua804,1697438818,1,"int count = 0; 
int OneLetterDifference(char *word1, char *word2) {
    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count++;
            
            }
        
        }
    return count == 1;
}",0
chua804,1697439136,2,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count++;
            
                
            }
        
            
        }
        
    return count == 1;
}",1
civa625,1697367053,1,"int OneLetterDifference(char *word1, char *word2)
{
	int length = strlen(word1);
	int i;
	int count = 0;
	
	for (i = 0; i <= length; i++) {
	    if (word1[i] != word2[i]) {
	        count++;
	    }
	}
	if (count == 1) {
	   return 1;
	} else {
	    return 0;
	}
	
	return word1[0] == word2[0];
}",1
cjun818,1697340758,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff;

	diff = 0;

	for (int i = 0; i < WORD_LENGTH - 1; i++)
	{
		if (word1[i] != word2[i]) 
		{
			diff++;
		}
	}

	if (diff == 1)
	{
		return 1;
	}

	return 0;
}",1
clee482,1697375766,1,"int OneLetterDifference(char *word1, char *word2)
{
    int j = 0;
    
    for(int i = 0; i<5; i++)
    {
        if(word1[i] != word2[i])
        {
            j++;
        }
        
    }
    
    
    if (j == 1)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
    
}",1
cleu746,1697107900,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	
	int i;
	int count = 0;
	
	for (i=0; i<4; i++) {
	    if (word1[i] == word2[i]) {
	        count++;
	    }
	}
	
	if (count == 3) {
	    return 1;
	}
	else {
	    return 0;
	}
	
}",1
clob269,1696893689,1,"int OneLetterDifference(char* word1, char* word2) {
	int count = 0;
	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}


}",1
cmac377,1697342516,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i,j,k;
	j = 0;
	
	for (i = 0; i < 4; i++){
	    if(word1[i] != word2[i]){
	        j++;
	    }
	}
	
	if (j == 1){
	    return 1;
	}else{
	    return 0;
	} 
	
}",0
cmac377,1697342530,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i,j;
	j = 0;
	
	for (i = 0; i < 4; i++){
	    if(word1[i] != word2[i]){
	        j++;
	    }
	}
	
	if (j == 1){
	    return 1;
	}else{
	    return 0;
	} 
	
}",1
cmad989,1696987531,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] == word2[i]) {
			count ++;
		}
	}
	if (count == 4) {
			return 1;
		}
		else {
			return 0;
		}
}",1
cmas527,1697350265,1,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (((word1[i] != word2[i])
        &&((word1[2]==word2[2]&&word1[3]==word2[3]&&word1[4]==word2[4])
        ||(word1[1]==word2[1]&&word1[3]==word2[3]&&word1[4]==word2[4])
        ||(word1[1]==word2[1]&&word1[2]==word2[2]&&word1[4]==word2[4])
        ||(word1[1]==word2[1]&&word1[2]==word2[2]&&word1[3]==word2[3])))) {
            return 1;
        }
    }
    return 0;
}",0
cmas527,1697351386,2,"int OneLetterDifference(char *word1, char *word2) {
int difference = 0;
for (int i = 0; i < WORD_LENGTH; i++) {
if (word1[i] != word2[i]) {
difference++;}
if (difference > 1) {
return 0;}
}
if (difference == 1) {
return 1; 
} else {
return 0; 
}
}",1
cmcm317,1697357303,1,"#define _CRT_SECURE_NO_WARNINGS

/* A word game where each player must substitute one letter in a word to generate a new word */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>


int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int length = strlen(word1), i, letterC = 0;

	for (i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			letterC = letterC + 1;
		}

		if (letterC > 1) {
			return 0;
		}
	}

	return 1;
}",0
cmcm317,1697357556,2,"#define _CRT_SECURE_NO_WARNINGS

/* A word game where each player must substitute one letter in a word to generate a new word */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

/* The dictionary we are using has fewer than 2500 words */
#define MAX_WORDS 2500
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int length = strlen(word1), i, letterC = 0;
	for (i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			letterC = letterC + 1;
		}

		if (letterC > 1) {
			return 0;
		}
	}

    if (letterC == 0) {
        return 0;
    }

	return 1;
}",1
cmia215,1697099645,1,"int OneLetterDifference(char* word1, char* word2) {
	int count = 1;
	for (int i = 0; i < 4; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}
	return (count != 1);
}",0
cmia215,1697100298,2,"int OneLetterDifference(char* word1, char* word2) {
	int count = 1;
	for (int i = 0; i < 4; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}
	return (count == 2);
}",1
cmot464,1696975358,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diffCount = 0;

	for(int i = 0; i < WORD_LENGTH; i++){
		if(word1[i] != word2[i]){
			diffCount++;
		}
	}

	if(diffCount == 1){
		return 1;
	}

	else{
		return 0;
	}
}",1
cnai408,1697195011,1,"int OneLetterDifference(char *word1, char *word2) {
    int i;
    int counter = 0;
    
    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            counter = counter + 1;
        }
    }
    
    if (counter == 1) {
        return 1;
    }
    
    else {
        return 0;
    }
}",1
cnie825,1697351601,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;  // More than one difference, no need to continue checking
            }
        }
    }
    return differences == 1;
}",1
cnie825,1697351642,2,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;  
            }
        }
    }
    return differences == 1;
}
",1
coli772,1696890673,1,"int OneLetterDifference(char *word1, char *word2) {
    int hamming_distance = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        hamming_distance += (word1[i] != word2[i]);
    }
    return hamming_distance == 1;
}",1
couy656,1697146367,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    return count == 1;
}",1
csan114,1697053009,1,"int OneLetterDifference(char* word1, char* word2)
{

	int count = 0;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count += 1;
		}
	}

	if (count != 1) {
		return 0;
	}
	else {
		return 1;
	}
}",1
cset571,1696819712,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, count = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	if (count == 4) {
		return 1;
	}
	else {
		return 0;
	}
}",1
csin574,1697059100,1,"int OneLetterDifference(char *word1, char *word2)
{
int i, diffcount;
diffcount = 0;
for (i = 0; i < WORD_LENGTH; i++) {
	if (word1[i] != word2[i]) {
		diffcount += 1;
	}
}
if (diffcount == 1) {
	return 1;
} else {
	return 0;
}
}",1
cste189,1697167513,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, count = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i]!= word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	return 0;
}",1
ctof106,1697267680,1,"#define WORD_LENGTH 5
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    for(int i = 0; i < WORD_LENGTH; i++)
    {
        if(word1[i] != word2[i])
        {
            return 1;
        }
    }

    return 0;
    
}",0
ctof106,1697267830,2,"#define WORD_LENGTH 5
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for(int i = 0; i < WORD_LENGTH; i++)
    {
        if(word1[i] != word2[i])
        {
            count++;
        }
    }

    if(count == 1){
        return 1;
    }
    
    return 0;
    
}",1
ctub889,1697245222,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
        if (differences > 1) {
            return 0; 
        }
    }
    return differences == 1;
}",1
cugn667,1697452453,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int count = 0;
    int true = 1;
    int lastWord = WORD_LENGTH - 1;
    for (int i = 0; i <= lastWord; i++) {
        if (word1[i] != word2[i]) {
            
            count++;
            
        }
    }
    
    return count == true;
}",0
cugn667,1697452512,2,"int OneLetterDifference(char *word1, char *word2) {
    
    int count = 0;
    int lastWord = WORD_LENGTH - 1;
    
    for (int i = 0; i <= lastWord; i++) {
        if (word1[i] != word2[i]) {
            
            count++;
            
        }
    }
    
    return count == 1;
}",1
cwei506,1697188630,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
cwu200,1697336490,1,"int OneLetterDifference(char *word1, char *word2){
  int i;
  int count = 0;
  for (i = 0; i < 4; i++){
    if (word1[i] != word2[i]){
      count = count + 1;
    }
  }
  if (count != 1){
    return 0;
  } else {
    return 1;
  }
}",1
cyan312,1697101387,1,"int OneLetterDifference(char *word1, char *word2)
{
    int differenceCount = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount = differenceCount + 1;
            if (differenceCount > 1)
                return 0;
        }
    }
    return differenceCount == 1;
}",1
cyiu210,1696977859,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int counting = 0;
    for (i = 0; i < 5; i++)  {
        if (word1[i] != word2[i])  {
            counting = counting + 1;
        }
    }
    
    if (counting > 1)  {
        return 0;
    }  else if (counting == 1)  {
        return 1;
        }
    
    
}",0
cyiu210,1696978333,2,"#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#define WORD_LENGTH 5


int OneLetterDifference(char *word1, char *word2)
{
    int a;
    int counting = 0;
    for (a = 0; a < 5; a++)  {
        if (word1[a] != word2[a])  {
            counting = counting + 1;
        }
    }
    
    if (counting == 1)  {
        return true;
    }
    else  {
        return false;
    }  
    
}",1
dbar153,1696928500,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return count;
	}
	else {
		return 0;
	}
}",1
dcha468,1697452805,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    return differences == 1;
}
",1
dche306,1697281999,1,"#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) { // subtract 1 to exclude the null terminator
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    return (differences == 1); // return 1 (true) if exactly one difference, otherwise 0 (false)
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }

    return 0;
}",0
dche306,1697282041,2,"#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) { // subtract 1 to exclude the null terminator
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    return (differences == 1); // return 1 (true) if exactly one difference, otherwise 0 (false)
}

",1
deri361,1697097651,1,"#include <stdio.h>
int OneLetterDifference(char* word1, char* word2)
{
	int i, DiffCount = 0;
	for (i = 0; i < (WORD_LENGTH-1); i++) {
		if (word1[i] != word2[i]) {
			DiffCount++;
		}
	}
	if (DiffCount == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
dfor626,1696910742,1,"int OneWordDifference(char *word1, char *word2)
{
    int i, count = 0, logic;
    for(i = 0; i < 5; i++) {
         if (word1[i] != word2[i]) {
             count++;
         }
    }
    if (count == 1) {
        logic = 1;
    }
    else {
        logic = 0;
    }
    return logic;
}",0
dfor626,1696910789,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i, count = 0, logic;
    for(i = 0; i < 5; i++) {
         if (word1[i] != word2[i]) {
             count++;
         }
    }
    if (count == 1) {
        logic = 1;
    }
    else {
        logic = 0;
    }
    return logic;
}",1
dgal735,1696990616,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffcount = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diffcount++;
            if (diffcount > 1) {
                return 0; 
            }
        }
    }

    return 1;
}",0
dgal735,1696990996,2,"int OneLetterDifference(char *word1, char *word2) {
    int diffcount = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diffcount++;
            if (diffcount > 1) {
                return 0; 
            }
        }
    }

    return diffcount == 1;
}",1
dha524,1696833743,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, j, count;

	for (i = 0; i < 4; i++) {
		j = strncmp(word1[i], word2[i], 1);

		if (j == 0) {
			count++;
		}
	}

	if (count > 1) {
		return 0;
	}

	else if (count == 1) {
		return 1;
	}
}",0
dha524,1696833830,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i, j, count;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count > 1) {
		return 0;
	}

	else if (count == 1) {
		return 1;
	}
}",0
dha524,1696833854,3,"int OneLetterDifference(char *word1, char *word2)
{
	int i, count;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count > 1) {
		return 0;
	}

	else if (count == 1) {
		return 1;
	}
}",0
dha524,1697171018,4,"int OneLetterDifference(char* word1, char* word2)
{
	int i, count;

	count = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count > 1) {
		return 0;
	}

	else if (count == 0) {
		return 0;
	}

	else if (count == 1) {
		return 1;
	}
}",0
dha524,1697171487,5,"int OneLetterDifference(char *word1, char *word2)
{
	int i, count;

	count = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	}

	else {
		return 0;
	}

}",1
dhah941,1697237550,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diffCount = 0;
	for (int i = 0; i < 4; i++)
	{
		if (word1[i] != word2[i])
			diffCount++;
	}

	if (diffCount == 1)
		return 1;
	else
		return 0;
}",1
dhar714,1696815414,1,"int OneLetterDifference(char *word1, char *word2)
{
	int matching = 0;
	for (int i = 0; i < (WORD_LENGTH - 1); i++) {
		if (word1[i] == word2[i]) {
			matching++;
		}
	}
	if (matching == 3) {
		return 1;
	}
	return 0;
}",1
dhen760,1696930504,1," int OneLetterDifference(char *word1, char *word2)
 {
     int count = 0;
     for (int i=0;i<4;i++) {
         if (word1[i] != word2[i]) {
             count++;
         }
     }
     if (count == 1) {
        return 1;
     } else {
         return 0;
     }
 }",1
dhua391,1697448202,1,"int OneLetterDifference(char *Word1, char *Word2) {
    int Diff = 0;
    for (int i = 0; i < strlen(Word1); i++) {
        if (Word1[i] != Word2[i]) {
            Diff++;
            if (Diff > 1) {
                return 0; 
            }
        }
    }

    return Diff == 1;
}",1
dhul688,1696901005,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i, sameness;
    
    for (i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            sameness++;
        }
    }
    if (sameness == 3){
        return 1;
    }
    return 0;
}",0
dhul688,1696901031,2,"#define WORD_LENGTH
int OneLetterDifference(char *word1, char *word2)
{
    int i, sameness;
    
    for (i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            sameness++;
        }
    }
    if (sameness == 3){
        return 1;
    }
    return 0;
}",0
dhul688,1696901499,3,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int sameness;

	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			sameness++;
		}
	}
	if (sameness == 3) {
		return 1;
	}
	return 0;
}",0
dhul688,1696901605,4,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int sameness = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			sameness++;
		}
	}
	if (sameness == 3) {
		return 1;
	}
	return 0;
}",1
dkha055,1696828203,1,"int OneLetterDifference(char *word1, char *word2) {

    int count = 0;

    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i]) {
            count++;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }

}

",1
dkim848,1697356338,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
            if (count == 2) {
                return 0;
            }
        }
    }
    
    return 1;
}",0
dkim848,1697356828,2,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count > 1 || count == 0) {
        return 0;
    } else {
        return 1;
    }
    return 0;
}
",1
dkur670,1697408497,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	for (int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			diff++;
			if (diff > 1){
				return 0;
			}
		}
	}
	if (diff == 1){
		return 1;
	}
		
}",0
dkur670,1697432162,2,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	int x = 0;
	for (int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			diff++;
			if (diff > 1){
				x=0;
				return x;
			}
		}
	}
	if (diff == 1){
		x=1;
		return x;
	}
	return x; 	
}",1
dli630,1696890019,1,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    
    int i = 0;
    int Word1_length = strlen(word1);
    int Word2_length = strlen(word2);
    int count = 0; 
    
    for (i = 0; i < Word1_length; i++) {
        if (word1[i] != word2[i]) {
            count = word1[i] - word2[i];
        }
    }
}",0
dli630,1696890099,2,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    
    int i = 0;
    int Word_length = strlen(word1);
    int count; 
    
    for (i = 0; i < Word1_length; i++) {
        if (word1[i] != word2[i]) {
            count = word1[i] - word2[i];
        }
    }
}",0
dli630,1696890123,3,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    
    int i = 0;
    int Word_length = strlen(word1);
    int count; 
    
    for (i = 0; i < Word_length; i++) {
        if (word1[i] != word2[i]) {
            count = word1[i] - word2[i];
        }
    }
}",0
dli630,1696890347,4,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    
    int i = 0;
    int Word_length = strlen(word1); 
    int count;
    
    for (i = 0; i < Word_length; i++) {
        if (word1[i] != word2[i]) {
            count = word1[i] - word2[i];
        }
    }
    return count;
}",0
dli630,1697058715,5,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    
    int i = 0;
    int length = WORD_LENGTH - 1; 
    int count = 0;
    
    for (i = 0; i < length; i++) {
        if (word1[i] != word2[i]) {
            ++count;
            if (count > 1) {
                return 0;
            }
        }
    }
    return count;
}
",1
dlob194,1696914480,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count > 1) {
        return 0;
    } else {
        return 1;
    }
}",0
dlob194,1696920878,2,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count != 1) {
        return 0;
    } else {
        return 1;
    }
}",1
dma765,1697447694,1,"
int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    // Loop through each character of the words
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0; // More than one difference found, return false
            }
        }
    }

    // If there's exactly one difference, return true
    return differenceCount == 1 ? 1 : 0;
}",1
dmar494,1697239026,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2)
{
    int count = 0;
    for(int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] == word2[i]){
            count++;
        }
    }
    if (count == (WORD_LENGTH - 1)) {
        return 1;
    }
    return 0;
}",1
dmcn107,1697437214,1,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i = 0; i<5; i++){
        if (word1[i] = word2[i]){
            count++;
        }
        if (count = 4){
        return 1;
        }
        else{
        return 0;
        }
    }
}",0
dmcn107,1697441869,2,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i = 0; i<5; i++){
        if (word1[i] == word2[i]){
            count++;
        }
        if (count == 3){
        return 1;
        }
    }
    return 0;
}",0
dmcn107,1697442819,3,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int count = -1;
    for (int i = 0; i<WORD_LENGTH; i++){
        if (word1[i] == word2[i]){
            count++;
        }
    }
    return(count == 3) ? 1 : 0;
}",1
dmun793,1697034514,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++)
		if (word1[i] != word2[i])
			count++;

	if (count == 1)
		return 1;
	else
		return 0;
}",1
dosb979,1697414380,1,"int OneLetterDifference(char *word1, char *word2){
    //Initialises c as 0
    int c = 0;
    
    //If statements altering c to 1 if the words differ by just one character
        if (word1[0] == (word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] != word2[3])){
            c = 1;
        }
        
        else if (word1[0] == (word2[0]) && (word1[1] == word2[1]) && (word1[2] != word2[2]) && (word1[3] == word2[3])){
            c = 1;
        }
        
        else if ((word1[0] == word2[0]) && (word1[1] != word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])){
            c = 1;
        }
        
        else if ((word1[0] != word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])){
            c = 1;
        }
        
        return c;
    }",1
dpar783,1697270905,1,"int OneLetterDifference(char *word1, char *word2) {

	int differentletters = 0;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			differentletters++;
		}
	}

	if (differentletters == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
dpat391,1696990310,1,"int OneLetterDifference(char *word1, char *word2){
    int diffcount = 0;
    for(int i = 0; i < 4; i++){
        if(word1[i] != word2[i]){
            diffcount ++;
        }
    }
    if(diffcount == 0 || diffcount > 1){
        return 0;}
    else{
        return 1;
    }
}",1
dpat674,1696850476,1,"int OneLetterDifference(char *word1, char *word2){
int length1=strlen(word1);
int length2=strlen(word2);
int changes=0;

while (i < length1) {
if (word1[i] != word2[i]) {
changes = changes + 1;
if (changes > 1) {
return 0;
}
}
}
return changes == 1;
}",0
dpat674,1696850769,2,"#include <string.h>
int OneLetterDifference(char *word1, char *word2) {
int length1 = strlen(word1);
int changes = 0;
int i=0;

while (i < length1) {
if (word1[i] != word2[i]) {
changes = changes + 1;
if (changes > 1) {
return 0; 
}
}
i++;
}
return changes == 1; // Return 1 if there's exactly one letter difference
}
",1
dpet289,1696997962,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int a = 0;
	for (i = 0; i < 4; i++)
	{
		if (word1[i] != word2[i])
		{
			a += 1;
		}
	}
	
	if (a == 1)
	{
		return 1;
	}
	return 0;",0
dpet289,1697016199,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int a = 0;
	for (i = 0; i < 4; i++)
	{
		if (word1[i] != word2[i])
		{
			a += 1;
		}
	}
	
	if (a == 1)
	{
		return 1;
	}
	return 0;
}",1
dric234,1696928478,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH;i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
drob588,1697308157,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
	// You should correctly complete this function definition
	
}",1
droj056,1697146987,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for(int i=0;i<4;i++){
		if (word1[i] != word2[i]) {
			count++;
		}
		if (count > 1) {
			return 0;
		}
	}
	return count == 1;
}",1
dryu303,1697317607,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
int i;
int length1 = strlen(word1);
int length2 = strlen(word2);
int count=0; 
    for (i=0; i<=length1 && i<=length2; i++){
        if (word1[i] != word2[i]){
            count++;
 
        }
        if (count>1){
            return 0;
        }
 
    }
    if (count==1){
        return 1;
    } else{
        return 0;
    }
}",1
dsan845,1697287940,1,"
	int OneLetterDifference(char *word1, char *word2)
{
	
	int i ;
	int length = 4 ;
	int count = 0 ;
	for(i=0; i < length ; i++) {
	    
	    if (word1[i] != word2[i]) {
	
	        count++ ;
	    }
	   
	}
	   return count == 1 ;
   

}",1
dsaw164,1696920924,1,"int OneLetterDifference(char *word1, char *word2){
    
    int count = 0;
    
    for(int i = 0; i < 4; i++){
        if(word1[i] != word2[i]){
            count++;
        }
        
    }
 
    if(count == 1){
        return 1;
    }
 
    else{
     return 0;
    }
}",1
dsin316,1696992245,1,"int OneLetterDifference(char *word1, char *word2)
{
    int tru;
	int i;

	tru = 0;
	i=0;
	
    while(i<4){
        if(word1[i] == word2[i]){
			tru += 1;
		}
		i++;
    }
    
	if(tru == 3) {
	    return 1;
	}
	else {
		return 0;
	}
}
",1
dstr542,1697002476,1,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define _CRT_SECURE_NO_WARNINGS
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2) {
	int i;
	int counter = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			counter++;
		}
	}
	//printf(""counter is %d\n"", counter);
	if (counter >= 3) {
		if (counter == 4) {
			return 0;
		}
		return 1;
	}
	return 0;
}",1
dsut709,1697442015,1,"int OneLetterDifference(char* word1, char* word2)
{
	
	int count=0;
	for (int i = 0; i < (WORD_LENGTH -1); i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	if (count == 3) {
		return 1;
	}
	else {
		return 0;
	}
	
	// You should correctly complete this function defintion
}",1
dtem664,1697430925,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0; 

	for (int i = 0; i < WORD_LENGTH; i++) {
	    // Adds one if the letters are different
		if (word1[i] != word2[i]) {
			count++;
			// if there is more than one letter that is different it will return 0
			if (count > 1) {
				return 0;
			}
		}
	}
	return (count==1

}",0
dtem664,1697430970,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0; 

	for (int i = 0; i < WORD_LENGTH; i++) {
	    // Adds one if the letters are different
		if (word1[i] != word2[i]) {
			count++;
			// if there is more than one letter that is different it will return 0
			if (count > 1) {
				return 0;
			}
		}
	}
	return (count==1);

}",1
dten781,1697448420,1,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1) {
                return 0;
            }
        }
    }
    return (difference == 1);",0
dten781,1697450244,2,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1) {
                return 0;
            }
        }
    }
    return (difference == 1);
}",1
dtie151,1697257745,1,"int OneLetterDifference(char* word1, char* word2)
{	
	int diff_count = 0;
	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			diff_count++;
		}
	}
	if (diff_count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
dtol781,1697320604,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    int i = 0;
    while (i < 5) {
        if (word1[i] == word2[i]) {
            count++;
            if (count > 1) {
                return 1;
            }
        }
        i++;
    }
    return 0;
}
",0
dtol781,1697321100,2,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    int i = 0;
    while (i < 5) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
        i++;
    }
    return 1;
}",0
dtol781,1697321239,3,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    int i = 0;
    while (i < 5) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
        i++;
    }
    if (count == 1){
        return 1;
    } else {
        return 0
    }
}",0
dtol781,1697321246,4,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    int i = 0;
    while (i < 5) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
        i++;
    }
    if (count == 1){
        return 1;
    } else {
        return 0;
    }
}",1
dtua408,1697446090,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int count = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            count++;
        }
    }
    
    if (count == 3) {
        return 1;
    }

    return 0;
    
}",1
dver839,1697013473,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int count = 0;
	while (word1[i] != '\0') {
		if (word1[i] == word2[i]) {
			count++;
		}
		i++;
	}
	if (count == 3) {
		return 1;
	}
	else {
		return 0; 
	}
}",1
dvu878,1697263534,1,"int OneLetterDifference(char* word1, char* word2)
{
	int difference = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
dwar594,1697280400,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
   
    int diffChar = 0;

     for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diffChar++;
        }

        if (diffCount > 1) {
            return 0; 
        }
    }

    return diffCount == 1; 
}

",0
dwar594,1697280412,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
   
    int diffChar = 0;

     for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diffChar++;
        }

        if (diffChar > 1) {
            return 0; 
        }
    }

    return diffCount == 1; 
}

",0
dwar594,1697280421,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
   
    int diffChar = 0;

     for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diffChar++;
        }

        if (diffChar > 1) {
            return 0; 
        }
    }

    return diffChar == 1; 
}

",1
dwu617,1697276697,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	
	return (count == 1);
}",1
dyu343,1696819580,1,"int OneLetterDifference(char* word1, char* word2)
{
	int distance = 0;
	for (int i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] != word2[i])
		{
			distance++;
		}
	}
	
	if (distance == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
dzha497,1697251349,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int count = 0;
    
    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count++;
            i++;
        }
        else {
            i++;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
ealg928,1697451877,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int differBy = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] = word2[i]) 
        {
            differBy++;
            if (differBy > 1) 
            {
                return 0;
            }
        }
    }

    return differBy == 1;
}",0
ealg928,1697451883,2,"int OneLetterDifference(char *word1, char *word2) 
{
    int differBy = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            differBy++;
            if (differBy > 1) 
            {
                return 0;
            }
        }
    }

    return differBy == 1;
}",1
eara128,1697245946,1,"int OneLetterDifference(char *word1, char *word2){
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			count++;
		}
	}

	if (count == 1){
		return 1;
	} else {
		return 0;
	}
}",1
earn712,1697408230,1,"#include <stdio.h>
#define WORD_LENGTH  5

int OneLetterDifference (char *word1, char *word2)
{
  int i;
  int counter;

  counter = 0;

  for (i = 0; i < WORD_LENGTH; i++)
    {
      if (word1[i] != word2[i]){
	    counter = counter + 1;
	    if (counter > 1){
	      return 0;
	    }
      }
    }
    return counter;
}
",1
ebar824,1696967790,1,"int OneLetterDifference(char *word1, char *word2)
{
    int a = 0;
	// You should correctly complete this function defintion
	for (int i = 0; i < WORD_LENGTH; i++)
    {
        
        if (word1[i] != word2[i])
        {
            a++;
        }
        
    }
    
    if (a !=1)
    {
        return 0;
    } 
    else
    {
        return 1;
    }
    
    
    
    

}",1
echa931,1697176638,1,"int OneLetterDifference(char* word1, char* word2) {
	int count=0, i;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	return (count == 1);
}",1
eche101,1697240972,1,"#include <stdio.h>

int OneLetterDifference (char *word1, char *word2) {
  int same = 0;

  for (int i = 0; i < 4; i++) {
    if (word1[i] == word2[i]) {
      same = same + 1;
      if (same == 3) {
        return 1;
      }
    }
  }
return 0;
}",0
eche101,1697243247,2,"#include <stdio.h>

int OneLetterDifference (char *word1, char *word2) {
  int difference = 0;

  for (int i = 0; i < 4; i++) {
    if (word1[i] != word2[i]) {
      difference ++;
    }
  }
if (difference == 1) {
    return 1;
} else {
    return 0;
}
}",1
eejl688,1697429089,1,"#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2)
{
    int no_of_different = 0;

    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            no_of_different++;
        }
    }
    if (no_of_different > 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
",0
eejl688,1697429254,2,"int OneLetterDifference(char* word1, char* word2)
{
    int no_of_different = 0;

    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            no_of_different++;
            if (no_of_different > 1)
            {
                return 0;
            }
            else
            {
                return 1;
            }
        }
    }
  

}",0
eejl688,1697429406,3,"int OneLetterDifference(char* word1, char* word2)
{
    int no_of_different = 0;

    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            no_of_different++;
        }
    }

    if (no_of_different > 1)
    {
        return 0;
    }
    else 
    {
        return 1;
    }
}",0
eejl688,1697429728,4,"int OneLetterDifference(char* word1, char* word2)
{
    int no_of_different = 0;

    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            no_of_different++;
        }
    }

 if (no_of_different > 1 || no_of_different == 0)
    {
        return 0;
    }
    else 
    {
        return 1;
    }
}",1
eejl932,1696818020,1,"#include <stdio.h>
#define WORD_LENGTH 5 

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0;
            }
        }
    }

    return differenceCount == 1; // 
}",1
efra318,1697174069,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int j = 0;
	int difference = 0;

	for (i = 0; i < 4; i++) {
			if (word1[i] != word2[i]) {
				difference = difference + 1;
			}
	}

	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",0
efra318,1697174085,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int difference = 0;

	for (i = 0; i < 4; i++) {
			if (word1[i] != word2[i]) {
				difference = difference + 1;
			}
	}

	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",1
egho902,1697438681,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)

{
int count = 0;

for (int i = 0; i < 4; i++)
{
    if (word1[i] != word2[i])
    {
        count = count++;
    }
    }
    if (count == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
    }



",0
egho902,1697438878,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)

{
int count = 0;

for (int i = 0; i < 4; i++)
{
    if (word1[i] != word2[i])
    {
        count = count + 1;
    }
    }
    if (count == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
    }


",1
ehan360,1697423565,1,"int OneLetterDifference(char *word1, char *word2) {
    // Establish Variables
    int length = 4;
    int counter = 0;
    
    // Establish Loop
    for (int i = 0; i < length; i++) {
    if (word1[i] == word2[i]) {
        counter++;
    }
    
    printf(""Counter is %d\n"",counter);
}

if (counter == 3) {
    return 1;
}
else {
    return 0;
}

}",0
ehan360,1697423597,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    // Establish Variables
    int length = 4;
    int counter = 0;
    
    // Establish Loop
    for (int i = 0; i < length; i++) {
    if (word1[i] == word2[i]) {
        counter++;
    }
}

if (counter == 3) {
    return 1;
}
else {
    return 0;
}

}",1
ehua682,1696978472,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    
    // Setting up a counter to track the number of characters that are not the same.
    int diffCount = 0; 

    // Checking each word of character 
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            
            // Increase the count of dissimilar characters.
            diffCount++; 
            if (diffCount > 1) {
                
                
                // when more than one character differs it will return false (0)
                return 0; 
            }
        }
    }


// Return (1) if there is precisely one variation; otherwise, return (0).
    return (diffCount == 1) ? 1 : 0; 
}",1
ejeo051,1697285293,1,"#include <stdio.h>
#define MAX_WORDS 5
#define WORD_LENGTH 5

char wordList[MAX_WORDS][WORD_LENGTH];
int numWords;

int OneLetterDifference(char *word1, char *word2) {
    int i;
    int difference = 0;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            difference = difference + 1;
        }
    }

    if (difference == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
ekmu195,1696815479,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i; int j;
	int difference;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}

	if (difference == 1) {
		return 1;
	} else {
		return 0;
	}
}",0
ekmu195,1696815490,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int difference;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}

	if (difference == 1) {
		return 1;
	} else {
		return 0;
	}
}",0
ekmu195,1696817711,3,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int difference = 0;
	
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference+=1;
		}
	}
	
	if (difference != 1) {
		return 0;
	} else {
		return 1;
	}
}",1
elau447,1697354714,1,"int OneLetterDifference(char *word1, char *word2)
{
	int a = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (strcmp(word1, word2)) {
			a++;
		}
	}
	if (a == 1) {
		return 1;
	}
	// You should correctly complete this function defintion
	return 0;
}",0
elau447,1697354930,2,"int OneLetterDifference(char* word1, char* word2)
{
	int a = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			a++;
		}
	}
	if (a == 1) {
		return 1;
	}
	// You should correctly complete this function defintion
	return 0;
}",1
eles952,1697442484,1,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

 int OneLetterDifference(char *word1, char *word2)
{
int count = 0;

   for (int i = 0; word1[i] != '\0'; i++) {
       if (word1[i]!=word2[i]){
           count = count + 1;
       }
}
if (count == 1){
    return 1;
}
if (count != 1){
    return 0;
}    
    
}
",0
eles952,1697442496,2,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

 int OneLetterDifference(char *word1, char *word2)
{
int count = 0;

   for (int i = 0; word1[i] != '\0'; i++) {
       if (word1[i]!=word2[i]){
           count = count + 1;
       }
}
if (count == 1){
    return 1;
}
if (count != 1){
    return 0;
}    
    
",0
eles952,1697442615,3,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
int count = 0;

   for (int i = 0; word1[i] != '\0'; i++) {
       if (word1[i]!=word2[i]){
           count = count + 1;
       }
}
if (count == 1){
    return 1;
}
if (count != 1){
    return 0;
}    
    
}",0
eles952,1697442732,4,"/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
int count = 0;

   for (int i = 0; word1[i] != '\0'; i++) {
       if (word1[i]!=word2[i]){
           count = count + 1;
       }
}
if (count == 1){
    return 1;
}
else{
    return 0;
}    
    
}",1
elia955,1697443808,1,"int OneLetterDifference(char* word1, char* word2) {
    int Difference = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            Difference++;
            if (Difference > 1) {
                return 0;
            }
        }
    }
    return Difference == 1 ? 1 : 0;
}",1
else264,1696932655,1,"int OneLetterDifference(char *word1, char *word2){
    int i,count;
	count=0;
    for (i=0;i<4;i++){
        if (word1[i]==word2[i]){
			count=count+1;
        }
    }
	if (count==3){
		return 1;
	}
	return 0;
}",1
ely207,1696926503,1,"#include <string.h>

int OneLetterDifference(char* word1, char* word2)
{
	int counter = 0;

	for (int i = 0; i < strlen(word1); i++) {
		if (word1[i] != word2[i]) {
			counter += 1;
		}
	}

	if (counter != 1) {
		return 0;
	}

	return 1;
}",1
ema340,1697115858,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differ = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			differ++;
		}
	}

	if (differ == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
emah834,1697104784,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for(int i = 0; i < 5; i++){
        if(word1[i] != word2[i])
            count++;
    }
    if (count == 1)
        return 1;
    else 
        return 0;
}",1
emah921,1697339912,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int differences = 0;

   
    for (int i = 0; i < WORD_LENGTH - 1; ++i) { 
        if (word1[i] != word2[i]) {
            differences++;
        }

        if (differences > 1) {
            return 0;
        }
    }

    return differences == 1;
}",1
emar189,1697399695,1,"int OneLetterDifference(char *word1, char *word2) {
    int Differences;
    Differences=0;

    for (int i=0; i<(WORD_LENGTH-1); i++) {
        if (word1[i] != word2[i]) {
            Differences=Differences+1;
        }
    }

    if (Differences==1) {
		return 1;
	} else {
		return 0;
	}
}",1
eqiu349,1697357816,1,"int OneLetterDifference(char* word1, char* word2) {
	int count = 0;
	int i;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count != 1) {
		return 0;
	}
	else {
		return 1;
	}

}",1
esia821,1697451756,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion

	if (word1[0] == word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] != word2[3]) {
		return 1;
	}
	else if (word1[0] == word2[0] && word1[1] == word2[1] && word1[2] != word2[2] && word1[3] == word2[3]) {
		return 1;
	}
	else if (word1[0] == word2[0] && word1[1] != word2[1] && word1[2] == word2[2] && word1[3] == word2[3]) {
		return 1;
	}
	else if (word1[0] != word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] == word2[3]) {
		return 1;
	}
	else {
		return 0;
	}
}",1
eteo952,1696997543,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
    int counter;

    counter = 0;

    for (i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            counter = counter + 1;
        }
    }

    if (counter == 1) {
        return 1;
    }
    else {
        return 0;
    }
}",1
etri556,1697451904,1,"int OneLetterDifference(char *word1, char *word2){
    // Returns 1 if exactly one letter is different between the inputted words.
    int difference = 0;
    for(int i = 0; i < strlen(word1); i++){
        if (word1[i] != word2[i]){
            // Runs if the letter being examined isn't the same.
            difference = difference + 1;
        }
    }
    if (difference == 0){
        return 0;
    } else if(difference == 1){
        // Runs if one letter is different.
        return 1;
    } else {
        return 0;
    }

}",1
evic904,1697433455,1,"#include <stdio.h>
int OneLetterDifference(char* word1, char* word2)
{
	int x = 0;

	for (int i = 0; i < 4; i++)
	{
		if (word1[i] != word2[i])
		{
			x++;
		}

		if (x > 1)
		{
			return 0;
		}
			
	}
	return x == 1;
}",1
ewil853,1696929904,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i,val;
	val =0;
	for(i=0;i<4;i++){
		if (word1[i] == word2[i]){
			val = val + 0;
		}
		else{
			val = val +1;
		}
	}
	if (val ==1){
		return 1;
	}		
	else {
		return 0;
	}

}",1
exu922,1697445210,1,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for(int i = 0; i < WORD_LENGTH - 1; i++) { 
        if(word1[i] != word2[i]) {
            differences++;
            if(differences > 1) {
                return 0;
            }
        }
    }
    return differences == 1 ? 1 : 0;
}",1
eyeo346,1697326804,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	
	for(i = 0; i < 5; i++) {
	    if (word1[i] != word2[i]) {
	        count++;
	    }
	}
	if (count == 1){
	    return 1; 
	}
	return 0;
}",1
fcoo305,1697327907,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int count = 0;
    int i;
    
    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) { count++; }
    }

    if (count == 1) { return 1; }
    else { return 0; }
 }",1
fesp714,1696985308,1,"int OneLetterDifference(char *word1, char *word2) {
    int len1, len2;
    // gonna use if and while/for loops to interate through the elements and compare
    len1 = strlen(word1);
    len2 = strlen(word2);
    
    // Checking to see if the length of the words match
    if(len1 != len2) {
        return 0;
    } 
    
    // Comparing the elements within the words and seeing if it is the same
    // if the counter of difference is greater than 1, the word does not meet 
    // the criteria for word chain. 
    int difference = 0; 
    int i;
    for(i = 0; i < len1; i++) {
        if( word1[i] != word2[i]) {
            difference++;
            if( difference > 1) {
                return 0;
            }
        }
    }
    // If difference is exactly 1 between the words then return 1 as it meets 
    // word chain criteria.
    return (difference == 1);
}",1
fgor787,1697442316,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int noOfDifferentCharacters = 0;

    while (*word1 && *word2) 
    {
        if (*word1 != *word2) 
        {
            noOfDifferentCharacters++;
            
            if (noOfDifferentCharacters > 1) 
            {
                return 0; 
            }
        }
        
        word1++;
        word2++;
    }

    return noOfDifferentCharacters == 1;
}",1
fkee774,1697409674,1,"    
int OneLetterDifference(char *word1, char *word2) {
    
    int difference = 0;
    
    for (int i = 0; i < 3; i++) {
        if (word1[i] != word2[i]) {
            difference++;
        }
    }
    if (difference == 1) {
        return 1;
    }
    else {
        return 0;
    }
}
",0
fkee774,1697412234,2,"    
int OneLetterDifference(char *word1, char *word2) {
    
    int difference = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            difference++;
        }
    }
    if (difference == 1) {
        return 1;
    }
    else {
        return 0;
    }
}
",1
fobr691,1697448012,1,"refully review the ""word chain"" game, as described in the Lab 11 preparation document and illustrated in class:

Define the following function:

    int OneLetterDifference(char *word1, char *word2)
This function takes two words as inputs.  You can assume that both words will have come from a word list containing words of length 4, and therefore both words will be of length 4.  This function must compare each word – character by character – and return true (i.e. 1) only if there is exactly one character that differs between the two words.  Apart from this one character, all other characters must be identical and in the same positions.

Note: The constant WORD_LENGTH is defined to be 5 (this provides space for the characters in the word and the null terminating character).

For example:

Test	Result
char word1[WORD_LENGTH] = ""able"";
char word2[WORD_LENGTH] = ""ably"";

if (OneLetterDifference(word1, word2)) {
   printf(""The words differ by just one character"");
} else {
   printf(""The words do not differ by just one character"");
}
The words differ by just one character
Answer:(penalty regime: 0, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50 %)

",0
fobr691,1697448066,2,"
int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; // More than one difference, return false
            }
        }
    }
    
    return differences == 1; // Return true if exactly one difference
}

",1
fwij709,1696818120,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int count = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count ++;
		}
	}
	if (count != 1) {
		return 0;
	}
	return 1;
}",1
fwil727,1697181120,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5  // Length including null terminator
#define MAX_WORDS 2356  // Maximum number of words in the list

char wordList[MAX_WORDS][WORD_LENGTH];
int numWords;

int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;
            if (diffCount > 1)
                return 0;  // More than one difference, not a valid match
        }
    }

    return diffCount == 1;
}",1
fyan180,1697446286,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int i;
    int count = 0;
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
gcha636,1697011850,1,"#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int length = strlen(word1);
    int count = 0;

    for (i = 0; i < length; i++)
    {
        if (word1[i] != word2[i])
        {
            count++;
        }
    }
    if (count == 1)
    {
        return 1;
    }else return 0;

}",1
ggao363,1697011374,1,"int OneLetterDifference(char *word1, char *word2) {
// finds the number of differences between 2 words based on the positions of the letters

    int CountDifferences = 0; // Counts number of differences
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            CountDifferences++; // increments CountDifferences
        }
    }
    return CountDifferences; // returns the integer",0
ggao363,1697011395,2,"int OneLetterDifference(char *word1, char *word2) {
// finds the number of differences between 2 words based on the positions of the letters

    int CountDifferences = 0; // Counts number of differences
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            CountDifferences++; // increments CountDifferences
        }
    }
    return CountDifferences; // returns the integer
}",0
ggao363,1697011561,3,"int OneLetterDifference(char *word1, char *word2) {
// finds the number of differences between 2 words based on the positions of the letters

    int CountDifferences = 0; // Counts number of differences
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            CountDifferences++; // increments CountDifferences
        }
    }
    if(CountDifferences == 1){
        return CountDifferences;
    } else{
        return 0;
    }
    return CountDifferences; // returns the integer
}",1
gge561,1697245042,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i=0;
	int state=0;
	int count=0;

	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			count++;
		}
		i++;
	}
	if (count == 1) {
		state = 1;
	}
	return state;
}",1
gjom886,1697353853,1,"#include <stdio.h>

#include <string.h>
 int OneLetterDifference(char *word1, char *word2) {
     
     int i = 0;
     int count = 0;
     while (word1[i] != '\0') {
         if (word1[i] != word2[i])
           count++;
         
     }
     i++;
     
     if (count == 1){
         return 1;
     } else {
         return 0;
     }
     
     
 }",0
gjom886,1697353931,2,"#include <stdio.h>

#include <string.h>
 int OneLetterDifference(char *word1, char *word2) {
     
     int i = 0;
     int count = 0;
     while (word1[i] != '\0') {
         if (word1[i] != word2[i]) {
           count++;
         
     }
     i++;
 }
     if (count == 1){
         return 1;
     } else {
         return 0;
     }
     
     
 }
    ",1
gmal045,1697105441,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count_diff=0;
	for (int i=0;i<WORD_LENGTH;i++) {
		if (word1[i] != word2[i])
			count_diff++;
		if (count_diff > 1) {
			return false;
		}
	}
	return true;
}",0
gmal045,1697105554,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count_diff=0;
	for (int i=0;i<WORD_LENGTH;i++) {
		if (word1[i] != word2[i])
			count_diff++;
	}
	if (count_diff > 1 && count_diff != 0) {
		return false;
	}
	else {
		return true;
	}
}",0
gmal045,1697105613,3,"int OneLetterDifference(char *word1, char *word2)
{
	int count_diff=0;
	for (int i=0;i<WORD_LENGTH;i++) {
		if (word1[i] != word2[i])
			count_diff++;
	}
	if (count_diff > 1 || count_diff == 0) {
		return false;
	}
	else {
		return true;
	}
}",1
gmoh887,1697287514,1,"int OneLetterDifference(char *word1, char *word2)
{	
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	// You should correctly complete this function defintion
	return (count == 1);
}",1
gpen695,1697342240,1,"int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++)
    {
        if (word1[i] != word2[i]) 
        {
            differenceCount++; 
        }

        if (differenceCount > 1) 
        
        {
            return 0; 
        }
    }

    return differenceCount == 1; ",0
gpen695,1697342441,2,"int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++)
    {
        if (word1[i] != word2[i]) 
        {
            differenceCount++; 
        }

        if (differenceCount > 1) 
        
        {
            return 0; 
        }
    }

    return differenceCount == 1; 
}",1
gren419,1697440295,1,"int OneLetterDifference(char *word1,char *word2)
{
    int i = 0;
    int count = 0;
    while(i<5){
        if(word1[i]!=word2[i]){
            count = count+1;
        }
        i++;
    }
    if(count==1){
        return 1;
    }else{
        return 0;
    }
}",1
gvan573,1697331126,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2)
{
	//initialize a counter j of all the similar letters in the two words
	int j = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			j = j + 1;
		}
	}

	if (j == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
gxu660,1696922529,1,"int OneLetterDifference(char *word1, char *word2)
{
    int differentCount = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            differentCount++;
        }
    }
    if (differentCount == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
gzho986,1697239710,1,"int OneLetterDifference(char *word1, char *word2)
{
	
    int diffCount = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;
            if (diffCount > 1) {
                return 0;  
            }
        }
    }

	return word1[0] == word2[0];
}",0
gzho986,1697241074,2,"int OneLetterDifference(char *word1, char *word2)
{
	
    int diffCount = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;
            if (diffCount > 1) {
                return 0;  
            }
        }
    }

	return (diffCount == 1);
}",1
hama210,1697058727,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, a;
	a = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			a++;
		}
	}

	if (a == 3) {
		return 1;
	}

	return 0;
}",1
haus879,1696934068,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	int i;

	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;

			if (count > 1) {
				return 0; 

			}
		}
	}

	return count == 1; 
}
",1
hbas168,1697410559,1,"int OneLetterDifference(char *word_1, char *word_2) {
    int output = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word_1[i] != word_2[i]) {
            output += 1;
        }
    }
    
    if (output == 1) {
           return 1; 
    } else {
        return 0;
    }
}",1
hber510,1696997852,1,"int OneLetterDifference(char *word1, char *word2)
{
    int sum = 0;
    
	for (int i = 0; i<WORD_LENGTH; i++) {
	    if (word1[i] != word2[i]) {
	        sum += 1;
	    }
	}
	
	if (sum == 1) {
	    return 1;
	} else {
	    return 0;
	}
}",1
hbhe454,1697445529,1,"#define WORD_LENGTH 

int OneLetterDifference(char*word1,char*word2)
{
    int count=0;
    for (int=0; I<WORD_LENGTH-1;i++){
        if (worda[i]==wordb[i]){
            count+=1
        }
    }
    
    if(count!=word3){
    return 0;
    }
        return 1;
}
",0
hbhe454,1697446220,2,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1,char *word2)
{
    int count=0;
    for (int i=0; i<WORD_LENGTH-1;i++){
        if (word1[i]==word2[i]){
            count+=1;
        }
    }
    
    if(count!=3){
    return 0;
    }
        return 1;
}
",1
hbou314,1697073474,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count += 1;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
hcha410,1696966647,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2) {
    int count = 0;
    
    for (int i = 0; i< WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            count++;
        
        }
        
    }
    
    return count == 1;
    
}",1
hche410,1696821423,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0; 
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;
            if (diffCount > 1) {
                return 0; 
            }
        }
    }
    return diffCount == 1 ? 1 : 0;
}
",1
hche864,1696903476,1,"int OneLetterDifference(char *word1, char *word2)
{
int i;
int count = 0;
for(i=0; i<4; i++){
    if(word1[i]!=word2[i]){count++;}
}
if(count != 1){return 0;}
return 1;}",1
hcop563,1696967272,1,"int OneLetterDifference(char *word1, char *word2)
{
	/* Takes two words and checks the number of differences by one letter are in
	them, if that difference is 1 a logical 1 is returned otherwise a logical
	0 is returned */
	int differences;
	int i;

	differences = 0;

	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			differences++;
		}
	}

	if (differences == 1) {
		return 1;
	}else {
		return 0;
	}
}",1
hcro730,1696991575,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, matches = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] == word2[i]) {
			matches++;
		}
	}

	if (matches == WORD_LENGTH - 1) {
		return 1;
	}

	return 0;
}",1
hdeg917,1697332945,1,"int OneLetterDifference(char *word1, char *word2)
{
    	//this function compares each symol / character of the four letter word and outputs 1 if one letter is different.
    int i;
    int count=0;
    for (i = 0; i<WORD_LENGTH-1; i++){
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    }
	return 0;
}
",1
hgao080,1696898528,1,"int OneLetterDifference(char* word1, char* word2)
{
	int diffCount = 0;

	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			diffCount++;
		}
	}

	if (diffCount == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
hgou636,1697164534,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    
    for (int i = 0; i < 4; i++) { 
        
        if (word1[i] == word2[i]) {  
            count = count + 1;
        }
    }
    
    if (count == 3) { 
        return 1; 
    }
    else {
    return 0;  
    }
}",1
hhil451,1697150084,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	int i = 0;

	for (i; i < 4; i++)
	{
		if (word1[i] == word2[i])
		{
			count++;
		}

	}

	if (count == 3)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",0
hhil451,1697150150,2,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	

	for (int i = 0; i < 4; i++)
	{
		if (word1[i] == word2[i])
		{
			count++;
		}

	}

	if (count == 3)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
hjoo911,1697162248,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int j = 0;
    int count;
    
    while (i < WORD_LENGTH && j < WORD_LENGTH){
            if (word1[i] == word2[i]){
            i++;
            j++;
    }
            else if (word1[i] != word2[i]) {
            count = count + 1;
            i++;
            j++;
            }
    }
    
    if (count == 1) {
         return 1;
     }
    return 0;
}",0
hjoo911,1697163205,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int j = 0;
    int count = 0;
    
    while (i < WORD_LENGTH && j < WORD_LENGTH){
            if (word1[i] == word2[j]){
                i++;
                j++;
            }
            else if (word1[i] != word2[j]) {
                count = count + 1;
                i++;
                j++;
            }
    }
    
    if (count == 1) {
         return 1;
     }
    return 0;
}",1
hkah523,1697425131,1,"#include <stdio.h>
#define WORD_LENGTH 5
/*Author: Harshdeep Kahlon*/

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }

        if (differences > 1) {
            return 0; // More than one difference, return false
        }
    }
    return (differences == 1) ? 1 : 0;
}",1
hkee941,1697432496,1,"int OneLetterDifference(char *word1, char *word2) {
    int differencecount;
    differencecount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differencecount++;
            if (differencecount > 1) {
                return 0;
            } else {
                return 1;
        }
    }
}",0
hkee941,1697432937,2,"int OneLetterDifference(char *word1, char *word2) {
    int differencecount;
    differencecount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differencecount++;
            if (differencecount > 1) {
                return 0;
            } else {
                return 1;
            }
        }
    }
}",0
hkee941,1697433296,3,"int OneLetterDifference(char *word1, char *word2) {
    int differencecount;
    differencecount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differencecount++;
        }
    }
    
    if (differencecount != 1){
        return 0;
    }
return differencecount == 1;
}",1
hkim807,1697335036,1,"int OneLetterDifference(char *word1, char *word2)
{
int i = 0;
int count = 0;

for (i = 0; i < 5; i++){
    if(word1[i] == word2[i]){
        count++;
    }else{
        count = count;
    }
}

if(count == 4){
    return 1;
}else{
    return 0;
}
}",1
hkon883,1697376826,1,"int OneLetterDifference(char* word1, char* word2) {
    int differCount = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            differCount++;
        }
    }
    if (differCount == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
hlee999,1697077525,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	int i, count = 0;
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if ((count == 1) && (i == WORD_LENGTH - 2) && (word1[i] == word2[i])) {
			return 1;
		}
		else if ((count == 0) && (i == WORD_LENGTH - 2) && (word1[i] != word2[i])) {
			return 1;
		}
		else if (word1[i] == word2[i]) {
			continue;
		}
		else if ((word1[i] != word2[i]) && (count == 1))
			return 0;
		else {
			count++;
		}
	}
	return 0;
}",1
hleu459,1697011903,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
    int i;
    int diffLetters = 0;
	
    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            diffLetters++;
        }
    }
    if (diffLetters == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
hliu836,1697202776,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	for (i=0; i<4; i++) {
	    if (word1[i] != word2[i]) {
	        count ++;
	    }
	}
	if (count == 1) {
	    return 1;
	} else {
	    return 0;
	}
}",1
hly852,1697368900,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int differences = 0;
    
    while (word1[i] != '\0')
    {
        if (word1[i] != word2[i]){
            differences++;
        }
        i++;
    }
    if (differences == 1){
        return 1;
    }
    else {
        return 0;
    }
}",1
hma481,1696940337,1,"int OneLetterDifference(char* word1, char* word2)
{
	int diff = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
	}
	if (diff != 1) {
		return 0;
	}
	else {
		return 1;
	}
}",1
hmcm582,1696823513,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

int OneLetterDifference(char* word1, char* word2) {
    int diff = 0;

    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
    }

    return (diff == 1);
}",1
hmel649,1696900329,1,"int OneLetterDifference(char *word1, char *word2) {
    int counter = 0;
    for (int i = 0; i < 4; i++) {
            if (word1[i] != word2[i]) {
                counter = counter + 1;
            }
    }
    if (counter == 1) {
        return 1;
    } else {
    return 0;
    }
}",1
hmof971,1697060307,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int same;
	same = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] == word2[i]) {
			same++;
		}
		
	}
	if (same==4||same==5) {
		return 1;
	}	
	else {
		return 0;
	}",0
hmof971,1697060339,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int same;
	same = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] == word2[i]) {
			same++;
		}
		
	}
	if (same==4||same==5) {
		return 1;
	}	
	else {
		return 0;
	}
}",0
hmof971,1697060871,3,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int same;
	same = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] == word2[i]) {
			same++;
		}
		
	}
	if (same==4) {
		return 1;
	}	
	else {
		return 0;
	}
}",1
hnew638,1696817851,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int sameLetters = 0;
	for (int i = 0; i < 4; i++)
	{
		if (word1[i] == word2[i])
			sameLetters++;
		
	}
	return sameLetters == 3;
	
}",1
hpan363,1697406282,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    if (i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i])
        {
            count++;
        }
    }
    if (count == 1)
    {
        return 1;
    }
    
    return 0;
}",0
hpan363,1697406419,2,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    if (int i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i])
        {
            count++;
        }
    }
    if (count == 1)
    {
        return 1;
    }
    
    return 0;
}",0
hpan363,1697406487,3,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for(int i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i])
        {
            count++;
        }
    }
    if (count == 1)
    {
        return 1;
    }
    
    return 0;
}",1
hpat916,1697146318,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	return count == 1;
}",1
hpir641,1696994397,1,"int OneLetterDifference(char* word1, char* word2)
{
	if ((word1[0] != word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) {
		return 1;
	}
	else if ((word1[0] == word2[0]) && (word1[1] != word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) {
		return 1;
	}
	else if ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] != word2[2]) && (word1[3] == word2[3])) {
		return 1;
	}
	else if ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] != word2[3])) {
		return 1;
	}
	else {
		return 0;
	}
}
",1
hrob997,1697337394,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, j;
	int istrue;
	int n = 0; 
	
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			n++; 
		}
	}
	
	if (n == 1) {
		istrue = 1;
	}
	else {
		istrue = 0; 
	}

	return istrue;
}",0
hrob997,1697337425,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int istrue;
	int n = 0; 
	
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			n++; 
		}
	}
	
	if (n == 1) {
		istrue = 1;
	}
	else {
		istrue = 0; 
	}

	return istrue;
}",1
hsan267,1697072951,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int count = 0;
    
    for (i=0; i<4; i++) {
        if (word1[i] != word2[i]) {
            count +=1;
        }
    }
    
    if (count == 1) {
        return 1;
    }
    else {
        return 0;
    }
}",1
hson435,1697439923,1,"int OneLetterDifference(char *word1, char *word2) {
    int length;
    int count = 0;
    length = strlen(word1);
    for (i = 0; i < length; i++) {
        if (word1[i] == word2[i]) {
            count++
        }
        else {
            return 0;
        }
    }
    if (count == 1) {
        return 1;
    }
    else {
        return 0;
    }
}",0
hson435,1697440015,2,"int OneLetterDifference(char *word1, char *word2) {
    int length;
    int count = 0;
    length = strlen(word1);
    for (int i = 0; i < length; i++) {
        if (word1[i] == word2[i]) {
            count++;
        } else {
            return 0;
        }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",0
hson435,1697440344,3,"int OneLetterDifference(char *word1, char *word2) {
    int length = strlen(word1);
    int count = 0;
    for (int i = 0; i < length; i++) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
    }
    return (count == 1);
}",1
htew916,1697401159,1,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

#define WORD_LENGTH 5 // This provides space for the characters in the word and the null terminating character.

// The function, OneLetterDifference takes two words with a length of four and compare each word, character by character. It returns true only if there is exactly one character that differs between the two words.

// Define the function, OneLetterDifference.
int OneLetterDifference(char* word1, char* word2) 
{
    int i = 0;
    int LetterDifference = 0;

    while (i < WORD_LENGTH - 1) {
        if (word1[i] != word2[i]) {
            LetterDifference++;
            if (LetterDifference > 1) {
                return 0;
            }
        }
        i++;
    }
}",0
htew916,1697401342,2,"#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

#define WORD_LENGTH 5 // This provides space for the characters in the word and the null terminating character.

// The function, OneLetterDifference takes two words with a length of four and compare each word, character by character. It returns true only if there is exactly one character that differs between the two words.

// Define the function, OneLetterDifference.
#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

#define WORD_LENGTH 5 // This provides space for the characters in the word and the null terminating character.

// The function, OneLetterDifference takes two words with a length of four and compare each word, character by character. It returns true only if there is exactly one character that differs between the two words.

// Define the function, OneLetterDifference.
int OneLetterDifference(char* word1, char* word2) 
{
    int i = 0;
    int LetterDifference = 0;

    while (i < WORD_LENGTH - 1) {
        if (word1[i] != word2[i]) {
            LetterDifference++;
            if (LetterDifference > 1) {
                return 0;
            }
        }
        i++;
    }
    return 1;
}",0
htew916,1697450880,3,"#include <stdio.h>
#include <string.h>
#define _CRT_SECURE_NO_WARNINGS

#define WORD_LENGTH 5 // This provides space for the characters in the word and the null terminating character.

// The function, OneLetterDifference takes two words with a length of four and compare each word, character by character. It returns true only if there is exactly one character that differs between the two words.

// Define the function, OneLetterDifference.

int OneLetterDifference(char* word1, char* word2)
{
    int i = 0;
    int LetterDifference = 0;

    if (strcmp(word1, word2) == 0) {
        return 0; 
    }

    while (i < WORD_LENGTH - 1) {
        if (word1[i] != word2[i]) {
            LetterDifference++;
            if (LetterDifference > 1) {
                return 0;
            }
        }
        i++;
    }
    return 1;
}",1
htho943,1696924696,1,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2)
{
    // the intent of this function is to take a word with 4 letters and find 
    // whether they only have 1 letter of difference between them 
    // author hamish thompson
    int i;
    int count=0;
    // remember if testing again remember #define WORD_LENGTH 5
    for (i=0;i<=4; i++)
    {
        if (word1[i]!=word2[i])
        {
            count++;
        }
    }
    // two if loops because my if else loop was being weird so split them up
    if (count=0||count>1)
    {
        return 0;
    }
    if (count=1) 
    {
        return count;
    }
}",0
htho943,1696924902,2,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2)
{
    // the intent of this function is to take a word with 4 letters and find 
    // whether they only have 1 letter of difference between them 
    // author hamish thompson
    int i;
    int count=0;
    // remember if testing again remember #define WORD_LENGTH 5
    for (i=0;i<=4; i++)
    {
        if (word1[i]!=word2[i])
        {
            count++;
        }
    }
    // two if loops because my if else loop was being weird so split them up
    if (count==0||count>1)
    {
        return -1;
    }
    if (count==1) 
    {
        return count;
    }
}",0
htho943,1696925556,3,"#include <stdio.h>
//#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    // the intent of this function is to take a word with 4 letters and find 
    // whether they only have 1 letter of difference between them 
    // author hamish thompson
    int i;
    int count=0;
    for (i=0;i<WORD_LENGTH; i++)
    {
        if (word1[i]!=word2[i])
        {
            count++;
        }
    }
    // two if loops because my if else loop was being weird so split them up
    if (count==1) 
    {
        return count;
    }
    else {
        return 0;
    }
}",1
htyl682,1697447972,1,"int OneLetterDifference(char *word1,char *word2){
    int count = 0;
    for(int i = 0; i<5; i++){
        if(word1[i]==word2[i]){
            count++;
        }
    }
    if (count==4){
        return(1);
    }else{
        return(0);
    }
} ",1
hugn924,1697450921,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2){

    int index = 0;

    for (int i = 0; i < 4; i++){
        if(word1[i] == word2[i]){
            index++;
        }

        else {
            index = index;
        }

    }

    if (index == 3){
        return 1;
    }
    else {
        return 0;
    }
}",1
hwen116,1697062905,1,"int OneLetterDifference(char *word1, char *word2){

    int i;
    int count = 0;
    
    i=0;
    while ((word1[i]!='\0')&&(word2[i]!='\0')){
        if (word1[i]!=word2[i]){
            count ++;
        }
        i++;
    }

    if (count==1){
        return 1;
    }else{
        return 0;
    }

}",1
hwin877,1697268259,1,"int OneLetterDifference(char* word1, char* word2)
{
	int num_diffs = 0;
	for (int i = 0; i < WORD_LENGTH - 1; i++)
	{
		printf(""%c, %c\n"",word1[i], word2[i]);
		if (word1[i] != word2[i])
		{
			num_diffs++;
		}
	}
	printf(""%d\n"", num_diffs);
	if (num_diffs != 1)
	{
		return 0;
	}
	return 1;
}",0
hwin877,1697268287,2,"int OneLetterDifference(char* word1, char* word2)
{
	int num_diffs = 0;
	for (int i = 0; i < WORD_LENGTH - 1; i++)
	{
		if (word1[i] != word2[i])
		{
			num_diffs++;
		}
	}
	if (num_diffs != 1)
	{
		return 0;
	}
	return 1;
}",1
hyan713,1696967327,1,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int same = 0;
    for (int i=0; i<WORD_LENGTH-1; i++){
        if (word1[i] == word2[i]){
            same++;
        }
    }
    if (same == 3){
        return 1;
    } else {
        return 0;
    }
}",1
hye071,1697256927,1,"/******************************************************************************
Lab 11 question 1

*******************************************************************************/
#include <stdio.h>
#define WORD_LENGTH 4


int OneLetterDifference(char *word1, char *word2) {
    int differenceCount=0;
    
    for (int i=0; i<4; i++){
        if (word1[i] != word2[i]){
            differenceCount++;
        
        }
        if (differenceCount>1){
            
            return 0;
        }
    }
            
       if (differenceCount==1){
            return 1;
       }else{
           return 0;
       }
        
    

    
}",0
hye071,1697256972,2,"/******************************************************************************
Lab 11 question 1

*******************************************************************************/
#include <stdio.h>
#define WORD_LENGTH 5


int OneLetterDifference(char *word1, char *word2) {
    int differenceCount=0;
    
    for (int i=0; i<4; i++){
        if (word1[i] != word2[i]){
            differenceCount++;
        
        }
        if (differenceCount>1){
            
            return 0;
        }
    }
            
       if (differenceCount==1){
            return 1;
       }else{
           return 0;
       }
        
    

    
}",1
ibha186,1697351270,1,"int OneLetterDifference(char *word1, char *word2) {
    int counter = 0;
    for (int i = 0; i < strlen(word1); i++) {
        if (word1[i] != word2[i]) {
            counter++;
        }
    }
    if (counter > 1) {
        return 0;
    }
    return 1;
}
",0
ibha186,1697351376,2,"int OneLetterDifference(char *word1, char *word2) {
    int counter = 0;
    for (int i = 0; i < strlen(word1); i++) {
        if (word1[i] != word2[i]) {
            counter++;
        }
    }
    if (counter == 1) {
        return 0;
    }
    return 1;
}
",0
ibha186,1697351639,3,"int OneLetterDifference(char *word1, char *word2) {
    int counter = 0;
    for (int i = 0; i < strlen(word1); i++) {
        if (word1[i] != word2[i]) {
            counter++;
        }
    }
    if (counter == 1) {
        return 1;
    }
    return 0;
}
",1
ibur427,1696924157,1,"int OneLetterDifference(char *word1, char*word2)
{
	int l = strlen(word1);
	int differ = 0;

	for (int i = 0; i < l; i++) {
		if (word1[i] != word2[i]) {
			differ++;
		}
	}

	if (differ == 1) {
		return 1;
	}
	else { 
		return 0; 
	}
}",1
iche428,1697376036,1,"int OneLetterDifference(char *word1, char *word2)
{
	for (int i=0; i<4; i++) {
		if ((word1[i] == word2[i]) == 0) {
			if ((word1[i+1] == word2[i+1]) == 0) {
				return 0;
			}
			else if ((word1[i+2] == word2[i+2]) == 0) {
				return 0;
			}
			else if ((word1[i+3] == word2[i+3]) == 0) {
				return 0;
			}
			else return 1;
		}
		else if ((word1[i+1] == word2[i+1]) == 0) {
			if ((word1[i+2] == word2[i+2]) == 0) {
				return 0;
			}
			else if ((word1[i+3] == word2[i+3]) == 0) {
				return 0;
			}
			else return 1;
		}
		else if ((word1[i+2] == word2[i+2]) == 0) {
			if ((word1[i+3] == word2[i+3]) == 0) {
				return 0;
			}
			else return 1;
		}
		else if ((word1[i+3] == word2[i+3]) == 0) {
			return 1;
		} else return 0;
	}
}",0
iche428,1697412329,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;

	for (int i=0; i<4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}

	if (count == 3) {
		return 1;
	}
	else return 0;
}",1
ihoo440,1697272844,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
		for(int i = 0; i < WORD_LENGTH - 1;i++)
		{
			if(word1[i] != word2[i])
			{
				count++;
			}
		}

		if(count == 1)
		{
			return 1;
		}else
		{
			return 0;
		}
	
}",1
ikis164,1697328122,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differences = 0;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			differences++;

			if (differences > 1) {
				return 0;
			}
		}
	}
	return differences == 1;
}",1
iko203,1697184911,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, count = 0;
	for (i = 0; i < (WORD_LENGTH - 1); i++) {
		if (word1[i] != word2[i]) {
			count++;
			return 0;
		}
		if (count == 1) {
			return 1;
		}
	}
}",0
iko203,1697185222,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i, count = 0;
	for (i = 0; i < (WORD_LENGTH - 1); i++) {
		if (word1[i] != word2[i]) {
			count++;
			return 0;
		}
		if (count == 1) {
			return 1;
		}
	}
	return 0;
}",0
iko203,1697187783,3,"#define TRUE 1
#define FALSE 0

int OneLetterDifference(char* word1, char* word2)
{
    int i, count = 0;
    for (i = 0; i < (WORD_LENGTH - 1); i++) {
        
        if (word1[i] != word2[i]) {
            count++;
        }
        if (count > 1) {
            return FALSE;
        }
    }
    return count == TRUE;
}",1
ilee973,1697339466,1,"#include <stdio.h>
#define WORD_LENGTH 5

 int OneLetterDifference(char *word1, char *word2)
{
    int difference =0;
    for (int i=0; i< WORD_LENGTH; i++){
        if(word1[i] != word2[i]){
            difference++;
        }
        if (difference != 1)
        return 0;
    }
}",0
ilee973,1697340190,2,"#include <stdio.h>
#define WORD_LENGTH 5

 int OneLetterDifference(char *word1, char *word2)
{
    int difference =0;
    for (int i=0; i< WORD_LENGTH; i++){
        if(word1[i] != word2[i]){
            difference++;
        }
        if (difference > 1){
        return 0;
        }
    }
    if (difference==1){
        return 1;
    }
    return 0;
        
}",1
imac384,1697247091,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i,j;
    
    int length1 = strlen(word1);
    int length2 = strlen(word2);
    int count = 0;
    for (i=0;i < length1;i++) {
            if (word1[i] != word2[i]) {
                count++;
                if (count > 1) {
                    return 0;
                }
            }
            
        }
    return count == 1;
}",0
imac384,1697247107,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    
    int length1 = strlen(word1);
    int count = 0;
    for (i=0;i < length1;i++) {
            if (word1[i] != word2[i]) {
                count++;
                if (count > 1) {
                    return 0;
                }
            }
            
        }
    return count == 1;
}",1
imoh000,1697106173,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
    }
    if (diff == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
iwes050,1696824864,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int j;
    int difference = 0;
    for (i = 0; i < WORD_LENGTH; i++) {
            if (word1[i] != word2[i]) {
                difference++;
            }
            if (difference > 1) {
            return 0;
            }   
        }

    return (difference == 1);

}",0
iwes050,1696824878,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int difference = 0;
    for (i = 0; i < WORD_LENGTH; i++) {
            if (word1[i] != word2[i]) {
                difference++;
            }
            if (difference > 1) {
            return 0;
            }   
        }

    return (difference == 1);

}",1
iwil997,1696925296,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int i; 
    int different = 0;
    int same = 0;
    
    for (i=0; i < WORD_LENGTH; i++) { 
        if (word1[i] != word2[i]) {
            different++;
            if (different > 1) {
                return 0;
            }
        }
        else {
            same++;
        } 
    }
    if (different == 1 && same >=3) {
        return 1;
    } else {
        return 0;
    }
} ",1
iwoo382,1696820916,1,"int OneLetterDifference(char *word1, char *word2)
{
	int nonmatches;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			nonmatches++;
		}
	}

	if (nonmatches == 1) {
		return 1;
	} else {
		return 0;
	}
}",0
iwoo382,1697154410,2,"int OneLetterDifference(char *word1, char *word2)
{
	int nonmatches = 0;

	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			nonmatches++;
		}
	}

	if (nonmatches == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
ixia229,1697371117,1,"int OneLetterDifference(char *word1, char *word2) {
    int DiffCount;
    int i;
    
    DiffCount = 0;
    
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            DiffCount++;
            if (DiffCount > 1) {
                return 0;
            }
        }
    }
    
    return DiffCount == 1;
}",1
ixu871,1697270489,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
    }

    return (count == 1);
}",1
jahn224,1696931072,1,"int OneLetterDifference(char *word1, char *word2)
{
    int WORD_LENGTH = 5;
    int diff=0;
    
    for (int i =0; i < WORD_LENGTH; i++) {
        if(word1[i] != word2[i]) {
            diff += 1;
        }
    }
    
    if (diff == 1) {
        return 1;
    } else {
        return 0;
    }
}",0
jahn224,1696931218,2,"int OneLetterDifference(char *word1, char *word2)
{
    int diff=0;
    
    for (int i =0; i < WORD_LENGTH; i++) {
        if(word1[i] != word2[i]) {
            diff += 1;
        }
    }
    
    if (diff == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
jaus241,1696974727,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int sameCounter = 0;
	int WORD_LENGTH = 4;
	for(i = 0; i < WORD_LENGTH; i++){
	    if (word1[i] == word2[i]){
	        sameCounter = sameCounter + 1; 
	    }
	}
    if (sameCounter == 3){
        return 1;
    }
    return 0;
}",0
jaus241,1696975287,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int sameCounter = 0;
	for(i = 0; i < WORD_LENGTH; i++){
	    if (word1[i] == word2[i]){
	        sameCounter = sameCounter + 1; 
	    }
	}
    if (sameCounter == 4){
        return 1;
    }
    return 0;
}",1
jbag235,1697442902,1,"int OneLetterDifference(char* wordOne, char* wordTwo)
{
    int length, i, count;

    count = 0;
    length = 4;

    for (i = 0; i < length; i++) {
        if (wordOne[i] == wordTwo[i]) {
            count++
        }
    }
    if (count == 3) {
        return 1;
    } else {
        return 0;
    }
}",0
jbag235,1697442911,2,"int OneLetterDifference(char* wordOne, char* wordTwo)
{
    int length, i, count;

    count = 0;
    length = 4;

    for (i = 0; i < length; i++) {
        if (wordOne[i] == wordTwo[i]) {
            count++;
        }
    }
    if (count == 3) {
        return 1;
    } else {
        return 0;
    }
}",1
jbam701,1697410710,1,"int OneLetterDifference(char* word1, char* word2)
{
	int length;
	int count = 0;

	length = strlen(word1);

	for (int i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			count = count + 1;
		}
	}

	if (count == 1) {
		return 1;
	}

	return 0;
}",1
jbam753,1697438999,1,"int OneLetterDifference(char *word1, char *word2) {
    int a = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] == word2[i])
            a++;
    }
    return a;
}
",0
jbam753,1697439609,2,"int OneLetterDifference(char *word1, char *word2) {
    int a = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i])
            a++;
    }
    
    if (a > 1) {
        a = 0;
    }
    return a;
}",1
jbis394,1697447282,1,"int OneLetterDifference(char *word1, char *word2) {

count = 0;

    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;

    if count == 1 {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }",0
jbis394,1697447296,2,"int OneLetterDifference(char *word1, char *word2) {

int count = 0;

    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;

    if count == 1 {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }",0
jbis394,1697447409,3,"int OneLetterDifference(char *word1, char *word2) {

int count = 0;

for (int i = 0; i < WORD_LENGTH - 1; i++) {
    if (word1[i] != word2[i]) {
        count++;
    }
}

if (count == 1) {
    printf(""The words differ by just one character"");
} else {
    printf(""The words do not differ by just one character"");
}

return 0;
}",0
jbis394,1697450121,4,"int OneLetterDifference(char *word1, char *word2) {
int count = 0;
for (int i = 0; i < 5; i++) {
    if (word1[i] != word2[i]) {
        count++; 
    }
}
return (count == 1);",0
jbis394,1697453131,5,"void OneLetterDifference(char *word1, char *word2) {
int count = 0;
for (int i = 0; i < 5; i++) {
    if (word1[i] != word2[i]) {
        count++; 
    }
}
return (count == 1);",0
jbis394,1697453269,6,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
    }

    return count == 1;
}

int main() {

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }

    return 0;
}",0
jbis394,1697453484,7,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
    }

    return count == 1;
}

int main() {
        char word1[] = ""apple"";
    char word2[] = ""apply"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }

    return 0;
}",0
jbis394,1697453508,8,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count++;
            if (count > 1) {
                return 0;
            }
        }
    }

    return count == 1;
}

int main() {
    char word1[] = ""apple"";
    char word2[] = ""apply"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }

    return 0;
}",0
jbro301,1696824051,1,"int OneLetterDifference(char *word1, char *word2)
{

    int i;
    int count=0;
    for (i=0;i<WORD_LENGTH;i++) {
        if  (word1[i]!=word2[i]) {
            count++;
        }
    }
    return (count==1);
}",1
jbru537,1697411786,1,"int OneLetterDifference(char *word1, char *word2)
{

int i = 0; 
int sum = 0;
while (i<4){
    if (word1[i] == word2[i]){
        sum++;
    }

i++;
}

if (sum == 3){
    return 1;}
    else {
       return 0;  
    }
    
}
",1
jbuc296,1697433032,1,"int OneLetterDifference(char *word1, char *word2)
{
        int counter = 0;
        for (int i = 0; word1[i] != '\0' && word2[i] != '\0'; i++)
        {
        if (word1[i] != word2[i]) {
        counter++;
        }
        }
	if (counter == 1) {
        return 1;
        } else {
        return 0;
        }
}
",1
jcha513,1696943692,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int x;
    
    x=0;
    for (i=0; i<5; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    
    if (x>=3) {
        return 1;
    }
    
    if (x<=3) {
        return 0;
    }
}",0
jcha513,1696943913,2,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int x;
    
    x=0;
    for (i=0; i<5; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    
    if (x>=4) {
        return 1;
    }
    
    if (x<=4) {
        return 0;
    }
}",0
jcha513,1696944206,3,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
    int i;
    int x;
    
    x=0;
    for (i=0; i<4; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    
    if (x>=3) {
        return 1;
    }
    
    return 0
}",0
jcha513,1696944215,4,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
    int i;
    int x;
    
    x=0;
    for (i=0; i<4; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    
    if (x>=3) {
        return 1;
    }
    
    return 0;
}",0
jcha513,1696944268,5,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
    int i;
    int x;
    
    x=0;
    for (i=0; i<4; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    
    if (x=3) {
        return 1;
    }
    
    return 0;
}",0
jcha513,1696944276,6,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
    int i;
    int x;
    
    x=0;
    for (i=0; i<4; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    
    if (x==3) {
        return 1;
    }
    
    return 0;
}",1
jcha574,1696976869,1,"#include <stdio.h>
#include <stdbool.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count =0;
    for(int i=0;i<5;i++){
        if(word1[i]!=word2[i]){
            count = count +1;
        }
    }
    if (count==1){
        return true;
    }
    else {
        return false;
    }
}",0
jcha574,1696976968,2,"#include <stdio.h>
#include <stdbool.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int count =0;
    for(i=0;i<5;i++){
        if(word1[i]!=word2[i]){
            count = count +1;
        }
    }
    if (count==1){
        return true;
    }
    else {
        return false;
    }
}",1
jcha972,1697336668,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int i = 0;
    int num = WORD_LENGTH;
    int counter = 0;
    while (i < num) {
        
        if (word1[i] != word2[i]) {
            counter++;
        }
        
        i++;
    }
    
    if (counter == 1) {
        return 1;
    }
    return 0;
    
}",1
jche456,1697437009,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int difference = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference != 1) {
		return 0;
	}
	else {
		return 1;
	}
}",1
jchi648,1697367074,1,"int OneLetterDifference(char *word1, char *word2)
{
	int counter = 0;
	for (int i=0; i<WORD_LENGTH;i++) {
		if (word1[i] != word2[i]) {
			counter++;
		}
	}
	if (counter > 1) {
		return 0;
	} else {
		return 1;
	}
}",0
jchi648,1697367544,2,"int OneLetterDifference(char *word1, char *word2)
{
	int same, counter = 0;
	for (int i=0; i<5;i++) {
		if (word1[i] != word2[i]) {
			counter++;
		}
		if (word1[i+1] == word2[i]) {
		    same++;
		}
	}
	
	if (same > 2) {
	    return 0;
	}
	
	if (counter >= 1) {
		return 0;
	} else {
		return 1;
	}
}
",0
jchi648,1697367972,3,"int OneLetterDifference(char *word1, char *word2)
{
	int same, counter = 0;
	for (int i=0; i<WORD_LENGTH;i++) {
		if (word1[i] != word2[i]) {
			counter++;
		}
		
		if (i<3) {
		    if (word1[i] == word2[i+1]) {
		    same++;
		    }   
		}
		
	}
	
	if (same >= 3) {
	    return 0;
	}
	if (counter > 1) {
		return 0;
	} else {
		return 1;
	}
}
",0
jchi648,1697368256,4,"int OneLetterDifference(char *word1, char *word2)
{
	int same, counter = 0;
	for (int i=0; i<WORD_LENGTH;i++) {
		
		if (word1[i] != word2[i]) {
			counter++;
		}
		
	}

	if (counter != 1) {
		return 0;
	} else {
		return 1;
	}
}
",0
jchi648,1697368265,5,"int OneLetterDifference(char *word1, char *word2)
{
	int counter = 0;
	for (int i=0; i<WORD_LENGTH;i++) {
		
		if (word1[i] != word2[i]) {
			counter++;
		}
		
	}

	if (counter != 1) {
		return 0;
	} else {
		return 1;
	}
}
",1
jchu579,1697149932,1,"int OneLetterDifference(char* word1, char* word2) {
	int diff = 0;
	for (int i = 0; i < WORD_LENGTH - 1; i++)
	{
		if (word1[i] != word2[i])
		{
			diff++;
		}
	}
	if (diff == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
jcla431,1697179175,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] != word2[i])
		{
			count = count + 1;
		}

		if (count > 1)
		{
			return 0;
		}
	}
	return 1;
}",0
jcla431,1697179949,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] != word2[i])
		{
			count = count + 1;
		}
	}

	if (count == 1)
	{
		return 1;
	}
	
	else
	{
		return 0;
	}
}",1
jcla755,1696848594,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
	int i = 0;
	for(i = 0; i < WORD_LENGTH; i++)
	{
		if(word1[i] != word2[i])
		{
			difference++;
		}
	}

	if(difference != 1)
	{
		return 0;
	}
	else
	{
		return difference;
	}

}",1
jdal353,1697439090,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int diff = 0;

	for (i = 0; i < WORD_LENGTH; i++) {

		if (word1[i] != word2[i]) {
			diff++;
		}

	}

	if (diff == 1) {
		return 1;
	} 
		
	else { 
		return 0;
	}

}",1
jdea126,1697164970,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int temp = 0;

	while (i < 5) {
		if (word1[i] != word2[i]) {
			temp++;
			if (temp > 1) {
				return 0;
			}
		}
		i++;
	}
	return 1;
}",0
jdea126,1697165094,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int temp = 0;

	while (i < 4) {
		if (word1[i] != word2[i]) {
			temp++;
			if (temp > 1) {
				return 0;
			}
		}
		i++;
	}
	return 1;
}",0
jdea126,1697165240,3,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int temp = 0;

	while (i < 5) {
		if (word1[i] != word2[i]) {
			temp++;
		}
		i++;
	}
	if (temp > 1 || temp == 0) {
		return 0;
	}
	return 1;
}",1
jdu853,1696930018,1,"int OneLetterDifference(char *word1, char *word2){
	int count = 0;

	for (int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			count++;
		}
	}
    if (count == 1){
        return 1;
    }
	return 0;
}",1
jear460,1697359420,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int numdif = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            numdif++;
            if (numdif > 1) {
                 return 0; 
        }
    }

    return (numdif == 1); 
}",0
jear460,1697359455,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int numdif = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            numdif++;
            if (numdif > 1) {
                return 0; 
            }
        }
    }

    return (numdif == 1); 
}",1
jfen705,1697408534,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int a = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			a++;
		}
	}
	return (a == 3);
}",1
jfet156,1697145289,1,"int OneLetterDifference(char *word1, char *word2)
{

    int count = 0;;
    int i = 0; 
    
    while (word1[i] != '\0') {
        if (word1[i] !=  word2[i]) {
            count++;
        }
        
        i++;
    }

        if (count==1) {
            return 1;
        } else {
            return 0;
        }

}",1
jgeo610,1697265570,1,"int OneLetterDifference(char *word1, char *word2)
{

	int i;
	int count = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	return count == 1;
}",1
jgol495,1696983146,1,"#include <stdbool.h>
int OneLetterDifference(char *word1, char *word2){
    int diffs = 0;
    for(int i = 0; i < WORD_LENGTH-1; i++){
        if(word1[i] != word2[i]){
            diffs++;
        }
    }
    return diffs == 1;
}",1
jhor229,1697442741,1,"#include <stdio.h>

int OneLetterDifference(char word1, char word2) 
{
    int diffCount = 0;

    for (int i = 0; i < 4; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            diffCount++;
        }
        if (diffCount >= 1) 
        {
            return 1;
        }
    }
    return 0;
}",0
jhor229,1697442757,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) 
{
    int diffCount = 0;

    for (int i = 0; i < 4; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            diffCount++;
        }
        if (diffCount >= 1) 
        {
            return 1;
        }
    }
    return 0;
}",0
jhor229,1697442820,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) 
{
    int diffCount = 0;

    for (int i = 0; i < 4; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            diffCount++;
        }
        if (diffCount > 1) 
        {
            return 1;
        }
    }
    return 0;
}",0
jhor229,1697443015,4,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) 
{
    int diffCount = 0;

    for (int i = 0; i < 4; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            diffCount++;
        }
    }
    
    if (diffCount == 1)
    {
        return 1
    }
    else
    {
         return 0;   
    }
}",0
jhor229,1697443021,5,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) 
{
    int diffCount = 0;

    for (int i = 0; i < 4; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            diffCount++;
        }
    }
    
    if (diffCount == 1)
    {
        return 1;
    }
    else
    {
         return 0;   
    }
}",1
jhwa027,1697428315,1,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int difference_count = 0;

    for(int i = 0; i < WORD_LENGTH - 1; i++) { // -1 to avoid the null terminator
        if (word1[i] != word2[i]) {
            difference_count++;
        }

        // If more than 1 difference is found, return false (0)
        if (difference_count > 1) {
            return 0;
        }
    }

    // Return true (1) only if there's exactly 1 difference
    return difference_count == 1;
}
",1
jjeo627,1697422452,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count;
    count = 0;
    int i;
    for(i=0; i<4; i++){
        if(word1[i] == word2[i]){
            count = count + 0;
        }
        else{
            count++;
        }
        
    }
    return count;
    
}",0
jjeo627,1697422523,2,"int OneLetterDifference(char *word1, char *word2)
{
    int count;
    count = 0;
    int i;
    for(i=0; i<4; i++){
        if(word1[i] == word2[i]){
            count = count + 0;
        }
        else{
            count = 1;
        }
        
    }
    return count;
    
}",0
jjeo627,1697422777,3,"int OneLetterDifference(char *word1, char *word2)
{
    int count;
    count = 0;
    int i;
    for(i=0; i<4; i++){
        if(word1[i] != word2[i]){
            count = 1;
        }
        else{
            
        }
        
    }
    return count;
    
}",0
jjeo627,1697423037,4,"int OneLetterDifference(char *word1, char *word2)
{
    int count;
    count = 0;
    int i;
    for(i=0; i<4; i++){
        if(word1[i] != word2[i]){
            count++;
        }
        else{
            
        }
        
    }
    if(count >= 2){
        count = 0;
    }
    else{
        
    }
    return count;
    
}",1
jjon350,1697343977,1,"int OneLetterDifference(char *word1, char *word2)
{   //This function will compare two string to see if there are any differences within the characters
	int flag=0;
	while (*word1 != '\0' && *word2 != '\0'){
	      if (*word1 != *word2)
		   flag=1;
	    } 
	    word1++;
		word2++;

	return flag==0 && (*word1 == '\0' && *word2 == '\0');
}",0
jjon350,1697344095,2,"int OneLetterDifference(char *word1, char *word2)
{   //This function will compare two string to see if there are any differences within the characters
	int flag=0;
	while (*word1 != '\0' && *word2 != '\0'){
	      if (*word1 != *word2){
		   flag=1;
	    } 
	    word1++;
		word2++;
    }
	return flag==0 && (*word1 == '\0' && *word2 == '\0');
}",0
jjon350,1697346473,3,"int OneLetterDifference(char *word1, char *word2)
{  int d=0;
	
	for (int i=0; i < 4; i++){
		if (word1[i] != word2[2]){
        d++;
		}
	}
	return (d==1);
}",0
jjon350,1697346582,4,"int OneLetterDifference(char *word1, char *word2)
{  int d=0;
	
	for (int i=0; i < 4; i++){
		if (word1[i] != word2[i]){
        d++;
		}
	}
	return (d==1);
}",1
jjos057,1697282325,1,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {

    int diffs = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffs++;
        }
    }
        if (diffs == 1) {
            return 1;
        }
        else {
            return 0;
        }

}",1
jjun879,1697021397,1,"int OneLetterDifference(char *word1, char *word2)
{
	int different = 0;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			different++;
			if (different > 1) {
				return 0;
			}
		}
	}
}",0
jjun879,1697021864,2,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2)
{
	int different = 0;
	int WORD_LENGTH = 5;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			different++;
			if (different > 1) {
				return 0;
			}
		}
	}
}",0
jjun879,1697161395,3,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2)
{
	int difference = 0;
	int i = 0;

	while ((word1[i] != '\0') && (word2[i] != '\0')) {
		if (word1[i] != word2[i]) {
			difference++;
		}
		i++;
		if (difference > 1) {
			return 0;
		}
	}

	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
jkah253,1696982750,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;

    for (int i = 0; i<WORD_LENGTH-1; i++) {
        // iterate through words, length-1 to not check \0 chxr
        if (word1[i] != word2[i]) {
            // if chxrs diff, add 1 to count
            count++;
        }
    }
    if (count == 1) { 
        return 1;
    }

    return 0;

}",1
jkan172,1696835841,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;

	for (i = 0; i <= 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	} else {
		return 0;
	}

}",1
jkim828,1696943127,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
    int i;
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            difference++;
        }
    }

    if (difference == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
jkim837,1697127973,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	int i = 0;

	while (word1[i] != '\0' && word2[i] != '\0')
	{
		if (word1[i] != word2[i])
		{
			count = count + 1;
		}
		i++;
	}

	if (count == 1)
	{
		return 1;
	}
	else
	{
		return -1;
	}

}",0
jkim837,1697128056,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	int i = 0;

	while (word1[i] != '\0' && word2[i] != '\0')
	{
		if (word1[i] != word2[i])
		{
			count = count + 1;
		}
		i++;
	}

	if (count == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}

}",1
jkim933,1697404137,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    int i = 0;
    
    while (i < WORD_LENGTH) {
        if (word1[i] != word2[i]) {
            count++;
        }
        i++;
    }
    
    if (count == 1) {
        return 1;
    }
    else {
        return 0;
    }
}",1
jkim960,1696953882,1,"int OneLetterDifference(char* word1, char* word2)
{
	int differences = 0;

	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			differences++;
		}
	}

	return differences == 1;
}",1
jlah077,1697170553,1,"int OneLetterDifference(char *word1, char *word2)
{
    int inequalities = 0;

    for (int i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i])
        {
            inequalities++;
        }
    }
    if (inequalities == 1)
    {
        return 1;
    }
    return 0;
}",1
jlal056,1696991949,1,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{

	if ((word1[0] != word2[0])&&(word1[1] == word2[1])&&(word1[2] == word2[2])&&(word1[3] == word2[3])){
		return 1;
	} else if ((word1[0] == word2[0])&&(word1[1] != word2[1])&&(word1[2] == word2[2])&&(word1[3] == word2[3])) {
		return 1;
	} else if ((word1[0] == word2[0])&&(word1[1] == word2[1])&&(word1[2] != word2[2])&&(word1[3] == word2[3])) {
		return 1;
	} else if ((word1[0] == word2[0])&&(word1[1] == word2[1])&&(word1[2] == word2[2])&&(word1[3] != word2[3])) {
		return 1;
	}

	return 0;

}",1
jlew699,1697189107,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 4
int
OneLetterDifference (char *word1, char *word2)
{
    int count = 0;
    for(int i = 0; i < 4; i++)
    {
        if(word1[i] != word2[i])
        {
            count++;
        }
    }
    if(count != 1)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",0
jlew699,1697189126,2,"#include <stdio.h>
#include <string.h>

int
OneLetterDifference (char *word1, char *word2)
{
    int count = 0;
    for(int i = 0; i < 4; i++)
    {
        if(word1[i] != word2[i])
        {
            count++;
        }
    }
    if(count != 1)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
",1
jli463,1696824550,1,"#include <stdio.h>
#define WORD_LENGTH 4

int OneLetterDifference(char* word1, char* word2) {

	for (int i = 0; i < 4;i++) {
		if (word1[i] != word2[i]) {
			return 1;
		}
	}
	return 0;
}",0
jli463,1696824576,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2) {

	for (int i = 0; i < 4;i++) {
		if (word1[i] != word2[i]) {
			return 1;
		}
	}
	return 0;
}",0
jli463,1696825119,3,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2) {

	int count = 0;

	for (int i = 0; i < 4;i++) {
		if (word1[i] != word2[i]) {
			count += 1;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
jli876,1696810666,1,"int OneLetterDifference(char *word1, char *word2) {
    int num_differences = 0;
    for (int i = 0; i < 4; i++) word1[i] != word2[i] ? num_differences += 1 : 0;
    return num_differences == 1 ? 1 : 0;
}",1
jli917,1697366132,1,"int OneLetterDifference (char *word1, char *word2)
int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;

            
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return differences == 1; 
}
",0
jli917,1697366294,2,"int OneLetterDifference (char *word1, char *word2){
int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;

            
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return differences == 1; 
}
",1
jlia486,1697101186,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
  int different = 0; // variable for number of different letters, should be equal to 1
  
  for (int i = 0; i < WORD_LENGTH - 1; i++) { // iterate through the characters
  
    if (word1[i] != word2[i]) { // Add one to different if the characters at index i are different.
      different++;
    }
  }
  return different == 1;
}",1
jlia948,1697373671,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }
}",0
jlia948,1697373715,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }
}",0
jlia948,1697374068,3,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }
    if (differences == 1) {
        return 1;
    }
    return 0;
}",1
jliu295,1697246890,1,"int OneLetterDifference(char *word1, char *word2)
{
    int wordDifference = 0;
    for(int i = 0; i < 4; i++){
        for(int j = 0; j , 4; i++)
        if(word1[i] != word2[j]){
            wordDifference++;
        }
    }
    if(wordDifference != 1){
       return word1[0] != word2[0]; 
    }
	// You should correctly complete this function defintion
	else
	return word1[0] == word2[0];
}",0
jliu295,1697247101,2,"int OneLetterDifference(char *word1, char *word2)
{
    int wordDifference = 0;
    for(int i = 0; i < 4; i++){
        for(int j = 0; j < 4; j++)
        if(word1[i] != word2[j]){
            wordDifference++;
        }
    }
    if(wordDifference != 1){
       return word1[0] != word2[0]; 
    }
	// You should correctly complete this function defintion
	else{
	return word1[0] == word2[0];
	}
}",0
jliu295,1697247303,3,"int OneLetterDifference(char *word1, char *word2)
{
    int wordDifference = 0;
    for(int i = 0; i < 5; i++){
        for(int j = 0; j < 5; j++)
        if(word1[i] != word2[j]){
            wordDifference++;
        }
    }
    if(wordDifference != 1){
       return word1[0] != word2[0]; 
    }
	// You should correctly complete this function defintion
	else{
	return word1[0] == word2[0];
	}
}",0
jliu295,1697248178,4,"int OneLetterDifference(char *word1, char *word2)
{
    int wordDifference = 0;
    for(int i = 0; i < WORD_LENGTH; i++){
        if(word1[i] != word2[i]){
            wordDifference++;
        }
    }
    if(wordDifference == 1){
       return true; 
    }
	// You should correctly complete this function defintion
	else{
	return false;
	}
}",1
jliu778,1696926241,1,"int OneLetterDifference(char *word1, char *word2)
{
    int diff=0;
    int length;
    length=strlen(word1);
    for (int i = 0; i < length; i++)
    {
        if (word1[i]!=word2[i])
        {
            diff++;
        }
        
    }
    if (diff==1)
    {
        return(1);
    }
    return(0);
}",1
jluo379,1697445070,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0, count = 0;
	while (i != WORD_LENGTH){
		if (word1[i] != word2[i]) {
			count ++;
		} else if (word1[i] == '/0') {
			break; 
			}
			i ++;
		}
	}
	// You should correctly complete this function defintion
	if (count == 1) {
		return word1[0] == word2[0];
		} else if (count > 1) {
			return 0;
		}
	}
}",0
jluo379,1697445123,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0, count = 0;
	while (i != WORD_LENGTH){
		if (word1[i] != word2[i]) {
			count ++;
		} else if (word1[i] == '\0') {
			break; 
			}
			i ++;
		}
	}
	// You should correctly complete this function defintion
	if (count == 1) {
		return word1[0] == word2[0];
		} else if (count > 1) {
			return 0;
		}
	}
}",0
jluo379,1697445293,3,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0, count = 0;
	while (i < WORD_LENGTH){
		if (word1[i] != word2[i]) {
			count ++;
		} else if (word1[i] == '\0') {
			break; 
		}
			i ++;
	}

	// You should correctly complete this function defintion
	if (count == 1) {
		return word1[0] == word2[0];
		} else if (count > 1) {
			return 0;
		}
}",0
jluo379,1697445764,4,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0, count = 0;
	while (i < WORD_LENGTH){
		if (word1[i] != word2[i]) {
			count ++;
		} else if (word1[i] == '\0') {
			break; 
		}
			i ++;
	}

	// You should correctly complete this function defintion
	int result;
	if (count == 1) {
		result = 1;
		} else if (count > 1) {
			result = 0;
		}
		return result; 
}",0
jluo379,1697446288,5,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0, count = 0;
	while (i < WORD_LENGTH){
		if (word1[i] != word2[i]) {
			count ++;
		} else if (word1[i] == '\0') {
			break; 
		}
			i ++;
	}

	// You should correctly complete this function defintion
	if (count == 1) {
		return 1;
		} else {
			return 0;
		}
}",1
jmak320,1697443823,1,"int OneLetterDifference(char *word1, char *word2)
{
	int counter = 0;
	int length = streln(word1);
	for (int i = 0; i < length; i++ ) {
		if (word1[i] != word2[i])
			counter++;
	}
	if (counter == 1)
		return 1;
	else 
		return 0;
}",0
jmak320,1697443845,2,"int OneLetterDifference(char *word1, char *word2)
{
	int counter = 0;
	int length = strlen(word1);
	for (int i = 0; i < length; i++ ) {
		if (word1[i] != word2[i])
			counter++;
	}
	if (counter == 1)
		return 1;
	else 
		return 0;
}",1
jmat941,1697451230,1,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;
    int WORD_LENGTH;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++; 
            if (diffCount > 1) {
                return 0;  
            }
        }
    }
    
    return (diffCount == 1); 
}",0
jmat941,1697451292,2,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++; 
            if (diffCount > 1) {
                return 0;  
            }
        }
    }
    
    return (diffCount == 1); 
}",1
jmei608,1697417567,1,"int OneLetterDifference(char *word1, char *word2) {
	int i, diffcounter;
	i = 0;
	diffcounter = 0;
	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			diffcounter++;
		}
		i++;
	}
	if (diffcounter > 1) {
		return 0;
	}else {
		return 1;
	}
}
",0
jmei608,1697417814,2,"int OneLetterDifference(char *word1, char *word2) {
	int i, diffcounter,samecounter;
	i = 0;
	diffcounter = 0;
	samecounter = 0;
	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			diffcounter++;
		}else {
			samecounter++;
		}
		i++;
	}
	if (diffcounter > 1 || samecounter == 4) {
		return 0;
	}else {
		return 1;
	}
}",1
jmil737,1696906414,1,"
#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    
int i;
int diff = 0;

for (i = 0; i < 4; i++){
    
    if (word1[i] == word2[i]){
        diff++;
    }
    else{
        
    }
    
}

if (diff == 3){
    return 1;
}
else {
    return 0;
}
	
	
}
",1
jmul290,1697164342,1,"int OneLetterDifference(char *word1, char *word2)
{
    int a = 0;
    int i = 0;
	while(word1[i] != '\0'){
	    if(word1[i] == word2[i]){
	        a = a + 1;
	        i++;
	    }
	    else{
	        i++;
	    }
	}
	return(a == 3);
}",1
joka775,1697452525,1,"int OneLetterDifference(char *word1, char *word2)
{
		int count = 0;
		for (int i = 0; i < 4; i++) {
			if (word1[i] != word2[i]) {
				count++;
			}

			if (count > 1) {
				return 0;
			}
		}
	return word1[0] == word2[0];
}",0
joka775,1697452564,2,"int OneLetterDifference(char *word1, char *word2)
{
		int count = 0;
		for (int i = 0; i < 4; i++) {
			if (word1[i] != word2[i]) {
				count++;
			}

			if (count > 1) {
				return 0;
			}
		}
	return count == 1;
}",1
jpar523,1697530423,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
    
    while (*word1 != '\0' && *word2 != '\0') {
        if (*word1 != *word2) {
            difference++;
        }
        word1++;
        word2++;
    
    }
    
    return difference == 1;

}",1
jpar611,1696925298,1,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

bool OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int diff_count = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {  // -1 to exclude the null terminating character
        if (word1[i] != word2[i]) {
            diff_count++;
        }
        
        if (diff_count > 1) {
            return false;
        }
    }
    
    return diff_count == 1;
}
",1
jpat915,1697143260,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int length = strlen(word1);
    int i;
    int check = 0;
    
    for (i = 0; i < length; i++) {
        if (word1[i] != word2[i]) {
            check++;
        }
    }
        if (check == 1) {
            return check; 
        }
          else {
              return 0;
    }
}",1
jpau410,1696893731,1,"int OneLetterDifference(char *word1, char *word2)
{
    int valid = 0;
    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            valid++;
        }
    }
    if (valid == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
jpaz106,1697426516,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int diffCounter = 0;
    
    int length1 = strlen(word1);
    int length2 = strlen(word2);
    
    if(length1 != length2) {
        return 0;
    }
    
    for (i = 0; i < length1; i++) {
        if(word1[i] != word2[i]) {
            diffCounter++;
        }
    }
    
    if (diffCounter == 1) {
        return 1;
    }
    
	return 0;
}",1
jpud993,1697437952,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

}
",1
jros811,1697260365,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < 4; i++) {
       if (word1[i] != word2[i]) {
           count++;
       } 
    }
    
    if (count == 1) {
        return 1;
    }
    
    return 0;
}",1
jsan813,1697378093,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion

	int count = 0;
	int i = 0;
	while (word1[i] != '/0') {
		if (word1[i] == word2[i]) {
			count++;
		}
		i++;
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",0
jsan813,1697378633,2,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion

	int count = 0;
	int i = 0;
	while (word1[i] != '\0') {
		if (word1[i] == word2[i]) {
			count++;
		}
		i++;
	}

	if (count == 3) {
		return 1;
	}
	else {
		return 0;
	}

}",1
jsch842,1697349156,1,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2)
{
int differences = 0;
for (i = 0, i <5; i++)
{
    if (word1[i] != word2[i])
    {
        differences++;
        if (differences > 1)
        {
            return 0;
        }
    
    }
}
return differences == 1;
}",0
jsch842,1697349175,2,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2)
{
int differences = 0;
for (int i = 0; i <5; i++)
{
    if (word1[i] != word2[i])
    {
        differences++;
        if (differences > 1)
        {
            return 0;
        }
    
    }
}
return differences == 1;
}",1
jshe464,1697373823,1,"int OneLetterDifference(char* word1, char* word2)
{
 int a=0;
 for (int i = 0; i < 4; i++)
 {
     if (word1[i]!=word2[i])
  {
	  a++;
  }
    }
 return (a == 1);
}",1
jshi444,1696821284,1,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int j = 0;
	int total = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[j]) {
			total++;
		}
		j++;
	}
	
	if (total = 1) {
		return 0;
	}
	else {
		return 1;
	}
		
}
",0
jshi444,1696821344,2,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int j = 0;
	int total = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[j]) {
			total++;
		}
		j++;
	}
	
	if (total == 1) {
		return 0;
	}
	else {
		return 1;
	}
		
}
",0
jshi444,1696821478,3,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int j = 0;
	int total = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[j]) {
			total++;
		}
		j++;
	}
	
	if (total == 1) {
		return 1;
	}
	else {
		return 0;
	}
		
}
",1
jshr431,1697341860,1,"int OneLetterDifference(char *word1, char *word2)
{
	int same = 0;
	int i;

		for (i = 0; i < WORD_LENGTH; i++) {
			if (word1[i] == word2[i]) {
				same++;
			}
		}
	if (same == 4) {
		return 1;
	}
	else {
		return 0;
	}

	// You should correctly complete this function defintion
}",1
jsim418,1696890413,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differ = 0;
    int i = 0;
    
    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            differ += 1;
        }
        i++;
    }
    
    return differ;
}",0
jsim418,1696890506,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differ = 0;
    int i = 0;
    
    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            differ += 1;
        }
        i++;
    }
    
    if (differ != 1) {
        differ = 0;
    }
    
    return differ;
}


",1
jsim643,1697249153,1,"#include <stdio.h>

// Define the constant for word length
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int differCount = 0; // Initialises the difference count as zero
    int i = 0; 

    while (i < WORD_LENGTH - 1) {
        if (word1[i] != word2[i]) {
            differCount++;
        }

        if (differCount > 1) {
            return 0; // Meaning the words do not differ by one character
        }

        i++;
    }

    return differCount == 1;
}",1
jsta466,1697102877,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i,j;
	int diff = 0;
	int letter_place = 0;
	for (i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]){
			diff = 1;
		}
		letter_place++;
	}
	return diff;
}",0
jsta466,1697102910,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int diff = 0;
	for (i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]){
			diff = 1;
		}
	}
	return diff;
}",0
jsta466,1697103291,3,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int diff = 0;
	int num_diff_letters = 0;
	for (i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]){
			diff = 1;
			num_diff_letters++;
		}
		if (num_diff_letters > 1){
		    diff = 0;
		    break;
		}
	}
	return diff;
}",1
jsun284,1697245921,1,"int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
    }
    if (diff == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
jvil318,1697319732,1,"#include<stdio.h>
#include<string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int char_difference = 0;
    int i;
	
	for (i = 0; i< WORD_LENGTH; i++) {
	    if (word1[i] != word2[i] {
	        char_difference += 1;
	    }
	}

	if(difference==1){
	    return 1;
	}
	else{
	    return 0;
	}
}",0
jvil318,1697319776,2,"#include<stdio.h>
#include<string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int char_difference = 0;
    int i;
	
	for (i = 0; i< WORD_LENGTH; i++) {
	    if (word1[i] != word2[i] {
	        char_difference += 1;
	    }
	}

	if(difference==1){
	    return 1;
	}
	else{
	    return 0;
	}
}",0
jvil318,1697319974,3,"#include<stdio.h>
#include<string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int char_difference = 0;
    int i;
	
	for (i = 0; i< WORD_LENGTH; i++) {
	    if (word1[i] != word2[i] {
	        char_difference += 1;
	    }
	}

	if(char_difference==1){
	    return 1;
	}
	else{
	    return 0;
	}
}",0
jvil318,1697320083,4,"#include<stdio.h>
#include<string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int char_difference = 0;
    int i;
	
	for (i = 0; i< WORD_LENGTH; i++) {
	    if (word1[i] != word2[i]) {
	        char_difference += 1;
	    }
	}

	if(char_difference==1){
	    return 1;
	}
	else{
	    return 0;
	}
}",1
jwed606,1696826994,1,"
int OneLetterDifference(char* word1, char* word2)
{
    int num_different = 0;

    for (int i = 0; i < WORD_LENGTH; ++i)
    {
        num_different += word1[i] != word2[i];
    }

    return num_different == 1;
}
",1
jwil813,1697013994,1,"int OneLetterDifference(char* word1, char* word2)
{
	int ltrdif = 0;
	for (int i = 0; i < 4; i++)
	{
		if (word1[i] == word2[i]) {
			ltrdif++;

		}

	}
	if (ltrdif = 1)

		return 1;

}",0
jwil813,1697014353,2,"int OneLetterDifference(char* word1, char* word2)
	{
		int ltrdif = 0;
		for (int i = 0; i < 4; i++)
		{
			if (word1[i] != word2[i]) {
				ltrdif++;

			}

		}
		if (ltrdif == 1)

			return 1;
		else
			return 0;

	}",1
jwon248,1696813830,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	for (i = 0; i < 4; i++)
	{
		if (word1[i] == word2[i])
		{
			count += 1;
		}
	}
	if (count == 3)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
jwon253,1697347919,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int differentCount = 0;

    // Check if there is a difference in words, if so add a counter for each different character
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differentCount++;
        }
    }

    // Returns 1 if there is one character difference
    if (differentCount == 1) {
        return 1;
    }
    else {
        return 0;
    }
}",1
jwon323,1697147765,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int pos = 0;
    
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            pos++;
            printf(""%d\n"", pos);
        }
    }
    
    if (pos == 1) {
        return 1;
    }
    
    return 0;
}",0
jwon323,1697147787,2,"int OneLetterDifference(char *word1, char *word2) 
{
    int pos = 0;
    
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            pos++;
        }
    }
    
    if (pos == 1) {
        return 1;
    }
    
    return 0;
}",1
jyan420,1696900935,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int differentCharacterFound = 0;
	int isValid = 1;
	while (i < WORD_LENGTH) {
		if (word1[i] != word2[i]) {
			if (differentCharacterFound == 0) {
				differentCharacterFound = 1;
			} else {
				isValid = 0;
			}
		}
		i++;
	}
	return isValid;
}",0
jyan420,1696901373,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int differentCharactersFound = 0;
	while (i < WORD_LENGTH) {
		if (word1[i] != word2[i]) {
			differentCharactersFound += 1;
		}
		i++;
	}
	
	if (differentCharactersFound == 1) {
	   return 1;
	} else {
	   return 0;
	}
}",1
jyua529,1697171301,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int same = 0;
    int diff = 0; 

    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]) {
            same++;
        } else {
            diff++;
        }
    }
    if (same == 4) {
        return (1);
    } else {
        return (0);
    }
}",0
jyua529,1697171464,2,"int OneLetterDifference(char *word1, char *word2) 
{
    int same = 0;
    int diff = 0; 

    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]) {
            same++;
        } else {
            diff++;
        }
    }
    if (same == 3) {
        return (1);
    } else {
        return (0);
    }
}",1
jzho786,1697261816,1,"int OneLetterDifference(char *word1, char *word2){
    int i = 0;
    int sum = 0; //sum of number of letters that are different 
    
    while (i < WORD_LENGTH){
        if (word1[i] != word2[i]){
            sum++;
            
        }
        i++;
    }
    
    if (sum == 1){
    return 1;
    }
    
    else{
        return 0;
    }
    
}
",1
kabb319,1697060564,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0; 
    for (int i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    if (count == 1){
        return 1;
    }
    else{
        return 0;
    }
}",1
kahk161,1696925741,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
kbar402,1697447121,1,"int OneLetterDifference(char *word1, char *word2)
{

    int a = 0;
    
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word2[WORD_LENGTH - i - 1] == word1[WORD_LENGTH - i - 1]) {
            a++;
        } 
    }

    if (a == (WORD_LENGTH - 1)){
        return 1;
    }
    else {
        return 0;
    }
}",1
kbha969,1696992319,1,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1,char *word2) {
    
    int i,count = 0;
    for (i=0; i<WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count += 1;
        }
        if (count > 1) {
            return 0;
        }
        
    }
    return 1;
}",0
kbha969,1696992533,2,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1,char *word2) {
    
    int i,count = 0;
    for (i=0; i<WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count += 1;
        }
        if (count == 1) {
            return 1;
        }
        
    }
    return 0;
}
",0
kbha969,1696992823,3,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1,char *word2) {
    
    int i,count = 0;
    for (i=0; i<WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count += 1;
        }
    }
    if (count == 1) {
            return 1;
        }
    return 0;
}",1
kcao565,1697439089,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return differences == 1;
}",1
kcao657,1697207915,1,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int i;
	for (i = 0; word1[i] != '\0'; i++) {
		if (word1[i] != word2[i]) {
			return 1;
		}
	}

	return word1[0] == word2[0];
}",0
kcao657,1697208621,2,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int i;
	int j = 0;
	for (i = 0; word1[i] != '\0'; i++) {
		if (word1[i] != word2[i]) {
			j ++;
		}

	}
	if (j == 1) {
		return 1;
	}
	else
		return 0;
}",1
kfep063,1697442466,1,"int OneLetterDifference(char *word1, char *word2)
{
    
    int j ;
    int count = 0;
    
    

        for(j = 0; j < 5; j++){
            if(word1[j] == word2[j]) {
                count++;  
            }
        }
            
            if(count == 4){
            return 1;
            }
            else {
                return 0;
            }
            
            
    
}",1
kfer833,1697411416,1,"int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }

    return 0;
}
",0
kfer833,1697411608,2,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; ++i) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; // More than one difference, return false
            }
        }
    }
    return differences == 1;
}",1
kgra470,1696931496,1,"int OneLetterDifference(char *word1, char *word2){
    int length =4,difference=0;
    for(int i=0;i<length;i++){
        if(word1[i]!=word2[i]){
            difference++;
        }
    }
    if(difference>1){
        return 0;
    }
    else if(difference==1){
        return 1;
    }
}
",0
kgra470,1696931571,2,"int OneLetterDifference(char *word1, char *word2){
    int length =4,difference=0;
    for(int i=0;i<length;i++){
        if(word1[i]!=word2[i]){
            difference++;
        }
    }
    if(difference>1){
        return 0;
    }
    if(difference==1){
        return 1;
    }
    return 0;
}",1
khew624,1697175843,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2) {
    int difference = 0; // counter for differences

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1) {
                return 0; // If there is more than one difference, retirn false
            }
        }
    }

    return difference == 1; // Else true
}",1
kjoe685,1697285269,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differences = 0;
	int letter;
	for (letter = 0; letter < WORD_LENGTH; letter++) {
		if (word1[letter] != word2[letter]) {
			differences++;
		}
	}
	return differences == 1;
}",1
kjun638,1697173334,1,"int OneLetterDifference(char *word1, char *word2)
{
	int different = 0; 
	
	for (int i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			different++;

			if (different > 1) {
				return 0;
			}
		}
	}
	return different == 1; 
}",1
kkha484,1697278543,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    int WORD_LENGTH = strlen(word1);

    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count = count + 1;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}
",0
kkha484,1697278582,2,"#define WORD_LENGTH 5
#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    int WORD_LENGTH = strlen(word1);

    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count = count + 1;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}
",0
kkha484,1697278691,3,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count = count + 1;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}

",1
kkim985,1696945515,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	int i;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diff++;
			if (diff > 1) {
				return 0;
			}
		}
	}
	
	return 1;
}",0
kkim985,1696945755,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	int i;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diff++;
			if (diff == 1) {
				return 1;
			}
		}
	}
	
	return 0;
}",0
kkim985,1696945951,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	int x = 0;
	int i;

	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			x++;
			}
		}
	if (x == 3) {
		return 1;
	}
	
	return 0;
}",1
klam376,1697191032,1,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for (int i = 0; i<WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            diff++;
            if (diff>1) {
                return 0;
            }
        }
    }
    return 1;
}",0
klam376,1697191200,2,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for (int i = 0; i<WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            diff++;  
        }
    }
    if (diff != 1)  {
        return 0;
    } else  {
        return 1;
    }
}",1
kluc619,1697370097,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; // More than one difference found, return false (0)
            }
        }
    }
    return differences == 1; // Return true (1) if exactly one difference is found
}
",1
kmag441,1697280956,1,"#include <stdio.h>
#include <string.h>
int OneLetterDifference(char *word1, char *word2){
    int i;
    int count = 0;
    for (i = 0; i < WORD_LENGTH;i++){
        if(word1[i] != word2[i]){
        count ++;
        if(count > 1){
        return 0;
        }
    }
    }
    return count;
}",1
kmal768,1697156580,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, counter;

	counter = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			counter++;
		}
	}
	if (counter == 1){
		return 1;
	}
	else {
		return 0;
	}
}",1
kmck133,1697301960,1,"int OneLetterDifference(char* word1, char* word2)
{
	int numDiff = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			numDiff++;
		}
	}
	return (numDiff == 1);
}",1
kmcv530,1697146296,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int counter = 0;
	while(word1[i] != '\0'){
		if(word1[i] != word2[i]){
			counter ++;
		}
        i++;
	}
	if(counter == 1){
		return 1;
		
	}
	else {
		return 0;
	}

}",1
kng361,1697434463,1,"#include <stdio.h> 
#include <stdbool.h> 

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return false; 
            }
        }
    }

    return differenceCount == 1;
}",1
kpat303,1696810753,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0; 
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }
    

    return differences == 1;
}",1
kpau893,1697191423,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;  
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            count++;  
            if (count > 1) {
                return 0; 
            }
        }
    }
    
    return count = 1;  
}",0
kpau893,1697191564,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;  
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            count++;  
            if (count > 1) {
                return 0; 
            }
        }
    }
    
    return count == 1;  
}",1
kpay633,1697255794,1,"int OneLetterDifference(char *word1, char *word2)
{
	int similar = 0;
	for (int i = 0; i < (WORD_LENGTH - 1); i++) {
		if (word1[i] == word2[i]) {
			similar++; 
		}
	}
	if (similar == WORD_LENGTH - 2) {
		return 1;
	}
	else {
		return 0;
	}
	
}",1
kpir468,1697442397,1,"void ReverseArray(int* values, int length)

{

int start = 0;
int end = length - 1;
while (start < end) {
int temp = values[start];
values[start] = values[end];
values[end] = temp;

start++;
end--;

}

}",0
kpir468,1697445482,2,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
        if (differences > 1) {
            return 0;
        }
    }
    return differences == 1;
}",1
kpla566,1697061769,1,"int OneLetterDifference(char* word1, char* word2)
{
	int counter = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			counter++; 

	    }
	}
	if (counter == 3) {
		return 1; 
	}
	if (counter != 3) {
		return 0;
    }
	return 0; 
}",1
kqua446,1697363946,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int i, count = 0;

    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count += 1;
            if (count == 2) {
                return 0;
            }
        }
    }
    if (count == 0) {
        return 0;
    } else {
        return 1;
    }
}",1
kraw552,1696838475,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int HowDifferent = 0;  

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            HowDifferent++;
            if (HowDifferent > 1) 
            {
                return 0;  
            }
        }
    }

    return HowDifferent == 1;  
}",1
krec980,1696987053,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
ksai757,1697428767,1,"int OneLetterDifference(char* word1, char* word2) {
	int diffCount = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diffCount++;
			if (diffCount > 1) {
				return 0; // More than one difference found, return false (0)
			}
		}
	}

	return diffCount == 1; // Return true (1) if exactly one difference found
}",1
ksik996,1697179451,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int count = 0;
	for(int i = 0; i < 4; i++){
		if(word1[i] != word2[i]){
			count++;
		}

	}
	if(count == 1){
		return 1;
	}
	else{
		return 0;
	}
}",1
kwan244,1697346418,1,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int i = 0;
	int counter = 0;

	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			counter++;
		}
		i++;
	}
	if (counter == 1) {
		return 1;
	}

	return 0;
}",1
kwan797,1697169441,1,"#include <stdio.h>
 
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    for (int i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            difference ++;
        }
    }
    
    if (difference == 1){
        return 1;
    }
    
    return 0;
}",1
kyoo839,1697191834,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    int i;

    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    return count == 1;
}",1
kzha391,1697327842,1,"
int OneLetterDifference(char *word1, char *word2) {
    
    int diffCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {

        if (word1[i] != word2[i]) {
            diffCount++;

            if (diffCount > 1) 
            {
                return 0; 
            }
        }
    }

    return (diffCount == 1); 
}",1
kzhu796,1696910041,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int length = strlen(word1);
	int difference = 0; //setting up a counter for the number of differences

	for (i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}

	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",1
laba812,1697370605,1," int OneLetterDifference(char *word1, char *word2){
        int word_length = 4;
        int count = 0;

        for (int i = 0; i<word_length ; i++){
            if (word1[i]!= word2[i]){
                count++;
            }
        }
        if (count > 1){
            return 0;
        }
        else if(count == 1){

        return 1;
        }
        
    }",0
laba812,1697370949,2,"   int OneLetterDifference(char *word1, char *word2){
        int word_length = 4;
        int count = 0;

        for (int i = 0; i<word_length ; i++){
            if (word1[i]!= word2[i]){
                count++;
            }
        }
        if (count == 1){
            return 1;
        }
        else {
        return 0;
        }
        
    }",1
lazz729,1697253148,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diffCount = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		diffCount = diffCount + (word1[i] != word2[i]);
	}
	return (diffCount == 1);
}",1
lbla772,1696972982,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] =! word2[i])
        {
            count += 1;
        }
    }
    
    return count;
}",0
lbla772,1696973412,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            count += 1;
        }
        if (count > 1)
        {
            return 0;
        }
    }
    
    return count;
}",1
lbou433,1697084592,1,"int OneLetterDifference(char* Word1, char* Word2)
{
	int lives = 1;
	int i;

	for (i = 0; i < 5; i++) {
		if (Word1[i] != Word2[i]) {
			lives--;
		}
	}
	if (lives >= 0) {
		return 1;
	}
	else {
		return 0;
	}
}",0
lbou433,1697084705,2,"int OneLetterDifference(char* Word1, char* Word2)
{
	int lives = 1;
	int i;

	for (i = 0; i < 5; i++) {
		if (Word1[i] != Word2[i]) {
			lives--;
		}
	}
	if (lives == 0) {
		return 1;
	}
	else {
		return 0;
	}
}",1
lbyr117,1696994277,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int n=0;
    
    for(i=0;i<4;i++)
    {
        if(word1[i] != word2[i])
        {
            n++;
        }
    }
    if(n==1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",1
lcam453,1697323971,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;
	for (i = 0; i < 5; i++){
	    if (word1[i] != word2[i]){
	        count++;
	    }
	}
	if (count ==1){
	    return 1;
	}else {
	    return 0;
	}
	
}",1
lcan243,1697326066,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;

            // If there is more than one difference, return false
            if (count > 1)
                return 0;
        }
    }

    // Return true if there is exactly one difference
    return count;
}",1
lche668,1697266153,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	//FILE* fp;
	//fp = fopen(""wordlist4.txt"", ""r"");
	int i, diff;
	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			diff++;
		}
		i++;
	}
	if (diff == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
lche668,1697269782,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	//FILE* fp;
	//fp = fopen(""wordlist4.txt"", ""r"");
	int i = 0;
	int diff = 0;
	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			diff++;
		}
		i++;
	}
	if (diff == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
lchu848,1697414731,1,"int OneLetterDifference(char *word1, char *word2) {
    int dif = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            dif++;
            if (dif > 1) {
                return 0;  // If more than one difference, return false
            }
        }
    }

    return 1;
}",0
lchu848,1697414937,2,"int OneLetterDifference(char *word1, char *word2) {
    int dif = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            dif++;
            if (dif > 1 || dif == 0) {
                return 0;  // If more than one difference, return false
            }
        }
    }

    return 1;
}",0
lchu848,1697415140,3,"int OneLetterDifference(char *word1, char *word2) {
    int dif = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            dif++;
            if (dif > 1) {
                return 0;  // If more than one difference, return false
            }
           else if (dif == 1) {
                    return 1;
             }
            
        }
    }

    return 0;
}",0
lchu848,1697426606,4,"int OneLetterDifference(char *word1, char *word2) {
    int dif = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            dif++;
            if (dif > 1) {
                return 0;  // If more than one difference, return false
            }
            
        }
    }

    return dif == 1;
}",1
ldam917,1697278131,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 4

int OneLetterDifference(char *word1, char *word2)
{
    int differences=0;
    for (int i=0;i<WORD_LENGTH;i++)
    {
        if (word1[i]!=word2[i])
        {
            differences++;
        }
    }
    if (differences==1)
    {
        return (differences==1);
    }
    return 0;
}",0
ldam917,1697278158,2,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int differences=0;
    for (int i=0;i<WORD_LENGTH;i++)
    {
        if (word1[i]!=word2[i])
        {
            differences++;
        }
    }
    if (differences==1)
    {
        return (differences==1);
    }
    return 0;
}",1
ldea753,1697074216,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1)
        return 1;
    return 0;
}",1
ldou101,1697157508,1,"int OneLetterDifference(char *word1, char *word2){
int out=0; 
for (int i; i<5; i++){
if (word1[i]!=word2[i]){
    out=out+1;
}
}
if (out != 1){
    out=0;
}

return out;
}",0
ldou101,1697158095,2,"int OneLetterDifference(char *word1, char *word2){
int out=0; 
for (int i; i<4; i++){
if (word1[i]!=word2[i]){
    out=out+1;
}
}
if (out == 1) {
    return 1;
} else {
    return 0;
}
}",0
ldou101,1697410057,3,"int OneLetterDifference(char *word1, char *word2){
int out=0; 
for (int i=0; i<4; i++){
if (word1[i]!=word2[i]){
    out=out+1;
}
}
if (out == 1) {
    return 1;
} else {
    return 0;
}
}",1
lfan827,1697373633,1,"int OneLetterDifference(char *word1, char *word2){
    int i, l = strlen(word1),k = 0;
    for (i = 0;i < l; i ++){
        if (word1[i] != word2[i]){
            k++;
        }
    }
    if (k == 1){
        return 1;
    }else{
        return 0;
    }
}",1
lgan833,1697361818,1,"#include <stdio.h>
#define WORD_LENGTH 5
int OneLetterDifference(char* word1, char* word2)
{
	int sum = 0;
	for (int i = 0; i <	4; i++) {
		if (word1[i] != word2[i]) {
			sum = sum + 1;
		}
	}
	if (sum == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
lhal844,1697326381,1,"int OneLetterDifference(char* word1, char* word2)
{
	int diff = 0;
	for (int i = 0;i < 4;i++)
	{
		if (word1[i] != word2[i])
		{
			diff++;
		}
	}
	if (diff == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
lhua313,1697425090,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[1] != word2[i]) 
        {
            count++;
            if (count > 1) 
            {
                return 0;
            } 
            else {
                return 1;
            }
        }
    }
}",0
lhua313,1697425156,2,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[1] != word2[i]) 
        {
            count++;
            if (count > 1) 
            {
                printf (""The words do not differ by just one character"");
                return 0;
            } 
            else {
                printf (""The words differ by just one character"");
                return 1;
            }
        }
    }
}",0
lhua313,1697425307,3,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[1] != word2[i]) 
        {
            count++;
            if (count > 1) 
            {
                return 0;
            }
        }
    }
    return count == 1 ? 1 : 0;
}",0
lhua313,1697425621,4,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }
    
    return differences == 1 ? 1 : 0;
}",1
ljer106,1697359689,1,"int OneLetterDifference(char *word1, char *word2) {
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            continue; }
        else {
            return 1;
        }
    }
    return 0;
}",0
ljer106,1697360013,2,"int OneLetterDifference(char *word1, char *word2) {
    
    int z = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            continue; }
        else {
            z++;
        }
    }
    if (z ==1) {
        return 1; }
    else {
        return 0;
    }
}",1
ljon623,1697326445,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i = 0;
	int flag = 0;
	while (word1[i] != '\0' && word2[i] != '\0') {
		if (word1[i] != word2[i]) {
			flag++;
		}
		i++;
	}
	
	if (flag == 1) {
		return 1;
	}
	
	else {
		return 0;
	}
}",1
ljun123,1697340744,1,"int OneLetterDifference(char* word1, char* word2)
{
	int difference;
	int i;
    
    difference = 0;
    
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			difference++;
			if (difference > 1) {
				return 0; 
			}
		}
	}
	return (difference == 1) ? 1 : 0;
}
",1
lkel942,1697155015,1,"int OneLetterDifference(char *word1, char *word2)
{
	int dif = 0;
	
	for (int i = 0, i < WORD_LENGTH - 1, i++) {
		if (word1[i] != word2[i]) {
			dif++;
		}
	}
	if (dif == 1) {
		return 1:
	}
	return 0;
}",0
lkel942,1697155210,2,"int OneLetterDifference(char* word1, char* word2)
{
	int diff = 0;

	for (int i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
	}
	if (diff == 1) {
		return 1;
	}
	return 0;
",0
lkel942,1697155222,3,"int OneLetterDifference(char* word1, char* word2)
{
	int diff = 0;

	for (int i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
	}
	if (diff == 1) {
		return 1;
	}
	return 0;
}",1
llat663,1696903940,1,"int OneLetterDifference(char* word1, char* word2)
{
	int word1_len = strlen(word1);
	int word2_len = strlen(word2);

	int char_diff = 0;

	for (int i = 0; i <= word1_len; i++) {
		if (word1[i] != word2[i]) {
			char_diff++;
		}
	}

	if (char_diff == 1) {

		return 1;

	} else {
		return 0;
	}
}",0
llat663,1696904184,2,"int OneLetterDifference(char* word1, char* word2)
{
	int char_diff = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			char_diff++;
		}
	}

	if (char_diff == 1) {
		return 1;

	} else {
		return 0;
	}
}",1
llei074,1696979677,1,"int OneLetterDifference(char *word1,char *word2) 
{
	int i = 0;
	int difference = 0;
	int outcome;

	while (i < 5) 
	{
		if (word1[i] != word2[i]) 
		{
			difference++;
		}
		i++;
	}

	if (difference == 1) 
	{
		int outcome = 1;
	}
	else if (difference != 1) 
	{
		int outcome = 0;
	}

	return outcome;
}",0
llei074,1696979813,2,"int OneLetterDifference(char *word1,char *word2) 
{
	int i = 0;
	int difference = 0;
	int outcome = 0;

	while (i < 5) 
	{
		if (word1[i] != word2[i]) 
		{
			difference++;
		}
		i++;
	}

	if (difference == 1) 
	{
		int outcome = 1;
	}

	return outcome;
}
",0
llei074,1696979873,3,"int OneLetterDifference(char *word1,char *word2) 
{
	int i = 0;
	int difference = 0;
	int outcome = 0;

	while (i < 5) 
	{
		if (word1[i] != word2[i]) 
		{
			difference++;
		}
		i++;
	}

	if (difference == 1) 
	{
		outcome = difference;
	}

	return outcome;
}
",1
lli393,1697058683,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i, count = 0;
	for (i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			count++;
		}
	}
	if (count == 1){
		return 1;
	}
	return 0;
}",1
llia622,1697367011,1,"int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diff++;
            if (diff > 1) {
                return 0;
            }
        }
    }
    return diff == 1;
}",1
llig859,1697284892,1,"int OneLetterDifference(char *word1, char *word2)
{
int i;
int count=0;
    for (i=0; i<4; i++) {
    if (word1[i] == word2[i] ){
    }else{
    count++;
    }
    }
    if (count==1){
    return 1;
    }else{
    return 0;}
    
}
",1
lliu182,1697286050,1,"#include <stdio.h>
int OneLetterDifference(char* word1, char* word2) {
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}
",1
lliu848,1697003795,1,"int OneLetterDifference(char *word1, char *word2)
{
	//WORD_LENGTH is a constant = 5
	int i = 0;
	int j = 0;
	int count = 0;

	// iterate through the two words, comparing each letter
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count = count + 1;
		}
	}


	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
lliu848,1697003815,2,"int OneLetterDifference(char *word1, char *word2)
{
	//WORD_LENGTH is a constant = 5
	int i = 0;
	int count = 0;

	// iterate through the two words, comparing each letter
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count = count + 1;
		}
	}


	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
llu744,1697372964,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int numberofdiff = 0;
    
    for (int i = 0; i < WORD_LENGTH -1; i++){
        if (word1[i] != word2[i]){
            numberofdiff++;
        } 
    }
    
    if (numberofdiff != 1){
        return 0;
    }
    
    return numberofdiff;
}",0
llu744,1697373041,2,"int OneLetterDifference(char *word1, char *word2)
{
    int numberofdiff = 0;
    
    for (int i = 0; i < WORD_LENGTH -1; i++){
        if (word1[i] != word2[i]){
            numberofdiff++;
        } 
    }
    
    if (numberofdiff != 1){
        return 0;
    }
    
    return numberofdiff;
}",1
lmen032,1697449946,1,"#define WORDLENGTH 5

#include <stdio.h>

int OneLetterDifference(char *word1, char *word2){
    int difference = 0;
    int i;

    for (i = 0; i < WORDLENGTH; i++){
        if (word1[i] =! word2[2]){
            difference++;
        }
        return 0
    }
    return difference;
}",0
lmen032,1697450271,2,"#define WORDLENGTH 5

#include <stdio.h>

int OneLetterDifference(char *word1, char *word2){
    int difference = 0;
    int i;

    for (i = 0; i < WORDLENGTH; i++){
        if (word1[i] != word2[i]){
            difference++;
        }
        if ((difference > 1) || (difference == 0)){
        return 0;
    }
    return difference;
    }
}",0
lmen032,1697450299,3,"#define WORD_LENGTH 5

#include <stdio.h>

int OneLetterDifference(char *word1, char *word2){
    int difference = 0;
    int i;

    for (i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            difference++;
        }
        if ((difference > 1) || (difference == 0)){
        return 0;
    }
    return difference;
    }
}",0
lmen032,1697451105,4,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2){
    int difference = 0;
    int i;

    for (i = 0; word1[i] != '\0' && word2[i] != '\0'; i++){
        if (word1[i] != word2[i]){
            difference++;
        }
        if (difference > 1){
        return 0;
        }
    }
    return difference;
}",1
lmor438,1697104941,1,"//AUTHOR:Lukem
#include <stdio.h>

#define WORD_LENGTH 5


int OneLetterDifference(char *word1,char *word2){
    
    int i=0;
    int C=0;
    
    
    while(word1[i]!='\0'){
        
        if(word1[i]!=word2[i]){
            
            C=C+1;
            
        }
        
        i++;
    }
    
    if(C!=1){
        
        C=0;
    }
    
return C;    

}",1
lpry623,1696829354,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count += 1;
        }
    }
    if (count == 1) { 
        return 1;
    }
    else {
        return 0;
    }
}",1
lrei069,1697252116,1,"int OneLetterDifference(char *word1, char *word2) {
    int x = 0;
    for (int i = 0; i < 3; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    return (x == 3);
}",0
lrei069,1697252226,2,"int OneLetterDifference(char *word1, char *word2) {
    int x = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            x++;
        }
    }
    return (x == 3);
}",1
lros711,1697156897,1,"#include <stdio.h>
#define WORD_LENGTH 5


int OneLetterDifference(char *word1, char *word2)
{
	int count;
	count = 0;

	for (int i = 0; i < WORD_LENGTH-1; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0;
			}
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
	
}",1
lrya284,1696980129,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0, diff = 0;
    for(int i=0; i < 5; i++) {
        if (word1[i] != word2[i]){
            diff++;
        }
    if (diff == 1){
     return 1;
    }
    }        
}",0
lrya284,1696980144,2,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for(int i=0; i < 5; i++) {
        if (word1[i] != word2[i]){
            diff++;
        }
    if (diff == 1){
     return 1;
    }
    }        
}",0
lrya284,1696980421,3,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for(int i=0; i < 5; i++) {
        if (word1[i] != word2[i]){
            diff++;
        }
    if (diff == 1){
     return 1;
    }
    }
    return 0;
}",0
lrya284,1696980568,4,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for(int i=0; i < 5; i++) {
        if (word1[i] != word2[i]){
            diff++;
        }
    }
    if (diff == 1){
     return 1;
    } 
    return 0;
}",1
lsal082,1697385570,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++){
        if(word1[i] != word2[i]){
            differences++;
            
            if(differences > 1){
                return 0;
            }
        }
    }
	// You should correctly complete this function defintion
	return word1[0] == word2[0];
}",0
lsal082,1697385747,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++){
        if(word1[i] != word2[i]){
            differences++;
            
            if(differences > 1){
                return 0;
            }
        }
    }
	// You should correctly complete this function defintion
	return word1[1] == word2[1];
}",0
lsal082,1697431231,3,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++){
        if(word1[i] != word2[i]){
            differences++;
            
            if(differences > 1){
                return 0;
            }
        }
    }
	// You should correctly complete this function defintion
	return differences == 1;
}",1
lsen376,1697102511,1,"int OneLetterDifference(char *word1, char *word2)
{
	int sumDiffs = 0;
	int i = 0;

	while (i < 4) {
		if (word1[i] == word2[i]) {
			i++;
		}
		else {
			sumDiffs++;
			i++;
		}
	}

	if (sumDiffs != 1)
		return 0;
	else
		return 1;

	// You should correctly complete this function defintion
	return word1[0] == word2[0];
}",1
lsha172,1697451138,1,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    
    for (int i = 1; i < WORD_LENGTH - 1 && difference <= 1; i++) {
    difference += (word1[i] != word2[i]);
    }
    
    return difference == 1 && word1[0] == word2[0];
    
}


",0
lsha172,1697451772,2,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    
    for (int i = 1; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            difference ++;
            if (difference > 1) {
                return 0;
            }
        }
    }
    
    return difference == 1 && word1[0] == word2[0];
    
}


",0
lsha172,1697451864,3,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            difference ++;
            if (difference > 1) {
                return 0;
            }
        }
    }
    
    return (difference == 1);
    
}


",1
lspu128,1697247703,1,"#include <stdio.h>
#include <string.h>

#define word 5

int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    for(int i; i < (word - 1); i++){
        if(word1[i] != word2[i]){
            difference++;
            if(difference>1){
                return 0;
            }
            
        }
    }

    return (difference==1);
}",0
lspu128,1697247816,2,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    for(int i; i < (WORD_LENGTH - 1); i++){
        if(word1[i] != word2[i]){
            difference++;
            if(difference>1){
                return 0;
            }
            
        }
    }

    return (difference==1);
}",0
lspu128,1697248984,3,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            difference++;
        }
    }
    
    if (difference == 1) {
        return 1; 
    } else {
        return 0; 
    }
}",1
lsu376,1696851242,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2)
{
	int letterDifference = 0; 

	for (int i=0; i < WORD_LENGTH; i++) {
		if (word1[i]!=word2[i]){
			letterDifference++;

			if (letterDifference > 1){
			return false;
		}
	}
}
	return true;
}",0
lsu376,1696852018,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2)
{
	int letterDifference = 0; 

	for (int i=0; i < WORD_LENGTH; i++) {
		if (word1[i]!=word2[i]){
			letterDifference++;

			if (letterDifference > 1){
				return false;
		}
	}
}
	return letterDifference == true;
}",1
ltan813,1697444138,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {  // -1 cus it was defined as 5
        if (word1[i] != word2[i]) {
            differences++;
        }
        if (differences > 1) {
            return 0;  
        }
    }

    return differences == 1;
}",1
lvan346,1697162457,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
//	return word1[0] == word2[0];
	int i = 0;
	int poo = 0;

	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			poo++;
		}
		i++;
	}
	
	if (poo == 1) {
		return 1;
	}
	return 0;
}",1
lvin900,1697258709,1," int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int bruh = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			bruh++;
			}
		}
	if (bruh == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
lwer802,1697451291,1,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) { // -1 to ignore the null-terminating character
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; // More than one difference found, return false
            }
        }
    }
    return (differences == 1) ? 1 : 0; // Return true if there is exactly one difference, else return false
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
       printf(""The words differ by just one character\n"");
    } else {
       printf(""The words do not differ by just one character\n"");
    }

    return 0;
}
",0
lwer802,1697451415,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) { // iterating until WORD_LENGTH - 1 to avoid the null character
        if (word1[i] != word2[i]) {
            differences++;
        }
        if (differences > 1) {
            return 0; // early exit if more than one difference is found
        }
    }
    return differences == 1; // return true if exactly one difference, otherwise false
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }

    return 0;
}
",0
lwer802,1697451626,3,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) { // iterating until WORD_LENGTH - 1 to avoid the null character
        if (word1[i] != word2[i]) {
            differences++;
        }
        if (differences > 1) {
            return 0; // early exit if more than one difference is found
        }
    }
    return differences == 1; // return true if exactly one difference, otherwise false
}
",1
lwon290,1696983799,1,"int OneLetterDifference(char* word1, char* word2)
{
	int simCount = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			simCount++;
		}
	}

	if (simCount == 3) {
		return 1;
	}
	else {
		return 0;
	}
}",1
lyou975,1697446111,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0; 
	
	for (int i = 0; i < WORD_LENGTH; i++){

		if (word1[i] != word2[i]){
			
			count++;
		}
	}

	if (count == 1){
		return 1;
	}

	return 0; 

}",1
mabb997,1697255646,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i, tally;
	tally = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			tally++;
		}
	}

	if (tally == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
mahu925,1696832551,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i, sum = 0;
    
    for(i=0; i < 4; i++)
    {
        if(word1[i] != word2[i])
        {
            sum++;
            
        }
    }
    
    return (sum == 1);
}",1
mala824,1697242868,1,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i, diff = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
            if (diff > 1)
                return 0; 
        }
    }

    return (diff == 1); 
}",0
mala824,1697242891,2,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i, diff = 0;
    int length_1 = strlen(word1);
    
    for (i = 0; i < length_1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
            if (diff > 1)
                return 0; 
        }
    }

    return (diff == 1); 
}",1
mala824,1697245926,3,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
        if (word1[i] != word2[j]) {
            diff++;
            if (diff == 1) {
                return 1; 
        }
    }
    }
    return 0;
}",0
mala824,1697246169,4,"#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
        if (word1[i] != word2[j]) {
            diff++;
            if (diff == 1) {
                return 1; 
        }
    }

    }
    return 0;
    }
}
",0
mala824,1697246194,5,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
        if (word1[i] != word2[j]) {
            diff++;
            if (diff == 1) {
                return 1; 
        }
    }

    }
    return 0;
    }
}",0
mala824,1697246749,6,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1; 
                }
            }
        }
    }
    return 0;
}",0
mala824,1697334732,7,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                    else if diff > 1
                    return 0;
                }
            }
        }
    }
    return 0;
}",0
mala824,1697334741,8,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                    else if diff > 1
                    return 0;
                }
            }
        }
    }
}",0
mala824,1697334745,9,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5 

int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                    else if diff > 1
                    return 0;
                }
            }
        }
    }",0
mala824,1697334815,10,"int OneLetterDifference(char word1[WORDLENGTH], char word2[WORDLENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                } else if (diff > 1) {
                    return 0;
                }
            }
        }
    }
    return 0;
}",0
mala824,1697334855,11,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                } else if (diff > 1) {
                    return 0;
                }
            }
        }
    }
    return 0;
}",0
mala824,1697342686,12,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                } else if (diff > 1) {
                    return 0;
                }
            }
        }
    }
    return diff == 1 ;
}",0
mala824,1697342696,13,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                } else if (diff > 1) {
                    return 0;
                }
            }
        }
    }
    return 1 ;
}",0
mala824,1697342701,14,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                } else if (diff > 1) {
                    return 0;
                }
            }
        }
    }
    return 0 ;
}",0
mala824,1697438758,15,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
                if (diff == 1) {
                    return 1;
                } else if (diff == 2) {
                    return 0;
                }
            }
        }
    }
    return 0 ;
}",0
mala824,1697438872,16,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
            }
    }

    return diff == 1; // Return 1 if there's exactly one difference, otherwise return 0
}",0
mala824,1697438905,17,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    if (length_1 != length_2) {
        return 0; // Words must be of the same length
    }

    for (i = 0; i < length_1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
    }

    return diff == 1;
}",1
mala824,1697438991,18,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
            }
        }
        return diff == 1;",0
mala824,1697439003,19,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
            }
        }
        return diff == 1;
    }",0
mala824,1697439007,20,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int j = 0;
    int length_1 = strlen(word1);
    int length_2 = strlen(word2);

    for (i = 0; i < length_1; i++) {
        for (j = 0; j < length_2; j++) {
            if (word1[i] != word2[j]) {
                diff++;
            }
        }
        return diff == 1; {
    }",0
mala824,1697439239,21,"int OneLetterDifference(char word1[WORD_LENGTH], char word2[WORD_LENGTH]) {
    int i = 0;
    int diff = 0;
    int length_1 = strlen(word1);

    for (i = 0; i < length_1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
    }
    
    return diff == 1;
}






",1
mbah279,1697356337,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    
   
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }
    
    return differences == 1 ? 1 : 0;
}",1
mbal759,1696973263,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int num_diff = 0;
    for (int i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i])
        {
            num_diff += 1;
        }
    }
    if (num_diff == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",1
mboy221,1696817698,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i<WORD_LENGTH; i++) {
        if (word1[i]!=word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
mbut885,1696995101,1,"int OneLetterDifference(char* word1, char* word2) {

    int i, count;
    count = 0;

    for (i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            count++;
        }
    }

    if (count == 3) {
        return 1;
    }

    return 0;
}",1
mcam799,1697199221,1,"int OneLetterDifference(char *word1, char *word2)
{
	//Word length (including null) = WORD_LENGTH
	// You should correctly complete this function defintion

	int i = 0;
	while (i < WORD_LENGTH) {
		if (word1[i] != word2[i]) { //Counts number of letters different
			i++;
		}
	}

	if (i == 1) {
		return 1; //If only 1 letter different, return true (1)
	}
	else {
		return 0;//Else return false (0)
	}
}",0
mcam799,1697200224,2,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2)
{
	//Word length (including null) = WORD_LENGTH
	// You should correctly complete this function defintion

	int i = 0;
	int count = 0;
	while (i < WORD_LENGTH) {
		if (word1[i] != word2[i]) { //Counts number of letters different
			count++;
		}
		i++;
	}

	if (count == 1) {
		return 1; //If only 1 letter different, return true (1)
	}
	else {
		return 0;//Else return false (0)
	}
}",1
mcha833,1697095246,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count = 0;
    for(i = 0; i < WORD_LENGTH; i++){
        if(word1[i] == word2[i]){
            count++;
        }
    }
    
    if (count == WORD_LENGTH - 1){
        return 1;
    }
    
    else{
        return 0;
    }
}",1
mcha876,1697341613,1,"int OneLetterDifference(char *word1, char *word2) {
    int i;
    int differenceCount = 0;
    
    for (i = 0; i < (WORD_LENGTH - 1); i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0;
            }
        }
    }
    return 1;
}",0
mcha876,1697341807,2,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int i;
    int differenceCount = 0;
    
    for (i = 0; i < (WORD_LENGTH - 1); i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0;
            }
        }
    }
    return 1;
}",0
mcha876,1697341963,3,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    int i;
    
    for (i = 0; i < (WORD_LENGTH - 1); i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0;
            }
        }
    }
    return differenceCount == 1;
}
",1
mche403,1697198751,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) { 
        if (word1[i] != word2[i]) {
            diffCount++;
            if (diffCount > 1) {
                return 0; 
            }
        }
    }

    return diffCount == 1;
}",1
mcro807,1697428107,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i = 3; i++) {
	    if (word1[i] == word2[i]) { 
	        count += 1; }
	}
	if (count == 3) { 
	    return 1; }

    return 0;
}",0
mcro807,1697428138,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i <= 3; i++) {
	    if (word1[i] == word2[i]) { 
	        count += 1; }
	}
	if (count == 3) { 
	    return 1; }

    return 0;
}",1
mdav506,1697158796,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 4

int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
mdav506,1697158907,2,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
mdea492,1697330277,1,"int OneLetterDifference(char *word1, char *word2)
{
	
	int count=0;
	for(i=0;i<4;i++){
			if (word1[i] == word2[i])
			{ count = count +1;}
			

		}
	
	if (count == 3 )
	{return 1;}
	else 
	return 0;

	
}",0
mdea492,1697330342,2,"int OneLetterDifference(char *word1, char *word2)
{
	
	int i=0;
	int count=0;
	for(i=0;i<4;i++){
			if (word1[i] == word2[i])
			{ count = count +1;}
			

		}
	
	if (count == 3 )
	{return 1;}
	else 
	return 0;

	
}",1
mfle888,1697362865,1,"int OneLetterDifference(char *word1, char *word2) {

int i, different_letters = 0; 

//both words of length 4
    int WORD_LENGTH = strlen(word1);

//compare each word character by character

for (i = 0; i < WORD_LENGTH; i++) {
    if (word1[i] != word2[i])
    //Record number of different letters
    different_letters++; 
} 

//if count = 1, return 1 else return 0

if (different_letters == 1) {
    return 1;
}
return 0; 

}
",0
mfle888,1697362900,2,"#include <stdio.h>
#include <strings.h>

int OneLetterDifference(char *word1, char *word2) {

int i, different_letters = 0; 

//both of length 4 letters
    int WORD_LENGTH = strlen(word1);

//compare each word character by character

for (i = 0; i < WORD_LENGTH; i++) {
    if (word1[i] != word2[i])
    //Record number of different letters
    different_letters++; 
} 

//if count = 1, return 1 else return 0

if (different_letters == 1) {
    return 1;
}
return 0; 

}",0
mfle888,1697363076,3,"#include <stdio.h>
#include <strings.h>

int OneLetterDifference(char *word1, char *word2) {

int i, different_letters = 0; 

//compare each word character by character

for (i = 0; i < 4; i++) {
    if (word1[i] != word2[i])
    //Record number of different letters
    different_letters++; 
} 

//if count = 1, return 1 else return 0

if (different_letters == 1) {
    return 1;
}
return 0; 

}",1
mfuj750,1697161609,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	return (count == 1);
}",1
mger154,1697331790,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) { 
				return 0;
			} else if (count == 0) {
                return 1;
            }
		}
	}
	return count == 1;
}
",1
mgoy303,1696824031,1,"int OneLetterDifference(char *word1, char *word2) {
    int counter = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            if (counter == 0) {
                counter += 1;
            } else {
                return 0;
            }
        }
    }
    return 1;
}",0
mgoy303,1696824766,2,"int OneLetterDifference(char *word1, char *word2) {
    int counter = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            counter += 1;
        }
    }
    if (counter == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
mgua740,1697371069,1,"int OneLetterDifference(char* word1, char* word2)
{
	
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if( word1[i] != word2[i]);
		count++;

		if (count > 1) {
			return 0;
		}
		return (count == 1);
	}
	
	
}",0
mgua740,1697371596,2,"int OneLetterDifference(char* word1, char* word2)
{

	int count = 0;
	for (int i = 0; i < 4; i++) {
		if( word1[i] != word2[i]);{
		count++;

		if (count > 1) {
			return 0;
		}
		}
		return (count == 1);
	}
	
	
}",0
mgua740,1697374224,3,"int OneLetterDifference(char* word1, char* word2)
{
	
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if( word1[i] != word2[i]){
		count++;

		if (count > 1) {
			return 0;
		}
		
		}
		
	}
	return (count == 1);
	
}",1
mhua821,1697421993,1,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int diff, i;
	diff = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
		if (diff > 1) {
			return 0;
		}
	}
	
	return diff == 1; 
}",1
mjun868,1697000342,1,"int OneLetterDifference(char *word1, char *word2)
{
	int k = 0;
	for (int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			k++;
		} 
	}
	if (k == 1){
		return 1; 
	} else{
		return 0;
	}
}
",1
mkab524,1697282605,1,"int OneLetterDifference(char *word1, char *word2)
{	

	if (((word1[0] == word2[0] + 1) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) || ((word1[0] == word2[0] - 1) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) || ((word1[0] == word2[0]) && (word1[1] == word2[1] + 1) && (word1[2] == word2[2]) && (word1[3] == word2[3])) || ((word1[0] == word2[0]) && (word1[1] == word2[1] - 1) && (word1[2] == word2[2]) && (word1[3] == word2[3])) || ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2] + 1) && (word1[3] == word2[3])) || ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2] - 1) && (word1[3] == word2[3])) || ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3] + 1)) || ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3] - 1))) {
		return 1;
	}
	else {
		return 0;
	}

}",0
mkab524,1697283581,2,"int OneLetterDifference(char *word1, char *word2)
{	

	if ( (word1[0] != word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3]) ){
		return 1;
	}

	else if ( (word1[0] == word2[0]) && (word1[1] != word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3]) ) {
		return 1;
	}

	else if ( (word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] != word2[2]) && (word1[3] == word2[3]) ) {
		return 1;
	}

	else if ( (word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] != word2[3]) ) {
		return 1;
	}

	else {
		return 0;
	}

}",1
mkaj411,1697149994,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i; 
	int count=0;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++; 
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0; 
	}
	
}",1
mkee115,1696987124,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{

int i;
int count = 0;

for (i=0; i<WORD_LENGTH; i++) 
{ 
    if (word1[i] != word2[i])
    count = count + 1;
}

if (count == 1)
{
    return 1;
}

return 0;
}",1
mken566,1696975628,1,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    int word1ascii;
    int word2ascii;
    
    for (int i = 0; i < 5; i++)
    {
        word1ascii = (int)word1[i];
        word2ascii = (int)word2[i];
        if (word1ascii != word2ascii)
        {
            difference++;
        }
    }
    
    if (difference == 1)
    {
        return 1;
    }
    return 0;
}",1
mket106,1697342835,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;

	for(int i = 0; i < WORD_LENGTH - 1; i++) 
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1) 
	{
		return 1;
	}
	else 
	{
		return 0;
	}
}",1
mkim670,1697181207,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int count = 0;

	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			count++;
		}
	i++;
	}
	return (count == 1);
}",1
mkim719,1697363379,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int diffCount = 0;
    
    for (int i=0 ; i<WORD_LENGTH -1 ; i++)
    {
        if (word1[i] != word2[i])
        {
            diffCount++;
        }
        if (diffCount >1)
        {
            return 0;
        }
        return diffCount == 1 ? 1 : 0;
    }
}

",0
mkim719,1697364329,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int diffCount = 0;
    
    for (int i=0 ; i<WORD_LENGTH -1 ; i++)
    {
        if (word1[i] != word2[i])
        {
            diffCount++;
        }
        if (diffCount >1)
        {
            return 0;
        }
    }
    return diffCount == 1 ? 1 : 0;
}
",1
mlal864,1697428650,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount == 1) {
                return 1;
            }
            else {
                return 0;
            }
        }
    }
}",0
mlal864,1697428739,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount == 1) {
                return 1;
            }

        }
    }
    return 0;
}",0
mlal864,1697428864,3,"#include <stdio.h>
#include <stdbool.h>

int OneLetterDifference(char *word1, char *word2) {
    int Counter = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            Counter++;
            if (Counter > 1) {
                return 0;
            }
        }
    }
    
    return Counter == 1 ? 1 : 0;
}",1
mlaw649,1697282662,1," int OneLetterDifference(char *word1, char *word2)
{

 int length = 4;
 int sameLetters = 0;
 
 for (int i = 0; i < length; i++){
  if (word1[i] == word2[i]) {
  sameLetters = sameLetters + 1;
  }
 }
 
 
 if (sameLetters >= 3) {
 return 1;
 }
 else {
 return 0;
 }
}

}

",0
mlaw649,1697325971,2,"int OneLetterDifference(char *word1, char *word2) 
{
    int length = 4;
    int diffLetters = 0;
 
    for (int i = 0; i < length; i++) {
        if (word1[i] != word2[i]) {
            diffLetters++;
        }
    }
 
 if (diffLetters == 1) {
 return 1;
 }
 else {
 return 0;
}
    
}


",1
mle063,1697165486,1,"int OneLetterDifference(char *word1, char *word2)
{
	//Doing word comparation
	
	int i;
	int count = 0;
	
	for(i=0; i < WORD_LENGTH; i++) {
	    if (word1[i] != word2[i]) {
	        count++;
	    }
	}
	
	if (count == 1){
	    return 1;
	} else {
	    return 0;
	}
	
}",1
mlin729,1697101838,1,"#include <stdio.h>

#define Word_Length 4

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < Word_Length; ++i) {
        if (word1[i] != word2[i]) {
            differences++;

            
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return differences == 1; 
}",1
mloh302,1696846350,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    // Loops through the character array and check and compare characters ascii number
    // This function must compare each word – character by character – and return true (i.e. 1)
    // only if there is exactly one character that differs between the two words.
    // Apart from this one character, all other characters must be identical and in the same positions.
    int numLetterDiff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i])
            numLetterDiff++;
    }
    if (numLetterDiff == 1){
        return 1;
    } else
        return 0;
}",1
mmak111,1697363784,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, x = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			x++;
		}
	}
	if (x > 1 || x == 0) {
		return 0;
	}
	else {
		return 1;
	}
}",1
mman402,1697256351,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count=0;

	for (i=0;i<5;i++)
	{
		if(word1[i]!=word2[i])
		{
			count++;
		}
	}
	// You should correctly complete this function defintion
	return (count==1);
}",1
mman808,1697433137,1,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
	for (int i = 0; i< 4; i++){
		if (word1[i] == word2[i]){
			count++;
		}
	}
	if (count == 3){
		return 1;
	} else{
        return 0;
    }
	// You should correctly complete this function defintion
	return word1[0] == word2[0];
}",1
mmas199,1697441476,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define SIZE 5

int CompareStrings(char* str1, char* str2) 
{
    int counter = 0;

    for (int i = 0; i < SIZE - 1; i++)
    {
        if (str1[i] != str2[i]) 
        {
            counter++;
        }
    }
    if (counter == 1) 
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}",0
mmas199,1697441523,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define SIZE 5

int CompareStrings(char* str1, char* str2) 
{
    int counter = 0;

    for (int i = 0; i < SIZE - 1; i++)
    {
        if (str1[i] != str2[i]) 
        {
            counter++;
        }
    }
    if (counter == 1) 
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}

int main() 
{
    char firstWord[SIZE] = ""able"";
    char secondWord[SIZE] = ""ably"";

    if (CompareStrings(firstWord, secondWord)) 
    {
        printf(""The words differ by just one character"");
    }
    else 
    {
        printf(""The words do not differ by just one character"");
    }

    return 0;
}
",0
mmas199,1697441886,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2)
{
    int counter = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++)
    {
        if (word1[i] != word2[i])
        {
            counter++;
        }
    }
    if (counter == 1) 
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}",1
mmca276,1697355886,1,"int OneLetterDifference(char *word1, char *word2)
{
int i;
int j;
int count = 0;
for (i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            count = count +1;
    }
}
if (count == 3) {
    return 1;
}
else 
    return 0;
}",0
mmca276,1697355901,2,"int OneLetterDifference(char *word1, char *word2)
{
int i;
int count = 0;
for (i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            count = count +1;
    }
}
if (count == 3) {
    return 1;
}
else 
    return 0;
}",1
mmcg745,1697410472,1,"#include <stdio.h>
#include <string.h>


int OneLetterDifference(char *word1, char *word2){

    int len = strlen(word1);
    int i = 0;
    int a = 0;
    
    while (i < len){
        if (word1[i] != word2[i])
            a++;
            i++;


    } if (a == 1){
    return 1;
    } else {
    return 0;
    }


}
",0
mmcg745,1697410531,2,"#include <stdio.h>
#include <string.h>


int OneLetterDifference(char *word1, char *word2){

    int len = strlen(word1);
    int i = 0;
    int a = 0;
    
    while (i < len){
        if (word1[i] != word2[i]){
            a++;
            i++;
        }

    } if (a == 1){
    return 1;
    } else {
    return 0;
    }


}
",0
mmcg745,1697410710,3,"#include <stdio.h>
#include <string.h>


int OneLetterDifference(char *word1, char *word2){

    int len = strlen(word1);
    int i = 0;
    int a = 0;
    
    while (i < len){
        if (word1[i] != word2[i]){
            a++;
            
        }i++;

    } 
    if (a == 1){
    return 1;
    } else {
    return 0;
    }


}
",1
mmoh314,1697436203,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;

	for (int i = 0; i < 4; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
mmoh456,1697248843,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	int i;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0;
			}
		}

	}
return 1;
}",0
mmoh456,1697250777,2,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	int i;
	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0;

			}

		}
	}
		if (count == 0) {
			return 0;

		}
		return 1;
	}",1
mnay503,1697339917,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++)
    {
        if (word1[i] != word2[i])
        {
            differences++;
            if (differences > 1)
            {
                return 0; 
            }
        }
    }

    return differences == 1; 
}",1
mnic190,1697333658,1,"#include <stdio.h>
int OneLetterDifference(word1, word2) {
    int count = 0;
    for (int i = 0; i < 4; i ++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",0
mnic190,1697447935,2,"#include <stdio.h>
int OneLetterDifference(word1[], word2) {
    int count = 0;
    for (int i = 0; i < 4; i ++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",0
moco678,1697249798,1,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {

	int count = 0; 
	int i;

	for(i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0; 
			}
		}
		return 1;
}
",0
moco678,1697249894,2,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {

	int count = 0; 
	int i;

	for(i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0; 
			}
		}
	}
		return 1;
}
",0
moco678,1697250001,3,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {

	int count = 0; 
	int i;

	for(i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0; 
			}
		}
	}
		return (diffcount == 1);
}
",0
moco678,1697250012,4,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {

	int count = 0; 
	int i;

	for(i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0; 
			}
		}
	}
		return (count == 1);
}
",1
mpar342,1697435042,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int diffCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            diffCount++;
            if (diffCount > 1) 
            {
                return 0;
            }
        }
    }

    return diffCount == 1;
}
",1
mpat501,1696855743,1,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	for (int i=0; i<WORD_LENGTH-1; i++){
		if (word1[i]==word2[i]){
			count+=1;
		}
	}
	// You should correctly complete this function defintion
	if (count!=3){
		return 0;
	}
	return word1[0] == word2[0];
}",0
mpat501,1696855965,2,"#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	for (int i=0; i<WORD_LENGTH-1; i++){
		if (word1[i]==word2[i]){
			count+=1;
		}
	}
	// You should correctly complete this function defintion
	if (count!=3){
		return 0;
	}
	return 1;
}",1
mpey262,1696925200,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0, count = 0;
	while (i < WORD_LENGTH) {
	    if (word1[i] != word2[i]) {
	    count++;
	    }
	    i++;
	}
	if (count == 1) {
	    return 1;    
	} else {
	    return 0; 
	}
}",1
mran851,1697344670,1,"int OneLetterDifference(char *word1, char *word2)
{

	int count = 0;
	
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0;
			}
			
		}

	}
	return 1;
	
}
",0
mran851,1697345516,2,"int OneLetterDifference(char *word1, char *word2)
{

	int count = 0;
	
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
			if (count > 1) {
				return 0;
			}
			
		}

	}
	return (count == 1);
	
}
",1
mris618,1697167968,1," int OneLetterDifference(char *word1, char *word2) {
    int differences = 4;  

    
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            
            differences--;

            
            
            } 
        }
        if (differences == 1){
        return 1;}
        else{
            return 0;}
        }",1
mrog757,1697074770,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	int i;

	for (i=0; i<4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count<2) {
		return 1;
	}
	else {
		return 0;
	}
}
",0
mrog757,1697074906,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	int i;

	for (i=0; i<4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count==1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
mron793,1697165401,1,"int OneLetterDifference(char *word1, char *word2)
{

    int i = 0;
	int counter = 0;
	int length = strlen(word1);

	for (i = 0; i < length; i++)
	{
		if (word1[i] == word2[i])
		{
			counter++;
		}
		
	}
	
	if (counter == 3)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
mshi672,1697235496,1,"int OneLetterDifference(char* word1, char* word2)
{
	int no_of_differing_letters = 0;

	for (int i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] != word2[i])
		{
			no_of_differing_letters++;
		}
	}
	if (no_of_differing_letters == 0)
	{
		return 0;
	}
	else if (no_of_differing_letters == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
msil440,1697435231,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;  // Occurs when 2+ differences are found
            }
        }
    }
    
    return differences == 1; // Occurs when EXACTLY 1 difference is found.
}",1
msin609,1697256426,1,"int OneLetterDifference(char* word1, char* word2) {
	int difference = 0;
	int i;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
msu975,1697175800,1,"int OneLetterDifference(char* word1, char* word2)
{
	int wordlen = 5;
	int i;
	int diffcount = 0;

	for (i = 0; i < wordlen; i++) {
		if (word1[i] != word2[i]) {
			diffcount++;
		}
	}
	if (diffcount == 1) {
		return 1;
	}	
}",0
msu975,1697176017,2,"int OneLetterDifference(char* word1, char* word2)
{
	int wordlen = 5;
	int i;
	int diffcount = 0;

	for (i = 0; i < wordlen; i++) {
		if (word1[i] != word2[i]) {
			diffcount++;
		}
	}
	if (diffcount == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
msuv992,1696991556,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int i, letter; 
    
    letter = 0; 
    
    for (i = 0; i <= 4; i++) {
        if (word1[i] != word2[i]) {
            letter++ ; 
        }
    }
        if ( letter == 1) {
            return 1;
        }
            
        else{
            return 0;
        }
        
        
}",1
mtam709,1697423008,1,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i = 0; i < 5; i++){
        if (word1[i] == word2[i]){
            count++;
        }
        
    }
    printf(""%d"", count);
    if (count == 4){
        return 1;
    }
        else {
        return 0;
    }
}
",0
mtam709,1697423023,2,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i = 0; i < 5; i++){
        if (word1[i] == word2[i]){
            count++;
        }
        
    }
    if (count == 4){
        return 1;
    }
        else {
        return 0;
    }
}
",1
mtha724,1697188457,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	for (int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			diff = diff + 1;
		}
	}
	if (diff == 1){
		return 1;
	} else {
		return 0;
	}
}",1
mtob213,1697263911,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, count = 0, length = 4;
	for(i = 0; i <= length; i++){
	    if (word1[i] != word2[i]){
	        count++;
	    }
	}
	if(count == 1){
	    return 1; 
	} else {
	    return 0;
	}
}
",1
mwan364,1696836134,1,"int OneLetterDifference(char* word1, char* word2)
{
	int differences = 0;
	   	for (int i = 0; i < WORD_LENGTH; i++) {
			if (word1[i] != word2[i]) {
				differences = differences + 1;
			}
			
   }
	if (differences == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
myou984,1696901935,1,"int OneLetterDifference(char *word1, char *word2)
{

	int countDifferences = 0;
	int i;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			countDifferences++;
		}
	}
	if (countDifferences != 1) {
		return 0;
	} else {
		return 1;
	}
}",1
mzha612,1696718963,1,"int OneLetterDifference(char *word1, char *word2)
{
int i = 0;
int diff = 0;
while (word1[i] != '\0') {
if (word1[i] != word2[i]) {
diff++;
}
i++;
}
return diff == 1;
}",1
nabr105,1697438090,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0; 
	for (int i = 0; i < WORD_LENGTH; i++) 
	{
		if(word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1) {
		return 1;
	} else {
		return 0; 
	}
}",1
nalg484,1697315215,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 4
int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;  
    int i = 0;
    while(i < WORD_LENGTH) {
        if(word1[i] != word2[i]) {
            differences++;
            if(differences > 1) {
                return 0;
            }
        }
        i++;
    }
    return differences == 1;
}",0
nalg484,1697315281,2,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;  
    int i = 0;
    while(i < WORD_LENGTH) {
        if(word1[i] != word2[i]) {
            differences++;
            if(differences > 1) {
                return 0;
            }
        }
        i++;
    }
    return differences == 1;
}",1
nask472,1697149488,1,"
#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i <WORD_LENGTH; i++ ){
		if( word1[i] != word2[i]){
			count++;
		}
		}
		
	if (count == 1) {
		return 1;
	} else {
		return 0;
	}

	
return 0;

}",1
ncha509,1696972701,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int i;
    int count=0;
    for(i=0;i<=3;i++){
        if (word1[i]!=word2[i]){
            count++;
        }
    }
    if (count==1){
        return 1;
    }else{
        return 0;
    }
    
}",1
ndas832,1697189771,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int differ, i; 
    differ = 0; 
    for (i=0; i<WORD_LENGTH-1; i++) {
        if (word1[i] != word2[i]) {
            differ ++; 
        }
    } 
    if (differ == 1) {
        return 1; 
    } else {
        return 0; 
    }
    
}",1
ndso791,1697428361,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    
    for (int i = 0; i < 5 - 1; i++)
    {
        if (word1[i] != word2[i])
        {
            differenceCount++;
            if (differenceCount > 1)
            {
                return 0;
            }
        }
    }
    
    return differenceCount == 1;
}",1
ngam724,1696818998,1,"int OneLetterDifference(char* word1, char* word2)
{	
	int count = 0; 
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++; 
		
		}
	}
	if (count == 3) {
		return 1;
	}
	return 0;
}",1
ngan146,1697163106,1,"int OneLetterDifference(char *word1, char *word2) {
    int flag = 0;

    for(int i = 0; i <4; i++) {
        if(word1[i] != word2[i]) {
            flag = flag + 1;
        }
    }

    if(flag = 1) {
        return 1;
    }else {
        return -1;
    }
}",0
ngan146,1697163118,2,"int OneLetterDifference(char *word1, char *word2) {
    int flag = 0;

    for(int i = 0; i <4; i++) {
        if(word1[i] != word2[i]) {
            flag = flag + 1;
        }
    }

    if(flag == 1) {
        return 1;
    }else {
        return -1;
    }
}",0
ngan146,1697163136,3,"int OneLetterDifference(char *word1, char *word2) {
    int flag = 0;

    for(int i = 0; i <4; i++) {
        if(word1[i] != word2[i]) {
            flag = flag + 1;
        }
    }

    if(flag == 1) {
        return 1;
    }else {
        return 0;
    }
}",1
ngna565,1697263635,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int difference = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        
        if (word1[i] != word2[i]) {
            
            difference++;
            if (difference > 1) {
                return false; 
            }
        }
    }

    return (difference == 1);
}",1
nhar865,1697019935,1,"int OneLetterDifference(const char *word1, const char *word2) {
    int diff = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diff = !diff;

            if (!diff) {
                return 0;
            }
        }
    }

    return diff;
}",1
nhrs452,1697007823,1,"int count=0;
	for(int i=0; i<4; i++){
		if (word1[i] == word2[i]){
			count++;
		}
	}
	
	if(count > 2){
		return 1;
	}
	else{
		return 0;
	}",0
nhrs452,1697008307,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	for(int i=0; i<4; i++){
		if (word1[i] == word2[i]){
			count++;
		}
	}
	
	if(count > 2){
		return 1;
	}
	else{
		return 0;
	}
}",0
nhrs452,1697008436,3,"int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	for(int i=0; i<4; i++){
		if (word1[i] == word2[i]){
			count++;
		}
	}
	
	if(count = 3){
		return 1;
	}
	else{
		return 0;
	}
}",0
nhrs452,1697008543,4,"int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	for(int i=0; i<4; i++){
		if (word1[i] == word2[i]){
			count++;
		}
	}
	
	if(count == 3){
		return 1;
	}
	else{
		return 0;
	}
}",1
nhua986,1697274650,1,"int OneLetterDifference(char *word1, char *word2)
{
    
    int result;
    
    // statements for each true possibilty
    if ((word1[0] != word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) {
        result = 1;
    } else if ((word1[0] == word2[0]) && (word1[1] != word2[1]) && (word1[2] == word2[2]) && (word1[3] == word2[3])) {
        result = 1;
    } else if ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] != word2[2]) && (word1[3] == word2[3])) {
        result = 1;
    } else if ((word1[0] == word2[0]) && (word1[1] == word2[1]) && (word1[2] == word2[2]) && (word1[3] != word2[3])) {
        result = 1;
    } else {
        result = 0;
    }
	return result;
}",1
nhut042,1697322575,1,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0;
    for(int i = 0; i < 4; i++)
    {
        if(word1[i] != word2[i])
        {
            diff++;
        }
    }

    if(diff == 1)
    {
        return 1;
    }
    return 0;
}",1
nisa397,1697361758,1,"int OneLetterDifference(char* word1, char* word2) {
	int i, j, count=0;

	for (i = 0; i < 4;i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",0
nisa397,1697361881,2,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int count=0;

	for (i = 0; i < 4;i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",1
njon803,1697001378,1,"int OneLetterDifference(char *word1, char *word2)
{

	int count = 0;
	
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	
	if (count == 3) {
		return 1;
	}
	
	return 0;
}",1
nlal162,1697351456,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return differences == 1; 
}
",1
nmah920,1697309544,1,"int OneLetterDifference(char *word1, char *word2)
{
    int chardiff_count = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i ++)
    {
        if (word1[i] != word2[i])
        {
            chardiff_count++;
        }
        
        if (chardiff_count > 1)
        {
            return 0;
        }
    }
    
    return 1;
}",0
nmah920,1697309753,2,"int OneLetterDifference(char *word1, char *word2)
{
    int chardiff_count = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i ++)
    {
        if (word1[i] != word2[i])
        {
            chardiff_count++;
        }
        
        if (chardiff_count > 1)
        {
            return 0;
        }
    }

    if (chardiff_count == 0)
    {
        return 0;
    }
    
    return 1;
}",1
nqua370,1697449775,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

 
    for (int i = 0; i < 4; i++) {
       
        if (word1[i] != word2[i]) {
            count += 1;
           
            if (count > 1) {
                return 0; 
            }
        }
    }

    return count == 1; 
}

 ",1
nren130,1697104549,1,"#include <stdio.h>
#define WORD_LENGTH 4


int OneLetterDifference(char *word1, char *word2) {
    
int count = 0;

for (int i = 0; i < 4; i++) {
    if (word1[i] != word2[i]) {
        count++;
    }
}

if (count == 1) {
   return 1;
}
else {
    return 0;
}

}
",0
nren130,1697105331,2,"int OneLetterDifference(char *word1, char *word2) {
    
int count = 0;

for (int i = 0; i < 4; i++) {
    if (word1[i] != word2[i]) {
        count++;
    }
}

if (count == 1) {
   return 1;
}
else {
    return 0;
}

}
",1
nrub019,1697011407,1,"int OneLetterDifference(char *word1, char *word2) {

    int count = 0;

    for (int i = 0; i < WORD_LENGTH-1; i++){
        if (word1[i] == word2[i]){
            count++;
        }
    }

  if (count == 3) {
      return 1;
  }else {
      return 0;
  }
}",1
nthe160,1697350676,1,"int OneLetterDifference(char* word1, char* word2) {
    int i = 0;
    int count = 0;
    while (word1[i] != '\0') {
            if (word1[i] != word2[i]) {
                count = count + 1;
            }
            i = i + 1;
    }
    if (count == 1) {
        return 1;
    }
       
}",0
nthe160,1697350761,2,"int OneLetterDifference(char* word1, char* word2) {
    int i = 0;
    int count = 0;
    while (word1[i] != '\0') {
            if (word1[i] != word2[i]) {
                count = count + 1;
            }
            i = i + 1;
    }
    if (count == 1) {
        return 1;
    }
    else {
        return 0;
    }
    
}",1
ntia856,1697326163,1,"int OneLetterDifference(char *word1, char *word2) {
    int length1 = strlen(word1);
    int length2 = strlen(word2);

    if (length1 != length2) {
        return 0; 
    }

    int differences = 0; 
    for (int i = 0; i < length1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }
    if (differences == 1){
        return 1; 
    }
}",0
ntia856,1697326448,2,"int OneLetterDifference(char *word1, char *word2) {
    int length1 = strlen(word1);
    int length2 = strlen(word2);

    if (length1 != length2) {
        return 0; 
    }

    int differences = 0; 
    for (int i = 0; i < length1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }
    if (differences == 1){
        return 1; 
    }
    return 0;
}",1
ntur101,1697272949,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int count = 0;

	
	for (int i = 0; i < 4; i++)
	{
		if (word1[i] == word2[i])
		{
			count++;
		}
	}

	if (count == 3)
	{
		return 1;
	}
	return 0;
	
	//return word1[0] == word2[0];
}",1
nwei818,1696832171,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < WORD_LENGTH; i++ ){
        if (word1[i] != word2[i]){
            count ++;
        }
    }

    if (count == 1){
        return 1;
    } else {
        return 0;
    }
}",1
nwil850,1696976227,1,"int OneLetterDifference(char *word1, char *word2)
{
    int x = 0, y = 0;
	for (int i = 0; i <= 5; i++){
        if (word1[i] != word2[i]){
            x++;
            y = i;
        }
    }
    if (x == 1){
        return word1[y] == word2[y];
    }
}",0
nwil850,1696976394,2,"int OneLetterDifference(char *word1, char *word2)
{
    int x = 0, y = 0;
	for (int i = 0; i <= 5; i++){
        if (word1[i] != word2[i]){
            x++;
            y = i;
        }
    }
    if (x == 1){
        return word1[y] == word2[y];
    }
    else{
        return 0;
    }
}
",0
nwil850,1696976508,3,"int OneLetterDifference(char *word1, char *word2)
{
    int x = 0, y = 0;
	for (int i = 0; i < 5; i++){
        if (word1[i] != word2[i]){
            x++;
            y = i;
        }
    }
    if (x == 1){
        return 1;
    }
    else{
        return 0;
    }
}
",0
nwil850,1696976533,4,"int OneLetterDifference(char *word1, char *word2)
{
    int x = 0;
	for (int i = 0; i < 5; i++){
        if (word1[i] != word2[i]){
            x++;
        }
    }
    if (x == 1){
        return 1;
    }
    else{
        return 0;
    }
}
",1
nyua944,1696995864,1,"int OneLetterDifference(char *word1, char *word2) {
    int counter = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            counter++;
        }
    }
    
    if (counter == 1) {
        return 1;
    }
    return 0;
}",1
obar199,1697245708,1,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for(int i = 0;i<5;i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    return (count == 1);
}",1
ogab251,1697356246,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    
    for (i = 0; i < 4; i++) {
            if (word1[i] != word2[i]) {
                return 1; 
            }
        }
    return 0;
    }",0
ogab251,1697356635,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count;
    
    for (i = 0; i < 4; i++) {
            if (word1[i] != word2[i]) {
                count++;
            }
            if (count > 1) {  
                return 0; 
                
            } else if (count == 1) {
                return 1;
            }
    }
}",0
ogab251,1697356928,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count = 0;
    
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
        
        if (count > 1) {  
            return 0; 
        }
    }
    return count == 1;
}",1
ogan176,1697276749,1,"int OneLetterDifference(char *word1, char *word2)
{
    int differenceCount = 0;

    for(int i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            differenceCount++;
        }
    }

    if (differenceCount == 1){
        return 1;
    } else {
        return 0;
    }
}",1
ogar584,1697159784,1,"#include <stdio.h>
#include <string.h>
int OneLetterDifference(char *word1, char *word2)
{
    int i, length, count;
    length = strlen(word1);
    for (i = 0; i < length; i++)
    {
        if (word1[i] != word2[i])
        {
            count++;
        }
    }
    if (count == 1)
    {
        return 1;
    }
    return 0;
}",0
ogar584,1697160101,2,"#include <stdio.h>
#include <string.h>
int OneLetterDifference(char *word1, char *word2)
{
    int i, length, count;
    count = 0;
    i = 0;
    length = strlen(word1);
    for (i = 0; i < length; i++)
    {
        if (word1[i] != word2[i])
        {
            count++;
        }
    }
    if (count == 1)
    {
        return 1;
    }
    return 0;
}",1
oguo680,1697167945,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i, count;
    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    } 
	if (count == 1) {
	    return word1[0] == word2[0];
    }
}",0
oguo680,1697168512,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i, count = 0;
    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    } 
	if (count == 1) {
	    return word1[0] == word2[0];
    }
    return 0;
}",0
oguo680,1697168798,3,"int OneLetterDifference(char *word1, char *word2)
{
    int i, count = 0;
    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    } 
	if (count == 1) {
	    return 1;
    }
    return 0;
}",1
oko158,1697183619,1,"int OneLetterDifference(char* word1, char* word2) {
    int chacount = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            chacount++;
        }

        if (chacount > 1) {
            return 0;  
        }
    }

        return chacount==1;  
}",1
onic423,1697446582,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    // Loop through each character of the words
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    // Return true if there's exactly one difference, false otherwise
    return (differences == 1) ? 1 : 0;
}",1
opat597,1697430468,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	for (i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			count++;
		} 
	}
	if (count == 1){
		return 1;
	} else{
		return 0;
	}
}",1
opre469,1697342101,1,"#define _CRT_SECURE_NO_WARNINGS

/* A word game where each player must substitute one letter in a word to generate a new word */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

/* The dictionary we are using has fewer than 2500 words */
#define MAX_WORDS 2500
#define WORD_LENGTH 5

//one letter difference checks if an inputted word if different to the original word by one letter//
int OneLetterDifference(char* word1, char* word2)
{
	int i = 0; 
	int difference = 0;

	//while loop to go through each letter of both words//
	while (word1[i] != '\0') {

		//if statement that checks if each letter in each position of both words are the same//
		if (word1[i] != word2[i]) {

			//if a letter differs between each word the count increases by 1//
			difference++;
		}
		i++;
	}

	//if both words only differs by one letter, 1 or True is returned//
	if (difference == 1) {
		return 1;
	}

	//if both words differ by more than one letter, 0 or False is returned//
	else {
		return 0;
	}
}",1
orow585,1697331496,1,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int count = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	if (count == 3) {
		return 1;
	}
	
	return 0;
}",1
osca399,1697142430,1,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2)
{
	int Difference = 0;

	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			Difference++;
		}
		if (Difference == 1) {
			return 1;
		} 
		else {
			return 0;
		
		}
	}
	
}",0
osca399,1697142915,2,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {
	int difference = 0;

	for (int i = 0; i < 5 - 1; i++) {
		if (word1[i] != word2[i]) {
			difference++;
			if (difference > 1) {
				return 0;
			}
		}
	}

	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}
",1
oshi740,1697239910,1,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
		if (count > 1) {
			return 0;
		}
	}
	return count ==1;
}",1
osko432,1696911902,1,"#include <stdio.h>
#define WORD_LENGTH 5
 int OneLetterDifference(char *word1, char *word2){
int a=0;
     for (int deez=0; deez<4; deez++){
         if (!(word1[deez]==word2[deez])){
             a++;
         }
     }
 
    if (a==1){
        return 1;
    }
    else{
        return 0;
    }
 }
",1
pchh683,1697427584,1,"#include <stdio.h>


int OneLetterDifference(char *word1, char *word2)
{
    int check = 0;
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        check++;
    }
    if (check == 1)
    {
        return check;
    }
    else
    {
        return 0;
    }
}",1
pfil701,1697448785,1,"int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0;
            }
        }
    }

    return differenceCount == 1;
}",1
pfon568,1697004341,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            return 1;
        }
    }
    
    return 0;
}",0
pfon568,1697004982,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int differentLetters = 0;
    
    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            differentLetters++;
            
            if (differentLetters > 1)
            {
                return 0;
            }
        }
    }
    
    return differentLetters == 1;
}",1
phao209,1697441466,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
        }

        if (differenceCount > 1) {
            return 0;
        }
    }

    return (differenceCount == 1) ? 1 : 0;
}",1
pkim777,1696815548,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    int i;
    int result = 0;
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    }
    return result;
}",1
plah275,1697163835,1,"int OneLetterDifference(char *word1, char *word2) {

int count = 0;

for(int i = 0; i < 4; i++) {
    
    if(word1[i] != word2[i]) {
        
        count ++;
    
    }
    
}

if(count == 1) {
    return 1;
} else {
    return 0;
}

}",1
plan310,1697156537,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i, count = 0;
    
	for (i = 0; i < 4; i++) {
	    if (word1[i] != word2[i]) {
	        count++;
	    }
	}
	
	return count == 1;
	
}",1
ppax865,1697442667,1,"int OneLetterDifference(char word1[], char word2[]){
    
    int length, i, count;

    count = 0;
    length = 4;

    for (i = 0; i < length; i++){
        if (word1[i] == word2[i]){
            count++;
        }
    }
    if (count == 3){
        return 1;
    } else{
        return 0;
    }
}
",1
pper327,1697339273,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	int i;

	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1){
		return 1;
	} else {
		return 0;
	}

}",1
ppra303,1697230439,1,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0; //  Difference counter

    for (int p = 0; p < wordlength - 1; p++) { // Using for loop to iterate thru each character
        if (word1[p] != word2[p]) {
            difference++; // Increment the differences count if characters at this position differ
        }
    }

    /* Return true (i.e.1)*/
    return (difference == 1);
}",0
ppra303,1697230489,2,"#include <stdio.h>

#define wordlength 5

int OneLetterDifference(char *word1, char *word2) {
    int difference = 0; //  Difference counter

    for (int p = 0; p < wordlength - 1; p++) { // Using for loop to iterate thru each character
        if (word1[p] != word2[p]) {
            difference++; // Increment the differences count if characters at this position differ
        }
    }

    /* Return true (i.e.1)*/
    return (difference == 1);
}",1
pshe539,1696990449,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differences = 0;
	 
	for (int i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i]){
			differences++;
		}
	}

	if (differences == 1){
		return 1;
	} else {
		return 0;
	}
}",1
psin207,1696842427,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int a=0;
    int i=0;
    for (i=0; i<4; i++) {
        if (word1[i]==word2[i]) {
            a=a+1;
        }
    }
    
    if (a==3) {
        return 1;
    } else {
        return 0;
    }
  
     
    
}",1
pwat943,1697022949,1,"int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;

//Author: Dimitri Watt
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
            if (diff > 1) {
                return 0; 
            }
        }
    }
    return diff == 1;
}",1
pwil422,1697345080,1,"    int OneLetterDifference(char *word1, char *word2){
    int differences=0;
    
        for (int i=0; i<=3; i++){
            if (word1[i]!=word2[i]){
                differences++;
            if (differences>1){
                return 0;
            }
        }
    }
    
return differences==1;
}
",1
pwu278,1697356276,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int j;

	i = 0;
	j = 0;
	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			j++;
		}
		i++;
	}

	if (j == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
pxie161,1696908198,1,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for(int i = 0; i < WORD_LENGTH; i++){
        if(word1[i] != word2[i]){
            count++;
        }
    }
    if(count == 1){
        return 1;
    }
    else{
        return 0;
    }
}
",1
pyou182,1696990221,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int i = 0;
    int count = 0;
    while (word1[i] != '\0' && word2[i] != '\0') {
        if (word1[i] != word2[i]) {
            count = count + 1;
        }
        i++;
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }

}",1
qche619,1697430823,1,"#include <stdio.h>
#include <stdbool.h>
#define WORD_LENGTH 5

bool OneLetterDifference(char *word1, char *word2) 
{
    int letterdifference = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            letterdifference++;
        }
    }
    
    return 0;
}",0
qche619,1697430863,2,"#include <stdio.h>
#include <stdbool.h>
#define WORD_LENGTH 5

bool OneLetterDifference(char *word1, char *word2) 
{
    int letterdifference = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            letterdifference++;
        }
    }
    
    return letterdifference == 1;
}",1
qkan386,1697167613,1,"int OneLetterDifference(char* word1, char* word2) {

	int count = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	if (count == 1) {
		return 1;
	}

	else {
		return 0;
	}
}",1
qmcc945,1696827969,1,"int OneLetterDifference(char *word1, char *word2)
{
	int x, output, differences;

	differences = 0;

	for (x = 0; x < WORD_LENGTH; x++) {
		if (word1[x] != word2[x]) {
			differences++;
		}
	}

	if (differences > 1) {
		return 0;
	} else {
		return 1;
	}
}",0
qmcc945,1696827986,2,"int OneLetterDifference(char *word1, char *word2)
{
	int x, differences;

	differences = 0;

	for (x = 0; x < WORD_LENGTH; x++) {
		if (word1[x] != word2[x]) {
			differences++;
		}
	}

	if (differences > 1) {
		return 0;
	} else {
		return 1;
	}
}",0
qmcc945,1696828664,3,"int OneLetterDifference(char *word1, char *word2)
{
	int x, differences;

	differences = 0;

	for (x = 0; x < (WORD_LENGTH - 1); x++) {
		if (word1[x] != word2[x]) {
			differences++;
		}
	}


	if (differences == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
qtra338,1697161132,1,"
int OneLetterDifference(char *word1, char *word2)
{
	int result = 0, i = 0; 

	while (word1[i] != '\0') {
		if (word1[i] != word2[i])
		{
			result++;
		}
		i++;
	}

	return 1 == result;
}

",1
qwu129,1697452191,1,"int OneLetterDifference(char *word1, char *word2)
{
	int different = 0;
	for (int i=0;i<WORD_LENGTH;i++){
		if (word1[i] != word2[i]){
			different++;
		}
	}
	if(different ==1){
		return 1;
	}else{
		return 0;
	}

}",1
qzho943,1697154384,1,"
int OneLetterDifference(char *word1, char *word2){
    int result = 0;
    int count = 0;
    for (int i=0;i<WORD_LENGTH - 1;i++){
        if (word1[i]!=word2[i]){
            count ++;
        }
        
    }
    if (count==1){
        result =1;
    }
    return result;
}",1
raic989,1697328500,1,"int OneLetterDifference(char* word1, char* word2) {
	int result = 0; 
	int i;
	
	for (i = 0; i < WORD_LENGTH -1; i++) {
		if (word1[i] != word2[i]) {
			result++;
		}
	}

	if (result == 1) {
		return 1;
	}
	else {
		return 0;
	}
	
}",1
rand321,1697099599,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int count = 0;
	while(word1[i] != '\0){
        if(word1[i] != word2[i]){
         count++;
        }
        i++;
    }
    if(count == 1){
       return 1;
    }else{
        return 0;
    }
}",0
rand321,1697099700,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i = 0;
    int count = 0;
	while(word1[i] != '\0'){
        if(word1[i] != word2[i]){
         count++;
        }
        i++;
    }
    if(count == 1){
       return 1;
    }else{
        return 0;  
    }
}",1
rbaj698,1697419034,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

{
	int OneLetterDifference(char *word1, char *word2)
	
	int letterDifference = 0;
	int i;
	
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if word1[i] != word2[i] {
			letterDifference++;
			if (letterDifference > 1) {
				return false;
			}
		}
	}
	
	return true;
}
",0
rbaj698,1697419204,2,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)

{
	int letterDifference = 0;
	int i;
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			letterDifference++;
			if (letterDifference > 1) {
				return 0;
			}
		}
	}
	
	return 1;
}",0
rbaj698,1697419293,3,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)

{
	int letterDifference = 0;
	int i;
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			letterDifference++;
			if (letterDifference == 1) {
				return 1;
			}
		}
	}
	
	return 0;
}",0
rbaj698,1697419468,4,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)

{
	int letterDifference = 0;
	int i;
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			letterDifference++;
		} 
		
		if (letterDifference > 1 || letterDifference = 0) {
				return 0;
		}
	}
	
	return 1;
}",0
rbaj698,1697419478,5,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)

{
	int letterDifference = 0;
	int i;
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			letterDifference++;
		} 
		
		if (letterDifference > 1 || letterDifference == 0) {
				return 0;
		}
	}
	
	return 1;
}",0
rbaj698,1697419913,6,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)

{
	int letterDifference = 0;
	int i;
	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			letterDifference++; 
			if (letterDifference > 1) {
				return 0;
			}
		}
	}
	
	if (letterDifference == 1) {
		return 1;
	} else if (letterDifference == 0) {
		return 0;
	} else {
		return 0;
	}
}",1
rbat374,1697401168,1,"int OneLetterDifference(char *word1, char *word2)
{
	int flag = 0;
	int i;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			flag++
		}
	}
	if (flag == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
rbat374,1697401180,2,"int OneLetterDifference(char *word1, char *word2)
{
	int flag = 0;
	int i;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			flag++;
		}
	}
	if (flag == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
rbat561,1697060283,1,"int OneLetterDifference(char *word1, char *word2)
{
	int similarity = 0;

	for (int i = 0; i < 4; i++)
	{
		if (word1[i] == word2[i])
		{	
			similarity++;
		}
	}
	
	if (similarity == 3)
	{
		return 1;
	} else {
		return 0;
	}
	
}",1
rbui853,1697193398,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int sum = 0;
	int difference = 0;

	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			sum++;
		}
	}

	if (sum == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
rbui853,1697193458,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int sum = 0;

	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			sum++;
		}
	}

	if (sum == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
rbus291,1697152972,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
        if (count > 1) {
            return 0; 
        }
    }
    return count ; 
}
",1
rchi339,1697191098,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    int result;
    
    for(int i = 0; i < 4; i++){
        if(word1[i] == word2[i]){
            count++;
        }
    }
    
    if(count == 3){
        result = 1;
    }
    else{
        result = 0;
    }
    return result;
}",1
rcou530,1696859620,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differenceCount = 0;
	for (int i = 0; i < 4; i++){
		if (word1[i] != word2[i]) {
			differenceCount++;

			if (differenceCount>1){
				return 0;
			}
		}
	}
	return differenceCount == 1;
}",1
rdas322,1697436100,1,"#include <stdio.h>

#define WORD_LENGTH 5  // Including the null terminating character

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;  // Initialize the count of differences to 0
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {  // Loop through each character except the null terminator
        if (word1[i] != word2[i]) {
            differenceCount++;  // If characters differ, increment the count
        }
        if (differenceCount > 1) {
            return 0;  // If more than one difference is found, return false (0)
        }
    }
    
    return differenceCount == 1;  // Return true (1) if exactly one difference is found
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";
    
    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }
    
    return 0;
}
",0
rdas322,1697436410,2,"#include <stdio.h>

#define WORD_LENGTH 5 

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;  
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {  
            differenceCount++;  
        if (differenceCount > 1) {
            return 0;  
        }
    }
    
    return differenceCount == 1;  
}

",0
rdas322,1697436789,3,"#include <stdio.h>

#define WORD_LENGTH 5  

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;  
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {  
        if (word1[i] != word2[i]) {
            differenceCount++;  
        }
        if (differenceCount > 1) {
            return 0;  
        }
    }
    
    return differenceCount == 1;  
}
",1
rdic384,1697444139,1,"int OneLetterDifference(char *word1, char *word2) {
    int WORD_LENGTH = 5;
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences = differences + 1;
        }
        if (differences > 1) {
            return 0;
        }
    }
    return differences == 1;
}
",0
rdic384,1697444172,2,"int OneLetterDifference(char *word1, char *word2) {
    
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences = differences + 1;
        }
        if (differences > 1) {
            return 0;
        }
    }
    return differences == 1;
}
",1
rdon807,1697381853,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count;
	int result=0;
	for(int i=0;i<(WORD_LENGTH-1);i++){
	    if(word1[i]==word2[i]){
	        count++;
	    }
	}
	if (count==1){
	    result=1;
	}
	return result;
}",0
rdon807,1697382996,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	int result=0;
	int ture =1;
	for(int i=0;i<(4);i++){
	    for(int j=0;j<(4);j++){
	        
	    if(word1[i]==word2[j]){
	        count++;
	    }
	    }
	}
	if (count==3){
	    result=1;
	}
	return result==ture;
}",0
rdon807,1697414617,3,"int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	int result=0;
	int ture =1;
	for(int i=0;i<(4);i++){
	    for(int j=0;j<(4);j++){
	        
	    if(word1[i]==word2[j]){
	        count++;
	    }
	    }
	}
	for (int k=0;k<4;k++){
	    for (int l=(k+1);l<4;l++){
	        if (word1[k]==word1[l]||word2[k]==word2[l]){
	            count--;
	        }
	    }
	}
	if (count==3){
	    result=1;
	}
	return result==ture;
}",0
rdon807,1697414822,4,"int OneLetterDifference(char *word1, char *word2)
{
	int count=0;
	int result=0;
	int ture =1;
	for(int i=0;i<(4);i++){
	   
	    if(word1[i]==word2[i]){
	        count++;
	   
	    }
	}

	if (count==3){
	    result=1;
	}
	return result==ture;
}",1
rdun690,1697012872,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++){
        if (word1[i] != word2[i]){
            count++;
            if (count > 1) {
            return 0;
            }
        }
    }
    
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
    
}",1
rger104,1696937560,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int digitsshared=0;
	for (i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			digitsshared++;
		}
	}
	if (digitsshared == 3) {
		return 1;
	}

	return 0;
}",1
rgre692,1697449904,1,"   int OneLetterDifference(char *word1, char *word2){
      int compare;
    for (int i = 0; i < 4; i++) {
            if (word1[i] == word2[i]) {
            compare++;
     if (compare == 3) {
            return 1; 
        }
    }
    
    return (compare == 0);
    }
    }",0
rgre692,1697449997,2,"   int OneLetterDifference(char *word1, char *word2){
      int compare = 0;
    for (int i = 0; i < 4; i++) {
            if (word1[i] == word2[i]) {
                compare++;
            if (compare == 3) {
                return 1; 
        }
    }
    
    return (compare == 0);
    }
    }",0
rgre692,1697450047,3,"   int OneLetterDifference(char *word1, char *word2){
      int compare = 0;
    for (int i = 0; i < 4; i++) {
            if (word1[i] == word2[i]) {
                compare++;
            if (compare == 3) {
                return 1; 
        }
    }
    }
    return (compare == 0);
    
    }",0
rgre692,1697450066,4,"   int OneLetterDifference(char *word1, char *word2){
      int compare = 0;
    for (int i = 0; i < 4; i++) {
            if (word1[i] == word2[i]) {
                compare++;
            if (compare >= 3) {
                return 1; 
        }
    }
    }
    return (compare == 0);
    
    }",0
rgre692,1697450090,5,"   int OneLetterDifference(char *word1, char *word2){
      int compare = 0;
    for (int i = 0; i < 4; i++) {
            if (word1[i] == word2[i]) {
                compare++;
            if (compare <= 3) {
                return 1; 
        }
    }
    }
    return (compare == 0);
    
    }",0
rgre692,1697450126,6,"   int OneLetterDifference(char *word1, char *word2){
      int compare = 0;
    for (int i = 0; i < 4; i++) {
            if (word1[i] == word2[i]) {
                compare++;
            if (compare == 3) {
                return 1; 
        }
    }
    }
    return (compare == 0);
    
    }",0
rgre692,1697450325,7,"       int OneLetterDifference(char *word1, char *word2){
      int compare = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            compare++;
            if (compare == 3) {
                return 1; 
        }
    }
    }
    return (compare == 0);
    
    }",0
rgre692,1697450671,8,"       int OneLetterDifference(char *word1, char *word2){
      int compare = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            compare++;
            if (compare == 3) {
                return 0; 
                
        }
        } else if (compare != 3) {
            return 1;
    }
    }

    }",0
rgre692,1697450889,9,"int OneLetterDifference(char *word1, char *word2) {
    int compare = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            compare++;
            if (compare == 2) {
                return 0; 
            }
        }
    }

    if (compare == 1) {
        return 1;
    } else {
        return 0;
    }
}
",1
rkan756,1697150178,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int num_diff_letters = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			num_diff_letters++;
		}
	}
	if (num_diff_letters == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
rkar406,1696931774,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}
	if (count == 3) { 
		return 1; 
	}
	else { 
		return 0;
	}
}",1
rkha931,1696991158,1,"int OneLetterDifference(char *word1, char *word2) {
        int counter = 0;
        int i = 0;

        while (i < WORD_LENGTH - 1)
        {
            if (word1[i] != word2[i]) {
                counter = counter + 1;
            }
            i++;
        }
         
         if (counter == 1) {
            return 1;
         }

        return 0;
    }",1
rkir245,1697407572,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differingLetters = 0;
    int result = 1;

    for (int i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            differingLetters++;
        }
    }

    if (differingLetters != 1)
    {
        result = 0;
    }

    return result;
}",1
rleg709,1697350758,1,"#include <stdio.h>
#include <string.h>

#define WORDLENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
	int i, len, answer;
    answer = 0;
    len = 0;
    for (i = 0; (i <= (WORDLENGTH -  2)); i++) 
    { 
        if (word1[i] == word2[len]) // compares the strings of the two words at the same index position
        {
            answer++;
        } 
        else 
        {
            answer += 0;
        }
        len++; 
    }
    if (answer == (WORDLENGTH - 2)) {return 1;} //if only 1 character differs, then length == answer
    else {return 0;}
}",1
rlin108,1697111790,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count;
	count = 0;

	for (i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count += 1;
		}
	}
	
	if (count == 1) {
		return count;
	}
	else {
		return 0;
	}
}",1
rmar633,1697174811,1,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    int i;
    for (i=0; i<5; i++){
        if(word1[i] != word2[i]){
            count += 1;
        }
    }
    if(count == 1){
        return 1;
    }
    else {
        return 0;
    }
}",1
rmur989,1697362489,1,"#include <stdio.h>


int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i = 0; i < 4; i++){
        if(word1[i] != word2[i]){
            count++;
        }
    }
    if(count == 1){
        return 1;
    }
    else{
        return 0;
    }
}",1
rnga701,1697176526,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i,j;
    int count=0;

    for(i=0;i<(4); i++){
        if(word1[i]!=word2[i]){
            count++;     
        }            
    }
    if(count==1){
            return 1;
    }  
    return 0;
}",0
rnga701,1697176558,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count=0;

    for(i=0;i<4; i++){
        if(word1[i]!=word2[i]){
            count++;     
        }            
    }
    if(count==1){
            return 1;
    }  
    return 0;
}",1
rnig735,1697106190,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int difference=0;
    for (int i=0; i<WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            difference++;
        }
    }
    if (difference == 1) {
        return 1;
    
    } else {
        return 0;
    }
}",1
rpar376,1697184284,1,"int OneLetterDifference(char *word1, char *word2) {
    int i=0;
    int count=0;
    while (word1[i]!='\0'&&word2[i]!='\0') {
        if (word1[i]!=word2[i]) {
            count++;
        }
        i++;
    }
    if (count==1) {
        return 1;
    } else {
        return 0;
    }
}",1
rpat943,1696990386,1,"int OneLetterDifference(char *word1, char *word2) {
    int i, count;
    count = 0;
    
    for (i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            continue;
        } else if (word1[i] != word2[i]) {
            count++;
        }
    }
    
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
rraj313,1696811598,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, lettersOff = 0, length = strlen(word1);
	for (i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			lettersOff++;
		}
	}
	if (lettersOff == 1) {
		return 1;
	} else return 0;
}",1
rroz381,1696977772,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int result[10];
    int j = 0;
    int final = 0;
    
    for (i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) {
            result[j] = 0;
        }
        else {
            result[j] = 1;
        }
        j++;
    }

    for (i = 0; i < 4; i++) {
        if (result[i] == 0) {
        final += 0;
        }
        else {
            final += 1;
        }
    }
    
    if (final == 1) {
        return 1;
    }
    else {
        return 0;
    }
    
}",1
rsha769,1697353797,1,"int OneLetterDifference(char *word1, char *word2)
{
    int differencesFound = 0;  

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
		
        if (word2[i] != word1[i]) {
            differencesFound++;
			// returns false if more than one difference is found
            if (differencesFound > 1) {
                return 0;  
            }
        }
    }
    // true if only one difference is found
    return differencesFound == 1;  
}
",1
rsha970,1697339994,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++; 
        }

        if (diffCount > 1) {
            return 0;  
        }
    }

    return diffCount == 1; 
}",1
rsin531,1697437651,1,"#include <stdio.h>
#include <stdbool.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
   
    if (strlen(word1) != 4 || strlen(word2) != 4) {
        return 0;
    }

    int differences = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            
           
            if (differences > 1) {
                return 0;
            }
        }
    }

    return differences == 1 ? 1 : 0;
}",1
rsin719,1697407208,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0; 
        }
    }

    return differenceCount == 1; 
}",0
rsin719,1697446789,2,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;
    
    for(int i = 0; i < WORD_LENGTH - 1; i++) {
        if(word1[i] != word2[i]) {
            diffCount++;
            if(diffCount > 1) {
                return 0; 
            }
        }
    }
    
    return diffCount == 1; 
}
",1
rsmi948,1697138629,1,"int OneLetterDifference(char* word1, char *word2){
    
    int i = 0;
    int nonDiffCount = 0;
    while (word1[i] != '\0') {
        if (word2[i] == word1[i]){
            nonDiffCount++;
        }
        i++;
    }
    if (nonDiffCount != 3) {
        return 0;
    } else {
        return 1;
    }
}",1
rsta265,1696999104,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    if (count == 1){
        return 1;
    }
    else {
        return 0;
    }
}",1
rtan654,1697169029,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0; 

    for(int i = 0; i < WORD_LENGTH - 1; i++){

        if (word1[i] == word2[i]){
            count ++;
        }

    }
    if (count == 3) {
        return 1;
    }
    return 0;
}
",1
rtap592,1697380662,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 3; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}

		if (count != 1) {
			return 0;
		}
	}


	// You should correctly complete this function defintion
	//return word1[0] == word2[0];
	return 1;
}",0
rtap592,1697381172,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 3; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}


	// You should correctly complete this function defintion
	//return word1[0] == word2[0];
	if (count > 1) {
		return 0;
	}
	else {
		return 1;
	}
}",0
rtap592,1697381308,3,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}


	// You should correctly complete this function defintion
	//return word1[0] == word2[0];
	if (count > 1) {
		return 0;
	}
	else {
		return 1;
	}
}",0
rtap592,1697381508,4,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}


	// You should correctly complete this function defintion
	//return word1[0] == word2[0];
	return count == 1;
}",1
rvog842,1697357435,1,"include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
int diffCount = 0;
int i = 0;
    
    while (word1[i] != '\0' && word2[i] != '\0') {
          if (word1[i] != word2[i]) {
            diffCount++;
        }
          if (diffCount > 1) {
              return 0;
        }
        i++;
    }
      return diffCount == 1;
}",0
rvog842,1697357611,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
int diffCount = 0;
int i = 0;
    
    while (word1[i] != '\0' && word2[i] != '\0') {
          if (word1[i] != word2[i]) {
            diffCount++;
        }
          if (diffCount > 1) {
              return 0;
        }
        i++;
    }
      return diffCount == 1;
}",1
rwar748,1696830573,1,"int OneLetterDifference(char *word1, char *word2)
{
	int status = 0;
	int i = 0;
	while(i<4){
		if(word1[i] != word2[i]){
			status = status + 1;
		}
		i++;
	}
	return(status == 1);
}",1
rzha972,1697243057,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int diffWord = 0;
	int strLength1, strLength2;
	
	strLength1 = strlen(word1) - 1;
	strLength2 = strlen(word2) - 1;

	if (strLength1 != strLength2){
		return -1;
	}
	while (word1[i] != '\0'){
		if (word1[i] != word2[i]){
			diffWord++;
			i++;
		}
		else{
			i++;
		}
	}

	if (diffWord <= 1){
		return 1;
	}
	else{
		return 0;
	}
}",0
rzha972,1697243543,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int diffWord = 0;
    int repeat = -1;
	int strLength1, strLength2;
	
	strLength1 = strlen(word1) - 1;
	strLength2 = strlen(word2) - 1;

	if (strLength1 != strLength2){
		return -1;
	}

	while (word1[i] != '\0'){
		if (word1[i] != word2[i]){
			diffWord++;
			i++;
		}
        else if (word1[i] == word2[i]){
            repeat++;
            i++;
        }
		else{
			i++;
		}
	}

	if (diffWord == 1){
		return 1;
	}
    else if(repeat >= strLength1){
        return 0;
    }
	else{
		return 0;
	}
}",1
sabo272,1696817339,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	for (int i = 0; i < 5; i ++) {
		if (word1[i] != word2[i]) {
			count ++; // if characters don't match add one to the count.
		}
	}

	if (count == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
sali153,1697174100,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differences = 0;
	// You should correctly complete this function defintion
	for (int i =0; i < WORD_LENGTH; i++)
	{
		if(word1[i] != word2[i])
		{
			differences++;
		}
	}

	if(differences != 1)
	{
		return 0;
	}
	else
	{
		return 1;
	}
}",1
sban919,1696813986,1,"#include <stdio.h>

/* WORD_LENGTH is a constant 5.*/
#define WORD_LENGTH 5

/* OneLetterDifference function takes two words with a length of 4 as inputs,
then compares the two words character by character,
and returns 1 only when there is exactly one character that differs. */

int OneLetterDifference(char *word1, char *word2) 
{
    /* The difference starts at 0. */
    int difference = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        /* Compare each character with same position. */
        if (word1[i] != word2[i])
        {
            /* Add difference counting when character from word is different. */
            difference++;
        }
    }
    
    if (difference == 1)
    {
        /* Return true only when difference is 1. */
        return 1;
    }
    else
    {
        return 0;
    }
}",1
sbas887,1697262150,1,"int OneLetterDifference(char *word1, char *word2) {
	int tally = 0;

	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			tally++;
		}
	}

	if (tally == 1) {
		return 1;
	}
	return 0;
}",1
sben564,1696911656,1,"int OneLetterDifference(char *word1, char *word2) {
    
    for (int i = 0; i < WORD_LENGTH; i++) {
        
        if (word1[i] != word2[i]) {
            
            count ++;
            
        }
        
    }
    
    return (count == 1);
    
}",0
sben564,1696911835,2,"int OneLetterDifference(char *word1, char *word2) {
    
    int count = 0;
    
    for (int i = 0; i < WORD_LENGTH; i++) {
        
        if (word1[i] != word2[i]) {
            
            count++;
            
        }
        
    }
    
    return (count == 1);
    
}",1
sbha564,1697282911,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH && differences <= 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    return differences == 1;
}",1
sbou664,1697446709,1,"    int OneLetterDifference(char *word1, char *word2){
int count = 0;
int i = 0;
int j;
for(i = 0; i != '\0'; i++){
    for(j = 0; j < '\0'; j++){
    if(word1[i] == word2[j]){
        count++;
    }
    
}
}
if(count == 4){
    return 0;}
    else return 1;}
    
",0
sbou664,1697449334,2,"    int OneLetterDifference(char *word1, char *word2){
int count;
int i;
count = 4;
for(i = 0; i < 5; i++){
    if(word1[i] != word2[i]){
    count--;
        
    }
 

}
if(count == 3){
    return 1;}
    else return 0;
        
    }
",1
sbro373,1696975842,1,"int OneLetterDifference(char *word1, char *word2) {

    int differences = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    if (differences == 1) {
        return 1;
    }

    return 0;
}",1
scar362,1697258067,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    int length = WORD_LENGTH;  // Assuming WORD_LENGTH is defined somewhere

    for (int i = 0; i < length; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
sche525,1697186068,1,"int OneLetterDifference(char *word1, char *word2) {
    if (word1[0] == word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] != word2[3]) {
        return 1;
    } else if ((word1[0] == word2[0] && word1[1] == word2[1] && word1[2] != word2[2] && word1[3] == word2[3])) {
        return 1;
    } else if ((word1[0] == word2[0] && word1[1] != word2[1] && word1[2] == word2[2] && word1[3] == word2[3])) {
        return 1;
    } else if ((word1[0] != word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] == word2[3])) {
        return 1;
    } else {
        return 0;
    }
}",1
scho575,1697158968,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1)
                return 0;
        }
    }
    return differences == 1 ? 1 : 0;
}",1
schu718,1697253040,1,"int OneLetterDifference(char* word1, char* word2)
{
	int ans = 0;
	int count = 0;

	for (int i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	if (count == 1)
	{
		ans = 1;
	}

	return ans;
}",1
schu800,1697259788,1,"int OneLetterDifference(char *word1, char *word2){
    int WORD_LENGTH =5;
    int count = 0;
    for (int i =0;i < WORD_LENGTH - 1;i++){
        if (word1[i] == word2[i]){
        count++;
        }
    }
    if (count == 3){
        return 1;
    }
    else {
        return 0;
    }
}",0
schu800,1697259861,2,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i =0;i < 4;i++){
        if (word1[i] == word2[i]){
        count++;
        }
    }
    if (count == 3){
        return 1;
    }
    else {
        return 0;
    }
}",1
sdal739,1697355406,1,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion

	int i;
	int diffcount;
	diffcount = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diffcount++;
		}
	}

	if (diffcount == 1) {
		return 1; // TRUE
	}
	else {
		return 0; // FALSE
	}
}",1
sden589,1697436959,1,"int OneLetterDifference(char *word1, char *word2)
{
int count;
count =0;


for (int i = 0; word1[i] != '\0' && word2[i] != '\0'; i++){
    
        if (word1[i] == word2[i]){
            count ++;
        }
    
    
    }
    
if (count == 3){
    return 1;
    }else
    { return 0;
}

}",1
sekb555,1696922201,1,"int OneLetterDifference(char *word1, char *word2)
{
    //initstlises the amount of letters that is different as 0
    int diff_letters = 0;
    
    //compares each letter of the the first word to the second word
	for(int i = 0; i < 4; i++)
    {
            if(word1[i] != word2[i])
            {
                diff_letters++;
            }
    } 
   
   //checks if there are more or less then 1 different letter within the 2 different words
    if (diff_letters == 1)
    {
        return 1;
    }
    else{
        return 0;
    }

	// You should correctly complete this function defintion
	//return word1[0] == word2[0];
}",1
sfry192,1697181703,1,"int OneLetterDifference(char *word1, char *word2)
{
    int j = 0;
    for(int i = 0; i<4; i++){
        if(word1[i] = word2[i]){
            j++;
        }
    }    
    if(j == 1){
        return 1;
    }
    else{
        return 0;
    }
    
    
}",0
sfry192,1697181728,2,"int OneLetterDifference(char *word1, char *word2)
{
    int j = 0;
    for(int i = 0; i<4; i++){
        if(word1[i] == word2[i]){
            j++;
        }
    }    
    if(j == 1){
        return 1;
    }
    else{
        return 0;
    }
    
    
}",0
sfry192,1697181866,3,"int OneLetterDifference(char *word1, char *word2)
{
    int j = 0;
    for(int i = 0; i<4; i++){
        if(word1[i] != word2[i]){
            j++;
        }
    }    
    if(j == 1){
        return 1;
    }
    else{
        return 0;
    }
    
    
}",1
sgal263,1697413564,1,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
for (int i = 0; i < WORD_LENGTH; i++) {
if (word1[i] != word2[i]){
count ++;
}
}

return count == 1;
}
",1
sgib237,1697253398,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5
#include <stdbool.h>

int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }

        if (diff > 1) {
           
            return 0;
        }
    }

    return diff == 1;
}
",1
shan333,1697437157,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i, count;
	count = 0;
	for(i=0; i<4; i++){
		if (word1[i] != word2[i]){
			count++;
			if(count >= 2){
				return 0;
			}
		}
	}
	return 1;
}",0
shan333,1697437388,2,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i, count;
	count = 0;
	for(i=0; i<4; i++){
		if (word1[i] != word2[i]){
			count++;
		}
	}
	if (count == 1){
		return 1;
	} else {
		return 0;
	}
}",1
shan790,1697105075,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
she940,1696987898,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;
	for (i = 0; i < (WORD_LENGTH - 1); i++) {
		if (word1[i] != word2[i]) {
			count++;
		}

	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
shsa718,1697267425,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
	for (int i=0; i<WORD_LENGTH-1; i++){

		if (word1[i]!=word2[i]){
			difference = difference+1;
		}
	}
	return (difference == 1);
}
",1
shua365,1696930614,1,"int OneLetterDifference(char *word1, char *word2){
    int diff_count=0;
    for (int i=0; i<WORD_LENGTH;i++){
        if (word1[i]!=word2[i]){
            diff_count++;
        }
    }
    if (diff_count!=1){
        return 0;
    }
    return 1;
}",1
shum116,1697142471,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;

	while (i < 4) {

		if (word1[i] != word2[i]) {
			count++;
		}
		i++;
	}

		if (count != 1) {
			return 0;
		}
		else if (count == 1) {
			return 1;
		}
		
	return 1; 
}",1
sike083,1696974028,1,"int OneLetterDifference(char *word1, char *word2) {
    int i;
    int diff = 0;
    for (i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
        if (diff > 1) {
        return 0;
        } 
    }
    
    return diff == 1;
}
",1
sjaf029,1697271028,1,"#include <stdio.h>

int OneLetterDifference(const char* word1, const char* word2) {
	int count = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;

			if (count != 1) {
				return 0;
			}
		}
	}
	return count == 1;
}",1
sjai563,1697246179,1,"int OneLetterDifference(char *word1, char *word2)
{
	int numDifferences = 0 ;

    if (word1[0] != word2[0])
        numDifferences++ ;
    if (word1[1] != word2[1])
        numDifferences++ ;
    if (word1[2] != word2[2])
        numDifferences++ ;
    if (word1[3] != word2[3])
        numDifferences++ ;

    return numDifferences == 1 ;
}",1
sjam309,1697161190,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
	int count;
	count = 0;
	i = 0;
	
	while(word1[i] != '\0'){
	    if (word1[i] != word2[i]){
	       count++;
	       
	    }
	    i++;
	}
	
	if(count == 1){
	    return 1;
	}else{
	    return 0;
	}
}",1
sjob296,1697359259,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; ++i) 
    {
        if (word1[i] != word2[i]) 
        {
            differences++;
        }

        if (differences > 1) 
        {
            return 0;  
        }
    }

    return differences == 1;  
}",1
skan221,1697413559,1,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
        if (diff > 1) {
            return 0;   
        }
    }
   if (diff == 1) {
       return 1;
   }
}
",0
skan221,1697413577,2,"#include <stdio.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diff++;
        }
        if (diff > 1) {
            return 0;   
        }
    }
   if (diff == 1) {
       return 1;
   }
   return 0;
}
",1
skea516,1696976308,1," int OneLetterDifference(char *word1, char *word2) {
     int i;
     int difference;
     for (i = 0; i < 4; i++) {
         if (word1[i] != word2[i]) {
            difference = difference + 1; 
         }
     }
     if (difference != 1) {
         return 0;
     }
     return 1;
 }
",0
skea516,1696977529,2,"int OneLetterDifference(char *word1, char *word2) {
     int i = 0;
     int same = 0;
     
    for (i=0; i < 4; i++) {
         if (word1[i] == word2[i]) {
            same = same + 1;
         }
     }
     if (same == 3) {
        return 1;
     } else{
        return 0;
     }
}
",1
skmu887,1697417874,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; ++i) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }
    
    return differences = 1; 
}",0
skmu887,1697417974,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    
    for (int i = 0; i < WORD_LENGTH - 1; ++i) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }
    
    return differences == 1; 
}",1
skop291,1697181405,1,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) { // Subtracting 1 to exclude the null terminating character
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) { // No need to continue if more than one difference is found
                return 0;
            }
        }
    }

    // Return 1 if exactly one difference was found, and 0 otherwise
    return differenceCount == 1;
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character"");
    } else {
        printf(""The words do not differ by just one character"");
    }

    return 0;
}",0
skop291,1697181441,2,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) { // Subtracting 1 to exclude the null terminating character
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) { // No need to continue if more than one difference is found
                return 0;
            }
        }
    }

    // Return 1 if exactly one difference was found, and 0 otherwise
    return differenceCount == 1;
}

",1
skul970,1697011097,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    
    for (int index = 0; index < strlen(word1); index++) {
        if (word1[index] != word2[index]) {
            count++;
        }
    }
    
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
slam669,1697236815,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count = 0;
    for (i = 0; i<WORD_LENGTH;i++)
    {
        if (word1[i] != word2[i]) {
            count++;
            if (count>1) {
                return 0;
            }
        }
    }
    
    return count;
}
",1
slie508,1697191156,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	for (i = 0; i<4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}

	return count == 1;
}",1
sluo487,1697427985,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    
    int different = 0;
    int i;
    
    while (i != '\0') {
        if (word1[i] != word2[i]) {
            different++;
        }
    }
    if (different = 1) {
            return 1;
    }
}",0
sluo487,1697428469,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    
    int different = 0;
    int i = 0;
    
    while (word1[i] != '\0') {
        if  (word1[i] != word2[i]) {
            different++;
        }
        i++;
    }
    
    if (different == 1) {
        return 1;
    }
}",0
sluo487,1697429095,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    
    int different = 0;
    int i = 0;
    
    while (word1[i] != '\0' && word2[i] != '\0' && different <=1) {
        if  (word1[i] != word2[i]) {
            different++;
        }
        i++;
    }
    return different == 1;
}",1
smac708,1696987598,1,"int OneLetterDifference(char *word1, char *word2) 
{

int count = 0; 
int i; 

for (i=0; i<5; i++) { 
	if (word1[i] != word2[i])
	count++; 
}
if (count > 1) {
return 0; } 
else {
return 1; 
} 
} ",0
smac708,1696987879,2,"int OneLetterDifference(char *word1, char *word2) 
{

int count = 0; 
int i; 

for (i=0; i<5; i++) { 
	if (word1[i] == word2[i])
	count++; 
}
if (count == 4) {
return 1; } 
else {
return 0; 
} 
} ",1
sman821,1697409911,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int i;
	int count = 0;
	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count += 1;
		}
	}
	if (count == 1) {
		return 1;
	} else {
		return 0;
	}
}",1
sman833,1697158276,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;

    for(int i = 0; i < WORD_LENGTH; i++) {
        if(word1[i] != word2[i]) {
            count++;
        }
    }

    if(count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
smck855,1697184782,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; ++i) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }

    return differences == 1;
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words are the same\n"");
    }

    return 0;
}
",0
smck855,1697184812,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; ++i) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }

    return differences == 1;

",0
smck855,1697184828,3,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; ++i) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }

    return differences == 1;
}
",1
smou122,1696989962,1,"int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    int i;
    for (i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    if (count == 1){
        return 1;
    }
    else {
        return 0;
    }

}",1
smun623,1697443698,1,"int OneLetterDifference(char *word1, char *word2) {
    int difference = 0;  
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            difference++; 
            if (difference > 1) {
                return 0;  
            }
        }
    }
    
    return (difference == 1); 
}

",1
snas404,1697406718,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int Store = 0;

	for (i = 0; i <= 3; i++) {
		if (word1[i] == word2[i]) {
			Store++;
		}
	}

	if (Store == 1) {
		return 0;
	}else if (Store == 2) {
		return 0;
	}else if (Store == 3) {
		return 1;
	}else {
		return 0;
	}
}
",1
span558,1696818708,1,"#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    
    for (int i = 0; i < 4; i++) {
    
        if (word1[i] != word2[i]) {
            differenceCount++; 
        }
        if (differenceCount > 1 || differenceCount == 0) {
            return 0;
        }
    }
    return differenceCount == 1;
}

",0
span558,1696819239,2,"#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    
    for (int i = 0; i < 4; i++) {
    
        if (word1[i] != word2[i]) {
            differenceCount++; 
        }
        if (differenceCount > 1) {
            return 0;
        }
    }
    return differenceCount == 1;
}

",1
spar473,1697159951,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;

	for (int i=0; i<WORD_LENGTH; i++)
	{
		if(word1[i] != word2[i]) {
			diff++;
		}
	}
	if(diff ==1) {
		return 1;
	} else {
		return 0;
	}
}",1
spar820,1697421096,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int num = 0;
    int i = 0;

    while (word1[i]!='\0') {
        if (word1[i] != word2[i]) {
            num++;
        }
        
        i++;
    }

    if (num == 1) {
        return 1;
    } else {
        return 0;
    }
}

void main() {
    
    char word1[5] = ""able"";
    char word2[5] = ""abff"";
    
    if (OneLetterDifference(word1, word2)) {
       printf(""The words differ by just one character"");
    } else {
       printf(""The words do not differ by just one character"");
    } 
}",0
spar820,1697421536,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int num = 0;
    int i = 0;

    while (word1[i]!='\0') {
        if (word1[i] != word2[i]) {
            num++;
        }
        i++;
    }

    if (num == 1) {
        return 1;
    } else {
        return 0;
    }
    
}",1
sran136,1696935906,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
	int i;
	int counter = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			counter++;
		}
	
	}
	
	if (counter == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
srou953,1696853849,1,"int OneLetterDifference(char *word1, char *word2) {
    int length = 4;
    int same = 0;
    int diffrence = 0;
    int i;



    for (i=0; i<=WORD_LENGTH -1; i++)
    {
        if (word1[i] == word2[i])
            same++;
    }
    if (word1[i] != word2[i])
    {
        diffrence++;
    }

    if(same==3 && diffrence==1)
    {
        return 1;
    }

    return 0;
}",0
srou953,1696899998,2,"int OneLetterDifference(char *word1, char *word2) {
    int same = 0;
    int diffrence = 0;
    int i;

    for (i=0; i<=WORD_LENGTH -1; i++)
    {
        if (word1[i] == word2[i])
           {
               same++;
           }
         else 
        { 
        diffrence++;
        }
    }

    if(same==3 && diffrence==1)
    {
        return 1;
         } 
        else 
        {
        return 0;
    } 
    }",0
srou953,1696902231,3,"  int OneLetterDifference(char *word1, char *word2) {
    int same = 0;
    int diffrence = 0;
    int i;

    for (i = 0; i < WORD_LENGTH -1 ; i++) {
        if (word1[i] == word2[i]) {
            same++;
        } 
        else
        {
            diffrence++;
        }
    }

    if (same == 3 && diffrence == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
ssan467,1697165320,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;

	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
ssco465,1697096324,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < 5 - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences != 1) {
                return 0; 
            }
        }
    }

    return 1;
}",0
ssco465,1697096463,2,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < 5 - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if ((differences != 1)||(differences != 0) {
                return 0; 
            }
        }
    }

    return 1;
}",0
ssco465,1697096540,3,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < 5 - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return 1;
}
",0
ssco465,1697096602,4,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < 5 - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return (differences == 1);
}
",1
ssey266,1697370815,1,"int OneLetterDifference(char *word1, char *word2) {
    if (strlen(word1) != strlen(word2)) {
        return 0; 
    }

    int differenceCount = 0;  

    for (int i = 0; i < strlen(word1); i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;

            if (differenceCount > 1) {
                return 0;
            }
        }
    }

    return (differenceCount == 1);
}",1
ssiv093,1697432833,1,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
        if (count > 1) {
            return 0;
        }
    }
    return count == 1;
}",1
sson972,1696819062,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	int i = 0;
	while (word1[i] != '\0')
	{
		if (word2[i] != word1[i])
		{
			count += 1;
		}
		i++;
	}

	if (count == 1)
	{
		return 1;
	}
	else {
		return 0;
	}
}",1
sspa275,1696975865,1,"int OneLetterDifference(char *word1, char *word2){
    int diffs = 0;
    for(int i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            diffs++;
        }
    }
    if(diffs != 1){
        return 0;
    }
    else{
        return 1;
    }
}",1
ssri357,1697179909,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int total = 0;

	for (i = 0; i < WORD_LENGTH; i++) {

		if (word1[i] != word2[i]) {
			total++;
		}

	}

	if (total == 1) {
		return 1;
	}

	else {
		return 0;
	}
	
}",1
steb012,1696821646,1,"int OneLetterDifference(char *word1, char *word2){
    int i;
    int j;
    int a = 0;
    
    for (i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]){
            a++;
            if (a > 1){
                return 0;
            }
        }
        return a == 1;
    }    
}",0
steb012,1696821674,2,"int OneLetterDifference(char *word1, char *word2){
    int i;
    int a = 0;
    
    for (i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]){
            a++;
            if (a > 1){
                return 0;
            }
        }
        return a == 1;
    }    
}",0
steb012,1696822114,3,"int OneLetterDifference(char *word1, char *word2){
    int i;
    int a = 0;
    
    for (i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]){
            a++;
            if (a > 1){
                return 0;
            }
        }
    }    
    return a == 1;
}",1
stia357,1697100801,1,"int OneLetterDifference(char *word1, char *word2) 
{
    int DC 
    DC = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            DC++;
            if (DC > 1) {
                return 0; 
            }
        }
    }

    return DC == 1;
}",0
stia357,1697100823,2,"int OneLetterDifference(char *word1, char *word2) 
{
    int DC;
    DC = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            DC++;
            if (DC > 1) {
                return 0; 
            }
        }
    }

    return DC == 1;
}",1
sum778,1697434888,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int match = 0;
    int notmatch = 0;
    int wordlength = 4;
    for (int i = 0; i < wordlength; i++)
    {
        if (word1[i] == word2[i])
        {
            match++;
        }
        else
        {
            notmatch++;
        }
    }
    if (notmatch == 1 || match == 3)
    {
        return notmatch;
    }
    else
    {
        return 0;
    }
}",1
sval918,1697442323,1,"int OneLetterDifference(char *word1, char *word2) {
    int length1 = strlen(word1);
    int length2 = strlen(word2);

    if (length1 != length2) {
        return 0; 
    }

    int differenceCount = 0;
    for (int i = 0; i < length1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0; 
            }
        }
    }

    return differenceCount == 1;
}
",1
swan472,1697161605,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;  

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diffCount++;

            if (diffCount > 1) {
                return 0;
            }
        }
    }

    return diffCount == 1 ? 1 : 0;
}
",1
sweb390,1697166563,1,"int OneLetterDifference(char* word1, char* word2) {
	int i;
	int difference;
	difference = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	return (difference == 1);
}",1
swil676,1697364683,1,"int OneLetterDifference(char *word1, char *word2)
{

	int differences = 0;

	for (int i = 0; i < WORD_LENGTH; i++)
	{
		
			if (word1[i] != word2[i])
			{
				differences+=1;

				if (differences > 1){
					return 0;
				}
			}
		

	}

	if (differences == 1)
	{
		return 1;
	}

	return 0;

	
}",1
syok443,1696811038,1,"int OneLetterDifference(char *word1, char *word2){

    int i;
    int counter = 0;

    for(i = 0; i < WORD_LENGTH; i++){
        if(word1[i] != word2[i]){
            counter++;
        }
    }

    //if the counter is more than 1 then return false

    if(counter > 1){
        return 0;
    }else {
        return 1;
    }
}",0
syok443,1696811132,2,"int OneLetterDifference(char *word1, char *word2){

    int i;
    int counter = 0;

    for(i = 0; i < WORD_LENGTH; i++){
        if(word1[i] != word2[i]){
            counter++;
        }
    }

    //if the counter is more than 1 then return false

    if(counter > 1 || counter == 0){
        return 0;
    }else{
        return 1;
    }
}",1
syua841,1697433194,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differentChars = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differentChars++;
            if (differentChars > 1) {
                return 0; 
        }
    }

    return differenceChars == 1; 
}
",0
syua841,1697433270,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differentChars = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differentChars++;
            if (differentChars > 1) {
                return 0; 
        }
    }

    return differentChars == 1; 
}
",0
syua841,1697433577,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differentChars = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differentChars++;
            if (differentChars > 1) {
                return 0; 
        }
    }

    return differentChars == 1; 
}
",0
syua841,1697433630,4,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differentChars = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differentChars++;
            if (differentChars > 1) {
                return 0; 
        }
    }

    return differentChars == 1; 
}
}",0
syua841,1697433793,5,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differentChars = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differentChars++;
            if (differentChars > 1) {
                return 0; 
            }
        }
    }
    return differentChars == 1; 

}",1
szen566,1697058226,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;

	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
szho466,1697436879,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
int i;
int count =0;
    for (i=0;i<4;i++){
        if (word1[i]!=word2[i]){
            count++;
            if (count>1){
                return 0;
            }
        }
    }
    return (count==1);
}",1
tais804,1696899842,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, counter = 0;
	for (i = 0; i<4; i++) {
		if (word1[i] != word2[i]) {
			counter++;
		}
	}
	if (counter == 1) {
		return 1;
	} else {
		return 0;
	}
	
}",1
tbad483,1697257793,1,"int OneLetterDifference(char *word1, char *word2){
    int i, count = 0;
    for (i=0; i < 4; i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    if (count == 1){
        return 1;
    }
    else{
        return 0;
    }
}",1
tbar968,1697274028,1,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int OneLetterDifference(char *WordOne, char *WordTwo) {
	int count, i;
	count = 0;
	i = 0; 

	while (WordOne[i]!= '\0') {
		if (WordOne[i] != WordTwo[i]) {
			count++;
		}
		i++;
	}
	if (count == 1) {
		return 1;
	}
	else
		return 0;
}",1
tbar971,1697108376,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int diffcounter = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diffcounter++;
		}
	}

	if (diffcounter == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
tbas606,1697433877,1,"#include <stdio.h>
#include <stdbool.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return false;
            }
        }
    }

    return differences == 1;
}",1
tbed601,1697446876,1,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	return count;
}",0
tbed601,1697447735,2,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2)
{
    int r;
	int count = 0;
	for (int i = 0; i < 5; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	
	if (count > 1) {
	    r = 0;
	}
	else if (count == 1) {
	    r = 1;
	}
	else
	r = 0;
	
	return r;
}",1
tbri557,1697415449,1,"int OneLetterDifference(char word1[], char word2[])
{
    int i = 0;
    int count = 0;

    while (word1[i] != '\0') {
        if (word1[i] != word2[i]) {
            count += 1;
        }
        i++;
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
tche867,1696994138,1,"int OneLetterDifference(char* w1, char* w2)
{
	int diff = 0;
	int counter = 0;
	while (w1[counter] != '\0')
	{
		counter++;
		if (w1[counter] != w2[counter])
		{
			if (w1[counter] != w2[counter])
			{
				diff++;
			}
		}
	}
	if (diff == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",0
tche867,1696994390,2,"int OneLetterDifference(char* w1, char* w2)
{
	int diff = 0;
	int counter = 0;
	while (w1[counter] != '\0')
	{
		
		if (w1[counter] != w2[counter])
		{
			if (w1[counter] != w2[counter])
			{
				diff++;
			}
		}
		counter++;
	}
	if (diff == 1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
	
}",1
tcoo725,1697424078,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2){
    
  int i;
  int count = 0;
   
  
  for (i = 0; i < 5; i++){
      if (word1[i] == word2[i]){
          count ++;
          if (count > 1){
              return 0;
          }else{
              if (count = 1){
                  return 1;
              }
          }
          
      }
  }
    
}",0
tcoo725,1697424157,2,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2){
    
  int i;
  int count = 0;
   
  
  for (i = 0; i < 5; i++){
      if (word1[i] == word2[i]){
          count ++;
          if (count > 1){
              return 0;
          }else{
              if (count == 1){
                  return 1;
              }
          }
          
      }
  }
    
}",0
tcoo725,1697424229,3,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2){
    
  int i;
  int count = 0;
   
  
  for (i = 0; i < 5; i++){
      if (word1[i] == word2[i]){
          count ++;
          if (count > 1){
              return 0;
          }else{
              if (count == 1){
                  return 1;
              }
          }
          
      }
      return 0;
  }
    
}",0
tcoo725,1697425338,4,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2){
    
  int i;
  int count= 0;
   
  
  for (i = 0; i < 4; i++){
      if (word1[i] != word2[i]){
          count ++;
         if (count > 1){
              return 0;
            }
             
        }
    }
        if (count == 1){
            return 1;
        } else {
            return 0;
        }
            
          
    }",1
tden200,1697400492,1,"int OneLetterDifference(char* word1, char* word2) {

	int count = 0;
	int i;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count += 1;
		}

	}
	if (count < 2 && count != 0) {
		return 1;
	}

	else {
		return 0;
	}
}",1
tdha392,1697450627,1,"int i, diff = 0;

while (word1[i] != '\0') {
	if (word1[i] != word2[i]) {
		diff++;
	}
	i++
}

if (diff == 1) {
	return 1;
}
else {
	return 0;
}",0
tdha392,1697450880,2,"#include <stdio.h>

int OneLetterDifference(char* word1, char* word2) {
    
int i = 0, diff = 0;

while (word1[i] != '\0') {
	if (word1[i] != word2[i]) {
		diff++;
	}
	i++;
}

if (diff == 1) {
	return 1;
}
else {
	return 0;
}
}",1
tdic873,1696842140,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int same = 0;

	for (int i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] == word2[i]) same++;
		
	}
	return same == WORD_LENGTH - 1;
}",1
tdon950,1697009739,1,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	
	for (int i = 0; i < 5; i++) {
	    if (word1[i] != word2[i]) {
	        diff++;
	    }
	}
	
	if (diff != 1) {
	    return 0;
	}
	
	return 1;
}",1
tdu824,1697384255,1,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
        	difference++;
        }
    }

	return ((difference == 1) || (difference == 0));
}",0
tdu824,1697384393,2,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
        	difference++;
        }
    }

	return (difference == 1);
}",1
tfai092,1697198298,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int wordlength = strlen(word1);
    int dif = 0;
    
    if (word1==word2) {
        return 0;
    }
    
    for (int i=0; i < wordlength+1; i++) {
        if (word1[i]!= word2[i]) {
            dif++;
        }
        if (dif>1) {
            return 0;
        }
    }
    
    return 1;
    
}",0
tfai092,1697198387,2,"int OneLetterDifference(char *word1, char *word2) {
    
    int wordlength = strlen(word1);
    int dif = 0;
    
    for (int i=0; i < wordlength+1; i++) {
        if (word1[i]!= word2[i]) {
            dif++;
        }
        if (dif>1) {
            return 0;
        }
    }
    
    if (dif==0) {
        return 0;
    }
    
    return 1;
    
}",1
tfai653,1696902150,1,"int OneLetterDifference(char *word1, char *word2)
{
    // Define variables.
    int i;
    int differences = 0;
    
    // Check for differences between each letter of the words.
    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }
    
    // If only 1 difference return true.
    if (differences == 1) {
        return 1;
    }

    return 0;
}
",1
tfru173,1697427690,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) 
{
    int difference = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) 
        {
            difference++;
            if (difference > 1) 
            {
                return 0;
            }
        }
    }
    return difference == 1;
}",1
thal182,1697002724,1,"int OneLetterDifference(char *word1, char *word2){
    int diff_count = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diff_count++;
        }
        if (diff_count > 1) {
            return 0;
        }
    }
    return 1;
}",0
thal182,1697003211,2,"int OneLetterDifference(char *word1, char *word2){
    int diff_count = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            diff_count++;
        }
        if (diff_count > 1) {
            return 0;
        }
    }
    if (diff_count == 0){
        return 0;
    } 
    else{
    return 1;
    }
}",1
thar970,1697194885,1,"bool OneLetterDifference(char *w1,char *w2){
    int counter=0;
    for(int i=0;i<4;i++){
        if(w1[i]!=w2[i]){
            counter++;
        }
    }
    if(counter==1)return 1;
    else return 0;
}",1
thid924,1697145340,1,"int OneLetterDifference(char* word1, char* word2)
{

	int count = 0;

	for (int i = 0; i < 4; i++) {

		if (word1[i] != word2[i]) {

			count++;
		}
	}

	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
thua238,1697282362,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;

	for (int letter=0; letter<WORD_LENGTH; letter++) {
		if (word1[letter] != word2[letter]) {
			diff++;
		}
	}

	return diff == 1;
}",1
thut580,1696988232,1,"int OneLetterDifference(char *word1, char *word2) {
	int differ = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			differ++;
		}
	}
	if (differ == 1) {
		return 1;
	} else {
		return 0;
	}
} ",1
tkan918,1697439683,1,"int OneLetterDifference(char *word1, char *word2)
{
	//Initialise count to measure the number of differences in the words
	int count = 0;
	int i;
	for (i = 0; i < WORD_LENGTH; i++){
		if (word1[i] != word2[i])
		{
			count++;
		}
	}
	if (count == 1){
		return 1 == 1;
	}
	else return 1 == 0;
}
",1
tlal352,1697375638,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	int i = 0; 
	while (i < 4){
	    if (word1[i] == word2[i]){ 
	        count++;
	    } 
	    i++;
	}
	
	if (count < 3){
	    return 0;
	} else { 
	    return 1; 
	}

}",0
tlal352,1697376427,2,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;
	int i = 0; 
	while (i < 4){
	    if (word1[i] == word2[i]){ 
	        count++;
	    } 
	    i++;
	}
	
	if (count < 3){
	    return 0;
	} else if (count == 4) { 
	    return 0; 
	} else { 
	    return 1; 
	}

}",1
tlin438,1697335247,1,"int OneLetterDifference(char* word1, char* word2) {
	int different = 0;

	
	for (int i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] != word2[i]) {
			different++;
			if (different > 1) {
				return 0; 
			}
		}
	}
	if (different == 1) {
		return 1;
	}
	else {
		return 0;
	}

}",1
tlu253,1696924048,1,"int OneLetterDifference(char *word1, char *word2)
{
	int letters;
	int countDiff = 0; // keeps count of how many different letters are detected

	// iterate through all letters in the words
	for (letters = 0; letters < WORD_LENGTH-1; letters++) {
		
		// compare letters
		// if letters are different, increase count by 1
		if (word1[letters] != word2[letters]) {
			countDiff++;
		}

		// if letters are the same, pass onto the next iteration.

	}
	
	// only if there is 1 letter different between the words, return 1
	if (countDiff == 1) {
		return 1;
	} else {
		return 0;
	}


}",1
tluu816,1697428069,1,"int OneLetterDifference(char* word1, char* word2)
{
	int Disparity = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] == word2[i]) {

		}
		else {
			Disparity++;
			if (Disparity > 1) {
				return 0;
			}
		}

	}

	if (Disparity == 0) {
		return 0;
	}
	return 1;
}",1
tman942,1697238493,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; // More than one difference, return 0
            }
        }
    }

    return (differences == 1) ? 1 : 0;
}",1
tmcl219,1697267842,1,"/*This function compares two words from a word list of 4 letter words then
compares them and returns true if there is a one letter difference between them.*/
int OneLetterDifference(char *word1, char *word2)
{
    FILE *fp;
    fp = fopen(""wordlist.txt"", ""r"");
    if (fp == NULL) { 
        printf(""Error: can not open the file\n""); 
        
    } else { 
        /*find first word*/
        fscanf(fp, ""%c"", word1);
        /*find second word*/
        fscanf(fp, ""%c"", word2);

        /*compare the two words*/
        int i;
        int count = 0;
        for (i = 0; i < 4; i++){
            if (word1[i] != word2[i]){
                count++;
            }
        }
        if (count == 1){
            return 1;
        } else {
                return 0;
            }
    }
}",0
tmcl219,1697326400,2,"/*This function compares two words from a word list of 4 letter words then
compares them and returns true if there is a one letter difference between them.*/
int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count = 0;
    for (i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            count++;
            
        }
    }
    if (count == 1){
        return 1;
    } else {
        return 0;
    }
}",1
tmen190,1696845028,1,"/* Check if there is exactly one letter difference between two words */

int OneLetterDifference(char *word1, char *word2) {
	// Declare variables
	int count = 0;

	// Check each position to check how many differs
	for (int i = 0; i < WORD_LENGTH; i++)
	{
		if (word1[i] != word2[i])
		{
			count++;
		}
	}

	// Check if there is only one letter different
	if (count==1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}",1
tmir110,1697355603,1,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    
    for (int i = 0; word1[i] != '\0'; i++) {
        if (word1[i] != word2[i]) {
            difference = difference + 1;
        }
    }
    
    if (difference = 1) {
        return 1;
    }
    
    return 0;
}
",0
tmir110,1697355762,2,"int OneLetterDifference(char *word1, char *word2)
{
    int difference = 0;
    
    for (int i = 0; word1[i] != '\0'; i++) {
        if (word1[i] != word2[i]) {
            difference = difference + 1;
        }
    }
    
    if (difference == 1) {
        return 1;
    }
    
    return 0;
}
",1
tmun974,1697166146,1,"int OneLetterDifference(char *word1, char *word2)
{
	int x=0;
	for (int i=0; i<5; i++){
		if (word1[i] != word2[i]){
			x++;
			if (x>1){
				return 0;
			}
		}
	}
	return (x);
}",1
tpan328,1696936062,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
	int i = 0;

    while(i < 4) {
        if (word1[i] != word2[i]) {
            count += 1; 
        }
        i++;
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
tpat456,1696810006,1,"int OneLetterDifference(char *word1, char *word2)
{

int i, a = 0;
for(i = 0; i < 4; i++) {
  if (word1[i] == word2[i]) {
    a++;
  }
}
if (a == 3) {
  return 1;
} else {
  return 0;
}

}",1
tpil529,1696922115,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;

    for (int i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i])
        {
            count += 1;
        }
    }

    if (count != 1)
    {
        return  0;
    }

return 1;
}",1
tpra228,1697423996,1,"int OneLetterDifference(char* word1, char* word2) {
    int difference = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            difference++;
            if (difference > 1) {
                return 0; 
            }
        }
    }

    return difference == 1;  
}",1
tpur744,1697261705,1,"int OneLetterDifference(char *word1, char *word2){
    int diffCount = 0;
    
    for(int i=0;i<4;i++){
        if (word1[i] != word2[i]){
            diffCount++;
            
            if(diffCount > 1){
                return 0;
            }
        }
    }
    
    return diffCount == 1;
}",1
tqhu735,1696828360,1,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int i, difference = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
tron042,1696925528,1,"int OneLetterDifference(char *word1, char *word2)
{
    int diff = 0; 

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            diff = diff + 1;
            if (diff > 1) {
                return 0; 
            }
        }
    }

    return (diff == 1); 
}",1
tsan986,1696827235,1,"#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2) 
{
    int difference = 0;
    for (int i = 0; i < WORD_LENGTH; i++)
    {
        if (word1[i] != word2[i]){
            difference = difference + 1;
        }
    }
    if (difference == 1){
        return 1;
    } else {
        return 0;
    }
}",1
tsin304,1696818375,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    int i = 0;
    
    for (i = 0; i <= 3; i++)
    {
        char letter1 = word1[i];
        char letter2 = word2[i];
       
       
        if (letter1 == letter2)
        {
            count += 1;
        }
       
    }
    
    if(count == 3)
    {
        return 1;
    }
    
    return 0;

}",1
ttho505,1697153601,1,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {

			count++;
		}
	}
	return count == 1;",0
ttho505,1697153987,2,"int OneLetterDifference(char* word1, char* word2)
{
	int count = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {

			count++;
		}
	}
	return count == 1;
}",1
ttho743,1697099016,1,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int count = 0;
    for(i = 0; i < 5; i++)
    {
     if(word1[i] != word2[i])
     {
        count++;
     }
    }
     if(count == 1){
         return 1;
     }
     else
     {
         return 0;
     }
}",1
twad520,1697416632,1,"int OneLetterDifference(char* word1, char* word2) {
	int different = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			different++;
		}

	}
	
	if (different == 1) {
		return 1;
	}
	return 0;
}",1
twol698,1697004692,1,"int OneLetterDifference(char Word1[WORD_LENGTH], char Word2[WORD_LENGTH]){
    int count = 0;
    for (int i = 0; i<WORD_LENGTH;i++){
        if(Word1[i] != Word2[i]){
            count++;
        }
    }
    if (count==1){
        return 1;
    }else{
        return 0; 
    }
}",1
tyou333,1696976536,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCount = 0;

    for (int wordIndex = 0; wordIndex < WORD_LENGTH; wordIndex++) {
        if (word1[wordIndex] != word2[wordIndex])
            diffCount++;
    }

    if (diffCount == 1) { return 1;
    } else { return 0; }
}",1
tyou421,1697182706,1,"int OneLetterDifference(char* word1, char* word2)
{
	/*This function checks two words letter-by-letter to
	  see how different the words are. If the two words
	  differ by only 1 letter, return a 1. If the two
	  words differ by more than 1 letter, return a 0.
	  
	 Inputs:
			word1: A string representing the first word
			to compare.
			word2: A string representing the second word
			to compare.
			
	 Outputs:
	 None
	 
	 Author: Toma Yousif*/


	// Declare the indexer, and difference tracker. 
	int i;
	int count;


	// Initialise the indexer, and difference tracker. 
	i = 0;
	count = 0;


	// Iterate through the string starting from index 0.
	while (word1[i] != '\0')
	{
		// Check if the indexed characters are the same.
		if (word1[i] == word2[i])
		{
			// If yes, increment the indexer. This means
			// the characters at the indexed position do
			// not differ.
			i = i + 1;
		}
		else
		{
			// If no, incrementing the indexer and incrementing
			// the difference tracker to show that the characters
			// at that index position differ.
			i = i + 1;
			count = count + 1;
		}
	}

	// If the difference between the two strings is 1, return 1.
	if (count == 1)
	{
		return 1;
	}
	// If the difference between the two strings is more than 1, return 0.
	else
	{
		return 0;
	}
}",1
tzha578,1696814019,1,"#include <string.h>
#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int count = 0;
    for (int i = 0; i < WORD_LENGTH; ++i){
        if(word1[i] != word2[i]){
            count += 1;
        }
    }
    if(count == 1){
        return 1;
    }else{
        return 0;
    }
}
",1
tzho903,1697437657,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] == word2[i]) {
            count++;
        }
        if (count == 1) {
            return 1;
        }
    }
}
",0
tzho903,1697437971,2,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    }
}
",0
tzho903,1697438367,3,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < WORD_LENGTH; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
uali517,1697105917,1,"int OneLetterDifference(char* word1, char* word2) {
	int length = strlen(word1);

	int totaldifference = 0;
	for(int i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			totaldifference++;
		}
	}

	return (totaldifference == 1);

}",1
ujai264,1697152387,1,"int OneLetterDifference(char *word1, char *word2)
{
	int counter = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]){
			counter++;
			
		}
	}
	if (counter == 1){
		return word1 != word2;
	
			
		} else {
			return 0;
		}

		
	
	// You should correctly complete this function defintion
	// return (word1[0] != word2[0]);
}",1
vbar374,1697418818,1,"#include <stdio.h>



int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;  

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;

            
            if (differences > 1) {
                return 0;  // false
            }
        }
    }

    
    return (differences == 1) ? 1 : 0;
}",1
vkap589,1697337508,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int DiffTally =0;
	
	for (int i = 0; i < 4; i++) {
	    if (word1[i] != word2[i]) {
	        DiffTally++;
	    }
	}
	
    if (DiffTally == 1) {
    	return 1;
    }
    else {
        return 0;
    }
}",1
vlai276,1697363253,1,"int OneLetterDifference(char *word1, char *word2){
    int counter = 0;
    
    for(int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] == word2[i]){
            counter++;
        } 
    }

if (counter >= 3) {
    return 1;
} else {
    return 0;
}
    
}",0
vlai276,1697365919,2,"int OneLetterDifference(char *word1, char *word2){
    int counter = 0;
    int diffCounter = 0;
    
    for(int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] == word2[i]){
            counter++;
        } else {
            diffCounter++;
        }
    }

if (counter >= 3 || diffCounter < 1) {
    return 1;
} else {
    return 0;
}
    
}",0
vlai276,1697366093,3,"int OneLetterDifference(char *word1, char *word2){
    int counter = 0;
    int diffCounter = 0;
    
    for(int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] == word2[i]){
            counter++;
        } else {
            diffCounter++;
        }
    }

if (counter >= 3) {
    return 1;
} else if (diffCounter < 1) {
    return 0;
} else {
    return 0;
}
    
}",0
vlai276,1697366208,4,"int OneLetterDifference(char *word1, char *word2){
    int counter = 0;
    for (int i = 0; i < (WORD_LENGTH); i++) {
        if (word1[i] != word2[i]) {
            counter++;
            
            if (counter > 1) {
                reurn 0;
            }
        }
    }
    reutrn 1;
    
}",0
vlai276,1697366226,5,"int OneLetterDifference(char *word1, char *word2){
    int counter = 0;
    for (int i = 0; i < (WORD_LENGTH); i++) {
        if (word1[i] != word2[i]) {
            counter++;
            
            if (counter > 1) {
                return 0;
            }
        }
    }
    return 1;
    
}",0
vlai276,1697366263,6,"int OneLetterDifference(char *word1, char *word2){
    int counter = 0;
    for (int i = 0; i < (WORD_LENGTH); i++) {
        if (word1[i] != word2[i]) {
            counter++;
            
            if (counter > 1) {
                return 0;
            }
        }
    }
    return counter == 1;
    
}",1
vpat188,1696977474,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    
    int i ;
    int diff = 0;
    
    for (i = 0; i < WORD_LENGTH; i++){    
        if (word1[i] != word2[i]){
            diff++;
        }
    }
    
    if (diff > 1){
        return 0;
    }

return 1;

}",0
vpat188,1696977655,2,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    
    int i ;
    int diff = 0;
    
    for (i = 0; i < WORD_LENGTH; i++){    
        if (word1[i] != word2[i]){
            diff++;
        }
    }
    
    if (diff > 1 || diff == 0){
        return 0;
    }

return 1;

}",1
vwon573,1697365798,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;  //
            }
        }
    }

    return (differences == 1);  // 
}


",1
vwu693,1697432260,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i = 0;
	int count = 0;
	while (i < WORD_LENGTH) {
		if (word1[i] != word2[i]) {
			count++;
		}
		i++;
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
vxie208,1697242692,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0; 
	for (int i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			diff++; 
		}
	}

	if (diff == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
wany079,1697105096,1,"#include <stdio.h>
int OneLetterDifference(char* word1, char* word2) {
    int i;
    int wordLength = 5;
    int difference = 0;

    for (i = 0; i < wordLength; i++) {
        if (word1[i] != word2[i]) {
            difference++;
        }
    }
    
    if (difference == 1) {
        return 1;
    }
    else {
        return 0;
    }
}",1
wany722,1697166197,1,"#include <stdio.h>
#include<string.h>
#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for(int i = 0; i < strlen(word1); i++){
        if (word1[i] != word2[i])
            count++;
    }
    if(count == 0 || count > 1)
        return 0;
    else
        return 1;
}",1
wany843,1697149683,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) { // Subtract 1 to avoid the null terminating character
        if (word1[i] != word2[i]) {
            differences++;
        }
        if (differences > 1) {
            return 0;  // Return false if more than one difference
        }
    }

    return differences == 1 ? 1 : 0;
}",1
wany897,1696988252,1,"int OneLetterDifference(char* word1, char* word2)
{
int difference = 0;

for (int i = 0; i < WORD_LENGTH - 1; i++) {
	if (word1[i] != word2[i]) {
			difference++;
		if (difference > 1) {
			return 0;
		}
	}
}

return (difference == 1);
}",1
wany897,1696988491,2,"int OneLetterDifference(char* word1, char* word2)
{
int difference = 0;

for (int i = 0; i < WORD_LENGTH; i++) {
	if (word1[i] != word2[i]) {
			difference++;
		if (difference > 1) {
			return 0;
		}
	}
}

return (difference == 1);
}",1
wany897,1696993409,3,"int OneLetterDifference(char *word1, char *word2)
{
int difference = 0;

for (int i = 0; i < WORD_LENGTH; i++) {
	if (word1[i] != word2[i]) {
			difference++;
		if (difference > 1) {
			return 0;
		}
	}
}

return 1;
}",0
wany897,1696993575,4,"int OneLetterDifference(char* word1, char* word2)
{



int difference = 0;

for (int i = 0; i < WORD_LENGTH ; i++) {
	if (word1[i] != word2[i]) {
			difference++;
		if (difference > 1) {
			return 0;
		}
	}
}

	return (difference == 1);
}",1
wany932,1697335659,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }

    return differences == 1;
}

int main() {
    char word1[WORD_LENGTH] = ""able"";
    char word2[WORD_LENGTH] = ""ably"";

    if (OneLetterDifference(word1, word2)) {
        printf(""The words differ by just one character\n"");
    } else {
        printf(""The words do not differ by just one character\n"");
    }

    return 0;
}
",0
wany932,1697335775,2,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0;
            }
        }
    }

    return differences == 1;
}

",1
wkev690,1697053277,1,"int OneLetterDifference(char *word1, char *word2)
{
	int diff = 0;
	for (int i = 0; word1[i] != '\0'; i++)
	{
		if (word1[i] != word2[i]){
			diff++;
		}
	}
	if (diff > 1)
	{
		return 0;
	}else
	{
		return diff;
	}	
}",1
wli798,1697337864,1,"#include <stdlib.h>
#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int array[4] = {0};
    if (word1[0] == word2[0]) {
        array[0] = 1;
    }

    if (word1[1] == word2[1]) {
        array[1] = 1;
    }

    if (word1[2] == word2[2]) {
        array[2] = 1;
    }

    if (word1[3] == word2[3]) {
        array[3] = 1;
    }

    int i;
    int count = 0;
    for (i = 0; i < WORD_LENGTH - 1; i++) {
        if (array[i] == 0) {
            count++;
        }
    }

    if (count == 1) {
        return 1;
    }
}",0
wli798,1697338051,2,"#include <string.h>
#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int array[4] = {0};
    if (word1[0] == word2[0]) {
        array[0] = 1;
    }

    if (word1[1] == word2[1]) {
        array[1] = 1;
    }

    if (word1[2] == word2[2]) {
        array[2] = 1;
    }

    if (word1[3] == word2[3]) {
        array[3] = 1;
    }

    int i;
    int count = 0;
    for (i = 0; i < WORD_LENGTH - 1; i++) {
        if (array[i] == 0) {
            count++;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}",1
wlin709,1697442479,1,"#define WORD_LENGTH 5

int OneLetterDifference(char word1, char word2)
{
    int differencesCount = 0;

    for (int index = 0; index < WORD_LENGTH-1; index++)
    {
        if (word1[index] != word2[index])
        {
            differencesCount++;
        }
    }

    return (differencesCount == 1);
}
",0
wlin709,1697442678,2,"#define WORD_LENGTH 5 

int OneLetterDifference(char *word1, char *word2) 
{
    int Count = 0;

    for (int i = 0; i < WORD_LENGTH-1; i++) {
        if (word1[i] != word2[i]) {
            Count++;
            if (Count > 1) {
                return 0; 
            }
        }
    }

    return Count == 1; 
}
",1
wliy226,1697445215,1,"int OneLetterDifference(char *word1, char *word2)
{
    int different_character = 0; //initialising the different character within th array to 0
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
    if (word1[i] != word2[i]) { //checks if the first word is different from the 2nd word
        if (++different_character > 1) { // checking if there's more than one different
            return 0; // if there is more than one difference found, dont need to continue
        }
    }
}

",0
wliy226,1697445850,2,"int OneLetterDifference(char *word1, char *word2)
{
    int different_character = 0; //initialising the different character within th array to 0
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
    if (word1[i] != word2[i]) { //checks if the first word is different from the 2nd word
        if (++different_character > 1) { // checking if there's more than one different
            return 0; // if there is more than one difference found, dont need to continue
        }
    }
}

return (different_character == 1) && (word1[0] == word2[0]);// returns a logical 1 if there is only 1 different character
}",0
wliy226,1697446029,3,"int OneLetterDifference(char *word1, char *word2)
{
    int different_character = 0; //initialising the different character within th array to 0
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
    if (word1[i] != word2[i]) { //checks if the first word is different from the 2nd word
        if (++different_character > 1) { // checking if there's more than one different
            return 0; // if there is more than one difference found, dont need to continue
        }
    }
}

return different_character == 1; // returns a logical 1 if there is only 1 different character
}",1
wmas516,1697343530,1,"int OneLetterDifference(char* word1, char* word2) {
	int n = 0;
	for (int i = 0; i < 4; i++) {
		if (*(word1 + i) != *(word2 + i)) {
			if (n) { return 0; }
			else { n = 1; }
		}
	}
	return n;
}",1
wste800,1696972625,1,"int OneLetterDifference(char word1[], char word2[]) {
    int count = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i]==word2[i]) {
            count++;
        }
    }
    if (count == 3) {
        return 1;
    } else {
        return 0;
    }
}",1
wwan296,1697156204,1,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#define WORD_LENGTH 5

int OneLetterDifference(char* word1, char* word2) 
{
	int count = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}else {
		return 0;
	}
}",1
wwon485,1697162158,1,"int OneLetterDifference(char *word1, char *word2)
{
	int differences = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]){
			differences++;
		} 
	}
	
	return differences == 1;
}",1
wwu295,1697376684,1,"int OneLetterDifference(char *word1, char *word2)
{
	int difference = 0;
	for (int i = 0; i < WORD_LENGTH; i++) {
		if(word1[i] != word2[i]) {
			difference++;
		}
	}
	if (difference == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",1
wyan309,1697444697,1,1,0
wyu523,1696967206,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count=0;
	int len = strlen(word1);
	for (int i=0;i<len;i++){
	    if (word1[i]!=word2[i]){
	       count++; 
	    }
	}
	if (count==1){
	    return 1;
	} else {
	    return 0;
	}
}",1
wyua331,1697444169,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int j=0;
    while(i<4);
    {
        if(word1[i]==word2[i])
        {
            j++;
        }
        i++;
    }
    if(j==3)
    {
        return 1;
    }
    else
    {
        return 0;
    }


}",0
wyua331,1697445631,2,"int OneLetterDifference(char *word1, char *word2)
{
    int i=0;
    int j=0;
    while(i<4)
    {
        if(word1[i]==word2[i])
        {
            j++;
        }
        i++;
    }
    if(j==3)
    {
        return 1;
    }
    else
    {
        return 0;
    }


}",1
wzha508,1697356017,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int j = 0;
	// You should correctly complete this function defintion
	while (word1[i] != '\0') {
		if (word1[i] != word2[i]) {
			j++;
		}
		i++;
	}
	if (j == 1) {
		return 1;
	}
	return 0;
}",1
xche362,1697274414,1," int OneLetterDifference(char *word1, char *word2)
 {
     int count=0;
     for(int i=0 ; i<4 ;i++){
         if (word1[i]!=word2[i]){
             count++;
         }
     }
     if(count>=1){
         return 1;
     }
     return 0;
 }",0
xche362,1697274571,2," int OneLetterDifference(char *word1, char *word2)
 {
     int count=0;
     for(int i=0 ; i<4 ;i++){
         if (word1[i]!=word2[i]){
             count++;
         }
     }
     if(count==1){
         return 1;
     }
     return 0;
 }
",1
xche933,1697449510,1,"// OneLetterDifference two words as inputs of length 4.  This function must compare each word, character by character and
// return true (i.e. 1) only if there is exactly one character that differs between the two words。

int OneLetterDifference(char word1, char word2)
{
    int i;
    int word;
    for(i=0; i<5; i++){
        if(string1[i]==string2[i]){
            word = 1;
        }
        else {
        word = 0;
    }
    i++;
}
}",0
xkan320,1697021645,1,"int OneLetterDifference(char *word1, char *word2){
    int i,count;
    count = 0;
    for(i=0; i<WORD_LENGTH; i++){
        if(word1[i] != word2[i]){
            count += 1;
        }
    }
    if(count != 1){
        return 0;
    }
    return 1;
}",1
xli330,1696995410,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, diff = 0;

	// Compare word1 to word2, character by character.
	for (i = 0; i < WORD_LENGTH; i++ ) {

		// Count how many characters are different.
		if ( (word1[i] - word2[i]) != 0) {
			diff++;
		}
	}

	// Return 0 if not only one character is different in two words.
	if (diff != 1) {
		diff = 0;
	}

	return diff;
}",1
xlia603,1697425029,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	int WORD_LENGTH = 5;
	for (i=0; i < WORD_LENGTH-1; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	
	return count == 1;
}",0
xlia603,1697425420,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	for (i=0; i < WORD_LENGTH-1; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	
	return count == 1;
}",1
xmet073,1697249983,1,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
int count=0;
    for (int i=0;i<5;i++){
        if (word1[i]!=word2[i]){
       count++;
    }
    
    if (count==1){
   return 0;
}
return 1;
}
}

",0
xmet073,1697250768,2,"#include <stdio.h>
int OneLetterDifference(char *word1, char *word2) {
int count=0;
    for (int i=0;i<5;i++){
        if (word1[i]!=word2[i]){
       count++;
    }
    
    if (count==1){
   return 0;
}
return 1;
}


",0
xmet073,1697251195,3,"
int OneLetterDifference(char *word1, char *word2) {
   
    int count = 0;

    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
            
             if (count > 1) {
            return 0;
            }
    }
    if (count == 1) {
        return 1;
    } else {
        return 0;  
    }
}
",1
xsny378,1697349334,1,"int OneLetterDifference(char *word1, char *word2)
{
int count = 0;
int i;

    for (i = 0; i < 4; i++)
    {
        if (word1[i] == word2[i]) 
        {
            count++;
        }
    }

    if (count == 3)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
",1
xtan207,1697377937,1,"int OneLetterDifference(char *word1, char *word2)
{
    int differences = 0;
    for (i = 0; i < length; i++){
        if (word1[i] != word2[i]){
            difference++ ;
        }
    }
}",0
xtan207,1697378040,2,"int OneLetterDifference(char *word1, char *word2)
{
    int differences = 0;
    for (i = 0; i < length; i++){
        if (word1[i] != word2[i]){
            difference++ ;
        }
        if (difference > 1){
            return 0; 
        }
    }
    return difference == 1 ;
}",0
xtan207,1697451262,3,"int OneLetterDifference(char *word1, char *word2)
{
    int differences = 0;
    for (int i = 0; i < length - 1; i++){
        if (word1[i] != word2[i]){
            difference++ ;
        }
        if (difference > 1){
            return 0; 
        }
    }
    return difference == 1 ;
}",0
xtan207,1697452993,4,"int OneLetterDifference(char *word1, char *word2)
{
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++){
        if (word1[i] != word2[i]){
            differences++ ;
        }
        if (differences > 1){
            return 0; 
        }
    }
    return differences == 1 ;
}",1
xugn489,1697251548,1,"int OneLetterDifference(char *word1, char *word2)
{
	// You should correctly complete this function defintion
	int diff = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			diff++;
		}
	}
	return (diff == 1);
}",1
yayo322,1697414076,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] ~= word2[i]) {
            count++
        }
        
    }
    if (count == 1) {
        return 1; 
    else  {
        return 0; 
    }
    }
    
}
",0
yayo322,1697414243,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
        
    }
    if (count == 1) {
        return 1; 
    } else  {
        return 0; 
    }
    }
    
}
",0
yayo322,1697414275,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int count = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
        
    }
    if (count == 1) {
        return 1; 
    } else  {
        return 0; 
    }
    
    
}
",1
ybha528,1697254870,1,"#include <stdio.h>
#include <string.h>

int OneLetterDifference(char* word1, char* word2)
{
    if (word1[0] != word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] == word2[3]) {
        return 1;
    }

    if (word1[0] == word2[0] && word1[1] != word2[1] && word1[2] == word2[2] && word1[3] == word2[3]) {
        return 1;
    }

    if (word1[0] == word2[0] && word1[1] == word2[1] && word1[2] != word2[2] && word1[3] == word2[3]) {
        return 1;
    }

    if (word1[0] == word2[0] && word1[1] == word2[1] && word1[2] == word2[2] && word1[3] != word2[3]) {
        return 1;
    }

    return 0;
}",1
ycho749,1697359647,1,"int OneLetterDifference(char *word1, char *word2) {
    int diff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) 
    {
        if (word1[i] != word2[i]) {
            diff++;
        }
    }
    return diff == 1;
}",1
ycho760,1697409471,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int counter = 0;
	for (i = 0; i < (WORD_LENGTH); i++) {
		if (word1[i] != word2[i]) {
			counter++;
		}
	}

	if (counter == 1) {
		return 1;
	}

	return 0;
}",1
ydai729,1697451657,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            
            // If there are more than one differences, return false (0).
            if (differenceCount > 1) {
                return 0;
            }
        }
    }
    
    // Return true (1) if there is exactly one difference.
    return (differenceCount == 1);
}",1
ydar075,1697444958,1,"int OneLetterDifference(char* word1, char* word2)
{
	int length_word1 = 5;
	int count = 0;

	for (int i = 0; i < length_word1; i++)
		if (word1[i] != word2[i]) {
			count++;
		}
	if (count > 1) {
		return 0;
	}
	else {
		return 1;
	}
}",0
ydar075,1697445348,2,"int OneLetterDifference(char* word1, char* word2)
{
	int length_word1 = 5;
	int count = 0;

	for (int i = 0; i < length_word1; i++)
		if (word1[i] != word2[i]) {
			count++;
		}
	if (count > 1) {
		return 0;
	}
	else {
		return (count == 1);
	}
}",1
yfan919,1697104229,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 5; i++){
        for (int j = 0; j < 5; j++){
            if (word1[i] == word[j]){
                count++;
                if (count > 1){
                    return 0;
                }
            }
        }
    }
    return 1;
}",0
yfan919,1697104235,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 5; i++){
        for (int j = 0; j < 5; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 0;
                }
            }
        }
    }
    return 1;
}",0
yfan919,1697104261,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 5; i++){
        for (int j = 0; j < 5; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
            }
        }
    }
    return 0;
}",0
yfan919,1697104312,4,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
            }
        }
    }
    return 0;
}",0
yfan919,1697104391,5,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
            }
        }
        return 0;
    }
}",0
yfan919,1697104432,6,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
                else{
                    return 0;
                }
            }
        }
    }
}",0
yfan919,1697104462,7,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
                else{
                    return 0;
                }
            }
        }
    }
    return 0;
}",0
yfan919,1697104548,8,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
                else{
                    return 0;
                }
            }
        }
    }
    return ;
}",0
yfan919,1697104555,9,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
                else{
                    return 0;
                }
            }
        }
    }
    return;
}",0
yfan919,1697104560,10,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
                else{
                    return 0;
                }
            }
        }
    }
}",0
yfan919,1697104571,11,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
                else{
                    return 0;
                }
            }
        }
    }
    return 0;
}",0
yfan919,1697104580,12,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (word1[i] == word2[j]){
                count++;
                if (count > 1){
                    return 1;
                }
                else{
                    return 0;
                }
            }
        }
    }
    return count;
}",0
yfan919,1697104654,13,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
            if (count > 1){
                return 1;
            }
            else{
                return 0;
            }
        }
    }
}
    return 0;
}",0
yfan919,1697104692,14,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
            if (count > 1){
                return 1;
            }
            else{
                return 0;
            }
        }
    }
}
}",0
yfan919,1697104698,15,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
            if (count > 1){
                return 1;
            }
            else{
                return 0;
            }
        }
    }
}",0
yfan919,1697104708,16,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
            if (count > 1){
                return 1;
            }
            else{
                return 0;
            }
        }
    }
    return 0;
}",0
yfan919,1697104722,17,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
            if (count > 1){
                return 1;
            }
            else{
                return 0;
            }
        }
    }
    return count;
}",0
yfan919,1697104781,18,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
        }
        if (count > 1){
            return 1;
        }
        else{
            return 0;
        }
    }
    return count;
}",0
yfan919,1697104807,19,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
        }
        if (count > 1){
            return 1;
        }
        else{
            return 0;
        }
    }
    return (count==1);
}",0
yfan919,1697104858,20,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
        }
        if (count > 1){
            return 0;
        }

    }
    return (count==1);
}",0
yfan919,1697104874,21,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] == word2[i]){
            count++;
        }
        if (count > 1){
            return 0;
        }

    }
    return (count == 1);
}",0
yfan919,1697104955,22,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            count++;
        }
        if (count > 1){
            return 0;
        }
    }
    return (count == 1);
}",1
yfen481,1697160436,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i,count;
	for(i=0;i<4;i++){
	    if(word1[i]!=word2[i]){
	        count++;
	    }
	}
	if (count==1){
	    return 1;
	} else {
	    return 0;
	}
	
}",0
yfen481,1697160578,2,"int OneLetterDifference(char *word1, char *word2)
{
	int i,count=0;
	for(i=0;i<4;i++){
	    if(word1[i]!=word2[i]){
	        count++;
	    }
	}
	if (count==1){
	    return 1;
	} else {
	    return 0;
	}
	
}",1
yhaf839,1697256179,1,"#include <stdio.h>
#define WORD_LENGTH 4

int OneLetterDifference(char *word1, char *word2){
    int i=0;
    int count=0;
for(i;i<WORD_LENGTH;i++){
    if(word1[i]!=word2[i]){
    count++;
        if (count>1){ 
        return 0;
        }
    }
}
return count==1;
}
",0
yhaf839,1697256478,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int i;
    int count=0;
for(i=0;i<WORD_LENGTH;i++){
    if(word1[i]!=word2[i]){
    count++;
        if (count>1){ 
        return 0;
        }
    }
}
return count==1;
}
",1
yilm466,1697364645,1,"int OneLetterDifference(char *word1, char *word2) {
int diffCount = 0; 
while (*word1 && *word2){
    if (*word1 != *word2){
        diffCount ++;
    }
    *word1 ++;
    *word2 ++;
}
    return diffCount == 1; 
}",0
yilm466,1697365959,2,"int OneLetterDifference(char *word1, char *word2) {
int diffCount = 0; 
while (*word1 && *word2){
    if (*word1 != *word2){
        diffCount ++;
    }
    word1 ++;
    word2 ++;
}
    return diffCount == 1; 
}",1
yjun129,1697235288,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) { // Subtracting one to exclude null terminating character
        if (word1[i] != word2[i]) {
            differences++;
        }
    }
    return differences == 1;
}",1
ykwa219,1697241286,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int j = 0;
	int d = 0;
	// You should correctly complete this function defintion
	while (word1[i] != '\0') {
		int c = 0;
		j = 0;
		while (word2[j] != '\0') {
			if (word1[i] == word2[j]) {
				c++;
			}
			j++;
		}
		if (c == 0) {
			d++;
		}
		i++;
	}

	if (d == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
ykwa219,1697241990,2,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int j = 0;
	int d = 0;
	// You should correctly complete this function defintion
	while (word2[i] != '\0') {
		int c = 0;
		j = 0;
		while (word1[j] != '\0') {
			if (word2[i] == word1[j]) {
				c++;
			}
			j++;
		}
		if (c == 0) {
			d++;
		}
		i++;
	}

	if (d == 1) {
		return 1;
	}
	else {
		return 0;
	}
}",0
ykwa219,1697242807,3,"int OneLetterDifference(char* word1, char* word2)
{
	int i = 0;
	int j = 0;
	while (word1[i] != 0) {
		if (word1[i] != word2[i]) {
			j++;
		}
		i++;
	}
	if (j == 1) {
		return 1;
	}
	return 0;
}",1
ylee818,1697413827,1,"#include <stdio.h>

#define WORD_LENGTH 5
int OneLetterDifference(char *word1, char *word2)
{
   int count = 0;
    for (int i = 0; i < 5; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
    }
    return count == 1;
}",1
yrah128,1697449829,1,"int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences > 1) {
                return 0; 
            }
        }
    }

    return differences == 1; 
}",1
ysun512,1697276563,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int diff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; ++i){
        if (word1[i] != word2[i]){
            diff++;
            if (diff > 1){
                return 0;
            }
        }
    }
    return diff == 1;
}",1
ytho155,1697269412,1,"#include <stdio.h>
#define WORD_LENGTH 5

//Plays word game stuff
//Author Yi Shun

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;  // initialize no difference

    // do word stuff
    for (int i = 0; i < WORD_LENGTH-1 ; i++) {
        if (word1[i] != word2[i]) {
            differences++;

            // dont do word stuff if aint true
            if (differences > 1) {
                return 0;
            }
        }
    }

    // If exactly one difference is found, return true (1).
    return differences == 1;
}
",1
ytse120,1696930121,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i, result = 0;
	for (i = 0; i < WORD_LENGTH; i++) {
		if (word1[i] != word2[i]) {
			result++;
		}
	}
	return result == 1;
}",1
yxie884,1697250792,1,"//The OneLetterDifference function compares each word character by character and return true only if there is exactly one character that differs between the two words.
//Author: Jessica Xie

#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    // initialising vairables
    int i,count;
    count = 0;
    // using an imbeded for loop to itterate through the two words and use an if statement to check if the characters in the same position are the same
    for (i = 0; i < WORD_LENGTH; i++){
        if (word1[i] != word2[i]){
            count++;
        }
    }
    // if the count of different characters is equal to one, then return true(1).
    if (count == 1){
        return 1;
    }

    return 0;

}",1
yyin299,1696990149,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int difference;
    int i;
    
    for (i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            difference = difference = 1;
        }
    }
    
    if (difference > 1 && difference == 0)
    {
        return 0;
    }
    else if (difference == 1)
    {   
        return 1;
    }
}",0
yyin299,1696990301,2,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
    int difference;
    int i;
    
    for (i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            difference = difference + 1;
        }
    }
    
    if (difference > 1 || difference == 0)
    {
        return 0;
    }
    else if (difference == 1)
    {   
        return 1;
    }
}",0
yyin299,1696990974,3,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	 int difference;
    int i;
    
    for (i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            difference = difference + 1;
        }
    }
    
    if (difference == 1)
    {
        return word1[0] == word2[0];
    }
    else
    {
        return 0;
    }",0
yyin299,1696991486,4,"#include <sdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	int difference;
    int i;
    
    for (i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            difference = difference + 1;
        }
    }
    
    if (difference == 1)
    {
        return word1[0] == word2[0];;
    }
    else
    {
        return 0;
    }
}",0
yyin299,1696991850,5,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	int difference;
    int i;
    
    for (i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            difference = difference + 1;
        }
    }
    
    if (difference == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",0
yyin299,1696991971,6,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2)
{
	int difference;
    int i;
    
    difference = 0;
    
    for (i = 0; i < 4; i++)
    {
        if (word1[i] != word2[i])
        {
            difference = difference + 1;
        }
    }
    
    if (difference == 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}",1
yyin440,1697343015,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2){
    int diff = 0;
    for (int i = 0; i < WORD_LENGTH - 1; ++i){
        if (word1[i] != word2[i]){
            diff++;
            if (diff > 1){
                return 0;
            }
        }
    }
    return diff == 1;
}",1
yzhe520,1697104397,1,"int OneLetterDifference(char* word1, char* word2)
{//Both words have a length of 4
	int length = 4;
	int i, j, result;
	result = 0;
	
	//use a for loop to check through each element in the two words
	for (i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			result++;
		}
	}

//if the two words are different by one character only
	if (result == 1) {
		return 1;
	}
	else { return 0; }

}",0
yzhe520,1697104437,2,"int OneLetterDifference(char* word1, char* word2)
{//Both words have a length of 4
	int length = 4;
	int i, result;
	result = 0;
	
	//use a for loop to check through each element in the two words
	for (i = 0; i < length; i++) {
		if (word1[i] != word2[i]) {
			result++;
		}
	}

//if the two words are different by one character only
	if (result == 1) {
		return 1;
	}
	else { return 0; }

}",1
zche975,1697442898,1,"#include <stdio.h>
#include <stdbool.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }

    if (differences == 1) {
        return 1;
    }
    return 0;
}",1
zcol623,1696938763,1,"//author:zcol623
int OneLetterDifference(char* word1, char* word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
            if (differences == 1) {
                return 1; //One difference then return true
            }
        }
    }
    return 0; //Return false if more than one difference or no difference
}
",0
zcol623,1696939854,2,"//author:zcol623
int OneLetterDifference(char* word1, char* word2) {
    int differences = 0;
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }
    }
    if (differences == 1) {
        return 1; //One difference then return true
    }
    return 0; //Return false if more than one difference or no difference
}
",1
zcra120,1697148587,1,"int OneLetterDifference(char *word1, char *word2)
{
int i,count;
count =0;
for (i=0;i<5;i++){
    if (word1[i]!= word2[i]){
        count ++;
    }
}
if (count == 1){
	return word1[0] == word2[0];
}
}",0
zcra120,1697149691,2,"int OneLetterDifference(char *word1, char *word2)
{
int i,count,j;
count =0;
for (i=0;i<5;i++){
    if (word1[i]!= word2[i]){
        count ++;
    }
}

if (count == 1){
	return word1[0] == word2[0];
}
else {return 0;}
}",0
zcra120,1697149714,3,"int OneLetterDifference(char *word1, char *word2)
{
int i,count;
count =0;
for (i=0;i<5;i++){
    if (word1[i]!= word2[i]){
        count ++;
    }
}

if (count == 1){
	return word1[0] == word2[0];
}
else {return 0;}
}",0
zcra120,1697150510,4,"int OneLetterDifference(char *word1, char *word2)
{
int i,count;
count =0;
for (i=0;i<5;i++){
    if (word1[i]!= word2[i]){
        count ++;
    }
}

return count == 1;
}",1
zfu276,1697198880,1,"int OneLetterDifference(char *word1, char *word2)
{
	int count = 0;

	for (int i = 0; i < 4; i++) {
		if ( word1[i] != word2[i] ) {
			count++;
		}
	}
	
	return(count == 1);
}",1
zgab423,1697444822,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    
    int DifferenceCheck = 0;
    
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            DifferenceCheck++;
            if (DifferenceCheck > 1) {
                
                return 0;  
            }
        }
    }
    
    return DifferenceCheck == 1;
}
",1
zgar110,1697424402,1,"#include <stdio.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
      int differenceCount = 0;  
    
    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;  
         }
        
        if (differenceCount > 1) {
            return 0;  
        }
      }
    
   
    return differenceCount == 1;  
}",1
zgas053,1697447270,1,"int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for(int i = 0; i < 5; i++){
        if (word1[i] == word2[i]){
            continue;
            
            else
            {
            count = count + 1;
            }
            
        }
    if (count == 1){
        return 1;
        else
        {
        return 0;
        }
    }
        
    }
}",0
zgas053,1697447430,2,"int OneLetterDifference(char *word1, char *word2) {
    int count = 0;

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }

        if (count > 1) {
            return 0;
        }
    }

    if (count == 1) {
        return 1;
    } else {
        return 0;
    }
}
",1
zgin653,1696823414,1,"int OneLetterDifference(char *word1, char *word2)
{
	char difference = 0;
	for (int i = 0; i < WORD_LENGTH - 1; i++){
		if (word1[i] != word2[i]) difference++;
	}
	return difference == 1;
}",1
zguo839,1697414674,1,"#include <stdio.h>

int OneLetterDifference(char *word1, char *word2) {
    int CountDiff = 0;
    int i = 0;

    while (i < 4) { // Assume the length will be 4
        if (word1[i] != word2[i]) {
            CountDiff++;
            if (CountDiff > 1) {
                return 0;  // difference is more than 1
            }
        }
        i++;
    }

    return (CountDiff == 1);
}
",1
zhon780,1697354464,1,"int OneLetterDifference(char *word1, char *word2) {
    int diffCounter = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[0] == word2[i]) diffCounter++;
    }
    return diffCounter == 1 ? 1 : 0;
}",0
zhon780,1697354497,2,"int OneLetterDifference(char *word1, char *word2) {
    int diffCounter = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] == word2[i]) diffCounter++;
    }
    return diffCounter == 1 ? 1 : 0;
}",0
zhon780,1697354573,3,"int OneLetterDifference(char *word1, char *word2) {
    int diffCounter = 0;
    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) diffCounter++;
    }
    return diffCounter == 1 ? 1 : 0;
}",1
zliu381,1697161159,1,"int OneLetterDifference(char* word1, char* word2)
{
	// You should correctly complete this function defintion
	int logic = 0;
	int i;
	for (i = 0; i < 4; i++) {
		if ((logic == 0) && (word1[i] != word2[i])) {
			logic = 1;
		}
		else if ((logic == 1) && (word1[i] != word2[i])) {
			return 0;
		}
	}

	return logic;
}",1
zliu578,1697261716,1,"int OneLetterDifference(char* word1, char* word2)
{
	int n = 0;
	for (int i = 0; i < 4; i++) {
		if (word1[i] == word2[i]) {
			n = n + 1;
		}
	}
	if (n == 3) {
		return 1;
	}
	else {
		return 0;
	}
}",1
zpen457,1697254582,1,"int OneLetterDifference(char *word1, char *word2)
{
    int counter = 0;
    for (int i = 0; i < 4; i++){
        if (word1[i] != word2[i]){
            counter++;
        }
    }
    
    return counter == 1;
}",1
zqia091,1697436204,1,"int OneLetterDifference(char *w1, char *w2) 
{
    int differences = 0;
    if (w1 ==NULL||w2==NULL) 
    {
        return false;
    }

    for (int i=0; i<wordlength - 1;i++) 
    {
        if (w1[i]!=w2[i]) 
        {
            differences++;
        }

        if (differences>1) 
        {
            return false;
        }
    }

    return differences==1;
}",0
zqia091,1697436232,2,"int OneLetterDifference(char *w1, char *w2) 
{
    int differences = 0;
    if (w1 ==NULL||w2==NULL) 
    {
        return false;
    }

    for (int i=0; i<WORD_LENGTH  - 1;i++) 
    {
        if (w1[i]!=w2[i]) 
        {
            differences++;
        }

        if (differences>1) 
        {
            return false;
        }
    }

    return differences==1;
}",1
zshi453,1697179782,1,"#define _CRT_SECURE_NO_WARNINGS
#define WORD_LENGTH 5
#include <stdio.h>
#include <string.h>

int OneLetterDifference(char *word1, char *word2)
{
int count=0;
int i;
for (i=0;i<WORD_LENGTH;i++){
    if (word1[i]!=word2[i]){
        count ++;
    }
}
if (count == 1){
    return 1;
}
else{
    return 0;
}
}",1
zvor566,1697349242,1,"int OneLetterDifference(char* word1, char* word2)
{
	int i;
	int count = 0;

	for (i = 0; i < 4; i++) {
		if (word1[i] != word2[i]) {
			count++;
		}
	}
	if (count == 1) {
		return 1;
	}
	else {
		return 0;
	}

	
}",1
zwan373,1697160756,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differences = 0; 

    if(strlen(word1) != 4 || strlen(word2) != 4) {
        return 0;
    }

    for (int i = 0; i < 4; i++) {
        if (word1[i] != word2[i]) {
            differences++;
        }

        if (differences > 1) {
            return 0;
        }
    }

    return differences == 1;
}",1
zwil198,1697009388,1,"#include <stdio.h>
#include <string.h>


int OneLetterDifference(char *word1, char *word2)
{
  int i = 0;
  int count = 0;
  
 for( i = 0; i < 4; i++) {
     
     if(word1[i] != word2[i])  {
         
        count = count + 1;
         
     }
     
     
 }
 
 if( count > 1) {
     
     return 0;
     
 }
 
 else {
     
     return 1;
     
 }
 
  
}
  ",0
zwil198,1697009517,2,"#include <stdio.h>
#include <string.h>


int OneLetterDifference(char *word1, char *word2)
{
  int i = 0;
  int count = 0;
  
 for( i = 0; i < 4; i++) {
     
     if(word1[i] != word2[i])  {
         
        count = count + 1;
         
     }
     
     
 }
 
 if( count > 1 || count == 0) {
     
     return 0;
     
 }
 
 else {
     
     return 1;
     
 }
 
  
}
  ",1
zwon694,1696834370,1,"int OneLetterDifference(char *word1, char *word2)
{
	int i;
	int count = 0;
	int difference;

	for (i = 0; i < WORD_LENGTH - 1; i++) {
		if (word1[i] == word2[i]) {
			count++;
		}
	}

	if (count == 3) {
		difference = 1;
	} else {
		difference = 0;
	}

	return difference;
}",1
zwu591,1697200674,1,"int OneLetterDifference(char *word1, char *word2)
{
    int i;
    int same = 0;

    for (i = 0; i < 4; i++) {
        if (word1[i] != word2[i])
            same++;
    }

    return (same == 1);
}",1
zyah987,1697257464,1,"int OneLetterDifference(char *word1, char *word2) {
    
    int letterChange = 0;
    
    for (int i = 0; i < 4 && letterChange <= 1; i++) 
    {
        if (word1[i] != word2[i]) {
            letterChange = letterChange + (i + 1) - i;
        }
    }
    return letterChange == 1;
}",1
zyao804,1696832598,1,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i=0;i<4;i++){
        if (word1[i] == word2[i]){
            count = count +1;
        }
    }

    
    return count==1;
}",0
zyao804,1696833066,2,"#include <stdio.h>
#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2)
{
    int count = 0;
    for (int i=0;i<4;i++){
        if (word1[i] != word2[i]){
            count = count +1;
        }
    }
    if (count==1){
        return 1;
    }
    else{
        return 0;
    }
}",1
zyu100,1697160373,1,"int OneLetterDifference(char *word1, char *word2)
{
    
	int count=0 ;
	for (int i =0; i <4; i++) {
        if (word1[i] != word2[i]) {
            count++;
        }
	}
	if (count==1){
	return count;
	}else{
	    return 0;
	}
	}",1
zzho965,1697381032,1,"#include <stdio.h>
#include <string.h>

#define WORD_LENGTH 5

int OneLetterDifference(char *word1, char *word2) {
    int differenceCount = 0;

    for (int i = 0; i < WORD_LENGTH - 1; i++) {
        if (word1[i] != word2[i]) {
            differenceCount++;
            if (differenceCount > 1) {
                return 0; 
            }
        }
    }
    return differenceCount == 1;
}
",1
zzol692,1697274119,1,"//Author: Zara Zoll
//Two words must be entered to use this function.  
//Given that both words are likely to have originated from 
//a word list that contains only words of length 4, 
//you can assume that both words are also of length 4.  
//Each word must be compared character by character, and 
//the function must only return true if there is precisely one 
//character that differs between the two words.  
//All other characters must be similar and in their respective 
//positions, with the exception of this one.
int OneLetterDifference(char* word1, char* word2) {
    int Count = 0; //initialise count to 0
    int i = 0; //initialise i to 0

    while (word1[i] != '\0' && word2[i] != '\0') { //while loop that continues as long as both word1 and word2 haven't reached end of the strings.
        if (word1[i] != word2[i]) { //Checks if the current characters at position i in word1 and word2 are different.
            Count++; //If the characters are different, count is incremented, meaning a differing character has been found.
        }
        if (Count > 1) { //if count is greater than 1 
            return 0; //function returns 0, meaning that the words do not differ by just one character.
        }
        i++;
    }


    return (Count == 1);
}",1
